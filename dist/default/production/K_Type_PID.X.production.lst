

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Aug 23 16:27:28 2025

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	idataBANK4,global,class=CODE,delta=2,noexec
     8                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    18                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	intentry,global,class=CODE,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    74                           	dabs	1,0x7E,2
    75  0000                     
    76                           ; Version 2.20
    77                           ; Generated 12/02/2020 GMT
    78                           ; 
    79                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F1619 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  008C                     	;# 
   145  008D                     	;# 
   146  008E                     	;# 
   147  0090                     	;# 
   148  0091                     	;# 
   149  0092                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0095                     	;# 
   153  0096                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009A                     	;# 
   157  009B                     	;# 
   158  009B                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  0111                     	;# 
   167  0112                     	;# 
   168  0113                     	;# 
   169  0114                     	;# 
   170  0115                     	;# 
   171  0116                     	;# 
   172  0117                     	;# 
   173  0118                     	;# 
   174  0119                     	;# 
   175  011C                     	;# 
   176  018C                     	;# 
   177  018D                     	;# 
   178  018E                     	;# 
   179  0191                     	;# 
   180  0191                     	;# 
   181  0192                     	;# 
   182  0193                     	;# 
   183  0193                     	;# 
   184  0194                     	;# 
   185  0195                     	;# 
   186  0196                     	;# 
   187  0197                     	;# 
   188  0199                     	;# 
   189  0199                     	;# 
   190  0199                     	;# 
   191  019A                     	;# 
   192  019A                     	;# 
   193  019A                     	;# 
   194  019B                     	;# 
   195  019B                     	;# 
   196  019B                     	;# 
   197  019B                     	;# 
   198  019B                     	;# 
   199  019C                     	;# 
   200  019C                     	;# 
   201  019C                     	;# 
   202  019D                     	;# 
   203  019D                     	;# 
   204  019D                     	;# 
   205  019E                     	;# 
   206  019E                     	;# 
   207  019E                     	;# 
   208  019F                     	;# 
   209  019F                     	;# 
   210  019F                     	;# 
   211  019F                     	;# 
   212  019F                     	;# 
   213  020C                     	;# 
   214  020D                     	;# 
   215  020E                     	;# 
   216  0211                     	;# 
   217  0211                     	;# 
   218  0212                     	;# 
   219  0212                     	;# 
   220  0213                     	;# 
   221  0213                     	;# 
   222  0214                     	;# 
   223  0214                     	;# 
   224  0215                     	;# 
   225  0215                     	;# 
   226  0215                     	;# 
   227  0215                     	;# 
   228  0216                     	;# 
   229  0216                     	;# 
   230  0217                     	;# 
   231  0217                     	;# 
   232  028C                     	;# 
   233  028D                     	;# 
   234  028E                     	;# 
   235  0291                     	;# 
   236  0291                     	;# 
   237  0292                     	;# 
   238  0293                     	;# 
   239  0294                     	;# 
   240  0298                     	;# 
   241  0298                     	;# 
   242  0299                     	;# 
   243  029A                     	;# 
   244  029B                     	;# 
   245  029E                     	;# 
   246  030C                     	;# 
   247  030D                     	;# 
   248  030E                     	;# 
   249  038C                     	;# 
   250  038D                     	;# 
   251  038E                     	;# 
   252  0391                     	;# 
   253  0392                     	;# 
   254  0393                     	;# 
   255  0394                     	;# 
   256  0395                     	;# 
   257  0396                     	;# 
   258  0397                     	;# 
   259  0398                     	;# 
   260  0399                     	;# 
   261  040E                     	;# 
   262  0413                     	;# 
   263  0413                     	;# 
   264  0414                     	;# 
   265  0414                     	;# 
   266  0415                     	;# 
   267  0416                     	;# 
   268  0417                     	;# 
   269  0418                     	;# 
   270  041A                     	;# 
   271  041A                     	;# 
   272  041B                     	;# 
   273  041B                     	;# 
   274  041C                     	;# 
   275  041D                     	;# 
   276  041E                     	;# 
   277  041F                     	;# 
   278  0493                     	;# 
   279  0494                     	;# 
   280  0495                     	;# 
   281  0496                     	;# 
   282  049A                     	;# 
   283  049B                     	;# 
   284  049C                     	;# 
   285  049D                     	;# 
   286  058C                     	;# 
   287  058C                     	;# 
   288  058D                     	;# 
   289  058E                     	;# 
   290  058E                     	;# 
   291  058F                     	;# 
   292  0590                     	;# 
   293  0590                     	;# 
   294  0591                     	;# 
   295  0592                     	;# 
   296  0592                     	;# 
   297  0593                     	;# 
   298  0594                     	;# 
   299  0594                     	;# 
   300  0595                     	;# 
   301  0596                     	;# 
   302  0596                     	;# 
   303  0597                     	;# 
   304  0598                     	;# 
   305  0599                     	;# 
   306  059A                     	;# 
   307  059B                     	;# 
   308  059B                     	;# 
   309  059C                     	;# 
   310  059D                     	;# 
   311  060C                     	;# 
   312  060C                     	;# 
   313  060D                     	;# 
   314  060E                     	;# 
   315  060F                     	;# 
   316  060F                     	;# 
   317  0610                     	;# 
   318  0611                     	;# 
   319  0612                     	;# 
   320  0613                     	;# 
   321  0614                     	;# 
   322  0617                     	;# 
   323  0617                     	;# 
   324  0618                     	;# 
   325  0619                     	;# 
   326  061A                     	;# 
   327  061A                     	;# 
   328  061B                     	;# 
   329  061C                     	;# 
   330  0691                     	;# 
   331  0692                     	;# 
   332  0693                     	;# 
   333  0694                     	;# 
   334  0695                     	;# 
   335  0696                     	;# 
   336  0697                     	;# 
   337  0699                     	;# 
   338  069A                     	;# 
   339  0711                     	;# 
   340  0712                     	;# 
   341  0713                     	;# 
   342  0714                     	;# 
   343  0715                     	;# 
   344  0718                     	;# 
   345  0718                     	;# 
   346  0719                     	;# 
   347  071A                     	;# 
   348  071A                     	;# 
   349  071B                     	;# 
   350  071C                     	;# 
   351  071D                     	;# 
   352  0791                     	;# 
   353  0791                     	;# 
   354  0792                     	;# 
   355  0793                     	;# 
   356  0793                     	;# 
   357  0794                     	;# 
   358  0795                     	;# 
   359  0795                     	;# 
   360  0796                     	;# 
   361  0797                     	;# 
   362  0797                     	;# 
   363  0798                     	;# 
   364  0799                     	;# 
   365  079A                     	;# 
   366  080C                     	;# 
   367  080C                     	;# 
   368  080D                     	;# 
   369  080E                     	;# 
   370  080E                     	;# 
   371  080F                     	;# 
   372  0810                     	;# 
   373  0810                     	;# 
   374  0811                     	;# 
   375  0812                     	;# 
   376  0812                     	;# 
   377  0813                     	;# 
   378  0814                     	;# 
   379  0815                     	;# 
   380  0816                     	;# 
   381  0817                     	;# 
   382  0818                     	;# 
   383  0819                     	;# 
   384  081A                     	;# 
   385  081A                     	;# 
   386  081B                     	;# 
   387  081C                     	;# 
   388  081C                     	;# 
   389  081D                     	;# 
   390  088C                     	;# 
   391  088D                     	;# 
   392  088E                     	;# 
   393  088F                     	;# 
   394  088F                     	;# 
   395  0890                     	;# 
   396  0891                     	;# 
   397  0892                     	;# 
   398  0893                     	;# 
   399  0893                     	;# 
   400  0894                     	;# 
   401  0895                     	;# 
   402  0896                     	;# 
   403  0897                     	;# 
   404  0897                     	;# 
   405  0898                     	;# 
   406  0899                     	;# 
   407  0D8C                     	;# 
   408  0D8C                     	;# 
   409  0D8D                     	;# 
   410  0D8E                     	;# 
   411  0D8F                     	;# 
   412  0D8F                     	;# 
   413  0D90                     	;# 
   414  0D91                     	;# 
   415  0D92                     	;# 
   416  0D92                     	;# 
   417  0D93                     	;# 
   418  0D94                     	;# 
   419  0D95                     	;# 
   420  0D95                     	;# 
   421  0D96                     	;# 
   422  0D97                     	;# 
   423  0D98                     	;# 
   424  0D99                     	;# 
   425  0D9A                     	;# 
   426  0D9B                     	;# 
   427  0D9C                     	;# 
   428  0D9D                     	;# 
   429  0D9E                     	;# 
   430  0D9E                     	;# 
   431  0D9F                     	;# 
   432  0DA0                     	;# 
   433  0DA1                     	;# 
   434  0DA1                     	;# 
   435  0DA2                     	;# 
   436  0DA3                     	;# 
   437  0DA4                     	;# 
   438  0DA4                     	;# 
   439  0DA5                     	;# 
   440  0DA6                     	;# 
   441  0DA7                     	;# 
   442  0DA7                     	;# 
   443  0DA8                     	;# 
   444  0DA9                     	;# 
   445  0DAA                     	;# 
   446  0DAB                     	;# 
   447  0DAC                     	;# 
   448  0DAD                     	;# 
   449  0DAE                     	;# 
   450  0DAF                     	;# 
   451  0E0F                     	;# 
   452  0E10                     	;# 
   453  0E11                     	;# 
   454  0E12                     	;# 
   455  0E13                     	;# 
   456  0E14                     	;# 
   457  0E15                     	;# 
   458  0E16                     	;# 
   459  0E17                     	;# 
   460  0E18                     	;# 
   461  0E19                     	;# 
   462  0E1A                     	;# 
   463  0E1B                     	;# 
   464  0E1C                     	;# 
   465  0E1D                     	;# 
   466  0E1E                     	;# 
   467  0E1F                     	;# 
   468  0E20                     	;# 
   469  0E21                     	;# 
   470  0E22                     	;# 
   471  0E23                     	;# 
   472  0E24                     	;# 
   473  0E25                     	;# 
   474  0E26                     	;# 
   475  0E27                     	;# 
   476  0E28                     	;# 
   477  0E29                     	;# 
   478  0E2A                     	;# 
   479  0E2B                     	;# 
   480  0E2C                     	;# 
   481  0E2D                     	;# 
   482  0E2E                     	;# 
   483  0E90                     	;# 
   484  0E91                     	;# 
   485  0E92                     	;# 
   486  0E94                     	;# 
   487  0E95                     	;# 
   488  0E9C                     	;# 
   489  0E9D                     	;# 
   490  0E9E                     	;# 
   491  0E9F                     	;# 
   492  0EA0                     	;# 
   493  0EA1                     	;# 
   494  0EA2                     	;# 
   495  0EA3                     	;# 
   496  0EA4                     	;# 
   497  0EA5                     	;# 
   498  0EA6                     	;# 
   499  0EA7                     	;# 
   500  0F0F                     	;# 
   501  0F10                     	;# 
   502  0F11                     	;# 
   503  0F12                     	;# 
   504  0F13                     	;# 
   505  0F14                     	;# 
   506  0F15                     	;# 
   507  0F16                     	;# 
   508  0F17                     	;# 
   509  0F18                     	;# 
   510  0F19                     	;# 
   511  0F1A                     	;# 
   512  0F1B                     	;# 
   513  0F1C                     	;# 
   514  0F1D                     	;# 
   515  0F1E                     	;# 
   516  0F1F                     	;# 
   517  0F20                     	;# 
   518  0F21                     	;# 
   519  0F22                     	;# 
   520  0F23                     	;# 
   521  0F24                     	;# 
   522  0F25                     	;# 
   523  0F26                     	;# 
   524  0F27                     	;# 
   525  0F28                     	;# 
   526  0F29                     	;# 
   527  0F2A                     	;# 
   528  0F2B                     	;# 
   529  0F2C                     	;# 
   530  0F2D                     	;# 
   531  0F2E                     	;# 
   532  0F2F                     	;# 
   533  0F30                     	;# 
   534  0F31                     	;# 
   535  0F32                     	;# 
   536  0F33                     	;# 
   537  0F34                     	;# 
   538  0F35                     	;# 
   539  0F36                     	;# 
   540  0F37                     	;# 
   541  0FE4                     	;# 
   542  0FE5                     	;# 
   543  0FE6                     	;# 
   544  0FE7                     	;# 
   545  0FE8                     	;# 
   546  0FE9                     	;# 
   547  0FEA                     	;# 
   548  0FEB                     	;# 
   549  0FED                     	;# 
   550  0FEE                     	;# 
   551  0FEF                     	;# 
   552  0000                     	;# 
   553  0001                     	;# 
   554  0002                     	;# 
   555  0003                     	;# 
   556  0004                     	;# 
   557  0005                     	;# 
   558  0006                     	;# 
   559  0007                     	;# 
   560  0008                     	;# 
   561  0009                     	;# 
   562  000A                     	;# 
   563  000B                     	;# 
   564  000C                     	;# 
   565  000D                     	;# 
   566  000E                     	;# 
   567  0010                     	;# 
   568  0011                     	;# 
   569  0012                     	;# 
   570  0013                     	;# 
   571  0014                     	;# 
   572  0015                     	;# 
   573  0016                     	;# 
   574  0016                     	;# 
   575  0017                     	;# 
   576  0018                     	;# 
   577  0019                     	;# 
   578  001A                     	;# 
   579  001A                     	;# 
   580  001B                     	;# 
   581  001B                     	;# 
   582  001C                     	;# 
   583  001D                     	;# 
   584  001E                     	;# 
   585  001F                     	;# 
   586  008C                     	;# 
   587  008D                     	;# 
   588  008E                     	;# 
   589  0090                     	;# 
   590  0091                     	;# 
   591  0092                     	;# 
   592  0093                     	;# 
   593  0094                     	;# 
   594  0095                     	;# 
   595  0096                     	;# 
   596  0098                     	;# 
   597  0099                     	;# 
   598  009A                     	;# 
   599  009B                     	;# 
   600  009B                     	;# 
   601  009C                     	;# 
   602  009D                     	;# 
   603  009E                     	;# 
   604  009F                     	;# 
   605  010C                     	;# 
   606  010D                     	;# 
   607  010E                     	;# 
   608  0111                     	;# 
   609  0112                     	;# 
   610  0113                     	;# 
   611  0114                     	;# 
   612  0115                     	;# 
   613  0116                     	;# 
   614  0117                     	;# 
   615  0118                     	;# 
   616  0119                     	;# 
   617  011C                     	;# 
   618  018C                     	;# 
   619  018D                     	;# 
   620  018E                     	;# 
   621  0191                     	;# 
   622  0191                     	;# 
   623  0192                     	;# 
   624  0193                     	;# 
   625  0193                     	;# 
   626  0194                     	;# 
   627  0195                     	;# 
   628  0196                     	;# 
   629  0197                     	;# 
   630  0199                     	;# 
   631  0199                     	;# 
   632  0199                     	;# 
   633  019A                     	;# 
   634  019A                     	;# 
   635  019A                     	;# 
   636  019B                     	;# 
   637  019B                     	;# 
   638  019B                     	;# 
   639  019B                     	;# 
   640  019B                     	;# 
   641  019C                     	;# 
   642  019C                     	;# 
   643  019C                     	;# 
   644  019D                     	;# 
   645  019D                     	;# 
   646  019D                     	;# 
   647  019E                     	;# 
   648  019E                     	;# 
   649  019E                     	;# 
   650  019F                     	;# 
   651  019F                     	;# 
   652  019F                     	;# 
   653  019F                     	;# 
   654  019F                     	;# 
   655  020C                     	;# 
   656  020D                     	;# 
   657  020E                     	;# 
   658  0211                     	;# 
   659  0211                     	;# 
   660  0212                     	;# 
   661  0212                     	;# 
   662  0213                     	;# 
   663  0213                     	;# 
   664  0214                     	;# 
   665  0214                     	;# 
   666  0215                     	;# 
   667  0215                     	;# 
   668  0215                     	;# 
   669  0215                     	;# 
   670  0216                     	;# 
   671  0216                     	;# 
   672  0217                     	;# 
   673  0217                     	;# 
   674  028C                     	;# 
   675  028D                     	;# 
   676  028E                     	;# 
   677  0291                     	;# 
   678  0291                     	;# 
   679  0292                     	;# 
   680  0293                     	;# 
   681  0294                     	;# 
   682  0298                     	;# 
   683  0298                     	;# 
   684  0299                     	;# 
   685  029A                     	;# 
   686  029B                     	;# 
   687  029E                     	;# 
   688  030C                     	;# 
   689  030D                     	;# 
   690  030E                     	;# 
   691  038C                     	;# 
   692  038D                     	;# 
   693  038E                     	;# 
   694  0391                     	;# 
   695  0392                     	;# 
   696  0393                     	;# 
   697  0394                     	;# 
   698  0395                     	;# 
   699  0396                     	;# 
   700  0397                     	;# 
   701  0398                     	;# 
   702  0399                     	;# 
   703  040E                     	;# 
   704  0413                     	;# 
   705  0413                     	;# 
   706  0414                     	;# 
   707  0414                     	;# 
   708  0415                     	;# 
   709  0416                     	;# 
   710  0417                     	;# 
   711  0418                     	;# 
   712  041A                     	;# 
   713  041A                     	;# 
   714  041B                     	;# 
   715  041B                     	;# 
   716  041C                     	;# 
   717  041D                     	;# 
   718  041E                     	;# 
   719  041F                     	;# 
   720  0493                     	;# 
   721  0494                     	;# 
   722  0495                     	;# 
   723  0496                     	;# 
   724  049A                     	;# 
   725  049B                     	;# 
   726  049C                     	;# 
   727  049D                     	;# 
   728  058C                     	;# 
   729  058C                     	;# 
   730  058D                     	;# 
   731  058E                     	;# 
   732  058E                     	;# 
   733  058F                     	;# 
   734  0590                     	;# 
   735  0590                     	;# 
   736  0591                     	;# 
   737  0592                     	;# 
   738  0592                     	;# 
   739  0593                     	;# 
   740  0594                     	;# 
   741  0594                     	;# 
   742  0595                     	;# 
   743  0596                     	;# 
   744  0596                     	;# 
   745  0597                     	;# 
   746  0598                     	;# 
   747  0599                     	;# 
   748  059A                     	;# 
   749  059B                     	;# 
   750  059B                     	;# 
   751  059C                     	;# 
   752  059D                     	;# 
   753  060C                     	;# 
   754  060C                     	;# 
   755  060D                     	;# 
   756  060E                     	;# 
   757  060F                     	;# 
   758  060F                     	;# 
   759  0610                     	;# 
   760  0611                     	;# 
   761  0612                     	;# 
   762  0613                     	;# 
   763  0614                     	;# 
   764  0617                     	;# 
   765  0617                     	;# 
   766  0618                     	;# 
   767  0619                     	;# 
   768  061A                     	;# 
   769  061A                     	;# 
   770  061B                     	;# 
   771  061C                     	;# 
   772  0691                     	;# 
   773  0692                     	;# 
   774  0693                     	;# 
   775  0694                     	;# 
   776  0695                     	;# 
   777  0696                     	;# 
   778  0697                     	;# 
   779  0699                     	;# 
   780  069A                     	;# 
   781  0711                     	;# 
   782  0712                     	;# 
   783  0713                     	;# 
   784  0714                     	;# 
   785  0715                     	;# 
   786  0718                     	;# 
   787  0718                     	;# 
   788  0719                     	;# 
   789  071A                     	;# 
   790  071A                     	;# 
   791  071B                     	;# 
   792  071C                     	;# 
   793  071D                     	;# 
   794  0791                     	;# 
   795  0791                     	;# 
   796  0792                     	;# 
   797  0793                     	;# 
   798  0793                     	;# 
   799  0794                     	;# 
   800  0795                     	;# 
   801  0795                     	;# 
   802  0796                     	;# 
   803  0797                     	;# 
   804  0797                     	;# 
   805  0798                     	;# 
   806  0799                     	;# 
   807  079A                     	;# 
   808  080C                     	;# 
   809  080C                     	;# 
   810  080D                     	;# 
   811  080E                     	;# 
   812  080E                     	;# 
   813  080F                     	;# 
   814  0810                     	;# 
   815  0810                     	;# 
   816  0811                     	;# 
   817  0812                     	;# 
   818  0812                     	;# 
   819  0813                     	;# 
   820  0814                     	;# 
   821  0815                     	;# 
   822  0816                     	;# 
   823  0817                     	;# 
   824  0818                     	;# 
   825  0819                     	;# 
   826  081A                     	;# 
   827  081A                     	;# 
   828  081B                     	;# 
   829  081C                     	;# 
   830  081C                     	;# 
   831  081D                     	;# 
   832  088C                     	;# 
   833  088D                     	;# 
   834  088E                     	;# 
   835  088F                     	;# 
   836  088F                     	;# 
   837  0890                     	;# 
   838  0891                     	;# 
   839  0892                     	;# 
   840  0893                     	;# 
   841  0893                     	;# 
   842  0894                     	;# 
   843  0895                     	;# 
   844  0896                     	;# 
   845  0897                     	;# 
   846  0897                     	;# 
   847  0898                     	;# 
   848  0899                     	;# 
   849  0D8C                     	;# 
   850  0D8C                     	;# 
   851  0D8D                     	;# 
   852  0D8E                     	;# 
   853  0D8F                     	;# 
   854  0D8F                     	;# 
   855  0D90                     	;# 
   856  0D91                     	;# 
   857  0D92                     	;# 
   858  0D92                     	;# 
   859  0D93                     	;# 
   860  0D94                     	;# 
   861  0D95                     	;# 
   862  0D95                     	;# 
   863  0D96                     	;# 
   864  0D97                     	;# 
   865  0D98                     	;# 
   866  0D99                     	;# 
   867  0D9A                     	;# 
   868  0D9B                     	;# 
   869  0D9C                     	;# 
   870  0D9D                     	;# 
   871  0D9E                     	;# 
   872  0D9E                     	;# 
   873  0D9F                     	;# 
   874  0DA0                     	;# 
   875  0DA1                     	;# 
   876  0DA1                     	;# 
   877  0DA2                     	;# 
   878  0DA3                     	;# 
   879  0DA4                     	;# 
   880  0DA4                     	;# 
   881  0DA5                     	;# 
   882  0DA6                     	;# 
   883  0DA7                     	;# 
   884  0DA7                     	;# 
   885  0DA8                     	;# 
   886  0DA9                     	;# 
   887  0DAA                     	;# 
   888  0DAB                     	;# 
   889  0DAC                     	;# 
   890  0DAD                     	;# 
   891  0DAE                     	;# 
   892  0DAF                     	;# 
   893  0E0F                     	;# 
   894  0E10                     	;# 
   895  0E11                     	;# 
   896  0E12                     	;# 
   897  0E13                     	;# 
   898  0E14                     	;# 
   899  0E15                     	;# 
   900  0E16                     	;# 
   901  0E17                     	;# 
   902  0E18                     	;# 
   903  0E19                     	;# 
   904  0E1A                     	;# 
   905  0E1B                     	;# 
   906  0E1C                     	;# 
   907  0E1D                     	;# 
   908  0E1E                     	;# 
   909  0E1F                     	;# 
   910  0E20                     	;# 
   911  0E21                     	;# 
   912  0E22                     	;# 
   913  0E23                     	;# 
   914  0E24                     	;# 
   915  0E25                     	;# 
   916  0E26                     	;# 
   917  0E27                     	;# 
   918  0E28                     	;# 
   919  0E29                     	;# 
   920  0E2A                     	;# 
   921  0E2B                     	;# 
   922  0E2C                     	;# 
   923  0E2D                     	;# 
   924  0E2E                     	;# 
   925  0E90                     	;# 
   926  0E91                     	;# 
   927  0E92                     	;# 
   928  0E94                     	;# 
   929  0E95                     	;# 
   930  0E9C                     	;# 
   931  0E9D                     	;# 
   932  0E9E                     	;# 
   933  0E9F                     	;# 
   934  0EA0                     	;# 
   935  0EA1                     	;# 
   936  0EA2                     	;# 
   937  0EA3                     	;# 
   938  0EA4                     	;# 
   939  0EA5                     	;# 
   940  0EA6                     	;# 
   941  0EA7                     	;# 
   942  0F0F                     	;# 
   943  0F10                     	;# 
   944  0F11                     	;# 
   945  0F12                     	;# 
   946  0F13                     	;# 
   947  0F14                     	;# 
   948  0F15                     	;# 
   949  0F16                     	;# 
   950  0F17                     	;# 
   951  0F18                     	;# 
   952  0F19                     	;# 
   953  0F1A                     	;# 
   954  0F1B                     	;# 
   955  0F1C                     	;# 
   956  0F1D                     	;# 
   957  0F1E                     	;# 
   958  0F1F                     	;# 
   959  0F20                     	;# 
   960  0F21                     	;# 
   961  0F22                     	;# 
   962  0F23                     	;# 
   963  0F24                     	;# 
   964  0F25                     	;# 
   965  0F26                     	;# 
   966  0F27                     	;# 
   967  0F28                     	;# 
   968  0F29                     	;# 
   969  0F2A                     	;# 
   970  0F2B                     	;# 
   971  0F2C                     	;# 
   972  0F2D                     	;# 
   973  0F2E                     	;# 
   974  0F2F                     	;# 
   975  0F30                     	;# 
   976  0F31                     	;# 
   977  0F32                     	;# 
   978  0F33                     	;# 
   979  0F34                     	;# 
   980  0F35                     	;# 
   981  0F36                     	;# 
   982  0F37                     	;# 
   983  0FE4                     	;# 
   984  0FE5                     	;# 
   985  0FE6                     	;# 
   986  0FE7                     	;# 
   987  0FE8                     	;# 
   988  0FE9                     	;# 
   989  0FEA                     	;# 
   990  0FEB                     	;# 
   991  0FED                     	;# 
   992  0FEE                     	;# 
   993  0FEF                     	;# 
   994  0000                     	;# 
   995  0001                     	;# 
   996  0002                     	;# 
   997  0003                     	;# 
   998  0004                     	;# 
   999  0005                     	;# 
  1000  0006                     	;# 
  1001  0007                     	;# 
  1002  0008                     	;# 
  1003  0009                     	;# 
  1004  000A                     	;# 
  1005  000B                     	;# 
  1006  000C                     	;# 
  1007  000D                     	;# 
  1008  000E                     	;# 
  1009  0010                     	;# 
  1010  0011                     	;# 
  1011  0012                     	;# 
  1012  0013                     	;# 
  1013  0014                     	;# 
  1014  0015                     	;# 
  1015  0016                     	;# 
  1016  0016                     	;# 
  1017  0017                     	;# 
  1018  0018                     	;# 
  1019  0019                     	;# 
  1020  001A                     	;# 
  1021  001A                     	;# 
  1022  001B                     	;# 
  1023  001B                     	;# 
  1024  001C                     	;# 
  1025  001D                     	;# 
  1026  001E                     	;# 
  1027  001F                     	;# 
  1028  008C                     	;# 
  1029  008D                     	;# 
  1030  008E                     	;# 
  1031  0090                     	;# 
  1032  0091                     	;# 
  1033  0092                     	;# 
  1034  0093                     	;# 
  1035  0094                     	;# 
  1036  0095                     	;# 
  1037  0096                     	;# 
  1038  0098                     	;# 
  1039  0099                     	;# 
  1040  009A                     	;# 
  1041  009B                     	;# 
  1042  009B                     	;# 
  1043  009C                     	;# 
  1044  009D                     	;# 
  1045  009E                     	;# 
  1046  009F                     	;# 
  1047  010C                     	;# 
  1048  010D                     	;# 
  1049  010E                     	;# 
  1050  0111                     	;# 
  1051  0112                     	;# 
  1052  0113                     	;# 
  1053  0114                     	;# 
  1054  0115                     	;# 
  1055  0116                     	;# 
  1056  0117                     	;# 
  1057  0118                     	;# 
  1058  0119                     	;# 
  1059  011C                     	;# 
  1060  018C                     	;# 
  1061  018D                     	;# 
  1062  018E                     	;# 
  1063  0191                     	;# 
  1064  0191                     	;# 
  1065  0192                     	;# 
  1066  0193                     	;# 
  1067  0193                     	;# 
  1068  0194                     	;# 
  1069  0195                     	;# 
  1070  0196                     	;# 
  1071  0197                     	;# 
  1072  0199                     	;# 
  1073  0199                     	;# 
  1074  0199                     	;# 
  1075  019A                     	;# 
  1076  019A                     	;# 
  1077  019A                     	;# 
  1078  019B                     	;# 
  1079  019B                     	;# 
  1080  019B                     	;# 
  1081  019B                     	;# 
  1082  019B                     	;# 
  1083  019C                     	;# 
  1084  019C                     	;# 
  1085  019C                     	;# 
  1086  019D                     	;# 
  1087  019D                     	;# 
  1088  019D                     	;# 
  1089  019E                     	;# 
  1090  019E                     	;# 
  1091  019E                     	;# 
  1092  019F                     	;# 
  1093  019F                     	;# 
  1094  019F                     	;# 
  1095  019F                     	;# 
  1096  019F                     	;# 
  1097  020C                     	;# 
  1098  020D                     	;# 
  1099  020E                     	;# 
  1100  0211                     	;# 
  1101  0211                     	;# 
  1102  0212                     	;# 
  1103  0212                     	;# 
  1104  0213                     	;# 
  1105  0213                     	;# 
  1106  0214                     	;# 
  1107  0214                     	;# 
  1108  0215                     	;# 
  1109  0215                     	;# 
  1110  0215                     	;# 
  1111  0215                     	;# 
  1112  0216                     	;# 
  1113  0216                     	;# 
  1114  0217                     	;# 
  1115  0217                     	;# 
  1116  028C                     	;# 
  1117  028D                     	;# 
  1118  028E                     	;# 
  1119  0291                     	;# 
  1120  0291                     	;# 
  1121  0292                     	;# 
  1122  0293                     	;# 
  1123  0294                     	;# 
  1124  0298                     	;# 
  1125  0298                     	;# 
  1126  0299                     	;# 
  1127  029A                     	;# 
  1128  029B                     	;# 
  1129  029E                     	;# 
  1130  030C                     	;# 
  1131  030D                     	;# 
  1132  030E                     	;# 
  1133  038C                     	;# 
  1134  038D                     	;# 
  1135  038E                     	;# 
  1136  0391                     	;# 
  1137  0392                     	;# 
  1138  0393                     	;# 
  1139  0394                     	;# 
  1140  0395                     	;# 
  1141  0396                     	;# 
  1142  0397                     	;# 
  1143  0398                     	;# 
  1144  0399                     	;# 
  1145  040E                     	;# 
  1146  0413                     	;# 
  1147  0413                     	;# 
  1148  0414                     	;# 
  1149  0414                     	;# 
  1150  0415                     	;# 
  1151  0416                     	;# 
  1152  0417                     	;# 
  1153  0418                     	;# 
  1154  041A                     	;# 
  1155  041A                     	;# 
  1156  041B                     	;# 
  1157  041B                     	;# 
  1158  041C                     	;# 
  1159  041D                     	;# 
  1160  041E                     	;# 
  1161  041F                     	;# 
  1162  0493                     	;# 
  1163  0494                     	;# 
  1164  0495                     	;# 
  1165  0496                     	;# 
  1166  049A                     	;# 
  1167  049B                     	;# 
  1168  049C                     	;# 
  1169  049D                     	;# 
  1170  058C                     	;# 
  1171  058C                     	;# 
  1172  058D                     	;# 
  1173  058E                     	;# 
  1174  058E                     	;# 
  1175  058F                     	;# 
  1176  0590                     	;# 
  1177  0590                     	;# 
  1178  0591                     	;# 
  1179  0592                     	;# 
  1180  0592                     	;# 
  1181  0593                     	;# 
  1182  0594                     	;# 
  1183  0594                     	;# 
  1184  0595                     	;# 
  1185  0596                     	;# 
  1186  0596                     	;# 
  1187  0597                     	;# 
  1188  0598                     	;# 
  1189  0599                     	;# 
  1190  059A                     	;# 
  1191  059B                     	;# 
  1192  059B                     	;# 
  1193  059C                     	;# 
  1194  059D                     	;# 
  1195  060C                     	;# 
  1196  060C                     	;# 
  1197  060D                     	;# 
  1198  060E                     	;# 
  1199  060F                     	;# 
  1200  060F                     	;# 
  1201  0610                     	;# 
  1202  0611                     	;# 
  1203  0612                     	;# 
  1204  0613                     	;# 
  1205  0614                     	;# 
  1206  0617                     	;# 
  1207  0617                     	;# 
  1208  0618                     	;# 
  1209  0619                     	;# 
  1210  061A                     	;# 
  1211  061A                     	;# 
  1212  061B                     	;# 
  1213  061C                     	;# 
  1214  0691                     	;# 
  1215  0692                     	;# 
  1216  0693                     	;# 
  1217  0694                     	;# 
  1218  0695                     	;# 
  1219  0696                     	;# 
  1220  0697                     	;# 
  1221  0699                     	;# 
  1222  069A                     	;# 
  1223  0711                     	;# 
  1224  0712                     	;# 
  1225  0713                     	;# 
  1226  0714                     	;# 
  1227  0715                     	;# 
  1228  0718                     	;# 
  1229  0718                     	;# 
  1230  0719                     	;# 
  1231  071A                     	;# 
  1232  071A                     	;# 
  1233  071B                     	;# 
  1234  071C                     	;# 
  1235  071D                     	;# 
  1236  0791                     	;# 
  1237  0791                     	;# 
  1238  0792                     	;# 
  1239  0793                     	;# 
  1240  0793                     	;# 
  1241  0794                     	;# 
  1242  0795                     	;# 
  1243  0795                     	;# 
  1244  0796                     	;# 
  1245  0797                     	;# 
  1246  0797                     	;# 
  1247  0798                     	;# 
  1248  0799                     	;# 
  1249  079A                     	;# 
  1250  080C                     	;# 
  1251  080C                     	;# 
  1252  080D                     	;# 
  1253  080E                     	;# 
  1254  080E                     	;# 
  1255  080F                     	;# 
  1256  0810                     	;# 
  1257  0810                     	;# 
  1258  0811                     	;# 
  1259  0812                     	;# 
  1260  0812                     	;# 
  1261  0813                     	;# 
  1262  0814                     	;# 
  1263  0815                     	;# 
  1264  0816                     	;# 
  1265  0817                     	;# 
  1266  0818                     	;# 
  1267  0819                     	;# 
  1268  081A                     	;# 
  1269  081A                     	;# 
  1270  081B                     	;# 
  1271  081C                     	;# 
  1272  081C                     	;# 
  1273  081D                     	;# 
  1274  088C                     	;# 
  1275  088D                     	;# 
  1276  088E                     	;# 
  1277  088F                     	;# 
  1278  088F                     	;# 
  1279  0890                     	;# 
  1280  0891                     	;# 
  1281  0892                     	;# 
  1282  0893                     	;# 
  1283  0893                     	;# 
  1284  0894                     	;# 
  1285  0895                     	;# 
  1286  0896                     	;# 
  1287  0897                     	;# 
  1288  0897                     	;# 
  1289  0898                     	;# 
  1290  0899                     	;# 
  1291  0D8C                     	;# 
  1292  0D8C                     	;# 
  1293  0D8D                     	;# 
  1294  0D8E                     	;# 
  1295  0D8F                     	;# 
  1296  0D8F                     	;# 
  1297  0D90                     	;# 
  1298  0D91                     	;# 
  1299  0D92                     	;# 
  1300  0D92                     	;# 
  1301  0D93                     	;# 
  1302  0D94                     	;# 
  1303  0D95                     	;# 
  1304  0D95                     	;# 
  1305  0D96                     	;# 
  1306  0D97                     	;# 
  1307  0D98                     	;# 
  1308  0D99                     	;# 
  1309  0D9A                     	;# 
  1310  0D9B                     	;# 
  1311  0D9C                     	;# 
  1312  0D9D                     	;# 
  1313  0D9E                     	;# 
  1314  0D9E                     	;# 
  1315  0D9F                     	;# 
  1316  0DA0                     	;# 
  1317  0DA1                     	;# 
  1318  0DA1                     	;# 
  1319  0DA2                     	;# 
  1320  0DA3                     	;# 
  1321  0DA4                     	;# 
  1322  0DA4                     	;# 
  1323  0DA5                     	;# 
  1324  0DA6                     	;# 
  1325  0DA7                     	;# 
  1326  0DA7                     	;# 
  1327  0DA8                     	;# 
  1328  0DA9                     	;# 
  1329  0DAA                     	;# 
  1330  0DAB                     	;# 
  1331  0DAC                     	;# 
  1332  0DAD                     	;# 
  1333  0DAE                     	;# 
  1334  0DAF                     	;# 
  1335  0E0F                     	;# 
  1336  0E10                     	;# 
  1337  0E11                     	;# 
  1338  0E12                     	;# 
  1339  0E13                     	;# 
  1340  0E14                     	;# 
  1341  0E15                     	;# 
  1342  0E16                     	;# 
  1343  0E17                     	;# 
  1344  0E18                     	;# 
  1345  0E19                     	;# 
  1346  0E1A                     	;# 
  1347  0E1B                     	;# 
  1348  0E1C                     	;# 
  1349  0E1D                     	;# 
  1350  0E1E                     	;# 
  1351  0E1F                     	;# 
  1352  0E20                     	;# 
  1353  0E21                     	;# 
  1354  0E22                     	;# 
  1355  0E23                     	;# 
  1356  0E24                     	;# 
  1357  0E25                     	;# 
  1358  0E26                     	;# 
  1359  0E27                     	;# 
  1360  0E28                     	;# 
  1361  0E29                     	;# 
  1362  0E2A                     	;# 
  1363  0E2B                     	;# 
  1364  0E2C                     	;# 
  1365  0E2D                     	;# 
  1366  0E2E                     	;# 
  1367  0E90                     	;# 
  1368  0E91                     	;# 
  1369  0E92                     	;# 
  1370  0E94                     	;# 
  1371  0E95                     	;# 
  1372  0E9C                     	;# 
  1373  0E9D                     	;# 
  1374  0E9E                     	;# 
  1375  0E9F                     	;# 
  1376  0EA0                     	;# 
  1377  0EA1                     	;# 
  1378  0EA2                     	;# 
  1379  0EA3                     	;# 
  1380  0EA4                     	;# 
  1381  0EA5                     	;# 
  1382  0EA6                     	;# 
  1383  0EA7                     	;# 
  1384  0F0F                     	;# 
  1385  0F10                     	;# 
  1386  0F11                     	;# 
  1387  0F12                     	;# 
  1388  0F13                     	;# 
  1389  0F14                     	;# 
  1390  0F15                     	;# 
  1391  0F16                     	;# 
  1392  0F17                     	;# 
  1393  0F18                     	;# 
  1394  0F19                     	;# 
  1395  0F1A                     	;# 
  1396  0F1B                     	;# 
  1397  0F1C                     	;# 
  1398  0F1D                     	;# 
  1399  0F1E                     	;# 
  1400  0F1F                     	;# 
  1401  0F20                     	;# 
  1402  0F21                     	;# 
  1403  0F22                     	;# 
  1404  0F23                     	;# 
  1405  0F24                     	;# 
  1406  0F25                     	;# 
  1407  0F26                     	;# 
  1408  0F27                     	;# 
  1409  0F28                     	;# 
  1410  0F29                     	;# 
  1411  0F2A                     	;# 
  1412  0F2B                     	;# 
  1413  0F2C                     	;# 
  1414  0F2D                     	;# 
  1415  0F2E                     	;# 
  1416  0F2F                     	;# 
  1417  0F30                     	;# 
  1418  0F31                     	;# 
  1419  0F32                     	;# 
  1420  0F33                     	;# 
  1421  0F34                     	;# 
  1422  0F35                     	;# 
  1423  0F36                     	;# 
  1424  0F37                     	;# 
  1425  0FE4                     	;# 
  1426  0FE5                     	;# 
  1427  0FE6                     	;# 
  1428  0FE7                     	;# 
  1429  0FE8                     	;# 
  1430  0FE9                     	;# 
  1431  0FEA                     	;# 
  1432  0FEB                     	;# 
  1433  0FED                     	;# 
  1434  0FEE                     	;# 
  1435  0FEF                     	;# 
  1436  0000                     	;# 
  1437  0001                     	;# 
  1438  0002                     	;# 
  1439  0003                     	;# 
  1440  0004                     	;# 
  1441  0005                     	;# 
  1442  0006                     	;# 
  1443  0007                     	;# 
  1444  0008                     	;# 
  1445  0009                     	;# 
  1446  000A                     	;# 
  1447  000B                     	;# 
  1448  000C                     	;# 
  1449  000D                     	;# 
  1450  000E                     	;# 
  1451  0010                     	;# 
  1452  0011                     	;# 
  1453  0012                     	;# 
  1454  0013                     	;# 
  1455  0014                     	;# 
  1456  0015                     	;# 
  1457  0016                     	;# 
  1458  0016                     	;# 
  1459  0017                     	;# 
  1460  0018                     	;# 
  1461  0019                     	;# 
  1462  001A                     	;# 
  1463  001A                     	;# 
  1464  001B                     	;# 
  1465  001B                     	;# 
  1466  001C                     	;# 
  1467  001D                     	;# 
  1468  001E                     	;# 
  1469  001F                     	;# 
  1470  008C                     	;# 
  1471  008D                     	;# 
  1472  008E                     	;# 
  1473  0090                     	;# 
  1474  0091                     	;# 
  1475  0092                     	;# 
  1476  0093                     	;# 
  1477  0094                     	;# 
  1478  0095                     	;# 
  1479  0096                     	;# 
  1480  0098                     	;# 
  1481  0099                     	;# 
  1482  009A                     	;# 
  1483  009B                     	;# 
  1484  009B                     	;# 
  1485  009C                     	;# 
  1486  009D                     	;# 
  1487  009E                     	;# 
  1488  009F                     	;# 
  1489  010C                     	;# 
  1490  010D                     	;# 
  1491  010E                     	;# 
  1492  0111                     	;# 
  1493  0112                     	;# 
  1494  0113                     	;# 
  1495  0114                     	;# 
  1496  0115                     	;# 
  1497  0116                     	;# 
  1498  0117                     	;# 
  1499  0118                     	;# 
  1500  0119                     	;# 
  1501  011C                     	;# 
  1502  018C                     	;# 
  1503  018D                     	;# 
  1504  018E                     	;# 
  1505  0191                     	;# 
  1506  0191                     	;# 
  1507  0192                     	;# 
  1508  0193                     	;# 
  1509  0193                     	;# 
  1510  0194                     	;# 
  1511  0195                     	;# 
  1512  0196                     	;# 
  1513  0197                     	;# 
  1514  0199                     	;# 
  1515  0199                     	;# 
  1516  0199                     	;# 
  1517  019A                     	;# 
  1518  019A                     	;# 
  1519  019A                     	;# 
  1520  019B                     	;# 
  1521  019B                     	;# 
  1522  019B                     	;# 
  1523  019B                     	;# 
  1524  019B                     	;# 
  1525  019C                     	;# 
  1526  019C                     	;# 
  1527  019C                     	;# 
  1528  019D                     	;# 
  1529  019D                     	;# 
  1530  019D                     	;# 
  1531  019E                     	;# 
  1532  019E                     	;# 
  1533  019E                     	;# 
  1534  019F                     	;# 
  1535  019F                     	;# 
  1536  019F                     	;# 
  1537  019F                     	;# 
  1538  019F                     	;# 
  1539  020C                     	;# 
  1540  020D                     	;# 
  1541  020E                     	;# 
  1542  0211                     	;# 
  1543  0211                     	;# 
  1544  0212                     	;# 
  1545  0212                     	;# 
  1546  0213                     	;# 
  1547  0213                     	;# 
  1548  0214                     	;# 
  1549  0214                     	;# 
  1550  0215                     	;# 
  1551  0215                     	;# 
  1552  0215                     	;# 
  1553  0215                     	;# 
  1554  0216                     	;# 
  1555  0216                     	;# 
  1556  0217                     	;# 
  1557  0217                     	;# 
  1558  028C                     	;# 
  1559  028D                     	;# 
  1560  028E                     	;# 
  1561  0291                     	;# 
  1562  0291                     	;# 
  1563  0292                     	;# 
  1564  0293                     	;# 
  1565  0294                     	;# 
  1566  0298                     	;# 
  1567  0298                     	;# 
  1568  0299                     	;# 
  1569  029A                     	;# 
  1570  029B                     	;# 
  1571  029E                     	;# 
  1572  030C                     	;# 
  1573  030D                     	;# 
  1574  030E                     	;# 
  1575  038C                     	;# 
  1576  038D                     	;# 
  1577  038E                     	;# 
  1578  0391                     	;# 
  1579  0392                     	;# 
  1580  0393                     	;# 
  1581  0394                     	;# 
  1582  0395                     	;# 
  1583  0396                     	;# 
  1584  0397                     	;# 
  1585  0398                     	;# 
  1586  0399                     	;# 
  1587  040E                     	;# 
  1588  0413                     	;# 
  1589  0413                     	;# 
  1590  0414                     	;# 
  1591  0414                     	;# 
  1592  0415                     	;# 
  1593  0416                     	;# 
  1594  0417                     	;# 
  1595  0418                     	;# 
  1596  041A                     	;# 
  1597  041A                     	;# 
  1598  041B                     	;# 
  1599  041B                     	;# 
  1600  041C                     	;# 
  1601  041D                     	;# 
  1602  041E                     	;# 
  1603  041F                     	;# 
  1604  0493                     	;# 
  1605  0494                     	;# 
  1606  0495                     	;# 
  1607  0496                     	;# 
  1608  049A                     	;# 
  1609  049B                     	;# 
  1610  049C                     	;# 
  1611  049D                     	;# 
  1612  058C                     	;# 
  1613  058C                     	;# 
  1614  058D                     	;# 
  1615  058E                     	;# 
  1616  058E                     	;# 
  1617  058F                     	;# 
  1618  0590                     	;# 
  1619  0590                     	;# 
  1620  0591                     	;# 
  1621  0592                     	;# 
  1622  0592                     	;# 
  1623  0593                     	;# 
  1624  0594                     	;# 
  1625  0594                     	;# 
  1626  0595                     	;# 
  1627  0596                     	;# 
  1628  0596                     	;# 
  1629  0597                     	;# 
  1630  0598                     	;# 
  1631  0599                     	;# 
  1632  059A                     	;# 
  1633  059B                     	;# 
  1634  059B                     	;# 
  1635  059C                     	;# 
  1636  059D                     	;# 
  1637  060C                     	;# 
  1638  060C                     	;# 
  1639  060D                     	;# 
  1640  060E                     	;# 
  1641  060F                     	;# 
  1642  060F                     	;# 
  1643  0610                     	;# 
  1644  0611                     	;# 
  1645  0612                     	;# 
  1646  0613                     	;# 
  1647  0614                     	;# 
  1648  0617                     	;# 
  1649  0617                     	;# 
  1650  0618                     	;# 
  1651  0619                     	;# 
  1652  061A                     	;# 
  1653  061A                     	;# 
  1654  061B                     	;# 
  1655  061C                     	;# 
  1656  0691                     	;# 
  1657  0692                     	;# 
  1658  0693                     	;# 
  1659  0694                     	;# 
  1660  0695                     	;# 
  1661  0696                     	;# 
  1662  0697                     	;# 
  1663  0699                     	;# 
  1664  069A                     	;# 
  1665  0711                     	;# 
  1666  0712                     	;# 
  1667  0713                     	;# 
  1668  0714                     	;# 
  1669  0715                     	;# 
  1670  0718                     	;# 
  1671  0718                     	;# 
  1672  0719                     	;# 
  1673  071A                     	;# 
  1674  071A                     	;# 
  1675  071B                     	;# 
  1676  071C                     	;# 
  1677  071D                     	;# 
  1678  0791                     	;# 
  1679  0791                     	;# 
  1680  0792                     	;# 
  1681  0793                     	;# 
  1682  0793                     	;# 
  1683  0794                     	;# 
  1684  0795                     	;# 
  1685  0795                     	;# 
  1686  0796                     	;# 
  1687  0797                     	;# 
  1688  0797                     	;# 
  1689  0798                     	;# 
  1690  0799                     	;# 
  1691  079A                     	;# 
  1692  080C                     	;# 
  1693  080C                     	;# 
  1694  080D                     	;# 
  1695  080E                     	;# 
  1696  080E                     	;# 
  1697  080F                     	;# 
  1698  0810                     	;# 
  1699  0810                     	;# 
  1700  0811                     	;# 
  1701  0812                     	;# 
  1702  0812                     	;# 
  1703  0813                     	;# 
  1704  0814                     	;# 
  1705  0815                     	;# 
  1706  0816                     	;# 
  1707  0817                     	;# 
  1708  0818                     	;# 
  1709  0819                     	;# 
  1710  081A                     	;# 
  1711  081A                     	;# 
  1712  081B                     	;# 
  1713  081C                     	;# 
  1714  081C                     	;# 
  1715  081D                     	;# 
  1716  088C                     	;# 
  1717  088D                     	;# 
  1718  088E                     	;# 
  1719  088F                     	;# 
  1720  088F                     	;# 
  1721  0890                     	;# 
  1722  0891                     	;# 
  1723  0892                     	;# 
  1724  0893                     	;# 
  1725  0893                     	;# 
  1726  0894                     	;# 
  1727  0895                     	;# 
  1728  0896                     	;# 
  1729  0897                     	;# 
  1730  0897                     	;# 
  1731  0898                     	;# 
  1732  0899                     	;# 
  1733  0D8C                     	;# 
  1734  0D8C                     	;# 
  1735  0D8D                     	;# 
  1736  0D8E                     	;# 
  1737  0D8F                     	;# 
  1738  0D8F                     	;# 
  1739  0D90                     	;# 
  1740  0D91                     	;# 
  1741  0D92                     	;# 
  1742  0D92                     	;# 
  1743  0D93                     	;# 
  1744  0D94                     	;# 
  1745  0D95                     	;# 
  1746  0D95                     	;# 
  1747  0D96                     	;# 
  1748  0D97                     	;# 
  1749  0D98                     	;# 
  1750  0D99                     	;# 
  1751  0D9A                     	;# 
  1752  0D9B                     	;# 
  1753  0D9C                     	;# 
  1754  0D9D                     	;# 
  1755  0D9E                     	;# 
  1756  0D9E                     	;# 
  1757  0D9F                     	;# 
  1758  0DA0                     	;# 
  1759  0DA1                     	;# 
  1760  0DA1                     	;# 
  1761  0DA2                     	;# 
  1762  0DA3                     	;# 
  1763  0DA4                     	;# 
  1764  0DA4                     	;# 
  1765  0DA5                     	;# 
  1766  0DA6                     	;# 
  1767  0DA7                     	;# 
  1768  0DA7                     	;# 
  1769  0DA8                     	;# 
  1770  0DA9                     	;# 
  1771  0DAA                     	;# 
  1772  0DAB                     	;# 
  1773  0DAC                     	;# 
  1774  0DAD                     	;# 
  1775  0DAE                     	;# 
  1776  0DAF                     	;# 
  1777  0E0F                     	;# 
  1778  0E10                     	;# 
  1779  0E11                     	;# 
  1780  0E12                     	;# 
  1781  0E13                     	;# 
  1782  0E14                     	;# 
  1783  0E15                     	;# 
  1784  0E16                     	;# 
  1785  0E17                     	;# 
  1786  0E18                     	;# 
  1787  0E19                     	;# 
  1788  0E1A                     	;# 
  1789  0E1B                     	;# 
  1790  0E1C                     	;# 
  1791  0E1D                     	;# 
  1792  0E1E                     	;# 
  1793  0E1F                     	;# 
  1794  0E20                     	;# 
  1795  0E21                     	;# 
  1796  0E22                     	;# 
  1797  0E23                     	;# 
  1798  0E24                     	;# 
  1799  0E25                     	;# 
  1800  0E26                     	;# 
  1801  0E27                     	;# 
  1802  0E28                     	;# 
  1803  0E29                     	;# 
  1804  0E2A                     	;# 
  1805  0E2B                     	;# 
  1806  0E2C                     	;# 
  1807  0E2D                     	;# 
  1808  0E2E                     	;# 
  1809  0E90                     	;# 
  1810  0E91                     	;# 
  1811  0E92                     	;# 
  1812  0E94                     	;# 
  1813  0E95                     	;# 
  1814  0E9C                     	;# 
  1815  0E9D                     	;# 
  1816  0E9E                     	;# 
  1817  0E9F                     	;# 
  1818  0EA0                     	;# 
  1819  0EA1                     	;# 
  1820  0EA2                     	;# 
  1821  0EA3                     	;# 
  1822  0EA4                     	;# 
  1823  0EA5                     	;# 
  1824  0EA6                     	;# 
  1825  0EA7                     	;# 
  1826  0F0F                     	;# 
  1827  0F10                     	;# 
  1828  0F11                     	;# 
  1829  0F12                     	;# 
  1830  0F13                     	;# 
  1831  0F14                     	;# 
  1832  0F15                     	;# 
  1833  0F16                     	;# 
  1834  0F17                     	;# 
  1835  0F18                     	;# 
  1836  0F19                     	;# 
  1837  0F1A                     	;# 
  1838  0F1B                     	;# 
  1839  0F1C                     	;# 
  1840  0F1D                     	;# 
  1841  0F1E                     	;# 
  1842  0F1F                     	;# 
  1843  0F20                     	;# 
  1844  0F21                     	;# 
  1845  0F22                     	;# 
  1846  0F23                     	;# 
  1847  0F24                     	;# 
  1848  0F25                     	;# 
  1849  0F26                     	;# 
  1850  0F27                     	;# 
  1851  0F28                     	;# 
  1852  0F29                     	;# 
  1853  0F2A                     	;# 
  1854  0F2B                     	;# 
  1855  0F2C                     	;# 
  1856  0F2D                     	;# 
  1857  0F2E                     	;# 
  1858  0F2F                     	;# 
  1859  0F30                     	;# 
  1860  0F31                     	;# 
  1861  0F32                     	;# 
  1862  0F33                     	;# 
  1863  0F34                     	;# 
  1864  0F35                     	;# 
  1865  0F36                     	;# 
  1866  0F37                     	;# 
  1867  0FE4                     	;# 
  1868  0FE5                     	;# 
  1869  0FE6                     	;# 
  1870  0FE7                     	;# 
  1871  0FE8                     	;# 
  1872  0FE9                     	;# 
  1873  0FEA                     	;# 
  1874  0FEB                     	;# 
  1875  0FED                     	;# 
  1876  0FEE                     	;# 
  1877  0FEF                     	;# 
  1878  0000                     	;# 
  1879  0001                     	;# 
  1880  0002                     	;# 
  1881  0003                     	;# 
  1882  0004                     	;# 
  1883  0005                     	;# 
  1884  0006                     	;# 
  1885  0007                     	;# 
  1886  0008                     	;# 
  1887  0009                     	;# 
  1888  000A                     	;# 
  1889  000B                     	;# 
  1890  000C                     	;# 
  1891  000D                     	;# 
  1892  000E                     	;# 
  1893  0010                     	;# 
  1894  0011                     	;# 
  1895  0012                     	;# 
  1896  0013                     	;# 
  1897  0014                     	;# 
  1898  0015                     	;# 
  1899  0016                     	;# 
  1900  0016                     	;# 
  1901  0017                     	;# 
  1902  0018                     	;# 
  1903  0019                     	;# 
  1904  001A                     	;# 
  1905  001A                     	;# 
  1906  001B                     	;# 
  1907  001B                     	;# 
  1908  001C                     	;# 
  1909  001D                     	;# 
  1910  001E                     	;# 
  1911  001F                     	;# 
  1912  008C                     	;# 
  1913  008D                     	;# 
  1914  008E                     	;# 
  1915  0090                     	;# 
  1916  0091                     	;# 
  1917  0092                     	;# 
  1918  0093                     	;# 
  1919  0094                     	;# 
  1920  0095                     	;# 
  1921  0096                     	;# 
  1922  0098                     	;# 
  1923  0099                     	;# 
  1924  009A                     	;# 
  1925  009B                     	;# 
  1926  009B                     	;# 
  1927  009C                     	;# 
  1928  009D                     	;# 
  1929  009E                     	;# 
  1930  009F                     	;# 
  1931  010C                     	;# 
  1932  010D                     	;# 
  1933  010E                     	;# 
  1934  0111                     	;# 
  1935  0112                     	;# 
  1936  0113                     	;# 
  1937  0114                     	;# 
  1938  0115                     	;# 
  1939  0116                     	;# 
  1940  0117                     	;# 
  1941  0118                     	;# 
  1942  0119                     	;# 
  1943  011C                     	;# 
  1944  018C                     	;# 
  1945  018D                     	;# 
  1946  018E                     	;# 
  1947  0191                     	;# 
  1948  0191                     	;# 
  1949  0192                     	;# 
  1950  0193                     	;# 
  1951  0193                     	;# 
  1952  0194                     	;# 
  1953  0195                     	;# 
  1954  0196                     	;# 
  1955  0197                     	;# 
  1956  0199                     	;# 
  1957  0199                     	;# 
  1958  0199                     	;# 
  1959  019A                     	;# 
  1960  019A                     	;# 
  1961  019A                     	;# 
  1962  019B                     	;# 
  1963  019B                     	;# 
  1964  019B                     	;# 
  1965  019B                     	;# 
  1966  019B                     	;# 
  1967  019C                     	;# 
  1968  019C                     	;# 
  1969  019C                     	;# 
  1970  019D                     	;# 
  1971  019D                     	;# 
  1972  019D                     	;# 
  1973  019E                     	;# 
  1974  019E                     	;# 
  1975  019E                     	;# 
  1976  019F                     	;# 
  1977  019F                     	;# 
  1978  019F                     	;# 
  1979  019F                     	;# 
  1980  019F                     	;# 
  1981  020C                     	;# 
  1982  020D                     	;# 
  1983  020E                     	;# 
  1984  0211                     	;# 
  1985  0211                     	;# 
  1986  0212                     	;# 
  1987  0212                     	;# 
  1988  0213                     	;# 
  1989  0213                     	;# 
  1990  0214                     	;# 
  1991  0214                     	;# 
  1992  0215                     	;# 
  1993  0215                     	;# 
  1994  0215                     	;# 
  1995  0215                     	;# 
  1996  0216                     	;# 
  1997  0216                     	;# 
  1998  0217                     	;# 
  1999  0217                     	;# 
  2000  028C                     	;# 
  2001  028D                     	;# 
  2002  028E                     	;# 
  2003  0291                     	;# 
  2004  0291                     	;# 
  2005  0292                     	;# 
  2006  0293                     	;# 
  2007  0294                     	;# 
  2008  0298                     	;# 
  2009  0298                     	;# 
  2010  0299                     	;# 
  2011  029A                     	;# 
  2012  029B                     	;# 
  2013  029E                     	;# 
  2014  030C                     	;# 
  2015  030D                     	;# 
  2016  030E                     	;# 
  2017  038C                     	;# 
  2018  038D                     	;# 
  2019  038E                     	;# 
  2020  0391                     	;# 
  2021  0392                     	;# 
  2022  0393                     	;# 
  2023  0394                     	;# 
  2024  0395                     	;# 
  2025  0396                     	;# 
  2026  0397                     	;# 
  2027  0398                     	;# 
  2028  0399                     	;# 
  2029  040E                     	;# 
  2030  0413                     	;# 
  2031  0413                     	;# 
  2032  0414                     	;# 
  2033  0414                     	;# 
  2034  0415                     	;# 
  2035  0416                     	;# 
  2036  0417                     	;# 
  2037  0418                     	;# 
  2038  041A                     	;# 
  2039  041A                     	;# 
  2040  041B                     	;# 
  2041  041B                     	;# 
  2042  041C                     	;# 
  2043  041D                     	;# 
  2044  041E                     	;# 
  2045  041F                     	;# 
  2046  0493                     	;# 
  2047  0494                     	;# 
  2048  0495                     	;# 
  2049  0496                     	;# 
  2050  049A                     	;# 
  2051  049B                     	;# 
  2052  049C                     	;# 
  2053  049D                     	;# 
  2054  058C                     	;# 
  2055  058C                     	;# 
  2056  058D                     	;# 
  2057  058E                     	;# 
  2058  058E                     	;# 
  2059  058F                     	;# 
  2060  0590                     	;# 
  2061  0590                     	;# 
  2062  0591                     	;# 
  2063  0592                     	;# 
  2064  0592                     	;# 
  2065  0593                     	;# 
  2066  0594                     	;# 
  2067  0594                     	;# 
  2068  0595                     	;# 
  2069  0596                     	;# 
  2070  0596                     	;# 
  2071  0597                     	;# 
  2072  0598                     	;# 
  2073  0599                     	;# 
  2074  059A                     	;# 
  2075  059B                     	;# 
  2076  059B                     	;# 
  2077  059C                     	;# 
  2078  059D                     	;# 
  2079  060C                     	;# 
  2080  060C                     	;# 
  2081  060D                     	;# 
  2082  060E                     	;# 
  2083  060F                     	;# 
  2084  060F                     	;# 
  2085  0610                     	;# 
  2086  0611                     	;# 
  2087  0612                     	;# 
  2088  0613                     	;# 
  2089  0614                     	;# 
  2090  0617                     	;# 
  2091  0617                     	;# 
  2092  0618                     	;# 
  2093  0619                     	;# 
  2094  061A                     	;# 
  2095  061A                     	;# 
  2096  061B                     	;# 
  2097  061C                     	;# 
  2098  0691                     	;# 
  2099  0692                     	;# 
  2100  0693                     	;# 
  2101  0694                     	;# 
  2102  0695                     	;# 
  2103  0696                     	;# 
  2104  0697                     	;# 
  2105  0699                     	;# 
  2106  069A                     	;# 
  2107  0711                     	;# 
  2108  0712                     	;# 
  2109  0713                     	;# 
  2110  0714                     	;# 
  2111  0715                     	;# 
  2112  0718                     	;# 
  2113  0718                     	;# 
  2114  0719                     	;# 
  2115  071A                     	;# 
  2116  071A                     	;# 
  2117  071B                     	;# 
  2118  071C                     	;# 
  2119  071D                     	;# 
  2120  0791                     	;# 
  2121  0791                     	;# 
  2122  0792                     	;# 
  2123  0793                     	;# 
  2124  0793                     	;# 
  2125  0794                     	;# 
  2126  0795                     	;# 
  2127  0795                     	;# 
  2128  0796                     	;# 
  2129  0797                     	;# 
  2130  0797                     	;# 
  2131  0798                     	;# 
  2132  0799                     	;# 
  2133  079A                     	;# 
  2134  080C                     	;# 
  2135  080C                     	;# 
  2136  080D                     	;# 
  2137  080E                     	;# 
  2138  080E                     	;# 
  2139  080F                     	;# 
  2140  0810                     	;# 
  2141  0810                     	;# 
  2142  0811                     	;# 
  2143  0812                     	;# 
  2144  0812                     	;# 
  2145  0813                     	;# 
  2146  0814                     	;# 
  2147  0815                     	;# 
  2148  0816                     	;# 
  2149  0817                     	;# 
  2150  0818                     	;# 
  2151  0819                     	;# 
  2152  081A                     	;# 
  2153  081A                     	;# 
  2154  081B                     	;# 
  2155  081C                     	;# 
  2156  081C                     	;# 
  2157  081D                     	;# 
  2158  088C                     	;# 
  2159  088D                     	;# 
  2160  088E                     	;# 
  2161  088F                     	;# 
  2162  088F                     	;# 
  2163  0890                     	;# 
  2164  0891                     	;# 
  2165  0892                     	;# 
  2166  0893                     	;# 
  2167  0893                     	;# 
  2168  0894                     	;# 
  2169  0895                     	;# 
  2170  0896                     	;# 
  2171  0897                     	;# 
  2172  0897                     	;# 
  2173  0898                     	;# 
  2174  0899                     	;# 
  2175  0D8C                     	;# 
  2176  0D8C                     	;# 
  2177  0D8D                     	;# 
  2178  0D8E                     	;# 
  2179  0D8F                     	;# 
  2180  0D8F                     	;# 
  2181  0D90                     	;# 
  2182  0D91                     	;# 
  2183  0D92                     	;# 
  2184  0D92                     	;# 
  2185  0D93                     	;# 
  2186  0D94                     	;# 
  2187  0D95                     	;# 
  2188  0D95                     	;# 
  2189  0D96                     	;# 
  2190  0D97                     	;# 
  2191  0D98                     	;# 
  2192  0D99                     	;# 
  2193  0D9A                     	;# 
  2194  0D9B                     	;# 
  2195  0D9C                     	;# 
  2196  0D9D                     	;# 
  2197  0D9E                     	;# 
  2198  0D9E                     	;# 
  2199  0D9F                     	;# 
  2200  0DA0                     	;# 
  2201  0DA1                     	;# 
  2202  0DA1                     	;# 
  2203  0DA2                     	;# 
  2204  0DA3                     	;# 
  2205  0DA4                     	;# 
  2206  0DA4                     	;# 
  2207  0DA5                     	;# 
  2208  0DA6                     	;# 
  2209  0DA7                     	;# 
  2210  0DA7                     	;# 
  2211  0DA8                     	;# 
  2212  0DA9                     	;# 
  2213  0DAA                     	;# 
  2214  0DAB                     	;# 
  2215  0DAC                     	;# 
  2216  0DAD                     	;# 
  2217  0DAE                     	;# 
  2218  0DAF                     	;# 
  2219  0E0F                     	;# 
  2220  0E10                     	;# 
  2221  0E11                     	;# 
  2222  0E12                     	;# 
  2223  0E13                     	;# 
  2224  0E14                     	;# 
  2225  0E15                     	;# 
  2226  0E16                     	;# 
  2227  0E17                     	;# 
  2228  0E18                     	;# 
  2229  0E19                     	;# 
  2230  0E1A                     	;# 
  2231  0E1B                     	;# 
  2232  0E1C                     	;# 
  2233  0E1D                     	;# 
  2234  0E1E                     	;# 
  2235  0E1F                     	;# 
  2236  0E20                     	;# 
  2237  0E21                     	;# 
  2238  0E22                     	;# 
  2239  0E23                     	;# 
  2240  0E24                     	;# 
  2241  0E25                     	;# 
  2242  0E26                     	;# 
  2243  0E27                     	;# 
  2244  0E28                     	;# 
  2245  0E29                     	;# 
  2246  0E2A                     	;# 
  2247  0E2B                     	;# 
  2248  0E2C                     	;# 
  2249  0E2D                     	;# 
  2250  0E2E                     	;# 
  2251  0E90                     	;# 
  2252  0E91                     	;# 
  2253  0E92                     	;# 
  2254  0E94                     	;# 
  2255  0E95                     	;# 
  2256  0E9C                     	;# 
  2257  0E9D                     	;# 
  2258  0E9E                     	;# 
  2259  0E9F                     	;# 
  2260  0EA0                     	;# 
  2261  0EA1                     	;# 
  2262  0EA2                     	;# 
  2263  0EA3                     	;# 
  2264  0EA4                     	;# 
  2265  0EA5                     	;# 
  2266  0EA6                     	;# 
  2267  0EA7                     	;# 
  2268  0F0F                     	;# 
  2269  0F10                     	;# 
  2270  0F11                     	;# 
  2271  0F12                     	;# 
  2272  0F13                     	;# 
  2273  0F14                     	;# 
  2274  0F15                     	;# 
  2275  0F16                     	;# 
  2276  0F17                     	;# 
  2277  0F18                     	;# 
  2278  0F19                     	;# 
  2279  0F1A                     	;# 
  2280  0F1B                     	;# 
  2281  0F1C                     	;# 
  2282  0F1D                     	;# 
  2283  0F1E                     	;# 
  2284  0F1F                     	;# 
  2285  0F20                     	;# 
  2286  0F21                     	;# 
  2287  0F22                     	;# 
  2288  0F23                     	;# 
  2289  0F24                     	;# 
  2290  0F25                     	;# 
  2291  0F26                     	;# 
  2292  0F27                     	;# 
  2293  0F28                     	;# 
  2294  0F29                     	;# 
  2295  0F2A                     	;# 
  2296  0F2B                     	;# 
  2297  0F2C                     	;# 
  2298  0F2D                     	;# 
  2299  0F2E                     	;# 
  2300  0F2F                     	;# 
  2301  0F30                     	;# 
  2302  0F31                     	;# 
  2303  0F32                     	;# 
  2304  0F33                     	;# 
  2305  0F34                     	;# 
  2306  0F35                     	;# 
  2307  0F36                     	;# 
  2308  0F37                     	;# 
  2309  0FE4                     	;# 
  2310  0FE5                     	;# 
  2311  0FE6                     	;# 
  2312  0FE7                     	;# 
  2313  0FE8                     	;# 
  2314  0FE9                     	;# 
  2315  0FEA                     	;# 
  2316  0FEB                     	;# 
  2317  0FED                     	;# 
  2318  0FEE                     	;# 
  2319  0FEF                     	;# 
  2320  0000                     	;# 
  2321  0001                     	;# 
  2322  0002                     	;# 
  2323  0003                     	;# 
  2324  0004                     	;# 
  2325  0005                     	;# 
  2326  0006                     	;# 
  2327  0007                     	;# 
  2328  0008                     	;# 
  2329  0009                     	;# 
  2330  000A                     	;# 
  2331  000B                     	;# 
  2332  000C                     	;# 
  2333  000D                     	;# 
  2334  000E                     	;# 
  2335  0010                     	;# 
  2336  0011                     	;# 
  2337  0012                     	;# 
  2338  0013                     	;# 
  2339  0014                     	;# 
  2340  0015                     	;# 
  2341  0016                     	;# 
  2342  0016                     	;# 
  2343  0017                     	;# 
  2344  0018                     	;# 
  2345  0019                     	;# 
  2346  001A                     	;# 
  2347  001A                     	;# 
  2348  001B                     	;# 
  2349  001B                     	;# 
  2350  001C                     	;# 
  2351  001D                     	;# 
  2352  001E                     	;# 
  2353  001F                     	;# 
  2354  008C                     	;# 
  2355  008D                     	;# 
  2356  008E                     	;# 
  2357  0090                     	;# 
  2358  0091                     	;# 
  2359  0092                     	;# 
  2360  0093                     	;# 
  2361  0094                     	;# 
  2362  0095                     	;# 
  2363  0096                     	;# 
  2364  0098                     	;# 
  2365  0099                     	;# 
  2366  009A                     	;# 
  2367  009B                     	;# 
  2368  009B                     	;# 
  2369  009C                     	;# 
  2370  009D                     	;# 
  2371  009E                     	;# 
  2372  009F                     	;# 
  2373  010C                     	;# 
  2374  010D                     	;# 
  2375  010E                     	;# 
  2376  0111                     	;# 
  2377  0112                     	;# 
  2378  0113                     	;# 
  2379  0114                     	;# 
  2380  0115                     	;# 
  2381  0116                     	;# 
  2382  0117                     	;# 
  2383  0118                     	;# 
  2384  0119                     	;# 
  2385  011C                     	;# 
  2386  018C                     	;# 
  2387  018D                     	;# 
  2388  018E                     	;# 
  2389  0191                     	;# 
  2390  0191                     	;# 
  2391  0192                     	;# 
  2392  0193                     	;# 
  2393  0193                     	;# 
  2394  0194                     	;# 
  2395  0195                     	;# 
  2396  0196                     	;# 
  2397  0197                     	;# 
  2398  0199                     	;# 
  2399  0199                     	;# 
  2400  0199                     	;# 
  2401  019A                     	;# 
  2402  019A                     	;# 
  2403  019A                     	;# 
  2404  019B                     	;# 
  2405  019B                     	;# 
  2406  019B                     	;# 
  2407  019B                     	;# 
  2408  019B                     	;# 
  2409  019C                     	;# 
  2410  019C                     	;# 
  2411  019C                     	;# 
  2412  019D                     	;# 
  2413  019D                     	;# 
  2414  019D                     	;# 
  2415  019E                     	;# 
  2416  019E                     	;# 
  2417  019E                     	;# 
  2418  019F                     	;# 
  2419  019F                     	;# 
  2420  019F                     	;# 
  2421  019F                     	;# 
  2422  019F                     	;# 
  2423  020C                     	;# 
  2424  020D                     	;# 
  2425  020E                     	;# 
  2426  0211                     	;# 
  2427  0211                     	;# 
  2428  0212                     	;# 
  2429  0212                     	;# 
  2430  0213                     	;# 
  2431  0213                     	;# 
  2432  0214                     	;# 
  2433  0214                     	;# 
  2434  0215                     	;# 
  2435  0215                     	;# 
  2436  0215                     	;# 
  2437  0215                     	;# 
  2438  0216                     	;# 
  2439  0216                     	;# 
  2440  0217                     	;# 
  2441  0217                     	;# 
  2442  028C                     	;# 
  2443  028D                     	;# 
  2444  028E                     	;# 
  2445  0291                     	;# 
  2446  0291                     	;# 
  2447  0292                     	;# 
  2448  0293                     	;# 
  2449  0294                     	;# 
  2450  0298                     	;# 
  2451  0298                     	;# 
  2452  0299                     	;# 
  2453  029A                     	;# 
  2454  029B                     	;# 
  2455  029E                     	;# 
  2456  030C                     	;# 
  2457  030D                     	;# 
  2458  030E                     	;# 
  2459  038C                     	;# 
  2460  038D                     	;# 
  2461  038E                     	;# 
  2462  0391                     	;# 
  2463  0392                     	;# 
  2464  0393                     	;# 
  2465  0394                     	;# 
  2466  0395                     	;# 
  2467  0396                     	;# 
  2468  0397                     	;# 
  2469  0398                     	;# 
  2470  0399                     	;# 
  2471  040E                     	;# 
  2472  0413                     	;# 
  2473  0413                     	;# 
  2474  0414                     	;# 
  2475  0414                     	;# 
  2476  0415                     	;# 
  2477  0416                     	;# 
  2478  0417                     	;# 
  2479  0418                     	;# 
  2480  041A                     	;# 
  2481  041A                     	;# 
  2482  041B                     	;# 
  2483  041B                     	;# 
  2484  041C                     	;# 
  2485  041D                     	;# 
  2486  041E                     	;# 
  2487  041F                     	;# 
  2488  0493                     	;# 
  2489  0494                     	;# 
  2490  0495                     	;# 
  2491  0496                     	;# 
  2492  049A                     	;# 
  2493  049B                     	;# 
  2494  049C                     	;# 
  2495  049D                     	;# 
  2496  058C                     	;# 
  2497  058C                     	;# 
  2498  058D                     	;# 
  2499  058E                     	;# 
  2500  058E                     	;# 
  2501  058F                     	;# 
  2502  0590                     	;# 
  2503  0590                     	;# 
  2504  0591                     	;# 
  2505  0592                     	;# 
  2506  0592                     	;# 
  2507  0593                     	;# 
  2508  0594                     	;# 
  2509  0594                     	;# 
  2510  0595                     	;# 
  2511  0596                     	;# 
  2512  0596                     	;# 
  2513  0597                     	;# 
  2514  0598                     	;# 
  2515  0599                     	;# 
  2516  059A                     	;# 
  2517  059B                     	;# 
  2518  059B                     	;# 
  2519  059C                     	;# 
  2520  059D                     	;# 
  2521  060C                     	;# 
  2522  060C                     	;# 
  2523  060D                     	;# 
  2524  060E                     	;# 
  2525  060F                     	;# 
  2526  060F                     	;# 
  2527  0610                     	;# 
  2528  0611                     	;# 
  2529  0612                     	;# 
  2530  0613                     	;# 
  2531  0614                     	;# 
  2532  0617                     	;# 
  2533  0617                     	;# 
  2534  0618                     	;# 
  2535  0619                     	;# 
  2536  061A                     	;# 
  2537  061A                     	;# 
  2538  061B                     	;# 
  2539  061C                     	;# 
  2540  0691                     	;# 
  2541  0692                     	;# 
  2542  0693                     	;# 
  2543  0694                     	;# 
  2544  0695                     	;# 
  2545  0696                     	;# 
  2546  0697                     	;# 
  2547  0699                     	;# 
  2548  069A                     	;# 
  2549  0711                     	;# 
  2550  0712                     	;# 
  2551  0713                     	;# 
  2552  0714                     	;# 
  2553  0715                     	;# 
  2554  0718                     	;# 
  2555  0718                     	;# 
  2556  0719                     	;# 
  2557  071A                     	;# 
  2558  071A                     	;# 
  2559  071B                     	;# 
  2560  071C                     	;# 
  2561  071D                     	;# 
  2562  0791                     	;# 
  2563  0791                     	;# 
  2564  0792                     	;# 
  2565  0793                     	;# 
  2566  0793                     	;# 
  2567  0794                     	;# 
  2568  0795                     	;# 
  2569  0795                     	;# 
  2570  0796                     	;# 
  2571  0797                     	;# 
  2572  0797                     	;# 
  2573  0798                     	;# 
  2574  0799                     	;# 
  2575  079A                     	;# 
  2576  080C                     	;# 
  2577  080C                     	;# 
  2578  080D                     	;# 
  2579  080E                     	;# 
  2580  080E                     	;# 
  2581  080F                     	;# 
  2582  0810                     	;# 
  2583  0810                     	;# 
  2584  0811                     	;# 
  2585  0812                     	;# 
  2586  0812                     	;# 
  2587  0813                     	;# 
  2588  0814                     	;# 
  2589  0815                     	;# 
  2590  0816                     	;# 
  2591  0817                     	;# 
  2592  0818                     	;# 
  2593  0819                     	;# 
  2594  081A                     	;# 
  2595  081A                     	;# 
  2596  081B                     	;# 
  2597  081C                     	;# 
  2598  081C                     	;# 
  2599  081D                     	;# 
  2600  088C                     	;# 
  2601  088D                     	;# 
  2602  088E                     	;# 
  2603  088F                     	;# 
  2604  088F                     	;# 
  2605  0890                     	;# 
  2606  0891                     	;# 
  2607  0892                     	;# 
  2608  0893                     	;# 
  2609  0893                     	;# 
  2610  0894                     	;# 
  2611  0895                     	;# 
  2612  0896                     	;# 
  2613  0897                     	;# 
  2614  0897                     	;# 
  2615  0898                     	;# 
  2616  0899                     	;# 
  2617  0D8C                     	;# 
  2618  0D8C                     	;# 
  2619  0D8D                     	;# 
  2620  0D8E                     	;# 
  2621  0D8F                     	;# 
  2622  0D8F                     	;# 
  2623  0D90                     	;# 
  2624  0D91                     	;# 
  2625  0D92                     	;# 
  2626  0D92                     	;# 
  2627  0D93                     	;# 
  2628  0D94                     	;# 
  2629  0D95                     	;# 
  2630  0D95                     	;# 
  2631  0D96                     	;# 
  2632  0D97                     	;# 
  2633  0D98                     	;# 
  2634  0D99                     	;# 
  2635  0D9A                     	;# 
  2636  0D9B                     	;# 
  2637  0D9C                     	;# 
  2638  0D9D                     	;# 
  2639  0D9E                     	;# 
  2640  0D9E                     	;# 
  2641  0D9F                     	;# 
  2642  0DA0                     	;# 
  2643  0DA1                     	;# 
  2644  0DA1                     	;# 
  2645  0DA2                     	;# 
  2646  0DA3                     	;# 
  2647  0DA4                     	;# 
  2648  0DA4                     	;# 
  2649  0DA5                     	;# 
  2650  0DA6                     	;# 
  2651  0DA7                     	;# 
  2652  0DA7                     	;# 
  2653  0DA8                     	;# 
  2654  0DA9                     	;# 
  2655  0DAA                     	;# 
  2656  0DAB                     	;# 
  2657  0DAC                     	;# 
  2658  0DAD                     	;# 
  2659  0DAE                     	;# 
  2660  0DAF                     	;# 
  2661  0E0F                     	;# 
  2662  0E10                     	;# 
  2663  0E11                     	;# 
  2664  0E12                     	;# 
  2665  0E13                     	;# 
  2666  0E14                     	;# 
  2667  0E15                     	;# 
  2668  0E16                     	;# 
  2669  0E17                     	;# 
  2670  0E18                     	;# 
  2671  0E19                     	;# 
  2672  0E1A                     	;# 
  2673  0E1B                     	;# 
  2674  0E1C                     	;# 
  2675  0E1D                     	;# 
  2676  0E1E                     	;# 
  2677  0E1F                     	;# 
  2678  0E20                     	;# 
  2679  0E21                     	;# 
  2680  0E22                     	;# 
  2681  0E23                     	;# 
  2682  0E24                     	;# 
  2683  0E25                     	;# 
  2684  0E26                     	;# 
  2685  0E27                     	;# 
  2686  0E28                     	;# 
  2687  0E29                     	;# 
  2688  0E2A                     	;# 
  2689  0E2B                     	;# 
  2690  0E2C                     	;# 
  2691  0E2D                     	;# 
  2692  0E2E                     	;# 
  2693  0E90                     	;# 
  2694  0E91                     	;# 
  2695  0E92                     	;# 
  2696  0E94                     	;# 
  2697  0E95                     	;# 
  2698  0E9C                     	;# 
  2699  0E9D                     	;# 
  2700  0E9E                     	;# 
  2701  0E9F                     	;# 
  2702  0EA0                     	;# 
  2703  0EA1                     	;# 
  2704  0EA2                     	;# 
  2705  0EA3                     	;# 
  2706  0EA4                     	;# 
  2707  0EA5                     	;# 
  2708  0EA6                     	;# 
  2709  0EA7                     	;# 
  2710  0F0F                     	;# 
  2711  0F10                     	;# 
  2712  0F11                     	;# 
  2713  0F12                     	;# 
  2714  0F13                     	;# 
  2715  0F14                     	;# 
  2716  0F15                     	;# 
  2717  0F16                     	;# 
  2718  0F17                     	;# 
  2719  0F18                     	;# 
  2720  0F19                     	;# 
  2721  0F1A                     	;# 
  2722  0F1B                     	;# 
  2723  0F1C                     	;# 
  2724  0F1D                     	;# 
  2725  0F1E                     	;# 
  2726  0F1F                     	;# 
  2727  0F20                     	;# 
  2728  0F21                     	;# 
  2729  0F22                     	;# 
  2730  0F23                     	;# 
  2731  0F24                     	;# 
  2732  0F25                     	;# 
  2733  0F26                     	;# 
  2734  0F27                     	;# 
  2735  0F28                     	;# 
  2736  0F29                     	;# 
  2737  0F2A                     	;# 
  2738  0F2B                     	;# 
  2739  0F2C                     	;# 
  2740  0F2D                     	;# 
  2741  0F2E                     	;# 
  2742  0F2F                     	;# 
  2743  0F30                     	;# 
  2744  0F31                     	;# 
  2745  0F32                     	;# 
  2746  0F33                     	;# 
  2747  0F34                     	;# 
  2748  0F35                     	;# 
  2749  0F36                     	;# 
  2750  0F37                     	;# 
  2751  0FE4                     	;# 
  2752  0FE5                     	;# 
  2753  0FE6                     	;# 
  2754  0FE7                     	;# 
  2755  0FE8                     	;# 
  2756  0FE9                     	;# 
  2757  0FEA                     	;# 
  2758  0FEB                     	;# 
  2759  0FED                     	;# 
  2760  0FEE                     	;# 
  2761  0FEF                     	;# 
  2762  0000                     	;# 
  2763  0001                     	;# 
  2764  0002                     	;# 
  2765  0003                     	;# 
  2766  0004                     	;# 
  2767  0005                     	;# 
  2768  0006                     	;# 
  2769  0007                     	;# 
  2770  0008                     	;# 
  2771  0009                     	;# 
  2772  000A                     	;# 
  2773  000B                     	;# 
  2774  000C                     	;# 
  2775  000D                     	;# 
  2776  000E                     	;# 
  2777  0010                     	;# 
  2778  0011                     	;# 
  2779  0012                     	;# 
  2780  0013                     	;# 
  2781  0014                     	;# 
  2782  0015                     	;# 
  2783  0016                     	;# 
  2784  0016                     	;# 
  2785  0017                     	;# 
  2786  0018                     	;# 
  2787  0019                     	;# 
  2788  001A                     	;# 
  2789  001A                     	;# 
  2790  001B                     	;# 
  2791  001B                     	;# 
  2792  001C                     	;# 
  2793  001D                     	;# 
  2794  001E                     	;# 
  2795  001F                     	;# 
  2796  008C                     	;# 
  2797  008D                     	;# 
  2798  008E                     	;# 
  2799  0090                     	;# 
  2800  0091                     	;# 
  2801  0092                     	;# 
  2802  0093                     	;# 
  2803  0094                     	;# 
  2804  0095                     	;# 
  2805  0096                     	;# 
  2806  0098                     	;# 
  2807  0099                     	;# 
  2808  009A                     	;# 
  2809  009B                     	;# 
  2810  009B                     	;# 
  2811  009C                     	;# 
  2812  009D                     	;# 
  2813  009E                     	;# 
  2814  009F                     	;# 
  2815  010C                     	;# 
  2816  010D                     	;# 
  2817  010E                     	;# 
  2818  0111                     	;# 
  2819  0112                     	;# 
  2820  0113                     	;# 
  2821  0114                     	;# 
  2822  0115                     	;# 
  2823  0116                     	;# 
  2824  0117                     	;# 
  2825  0118                     	;# 
  2826  0119                     	;# 
  2827  011C                     	;# 
  2828  018C                     	;# 
  2829  018D                     	;# 
  2830  018E                     	;# 
  2831  0191                     	;# 
  2832  0191                     	;# 
  2833  0192                     	;# 
  2834  0193                     	;# 
  2835  0193                     	;# 
  2836  0194                     	;# 
  2837  0195                     	;# 
  2838  0196                     	;# 
  2839  0197                     	;# 
  2840  0199                     	;# 
  2841  0199                     	;# 
  2842  0199                     	;# 
  2843  019A                     	;# 
  2844  019A                     	;# 
  2845  019A                     	;# 
  2846  019B                     	;# 
  2847  019B                     	;# 
  2848  019B                     	;# 
  2849  019B                     	;# 
  2850  019B                     	;# 
  2851  019C                     	;# 
  2852  019C                     	;# 
  2853  019C                     	;# 
  2854  019D                     	;# 
  2855  019D                     	;# 
  2856  019D                     	;# 
  2857  019E                     	;# 
  2858  019E                     	;# 
  2859  019E                     	;# 
  2860  019F                     	;# 
  2861  019F                     	;# 
  2862  019F                     	;# 
  2863  019F                     	;# 
  2864  019F                     	;# 
  2865  020C                     	;# 
  2866  020D                     	;# 
  2867  020E                     	;# 
  2868  0211                     	;# 
  2869  0211                     	;# 
  2870  0212                     	;# 
  2871  0212                     	;# 
  2872  0213                     	;# 
  2873  0213                     	;# 
  2874  0214                     	;# 
  2875  0214                     	;# 
  2876  0215                     	;# 
  2877  0215                     	;# 
  2878  0215                     	;# 
  2879  0215                     	;# 
  2880  0216                     	;# 
  2881  0216                     	;# 
  2882  0217                     	;# 
  2883  0217                     	;# 
  2884  028C                     	;# 
  2885  028D                     	;# 
  2886  028E                     	;# 
  2887  0291                     	;# 
  2888  0291                     	;# 
  2889  0292                     	;# 
  2890  0293                     	;# 
  2891  0294                     	;# 
  2892  0298                     	;# 
  2893  0298                     	;# 
  2894  0299                     	;# 
  2895  029A                     	;# 
  2896  029B                     	;# 
  2897  029E                     	;# 
  2898  030C                     	;# 
  2899  030D                     	;# 
  2900  030E                     	;# 
  2901  038C                     	;# 
  2902  038D                     	;# 
  2903  038E                     	;# 
  2904  0391                     	;# 
  2905  0392                     	;# 
  2906  0393                     	;# 
  2907  0394                     	;# 
  2908  0395                     	;# 
  2909  0396                     	;# 
  2910  0397                     	;# 
  2911  0398                     	;# 
  2912  0399                     	;# 
  2913  040E                     	;# 
  2914  0413                     	;# 
  2915  0413                     	;# 
  2916  0414                     	;# 
  2917  0414                     	;# 
  2918  0415                     	;# 
  2919  0416                     	;# 
  2920  0417                     	;# 
  2921  0418                     	;# 
  2922  041A                     	;# 
  2923  041A                     	;# 
  2924  041B                     	;# 
  2925  041B                     	;# 
  2926  041C                     	;# 
  2927  041D                     	;# 
  2928  041E                     	;# 
  2929  041F                     	;# 
  2930  0493                     	;# 
  2931  0494                     	;# 
  2932  0495                     	;# 
  2933  0496                     	;# 
  2934  049A                     	;# 
  2935  049B                     	;# 
  2936  049C                     	;# 
  2937  049D                     	;# 
  2938  058C                     	;# 
  2939  058C                     	;# 
  2940  058D                     	;# 
  2941  058E                     	;# 
  2942  058E                     	;# 
  2943  058F                     	;# 
  2944  0590                     	;# 
  2945  0590                     	;# 
  2946  0591                     	;# 
  2947  0592                     	;# 
  2948  0592                     	;# 
  2949  0593                     	;# 
  2950  0594                     	;# 
  2951  0594                     	;# 
  2952  0595                     	;# 
  2953  0596                     	;# 
  2954  0596                     	;# 
  2955  0597                     	;# 
  2956  0598                     	;# 
  2957  0599                     	;# 
  2958  059A                     	;# 
  2959  059B                     	;# 
  2960  059B                     	;# 
  2961  059C                     	;# 
  2962  059D                     	;# 
  2963  060C                     	;# 
  2964  060C                     	;# 
  2965  060D                     	;# 
  2966  060E                     	;# 
  2967  060F                     	;# 
  2968  060F                     	;# 
  2969  0610                     	;# 
  2970  0611                     	;# 
  2971  0612                     	;# 
  2972  0613                     	;# 
  2973  0614                     	;# 
  2974  0617                     	;# 
  2975  0617                     	;# 
  2976  0618                     	;# 
  2977  0619                     	;# 
  2978  061A                     	;# 
  2979  061A                     	;# 
  2980  061B                     	;# 
  2981  061C                     	;# 
  2982  0691                     	;# 
  2983  0692                     	;# 
  2984  0693                     	;# 
  2985  0694                     	;# 
  2986  0695                     	;# 
  2987  0696                     	;# 
  2988  0697                     	;# 
  2989  0699                     	;# 
  2990  069A                     	;# 
  2991  0711                     	;# 
  2992  0712                     	;# 
  2993  0713                     	;# 
  2994  0714                     	;# 
  2995  0715                     	;# 
  2996  0718                     	;# 
  2997  0718                     	;# 
  2998  0719                     	;# 
  2999  071A                     	;# 
  3000  071A                     	;# 
  3001  071B                     	;# 
  3002  071C                     	;# 
  3003  071D                     	;# 
  3004  0791                     	;# 
  3005  0791                     	;# 
  3006  0792                     	;# 
  3007  0793                     	;# 
  3008  0793                     	;# 
  3009  0794                     	;# 
  3010  0795                     	;# 
  3011  0795                     	;# 
  3012  0796                     	;# 
  3013  0797                     	;# 
  3014  0797                     	;# 
  3015  0798                     	;# 
  3016  0799                     	;# 
  3017  079A                     	;# 
  3018  080C                     	;# 
  3019  080C                     	;# 
  3020  080D                     	;# 
  3021  080E                     	;# 
  3022  080E                     	;# 
  3023  080F                     	;# 
  3024  0810                     	;# 
  3025  0810                     	;# 
  3026  0811                     	;# 
  3027  0812                     	;# 
  3028  0812                     	;# 
  3029  0813                     	;# 
  3030  0814                     	;# 
  3031  0815                     	;# 
  3032  0816                     	;# 
  3033  0817                     	;# 
  3034  0818                     	;# 
  3035  0819                     	;# 
  3036  081A                     	;# 
  3037  081A                     	;# 
  3038  081B                     	;# 
  3039  081C                     	;# 
  3040  081C                     	;# 
  3041  081D                     	;# 
  3042  088C                     	;# 
  3043  088D                     	;# 
  3044  088E                     	;# 
  3045  088F                     	;# 
  3046  088F                     	;# 
  3047  0890                     	;# 
  3048  0891                     	;# 
  3049  0892                     	;# 
  3050  0893                     	;# 
  3051  0893                     	;# 
  3052  0894                     	;# 
  3053  0895                     	;# 
  3054  0896                     	;# 
  3055  0897                     	;# 
  3056  0897                     	;# 
  3057  0898                     	;# 
  3058  0899                     	;# 
  3059  0D8C                     	;# 
  3060  0D8C                     	;# 
  3061  0D8D                     	;# 
  3062  0D8E                     	;# 
  3063  0D8F                     	;# 
  3064  0D8F                     	;# 
  3065  0D90                     	;# 
  3066  0D91                     	;# 
  3067  0D92                     	;# 
  3068  0D92                     	;# 
  3069  0D93                     	;# 
  3070  0D94                     	;# 
  3071  0D95                     	;# 
  3072  0D95                     	;# 
  3073  0D96                     	;# 
  3074  0D97                     	;# 
  3075  0D98                     	;# 
  3076  0D99                     	;# 
  3077  0D9A                     	;# 
  3078  0D9B                     	;# 
  3079  0D9C                     	;# 
  3080  0D9D                     	;# 
  3081  0D9E                     	;# 
  3082  0D9E                     	;# 
  3083  0D9F                     	;# 
  3084  0DA0                     	;# 
  3085  0DA1                     	;# 
  3086  0DA1                     	;# 
  3087  0DA2                     	;# 
  3088  0DA3                     	;# 
  3089  0DA4                     	;# 
  3090  0DA4                     	;# 
  3091  0DA5                     	;# 
  3092  0DA6                     	;# 
  3093  0DA7                     	;# 
  3094  0DA7                     	;# 
  3095  0DA8                     	;# 
  3096  0DA9                     	;# 
  3097  0DAA                     	;# 
  3098  0DAB                     	;# 
  3099  0DAC                     	;# 
  3100  0DAD                     	;# 
  3101  0DAE                     	;# 
  3102  0DAF                     	;# 
  3103  0E0F                     	;# 
  3104  0E10                     	;# 
  3105  0E11                     	;# 
  3106  0E12                     	;# 
  3107  0E13                     	;# 
  3108  0E14                     	;# 
  3109  0E15                     	;# 
  3110  0E16                     	;# 
  3111  0E17                     	;# 
  3112  0E18                     	;# 
  3113  0E19                     	;# 
  3114  0E1A                     	;# 
  3115  0E1B                     	;# 
  3116  0E1C                     	;# 
  3117  0E1D                     	;# 
  3118  0E1E                     	;# 
  3119  0E1F                     	;# 
  3120  0E20                     	;# 
  3121  0E21                     	;# 
  3122  0E22                     	;# 
  3123  0E23                     	;# 
  3124  0E24                     	;# 
  3125  0E25                     	;# 
  3126  0E26                     	;# 
  3127  0E27                     	;# 
  3128  0E28                     	;# 
  3129  0E29                     	;# 
  3130  0E2A                     	;# 
  3131  0E2B                     	;# 
  3132  0E2C                     	;# 
  3133  0E2D                     	;# 
  3134  0E2E                     	;# 
  3135  0E90                     	;# 
  3136  0E91                     	;# 
  3137  0E92                     	;# 
  3138  0E94                     	;# 
  3139  0E95                     	;# 
  3140  0E9C                     	;# 
  3141  0E9D                     	;# 
  3142  0E9E                     	;# 
  3143  0E9F                     	;# 
  3144  0EA0                     	;# 
  3145  0EA1                     	;# 
  3146  0EA2                     	;# 
  3147  0EA3                     	;# 
  3148  0EA4                     	;# 
  3149  0EA5                     	;# 
  3150  0EA6                     	;# 
  3151  0EA7                     	;# 
  3152  0F0F                     	;# 
  3153  0F10                     	;# 
  3154  0F11                     	;# 
  3155  0F12                     	;# 
  3156  0F13                     	;# 
  3157  0F14                     	;# 
  3158  0F15                     	;# 
  3159  0F16                     	;# 
  3160  0F17                     	;# 
  3161  0F18                     	;# 
  3162  0F19                     	;# 
  3163  0F1A                     	;# 
  3164  0F1B                     	;# 
  3165  0F1C                     	;# 
  3166  0F1D                     	;# 
  3167  0F1E                     	;# 
  3168  0F1F                     	;# 
  3169  0F20                     	;# 
  3170  0F21                     	;# 
  3171  0F22                     	;# 
  3172  0F23                     	;# 
  3173  0F24                     	;# 
  3174  0F25                     	;# 
  3175  0F26                     	;# 
  3176  0F27                     	;# 
  3177  0F28                     	;# 
  3178  0F29                     	;# 
  3179  0F2A                     	;# 
  3180  0F2B                     	;# 
  3181  0F2C                     	;# 
  3182  0F2D                     	;# 
  3183  0F2E                     	;# 
  3184  0F2F                     	;# 
  3185  0F30                     	;# 
  3186  0F31                     	;# 
  3187  0F32                     	;# 
  3188  0F33                     	;# 
  3189  0F34                     	;# 
  3190  0F35                     	;# 
  3191  0F36                     	;# 
  3192  0F37                     	;# 
  3193  0FE4                     	;# 
  3194  0FE5                     	;# 
  3195  0FE6                     	;# 
  3196  0FE7                     	;# 
  3197  0FE8                     	;# 
  3198  0FE9                     	;# 
  3199  0FEA                     	;# 
  3200  0FEB                     	;# 
  3201  0FED                     	;# 
  3202  0FEE                     	;# 
  3203  0FEF                     	;# 
  3204  0000                     	;# 
  3205  0001                     	;# 
  3206  0002                     	;# 
  3207  0003                     	;# 
  3208  0004                     	;# 
  3209  0005                     	;# 
  3210  0006                     	;# 
  3211  0007                     	;# 
  3212  0008                     	;# 
  3213  0009                     	;# 
  3214  000A                     	;# 
  3215  000B                     	;# 
  3216  000C                     	;# 
  3217  000D                     	;# 
  3218  000E                     	;# 
  3219  0010                     	;# 
  3220  0011                     	;# 
  3221  0012                     	;# 
  3222  0013                     	;# 
  3223  0014                     	;# 
  3224  0015                     	;# 
  3225  0016                     	;# 
  3226  0016                     	;# 
  3227  0017                     	;# 
  3228  0018                     	;# 
  3229  0019                     	;# 
  3230  001A                     	;# 
  3231  001A                     	;# 
  3232  001B                     	;# 
  3233  001B                     	;# 
  3234  001C                     	;# 
  3235  001D                     	;# 
  3236  001E                     	;# 
  3237  001F                     	;# 
  3238  008C                     	;# 
  3239  008D                     	;# 
  3240  008E                     	;# 
  3241  0090                     	;# 
  3242  0091                     	;# 
  3243  0092                     	;# 
  3244  0093                     	;# 
  3245  0094                     	;# 
  3246  0095                     	;# 
  3247  0096                     	;# 
  3248  0098                     	;# 
  3249  0099                     	;# 
  3250  009A                     	;# 
  3251  009B                     	;# 
  3252  009B                     	;# 
  3253  009C                     	;# 
  3254  009D                     	;# 
  3255  009E                     	;# 
  3256  009F                     	;# 
  3257  010C                     	;# 
  3258  010D                     	;# 
  3259  010E                     	;# 
  3260  0111                     	;# 
  3261  0112                     	;# 
  3262  0113                     	;# 
  3263  0114                     	;# 
  3264  0115                     	;# 
  3265  0116                     	;# 
  3266  0117                     	;# 
  3267  0118                     	;# 
  3268  0119                     	;# 
  3269  011C                     	;# 
  3270  018C                     	;# 
  3271  018D                     	;# 
  3272  018E                     	;# 
  3273  0191                     	;# 
  3274  0191                     	;# 
  3275  0192                     	;# 
  3276  0193                     	;# 
  3277  0193                     	;# 
  3278  0194                     	;# 
  3279  0195                     	;# 
  3280  0196                     	;# 
  3281  0197                     	;# 
  3282  0199                     	;# 
  3283  0199                     	;# 
  3284  0199                     	;# 
  3285  019A                     	;# 
  3286  019A                     	;# 
  3287  019A                     	;# 
  3288  019B                     	;# 
  3289  019B                     	;# 
  3290  019B                     	;# 
  3291  019B                     	;# 
  3292  019B                     	;# 
  3293  019C                     	;# 
  3294  019C                     	;# 
  3295  019C                     	;# 
  3296  019D                     	;# 
  3297  019D                     	;# 
  3298  019D                     	;# 
  3299  019E                     	;# 
  3300  019E                     	;# 
  3301  019E                     	;# 
  3302  019F                     	;# 
  3303  019F                     	;# 
  3304  019F                     	;# 
  3305  019F                     	;# 
  3306  019F                     	;# 
  3307  020C                     	;# 
  3308  020D                     	;# 
  3309  020E                     	;# 
  3310  0211                     	;# 
  3311  0211                     	;# 
  3312  0212                     	;# 
  3313  0212                     	;# 
  3314  0213                     	;# 
  3315  0213                     	;# 
  3316  0214                     	;# 
  3317  0214                     	;# 
  3318  0215                     	;# 
  3319  0215                     	;# 
  3320  0215                     	;# 
  3321  0215                     	;# 
  3322  0216                     	;# 
  3323  0216                     	;# 
  3324  0217                     	;# 
  3325  0217                     	;# 
  3326  028C                     	;# 
  3327  028D                     	;# 
  3328  028E                     	;# 
  3329  0291                     	;# 
  3330  0291                     	;# 
  3331  0292                     	;# 
  3332  0293                     	;# 
  3333  0294                     	;# 
  3334  0298                     	;# 
  3335  0298                     	;# 
  3336  0299                     	;# 
  3337  029A                     	;# 
  3338  029B                     	;# 
  3339  029E                     	;# 
  3340  030C                     	;# 
  3341  030D                     	;# 
  3342  030E                     	;# 
  3343  038C                     	;# 
  3344  038D                     	;# 
  3345  038E                     	;# 
  3346  0391                     	;# 
  3347  0392                     	;# 
  3348  0393                     	;# 
  3349  0394                     	;# 
  3350  0395                     	;# 
  3351  0396                     	;# 
  3352  0397                     	;# 
  3353  0398                     	;# 
  3354  0399                     	;# 
  3355  040E                     	;# 
  3356  0413                     	;# 
  3357  0413                     	;# 
  3358  0414                     	;# 
  3359  0414                     	;# 
  3360  0415                     	;# 
  3361  0416                     	;# 
  3362  0417                     	;# 
  3363  0418                     	;# 
  3364  041A                     	;# 
  3365  041A                     	;# 
  3366  041B                     	;# 
  3367  041B                     	;# 
  3368  041C                     	;# 
  3369  041D                     	;# 
  3370  041E                     	;# 
  3371  041F                     	;# 
  3372  0493                     	;# 
  3373  0494                     	;# 
  3374  0495                     	;# 
  3375  0496                     	;# 
  3376  049A                     	;# 
  3377  049B                     	;# 
  3378  049C                     	;# 
  3379  049D                     	;# 
  3380  058C                     	;# 
  3381  058C                     	;# 
  3382  058D                     	;# 
  3383  058E                     	;# 
  3384  058E                     	;# 
  3385  058F                     	;# 
  3386  0590                     	;# 
  3387  0590                     	;# 
  3388  0591                     	;# 
  3389  0592                     	;# 
  3390  0592                     	;# 
  3391  0593                     	;# 
  3392  0594                     	;# 
  3393  0594                     	;# 
  3394  0595                     	;# 
  3395  0596                     	;# 
  3396  0596                     	;# 
  3397  0597                     	;# 
  3398  0598                     	;# 
  3399  0599                     	;# 
  3400  059A                     	;# 
  3401  059B                     	;# 
  3402  059B                     	;# 
  3403  059C                     	;# 
  3404  059D                     	;# 
  3405  060C                     	;# 
  3406  060C                     	;# 
  3407  060D                     	;# 
  3408  060E                     	;# 
  3409  060F                     	;# 
  3410  060F                     	;# 
  3411  0610                     	;# 
  3412  0611                     	;# 
  3413  0612                     	;# 
  3414  0613                     	;# 
  3415  0614                     	;# 
  3416  0617                     	;# 
  3417  0617                     	;# 
  3418  0618                     	;# 
  3419  0619                     	;# 
  3420  061A                     	;# 
  3421  061A                     	;# 
  3422  061B                     	;# 
  3423  061C                     	;# 
  3424  0691                     	;# 
  3425  0692                     	;# 
  3426  0693                     	;# 
  3427  0694                     	;# 
  3428  0695                     	;# 
  3429  0696                     	;# 
  3430  0697                     	;# 
  3431  0699                     	;# 
  3432  069A                     	;# 
  3433  0711                     	;# 
  3434  0712                     	;# 
  3435  0713                     	;# 
  3436  0714                     	;# 
  3437  0715                     	;# 
  3438  0718                     	;# 
  3439  0718                     	;# 
  3440  0719                     	;# 
  3441  071A                     	;# 
  3442  071A                     	;# 
  3443  071B                     	;# 
  3444  071C                     	;# 
  3445  071D                     	;# 
  3446  0791                     	;# 
  3447  0791                     	;# 
  3448  0792                     	;# 
  3449  0793                     	;# 
  3450  0793                     	;# 
  3451  0794                     	;# 
  3452  0795                     	;# 
  3453  0795                     	;# 
  3454  0796                     	;# 
  3455  0797                     	;# 
  3456  0797                     	;# 
  3457  0798                     	;# 
  3458  0799                     	;# 
  3459  079A                     	;# 
  3460  080C                     	;# 
  3461  080C                     	;# 
  3462  080D                     	;# 
  3463  080E                     	;# 
  3464  080E                     	;# 
  3465  080F                     	;# 
  3466  0810                     	;# 
  3467  0810                     	;# 
  3468  0811                     	;# 
  3469  0812                     	;# 
  3470  0812                     	;# 
  3471  0813                     	;# 
  3472  0814                     	;# 
  3473  0815                     	;# 
  3474  0816                     	;# 
  3475  0817                     	;# 
  3476  0818                     	;# 
  3477  0819                     	;# 
  3478  081A                     	;# 
  3479  081A                     	;# 
  3480  081B                     	;# 
  3481  081C                     	;# 
  3482  081C                     	;# 
  3483  081D                     	;# 
  3484  088C                     	;# 
  3485  088D                     	;# 
  3486  088E                     	;# 
  3487  088F                     	;# 
  3488  088F                     	;# 
  3489  0890                     	;# 
  3490  0891                     	;# 
  3491  0892                     	;# 
  3492  0893                     	;# 
  3493  0893                     	;# 
  3494  0894                     	;# 
  3495  0895                     	;# 
  3496  0896                     	;# 
  3497  0897                     	;# 
  3498  0897                     	;# 
  3499  0898                     	;# 
  3500  0899                     	;# 
  3501  0D8C                     	;# 
  3502  0D8C                     	;# 
  3503  0D8D                     	;# 
  3504  0D8E                     	;# 
  3505  0D8F                     	;# 
  3506  0D8F                     	;# 
  3507  0D90                     	;# 
  3508  0D91                     	;# 
  3509  0D92                     	;# 
  3510  0D92                     	;# 
  3511  0D93                     	;# 
  3512  0D94                     	;# 
  3513  0D95                     	;# 
  3514  0D95                     	;# 
  3515  0D96                     	;# 
  3516  0D97                     	;# 
  3517  0D98                     	;# 
  3518  0D99                     	;# 
  3519  0D9A                     	;# 
  3520  0D9B                     	;# 
  3521  0D9C                     	;# 
  3522  0D9D                     	;# 
  3523  0D9E                     	;# 
  3524  0D9E                     	;# 
  3525  0D9F                     	;# 
  3526  0DA0                     	;# 
  3527  0DA1                     	;# 
  3528  0DA1                     	;# 
  3529  0DA2                     	;# 
  3530  0DA3                     	;# 
  3531  0DA4                     	;# 
  3532  0DA4                     	;# 
  3533  0DA5                     	;# 
  3534  0DA6                     	;# 
  3535  0DA7                     	;# 
  3536  0DA7                     	;# 
  3537  0DA8                     	;# 
  3538  0DA9                     	;# 
  3539  0DAA                     	;# 
  3540  0DAB                     	;# 
  3541  0DAC                     	;# 
  3542  0DAD                     	;# 
  3543  0DAE                     	;# 
  3544  0DAF                     	;# 
  3545  0E0F                     	;# 
  3546  0E10                     	;# 
  3547  0E11                     	;# 
  3548  0E12                     	;# 
  3549  0E13                     	;# 
  3550  0E14                     	;# 
  3551  0E15                     	;# 
  3552  0E16                     	;# 
  3553  0E17                     	;# 
  3554  0E18                     	;# 
  3555  0E19                     	;# 
  3556  0E1A                     	;# 
  3557  0E1B                     	;# 
  3558  0E1C                     	;# 
  3559  0E1D                     	;# 
  3560  0E1E                     	;# 
  3561  0E1F                     	;# 
  3562  0E20                     	;# 
  3563  0E21                     	;# 
  3564  0E22                     	;# 
  3565  0E23                     	;# 
  3566  0E24                     	;# 
  3567  0E25                     	;# 
  3568  0E26                     	;# 
  3569  0E27                     	;# 
  3570  0E28                     	;# 
  3571  0E29                     	;# 
  3572  0E2A                     	;# 
  3573  0E2B                     	;# 
  3574  0E2C                     	;# 
  3575  0E2D                     	;# 
  3576  0E2E                     	;# 
  3577  0E90                     	;# 
  3578  0E91                     	;# 
  3579  0E92                     	;# 
  3580  0E94                     	;# 
  3581  0E95                     	;# 
  3582  0E9C                     	;# 
  3583  0E9D                     	;# 
  3584  0E9E                     	;# 
  3585  0E9F                     	;# 
  3586  0EA0                     	;# 
  3587  0EA1                     	;# 
  3588  0EA2                     	;# 
  3589  0EA3                     	;# 
  3590  0EA4                     	;# 
  3591  0EA5                     	;# 
  3592  0EA6                     	;# 
  3593  0EA7                     	;# 
  3594  0F0F                     	;# 
  3595  0F10                     	;# 
  3596  0F11                     	;# 
  3597  0F12                     	;# 
  3598  0F13                     	;# 
  3599  0F14                     	;# 
  3600  0F15                     	;# 
  3601  0F16                     	;# 
  3602  0F17                     	;# 
  3603  0F18                     	;# 
  3604  0F19                     	;# 
  3605  0F1A                     	;# 
  3606  0F1B                     	;# 
  3607  0F1C                     	;# 
  3608  0F1D                     	;# 
  3609  0F1E                     	;# 
  3610  0F1F                     	;# 
  3611  0F20                     	;# 
  3612  0F21                     	;# 
  3613  0F22                     	;# 
  3614  0F23                     	;# 
  3615  0F24                     	;# 
  3616  0F25                     	;# 
  3617  0F26                     	;# 
  3618  0F27                     	;# 
  3619  0F28                     	;# 
  3620  0F29                     	;# 
  3621  0F2A                     	;# 
  3622  0F2B                     	;# 
  3623  0F2C                     	;# 
  3624  0F2D                     	;# 
  3625  0F2E                     	;# 
  3626  0F2F                     	;# 
  3627  0F30                     	;# 
  3628  0F31                     	;# 
  3629  0F32                     	;# 
  3630  0F33                     	;# 
  3631  0F34                     	;# 
  3632  0F35                     	;# 
  3633  0F36                     	;# 
  3634  0F37                     	;# 
  3635  0FE4                     	;# 
  3636  0FE5                     	;# 
  3637  0FE6                     	;# 
  3638  0FE7                     	;# 
  3639  0FE8                     	;# 
  3640  0FE9                     	;# 
  3641  0FEA                     	;# 
  3642  0FEB                     	;# 
  3643  0FED                     	;# 
  3644  0FEE                     	;# 
  3645  0FEF                     	;# 
  3646  0000                     	;# 
  3647  0001                     	;# 
  3648  0002                     	;# 
  3649  0003                     	;# 
  3650  0004                     	;# 
  3651  0005                     	;# 
  3652  0006                     	;# 
  3653  0007                     	;# 
  3654  0008                     	;# 
  3655  0009                     	;# 
  3656  000A                     	;# 
  3657  000B                     	;# 
  3658  000C                     	;# 
  3659  000D                     	;# 
  3660  000E                     	;# 
  3661  0010                     	;# 
  3662  0011                     	;# 
  3663  0012                     	;# 
  3664  0013                     	;# 
  3665  0014                     	;# 
  3666  0015                     	;# 
  3667  0016                     	;# 
  3668  0016                     	;# 
  3669  0017                     	;# 
  3670  0018                     	;# 
  3671  0019                     	;# 
  3672  001A                     	;# 
  3673  001A                     	;# 
  3674  001B                     	;# 
  3675  001B                     	;# 
  3676  001C                     	;# 
  3677  001D                     	;# 
  3678  001E                     	;# 
  3679  001F                     	;# 
  3680  008C                     	;# 
  3681  008D                     	;# 
  3682  008E                     	;# 
  3683  0090                     	;# 
  3684  0091                     	;# 
  3685  0092                     	;# 
  3686  0093                     	;# 
  3687  0094                     	;# 
  3688  0095                     	;# 
  3689  0096                     	;# 
  3690  0098                     	;# 
  3691  0099                     	;# 
  3692  009A                     	;# 
  3693  009B                     	;# 
  3694  009B                     	;# 
  3695  009C                     	;# 
  3696  009D                     	;# 
  3697  009E                     	;# 
  3698  009F                     	;# 
  3699  010C                     	;# 
  3700  010D                     	;# 
  3701  010E                     	;# 
  3702  0111                     	;# 
  3703  0112                     	;# 
  3704  0113                     	;# 
  3705  0114                     	;# 
  3706  0115                     	;# 
  3707  0116                     	;# 
  3708  0117                     	;# 
  3709  0118                     	;# 
  3710  0119                     	;# 
  3711  011C                     	;# 
  3712  018C                     	;# 
  3713  018D                     	;# 
  3714  018E                     	;# 
  3715  0191                     	;# 
  3716  0191                     	;# 
  3717  0192                     	;# 
  3718  0193                     	;# 
  3719  0193                     	;# 
  3720  0194                     	;# 
  3721  0195                     	;# 
  3722  0196                     	;# 
  3723  0197                     	;# 
  3724  0199                     	;# 
  3725  0199                     	;# 
  3726  0199                     	;# 
  3727  019A                     	;# 
  3728  019A                     	;# 
  3729  019A                     	;# 
  3730  019B                     	;# 
  3731  019B                     	;# 
  3732  019B                     	;# 
  3733  019B                     	;# 
  3734  019B                     	;# 
  3735  019C                     	;# 
  3736  019C                     	;# 
  3737  019C                     	;# 
  3738  019D                     	;# 
  3739  019D                     	;# 
  3740  019D                     	;# 
  3741  019E                     	;# 
  3742  019E                     	;# 
  3743  019E                     	;# 
  3744  019F                     	;# 
  3745  019F                     	;# 
  3746  019F                     	;# 
  3747  019F                     	;# 
  3748  019F                     	;# 
  3749  020C                     	;# 
  3750  020D                     	;# 
  3751  020E                     	;# 
  3752  0211                     	;# 
  3753  0211                     	;# 
  3754  0212                     	;# 
  3755  0212                     	;# 
  3756  0213                     	;# 
  3757  0213                     	;# 
  3758  0214                     	;# 
  3759  0214                     	;# 
  3760  0215                     	;# 
  3761  0215                     	;# 
  3762  0215                     	;# 
  3763  0215                     	;# 
  3764  0216                     	;# 
  3765  0216                     	;# 
  3766  0217                     	;# 
  3767  0217                     	;# 
  3768  028C                     	;# 
  3769  028D                     	;# 
  3770  028E                     	;# 
  3771  0291                     	;# 
  3772  0291                     	;# 
  3773  0292                     	;# 
  3774  0293                     	;# 
  3775  0294                     	;# 
  3776  0298                     	;# 
  3777  0298                     	;# 
  3778  0299                     	;# 
  3779  029A                     	;# 
  3780  029B                     	;# 
  3781  029E                     	;# 
  3782  030C                     	;# 
  3783  030D                     	;# 
  3784  030E                     	;# 
  3785  038C                     	;# 
  3786  038D                     	;# 
  3787  038E                     	;# 
  3788  0391                     	;# 
  3789  0392                     	;# 
  3790  0393                     	;# 
  3791  0394                     	;# 
  3792  0395                     	;# 
  3793  0396                     	;# 
  3794  0397                     	;# 
  3795  0398                     	;# 
  3796  0399                     	;# 
  3797  040E                     	;# 
  3798  0413                     	;# 
  3799  0413                     	;# 
  3800  0414                     	;# 
  3801  0414                     	;# 
  3802  0415                     	;# 
  3803  0416                     	;# 
  3804  0417                     	;# 
  3805  0418                     	;# 
  3806  041A                     	;# 
  3807  041A                     	;# 
  3808  041B                     	;# 
  3809  041B                     	;# 
  3810  041C                     	;# 
  3811  041D                     	;# 
  3812  041E                     	;# 
  3813  041F                     	;# 
  3814  0493                     	;# 
  3815  0494                     	;# 
  3816  0495                     	;# 
  3817  0496                     	;# 
  3818  049A                     	;# 
  3819  049B                     	;# 
  3820  049C                     	;# 
  3821  049D                     	;# 
  3822  058C                     	;# 
  3823  058C                     	;# 
  3824  058D                     	;# 
  3825  058E                     	;# 
  3826  058E                     	;# 
  3827  058F                     	;# 
  3828  0590                     	;# 
  3829  0590                     	;# 
  3830  0591                     	;# 
  3831  0592                     	;# 
  3832  0592                     	;# 
  3833  0593                     	;# 
  3834  0594                     	;# 
  3835  0594                     	;# 
  3836  0595                     	;# 
  3837  0596                     	;# 
  3838  0596                     	;# 
  3839  0597                     	;# 
  3840  0598                     	;# 
  3841  0599                     	;# 
  3842  059A                     	;# 
  3843  059B                     	;# 
  3844  059B                     	;# 
  3845  059C                     	;# 
  3846  059D                     	;# 
  3847  060C                     	;# 
  3848  060C                     	;# 
  3849  060D                     	;# 
  3850  060E                     	;# 
  3851  060F                     	;# 
  3852  060F                     	;# 
  3853  0610                     	;# 
  3854  0611                     	;# 
  3855  0612                     	;# 
  3856  0613                     	;# 
  3857  0614                     	;# 
  3858  0617                     	;# 
  3859  0617                     	;# 
  3860  0618                     	;# 
  3861  0619                     	;# 
  3862  061A                     	;# 
  3863  061A                     	;# 
  3864  061B                     	;# 
  3865  061C                     	;# 
  3866  0691                     	;# 
  3867  0692                     	;# 
  3868  0693                     	;# 
  3869  0694                     	;# 
  3870  0695                     	;# 
  3871  0696                     	;# 
  3872  0697                     	;# 
  3873  0699                     	;# 
  3874  069A                     	;# 
  3875  0711                     	;# 
  3876  0712                     	;# 
  3877  0713                     	;# 
  3878  0714                     	;# 
  3879  0715                     	;# 
  3880  0718                     	;# 
  3881  0718                     	;# 
  3882  0719                     	;# 
  3883  071A                     	;# 
  3884  071A                     	;# 
  3885  071B                     	;# 
  3886  071C                     	;# 
  3887  071D                     	;# 
  3888  0791                     	;# 
  3889  0791                     	;# 
  3890  0792                     	;# 
  3891  0793                     	;# 
  3892  0793                     	;# 
  3893  0794                     	;# 
  3894  0795                     	;# 
  3895  0795                     	;# 
  3896  0796                     	;# 
  3897  0797                     	;# 
  3898  0797                     	;# 
  3899  0798                     	;# 
  3900  0799                     	;# 
  3901  079A                     	;# 
  3902  080C                     	;# 
  3903  080C                     	;# 
  3904  080D                     	;# 
  3905  080E                     	;# 
  3906  080E                     	;# 
  3907  080F                     	;# 
  3908  0810                     	;# 
  3909  0810                     	;# 
  3910  0811                     	;# 
  3911  0812                     	;# 
  3912  0812                     	;# 
  3913  0813                     	;# 
  3914  0814                     	;# 
  3915  0815                     	;# 
  3916  0816                     	;# 
  3917  0817                     	;# 
  3918  0818                     	;# 
  3919  0819                     	;# 
  3920  081A                     	;# 
  3921  081A                     	;# 
  3922  081B                     	;# 
  3923  081C                     	;# 
  3924  081C                     	;# 
  3925  081D                     	;# 
  3926  088C                     	;# 
  3927  088D                     	;# 
  3928  088E                     	;# 
  3929  088F                     	;# 
  3930  088F                     	;# 
  3931  0890                     	;# 
  3932  0891                     	;# 
  3933  0892                     	;# 
  3934  0893                     	;# 
  3935  0893                     	;# 
  3936  0894                     	;# 
  3937  0895                     	;# 
  3938  0896                     	;# 
  3939  0897                     	;# 
  3940  0897                     	;# 
  3941  0898                     	;# 
  3942  0899                     	;# 
  3943  0D8C                     	;# 
  3944  0D8C                     	;# 
  3945  0D8D                     	;# 
  3946  0D8E                     	;# 
  3947  0D8F                     	;# 
  3948  0D8F                     	;# 
  3949  0D90                     	;# 
  3950  0D91                     	;# 
  3951  0D92                     	;# 
  3952  0D92                     	;# 
  3953  0D93                     	;# 
  3954  0D94                     	;# 
  3955  0D95                     	;# 
  3956  0D95                     	;# 
  3957  0D96                     	;# 
  3958  0D97                     	;# 
  3959  0D98                     	;# 
  3960  0D99                     	;# 
  3961  0D9A                     	;# 
  3962  0D9B                     	;# 
  3963  0D9C                     	;# 
  3964  0D9D                     	;# 
  3965  0D9E                     	;# 
  3966  0D9E                     	;# 
  3967  0D9F                     	;# 
  3968  0DA0                     	;# 
  3969  0DA1                     	;# 
  3970  0DA1                     	;# 
  3971  0DA2                     	;# 
  3972  0DA3                     	;# 
  3973  0DA4                     	;# 
  3974  0DA4                     	;# 
  3975  0DA5                     	;# 
  3976  0DA6                     	;# 
  3977  0DA7                     	;# 
  3978  0DA7                     	;# 
  3979  0DA8                     	;# 
  3980  0DA9                     	;# 
  3981  0DAA                     	;# 
  3982  0DAB                     	;# 
  3983  0DAC                     	;# 
  3984  0DAD                     	;# 
  3985  0DAE                     	;# 
  3986  0DAF                     	;# 
  3987  0E0F                     	;# 
  3988  0E10                     	;# 
  3989  0E11                     	;# 
  3990  0E12                     	;# 
  3991  0E13                     	;# 
  3992  0E14                     	;# 
  3993  0E15                     	;# 
  3994  0E16                     	;# 
  3995  0E17                     	;# 
  3996  0E18                     	;# 
  3997  0E19                     	;# 
  3998  0E1A                     	;# 
  3999  0E1B                     	;# 
  4000  0E1C                     	;# 
  4001  0E1D                     	;# 
  4002  0E1E                     	;# 
  4003  0E1F                     	;# 
  4004  0E20                     	;# 
  4005  0E21                     	;# 
  4006  0E22                     	;# 
  4007  0E23                     	;# 
  4008  0E24                     	;# 
  4009  0E25                     	;# 
  4010  0E26                     	;# 
  4011  0E27                     	;# 
  4012  0E28                     	;# 
  4013  0E29                     	;# 
  4014  0E2A                     	;# 
  4015  0E2B                     	;# 
  4016  0E2C                     	;# 
  4017  0E2D                     	;# 
  4018  0E2E                     	;# 
  4019  0E90                     	;# 
  4020  0E91                     	;# 
  4021  0E92                     	;# 
  4022  0E94                     	;# 
  4023  0E95                     	;# 
  4024  0E9C                     	;# 
  4025  0E9D                     	;# 
  4026  0E9E                     	;# 
  4027  0E9F                     	;# 
  4028  0EA0                     	;# 
  4029  0EA1                     	;# 
  4030  0EA2                     	;# 
  4031  0EA3                     	;# 
  4032  0EA4                     	;# 
  4033  0EA5                     	;# 
  4034  0EA6                     	;# 
  4035  0EA7                     	;# 
  4036  0F0F                     	;# 
  4037  0F10                     	;# 
  4038  0F11                     	;# 
  4039  0F12                     	;# 
  4040  0F13                     	;# 
  4041  0F14                     	;# 
  4042  0F15                     	;# 
  4043  0F16                     	;# 
  4044  0F17                     	;# 
  4045  0F18                     	;# 
  4046  0F19                     	;# 
  4047  0F1A                     	;# 
  4048  0F1B                     	;# 
  4049  0F1C                     	;# 
  4050  0F1D                     	;# 
  4051  0F1E                     	;# 
  4052  0F1F                     	;# 
  4053  0F20                     	;# 
  4054  0F21                     	;# 
  4055  0F22                     	;# 
  4056  0F23                     	;# 
  4057  0F24                     	;# 
  4058  0F25                     	;# 
  4059  0F26                     	;# 
  4060  0F27                     	;# 
  4061  0F28                     	;# 
  4062  0F29                     	;# 
  4063  0F2A                     	;# 
  4064  0F2B                     	;# 
  4065  0F2C                     	;# 
  4066  0F2D                     	;# 
  4067  0F2E                     	;# 
  4068  0F2F                     	;# 
  4069  0F30                     	;# 
  4070  0F31                     	;# 
  4071  0F32                     	;# 
  4072  0F33                     	;# 
  4073  0F34                     	;# 
  4074  0F35                     	;# 
  4075  0F36                     	;# 
  4076  0F37                     	;# 
  4077  0FE4                     	;# 
  4078  0FE5                     	;# 
  4079  0FE6                     	;# 
  4080  0FE7                     	;# 
  4081  0FE8                     	;# 
  4082  0FE9                     	;# 
  4083  0FEA                     	;# 
  4084  0FEB                     	;# 
  4085  0FED                     	;# 
  4086  0FEE                     	;# 
  4087  0FEF                     	;# 
  4088  0000                     	;# 
  4089  0001                     	;# 
  4090  0002                     	;# 
  4091  0003                     	;# 
  4092  0004                     	;# 
  4093  0005                     	;# 
  4094  0006                     	;# 
  4095  0007                     	;# 
  4096  0008                     	;# 
  4097  0009                     	;# 
  4098  000A                     	;# 
  4099  000B                     	;# 
  4100  000C                     	;# 
  4101  000D                     	;# 
  4102  000E                     	;# 
  4103  0010                     	;# 
  4104  0011                     	;# 
  4105  0012                     	;# 
  4106  0013                     	;# 
  4107  0014                     	;# 
  4108  0015                     	;# 
  4109  0016                     	;# 
  4110  0016                     	;# 
  4111  0017                     	;# 
  4112  0018                     	;# 
  4113  0019                     	;# 
  4114  001A                     	;# 
  4115  001A                     	;# 
  4116  001B                     	;# 
  4117  001B                     	;# 
  4118  001C                     	;# 
  4119  001D                     	;# 
  4120  001E                     	;# 
  4121  001F                     	;# 
  4122  008C                     	;# 
  4123  008D                     	;# 
  4124  008E                     	;# 
  4125  0090                     	;# 
  4126  0091                     	;# 
  4127  0092                     	;# 
  4128  0093                     	;# 
  4129  0094                     	;# 
  4130  0095                     	;# 
  4131  0096                     	;# 
  4132  0098                     	;# 
  4133  0099                     	;# 
  4134  009A                     	;# 
  4135  009B                     	;# 
  4136  009B                     	;# 
  4137  009C                     	;# 
  4138  009D                     	;# 
  4139  009E                     	;# 
  4140  009F                     	;# 
  4141  010C                     	;# 
  4142  010D                     	;# 
  4143  010E                     	;# 
  4144  0111                     	;# 
  4145  0112                     	;# 
  4146  0113                     	;# 
  4147  0114                     	;# 
  4148  0115                     	;# 
  4149  0116                     	;# 
  4150  0117                     	;# 
  4151  0118                     	;# 
  4152  0119                     	;# 
  4153  011C                     	;# 
  4154  018C                     	;# 
  4155  018D                     	;# 
  4156  018E                     	;# 
  4157  0191                     	;# 
  4158  0191                     	;# 
  4159  0192                     	;# 
  4160  0193                     	;# 
  4161  0193                     	;# 
  4162  0194                     	;# 
  4163  0195                     	;# 
  4164  0196                     	;# 
  4165  0197                     	;# 
  4166  0199                     	;# 
  4167  0199                     	;# 
  4168  0199                     	;# 
  4169  019A                     	;# 
  4170  019A                     	;# 
  4171  019A                     	;# 
  4172  019B                     	;# 
  4173  019B                     	;# 
  4174  019B                     	;# 
  4175  019B                     	;# 
  4176  019B                     	;# 
  4177  019C                     	;# 
  4178  019C                     	;# 
  4179  019C                     	;# 
  4180  019D                     	;# 
  4181  019D                     	;# 
  4182  019D                     	;# 
  4183  019E                     	;# 
  4184  019E                     	;# 
  4185  019E                     	;# 
  4186  019F                     	;# 
  4187  019F                     	;# 
  4188  019F                     	;# 
  4189  019F                     	;# 
  4190  019F                     	;# 
  4191  020C                     	;# 
  4192  020D                     	;# 
  4193  020E                     	;# 
  4194  0211                     	;# 
  4195  0211                     	;# 
  4196  0212                     	;# 
  4197  0212                     	;# 
  4198  0213                     	;# 
  4199  0213                     	;# 
  4200  0214                     	;# 
  4201  0214                     	;# 
  4202  0215                     	;# 
  4203  0215                     	;# 
  4204  0215                     	;# 
  4205  0215                     	;# 
  4206  0216                     	;# 
  4207  0216                     	;# 
  4208  0217                     	;# 
  4209  0217                     	;# 
  4210  028C                     	;# 
  4211  028D                     	;# 
  4212  028E                     	;# 
  4213  0291                     	;# 
  4214  0291                     	;# 
  4215  0292                     	;# 
  4216  0293                     	;# 
  4217  0294                     	;# 
  4218  0298                     	;# 
  4219  0298                     	;# 
  4220  0299                     	;# 
  4221  029A                     	;# 
  4222  029B                     	;# 
  4223  029E                     	;# 
  4224  030C                     	;# 
  4225  030D                     	;# 
  4226  030E                     	;# 
  4227  038C                     	;# 
  4228  038D                     	;# 
  4229  038E                     	;# 
  4230  0391                     	;# 
  4231  0392                     	;# 
  4232  0393                     	;# 
  4233  0394                     	;# 
  4234  0395                     	;# 
  4235  0396                     	;# 
  4236  0397                     	;# 
  4237  0398                     	;# 
  4238  0399                     	;# 
  4239  040E                     	;# 
  4240  0413                     	;# 
  4241  0413                     	;# 
  4242  0414                     	;# 
  4243  0414                     	;# 
  4244  0415                     	;# 
  4245  0416                     	;# 
  4246  0417                     	;# 
  4247  0418                     	;# 
  4248  041A                     	;# 
  4249  041A                     	;# 
  4250  041B                     	;# 
  4251  041B                     	;# 
  4252  041C                     	;# 
  4253  041D                     	;# 
  4254  041E                     	;# 
  4255  041F                     	;# 
  4256  0493                     	;# 
  4257  0494                     	;# 
  4258  0495                     	;# 
  4259  0496                     	;# 
  4260  049A                     	;# 
  4261  049B                     	;# 
  4262  049C                     	;# 
  4263  049D                     	;# 
  4264  058C                     	;# 
  4265  058C                     	;# 
  4266  058D                     	;# 
  4267  058E                     	;# 
  4268  058E                     	;# 
  4269  058F                     	;# 
  4270  0590                     	;# 
  4271  0590                     	;# 
  4272  0591                     	;# 
  4273  0592                     	;# 
  4274  0592                     	;# 
  4275  0593                     	;# 
  4276  0594                     	;# 
  4277  0594                     	;# 
  4278  0595                     	;# 
  4279  0596                     	;# 
  4280  0596                     	;# 
  4281  0597                     	;# 
  4282  0598                     	;# 
  4283  0599                     	;# 
  4284  059A                     	;# 
  4285  059B                     	;# 
  4286  059B                     	;# 
  4287  059C                     	;# 
  4288  059D                     	;# 
  4289  060C                     	;# 
  4290  060C                     	;# 
  4291  060D                     	;# 
  4292  060E                     	;# 
  4293  060F                     	;# 
  4294  060F                     	;# 
  4295  0610                     	;# 
  4296  0611                     	;# 
  4297  0612                     	;# 
  4298  0613                     	;# 
  4299  0614                     	;# 
  4300  0617                     	;# 
  4301  0617                     	;# 
  4302  0618                     	;# 
  4303  0619                     	;# 
  4304  061A                     	;# 
  4305  061A                     	;# 
  4306  061B                     	;# 
  4307  061C                     	;# 
  4308  0691                     	;# 
  4309  0692                     	;# 
  4310  0693                     	;# 
  4311  0694                     	;# 
  4312  0695                     	;# 
  4313  0696                     	;# 
  4314  0697                     	;# 
  4315  0699                     	;# 
  4316  069A                     	;# 
  4317  0711                     	;# 
  4318  0712                     	;# 
  4319  0713                     	;# 
  4320  0714                     	;# 
  4321  0715                     	;# 
  4322  0718                     	;# 
  4323  0718                     	;# 
  4324  0719                     	;# 
  4325  071A                     	;# 
  4326  071A                     	;# 
  4327  071B                     	;# 
  4328  071C                     	;# 
  4329  071D                     	;# 
  4330  0791                     	;# 
  4331  0791                     	;# 
  4332  0792                     	;# 
  4333  0793                     	;# 
  4334  0793                     	;# 
  4335  0794                     	;# 
  4336  0795                     	;# 
  4337  0795                     	;# 
  4338  0796                     	;# 
  4339  0797                     	;# 
  4340  0797                     	;# 
  4341  0798                     	;# 
  4342  0799                     	;# 
  4343  079A                     	;# 
  4344  080C                     	;# 
  4345  080C                     	;# 
  4346  080D                     	;# 
  4347  080E                     	;# 
  4348  080E                     	;# 
  4349  080F                     	;# 
  4350  0810                     	;# 
  4351  0810                     	;# 
  4352  0811                     	;# 
  4353  0812                     	;# 
  4354  0812                     	;# 
  4355  0813                     	;# 
  4356  0814                     	;# 
  4357  0815                     	;# 
  4358  0816                     	;# 
  4359  0817                     	;# 
  4360  0818                     	;# 
  4361  0819                     	;# 
  4362  081A                     	;# 
  4363  081A                     	;# 
  4364  081B                     	;# 
  4365  081C                     	;# 
  4366  081C                     	;# 
  4367  081D                     	;# 
  4368  088C                     	;# 
  4369  088D                     	;# 
  4370  088E                     	;# 
  4371  088F                     	;# 
  4372  088F                     	;# 
  4373  0890                     	;# 
  4374  0891                     	;# 
  4375  0892                     	;# 
  4376  0893                     	;# 
  4377  0893                     	;# 
  4378  0894                     	;# 
  4379  0895                     	;# 
  4380  0896                     	;# 
  4381  0897                     	;# 
  4382  0897                     	;# 
  4383  0898                     	;# 
  4384  0899                     	;# 
  4385  0D8C                     	;# 
  4386  0D8C                     	;# 
  4387  0D8D                     	;# 
  4388  0D8E                     	;# 
  4389  0D8F                     	;# 
  4390  0D8F                     	;# 
  4391  0D90                     	;# 
  4392  0D91                     	;# 
  4393  0D92                     	;# 
  4394  0D92                     	;# 
  4395  0D93                     	;# 
  4396  0D94                     	;# 
  4397  0D95                     	;# 
  4398  0D95                     	;# 
  4399  0D96                     	;# 
  4400  0D97                     	;# 
  4401  0D98                     	;# 
  4402  0D99                     	;# 
  4403  0D9A                     	;# 
  4404  0D9B                     	;# 
  4405  0D9C                     	;# 
  4406  0D9D                     	;# 
  4407  0D9E                     	;# 
  4408  0D9E                     	;# 
  4409  0D9F                     	;# 
  4410  0DA0                     	;# 
  4411  0DA1                     	;# 
  4412  0DA1                     	;# 
  4413  0DA2                     	;# 
  4414  0DA3                     	;# 
  4415  0DA4                     	;# 
  4416  0DA4                     	;# 
  4417  0DA5                     	;# 
  4418  0DA6                     	;# 
  4419  0DA7                     	;# 
  4420  0DA7                     	;# 
  4421  0DA8                     	;# 
  4422  0DA9                     	;# 
  4423  0DAA                     	;# 
  4424  0DAB                     	;# 
  4425  0DAC                     	;# 
  4426  0DAD                     	;# 
  4427  0DAE                     	;# 
  4428  0DAF                     	;# 
  4429  0E0F                     	;# 
  4430  0E10                     	;# 
  4431  0E11                     	;# 
  4432  0E12                     	;# 
  4433  0E13                     	;# 
  4434  0E14                     	;# 
  4435  0E15                     	;# 
  4436  0E16                     	;# 
  4437  0E17                     	;# 
  4438  0E18                     	;# 
  4439  0E19                     	;# 
  4440  0E1A                     	;# 
  4441  0E1B                     	;# 
  4442  0E1C                     	;# 
  4443  0E1D                     	;# 
  4444  0E1E                     	;# 
  4445  0E1F                     	;# 
  4446  0E20                     	;# 
  4447  0E21                     	;# 
  4448  0E22                     	;# 
  4449  0E23                     	;# 
  4450  0E24                     	;# 
  4451  0E25                     	;# 
  4452  0E26                     	;# 
  4453  0E27                     	;# 
  4454  0E28                     	;# 
  4455  0E29                     	;# 
  4456  0E2A                     	;# 
  4457  0E2B                     	;# 
  4458  0E2C                     	;# 
  4459  0E2D                     	;# 
  4460  0E2E                     	;# 
  4461  0E90                     	;# 
  4462  0E91                     	;# 
  4463  0E92                     	;# 
  4464  0E94                     	;# 
  4465  0E95                     	;# 
  4466  0E9C                     	;# 
  4467  0E9D                     	;# 
  4468  0E9E                     	;# 
  4469  0E9F                     	;# 
  4470  0EA0                     	;# 
  4471  0EA1                     	;# 
  4472  0EA2                     	;# 
  4473  0EA3                     	;# 
  4474  0EA4                     	;# 
  4475  0EA5                     	;# 
  4476  0EA6                     	;# 
  4477  0EA7                     	;# 
  4478  0F0F                     	;# 
  4479  0F10                     	;# 
  4480  0F11                     	;# 
  4481  0F12                     	;# 
  4482  0F13                     	;# 
  4483  0F14                     	;# 
  4484  0F15                     	;# 
  4485  0F16                     	;# 
  4486  0F17                     	;# 
  4487  0F18                     	;# 
  4488  0F19                     	;# 
  4489  0F1A                     	;# 
  4490  0F1B                     	;# 
  4491  0F1C                     	;# 
  4492  0F1D                     	;# 
  4493  0F1E                     	;# 
  4494  0F1F                     	;# 
  4495  0F20                     	;# 
  4496  0F21                     	;# 
  4497  0F22                     	;# 
  4498  0F23                     	;# 
  4499  0F24                     	;# 
  4500  0F25                     	;# 
  4501  0F26                     	;# 
  4502  0F27                     	;# 
  4503  0F28                     	;# 
  4504  0F29                     	;# 
  4505  0F2A                     	;# 
  4506  0F2B                     	;# 
  4507  0F2C                     	;# 
  4508  0F2D                     	;# 
  4509  0F2E                     	;# 
  4510  0F2F                     	;# 
  4511  0F30                     	;# 
  4512  0F31                     	;# 
  4513  0F32                     	;# 
  4514  0F33                     	;# 
  4515  0F34                     	;# 
  4516  0F35                     	;# 
  4517  0F36                     	;# 
  4518  0F37                     	;# 
  4519  0FE4                     	;# 
  4520  0FE5                     	;# 
  4521  0FE6                     	;# 
  4522  0FE7                     	;# 
  4523  0FE8                     	;# 
  4524  0FE9                     	;# 
  4525  0FEA                     	;# 
  4526  0FEB                     	;# 
  4527  0FED                     	;# 
  4528  0FEE                     	;# 
  4529  0FEF                     	;# 
  4530                           
  4531                           	psect	idataBANK1
  4532  16FD                     __pidataBANK1:
  4533                           
  4534                           ;initializer for _text10
  4535  16FD  3420               	retlw	32
  4536  16FE  3420               	retlw	32
  4537  16FF  3430               	retlw	48
  4538  1700  3430               	retlw	48
  4539  1701  3430               	retlw	48
  4540  1702  3430               	retlw	48
  4541  1703  3420               	retlw	32
  4542  1704  3420               	retlw	32
  4543  1705  3420               	retlw	32
  4544  1706  3430               	retlw	48
  4545  1707  3430               	retlw	48
  4546  1708  3430               	retlw	48
  4547  1709  3430               	retlw	48
  4548  170A  3420               	retlw	32
  4549  170B  3420               	retlw	32
  4550  170C  3420               	retlw	32
  4551  170D  3400               	retlw	0
  4552                           
  4553                           	psect	idataBANK2
  4554  0928                     __pidataBANK2:
  4555                           
  4556                           ;initializer for _text9
  4557  0928  3420               	retlw	32
  4558  0929  3420               	retlw	32
  4559  092A  3450               	retlw	80
  4560  092B  346F               	retlw	111
  4561  092C  3474               	retlw	116
  4562  092D  3431               	retlw	49
  4563  092E  3420               	retlw	32
  4564  092F  3420               	retlw	32
  4565  0930  3420               	retlw	32
  4566  0931  3450               	retlw	80
  4567  0932  346F               	retlw	111
  4568  0933  3474               	retlw	116
  4569  0934  3432               	retlw	50
  4570  0935  3420               	retlw	32
  4571  0936  3420               	retlw	32
  4572  0937  3420               	retlw	32
  4573  0938  3400               	retlw	0
  4574                           
  4575                           ;initializer for _text6
  4576  0939  3420               	retlw	32
  4577  093A  3420               	retlw	32
  4578  093B  3420               	retlw	32
  4579  093C  3420               	retlw	32
  4580  093D  3420               	retlw	32
  4581  093E  3468               	retlw	104
  4582  093F  346F               	retlw	111
  4583  0940  3477               	retlw	119
  4584  0941  3464               	retlw	100
  4585  0942  3479               	retlw	121
  4586  0943  3420               	retlw	32
  4587  0944  3420               	retlw	32
  4588  0945  3420               	retlw	32
  4589  0946  3420               	retlw	32
  4590  0947  3420               	retlw	32
  4591  0948  3420               	retlw	32
  4592  0949  3400               	retlw	0
  4593                           
  4594                           ;initializer for _text5
  4595  094A  3420               	retlw	32
  4596  094B  3450               	retlw	80
  4597  094C  346F               	retlw	111
  4598  094D  3477               	retlw	119
  4599  094E  3465               	retlw	101
  4600  094F  3472               	retlw	114
  4601  0950  3469               	retlw	105
  4602  0951  346E               	retlw	110
  4603  0952  3467               	retlw	103
  4604  0953  3420               	retlw	32
  4605  0954  3455               	retlw	85
  4606  0955  3470               	retlw	112
  4607  0956  342E               	retlw	46
  4608  0957  342E               	retlw	46
  4609  0958  342E               	retlw	46
  4610  0959  3420               	retlw	32
  4611  095A  3400               	retlw	0
  4612                           
  4613                           ;initializer for _text7
  4614  095B  3420               	retlw	32
  4615  095C  3420               	retlw	32
  4616  095D  3420               	retlw	32
  4617  095E  3420               	retlw	32
  4618  095F  3420               	retlw	32
  4619  0960  3420               	retlw	32
  4620  0961  3420               	retlw	32
  4621  0962  3420               	retlw	32
  4622  0963  3420               	retlw	32
  4623  0964  3420               	retlw	32
  4624  0965  3420               	retlw	32
  4625  0966  3420               	retlw	32
  4626  0967  3420               	retlw	32
  4627  0968  3420               	retlw	32
  4628  0969  3420               	retlw	32
  4629  096A  3420               	retlw	32
  4630  096B  3400               	retlw	0
  4631                           
  4632                           	psect	idataBANK3
  4633  08B6                     __pidataBANK3:
  4634                           
  4635                           ;initializer for _text11
  4636  08B6  3420               	retlw	32
  4637  08B7  3420               	retlw	32
  4638  08B8  3454               	retlw	84
  4639  08B9  3465               	retlw	101
  4640  08BA  346D               	retlw	109
  4641  08BB  3470               	retlw	112
  4642  08BC  3420               	retlw	32
  4643  08BD  3420               	retlw	32
  4644  08BE  3443               	retlw	67
  4645  08BF  3420               	retlw	32
  4646  08C0  3420               	retlw	32
  4647  08C1  3420               	retlw	32
  4648  08C2  3420               	retlw	32
  4649  08C3  3420               	retlw	32
  4650  08C4  3420               	retlw	32
  4651  08C5  3420               	retlw	32
  4652  08C6  3400               	retlw	0
  4653                           
  4654                           ;initializer for _text2
  4655  08C7  3420               	retlw	32
  4656  08C8  3420               	retlw	32
  4657  08C9  3445               	retlw	69
  4658  08CA  346E               	retlw	110
  4659  08CB  3467               	retlw	103
  4660  08CC  3469               	retlw	105
  4661  08CD  346E               	retlw	110
  4662  08CE  3465               	retlw	101
  4663  08CF  3465               	retlw	101
  4664  08D0  3472               	retlw	114
  4665  08D1  3469               	retlw	105
  4666  08D2  346E               	retlw	110
  4667  08D3  3467               	retlw	103
  4668  08D4  3420               	retlw	32
  4669  08D5  3420               	retlw	32
  4670  08D6  3420               	retlw	32
  4671  08D7  3400               	retlw	0
  4672                           
  4673                           ;initializer for _text1
  4674  08D8  3420               	retlw	32
  4675  08D9  3420               	retlw	32
  4676  08DA  3420               	retlw	32
  4677  08DB  3420               	retlw	32
  4678  08DC  346A               	retlw	106
  4679  08DD  346F               	retlw	111
  4680  08DE  3468               	retlw	104
  4681  08DF  346E               	retlw	110
  4682  08E0  3473               	retlw	115
  4683  08E1  347A               	retlw	122
  4684  08E2  3479               	retlw	121
  4685  08E3  3420               	retlw	32
  4686  08E4  3420               	retlw	32
  4687  08E5  3420               	retlw	32
  4688  08E6  3420               	retlw	32
  4689  08E7  3420               	retlw	32
  4690  08E8  3400               	retlw	0
  4691                           
  4692                           	psect	idataBANK4
  4693  0883                     __pidataBANK4:
  4694                           
  4695                           ;initializer for _text8
  4696  0883  3420               	retlw	32
  4697  0884  3420               	retlw	32
  4698  0885  3447               	retlw	71
  4699  0886  3472               	retlw	114
  4700  0887  3465               	retlw	101
  4701  0888  3465               	retlw	101
  4702  0889  346E               	retlw	110
  4703  088A  3420               	retlw	32
  4704  088B  3442               	retlw	66
  4705  088C  3475               	retlw	117
  4706  088D  3474               	retlw	116
  4707  088E  3474               	retlw	116
  4708  088F  346F               	retlw	111
  4709  0890  346E               	retlw	110
  4710  0891  3420               	retlw	32
  4711  0892  3420               	retlw	32
  4712  0893  3400               	retlw	0
  4713                           
  4714                           ;initializer for _text4
  4715  0894  3420               	retlw	32
  4716  0895  344F               	retlw	79
  4717  0896  346E               	retlw	110
  4718  0897  3465               	retlw	101
  4719  0898  3420               	retlw	32
  4720  0899  344D               	retlw	77
  4721  089A  346F               	retlw	111
  4722  089B  346D               	retlw	109
  4723  089C  3465               	retlw	101
  4724  089D  346E               	retlw	110
  4725  089E  3474               	retlw	116
  4726  089F  342E               	retlw	46
  4727  08A0  342E               	retlw	46
  4728  08A1  342E               	retlw	46
  4729  08A2  3420               	retlw	32
  4730  08A3  3420               	retlw	32
  4731  08A4  3400               	retlw	0
  4732                           
  4733                           ;initializer for _text3
  4734  08A5  3420               	retlw	32
  4735  08A6  3420               	retlw	32
  4736  08A7  3420               	retlw	32
  4737  08A8  3457               	retlw	87
  4738  08A9  3461               	retlw	97
  4739  08AA  3472               	retlw	114
  4740  08AB  346D               	retlw	109
  4741  08AC  3469               	retlw	105
  4742  08AD  346E               	retlw	110
  4743  08AE  3467               	retlw	103
  4744  08AF  3420               	retlw	32
  4745  08B0  3420               	retlw	32
  4746  08B1  3455               	retlw	85
  4747  08B2  3470               	retlw	112
  4748  08B3  3420               	retlw	32
  4749  08B4  3420               	retlw	32
  4750  08B5  3400               	retlw	0
  4751  000B                     _INTCONbits	set	11
  4752  0011                     _PIR2bits	set	17
  4753  001B                     _PR2	set	27
  4754  001A                     _TMR2	set	26
  4755  001C                     _T2CONbits	set	28
  4756  001F                     _T2RSTbits	set	31
  4757  001D                     _T2HLTbits	set	29
  4758  0010                     _PIR1bits	set	16
  4759  001A                     _T2TMR	set	26
  4760  001B                     _T2PR	set	27
  4761  001F                     _T2RST	set	31
  4762  001D                     _T2HLT	set	29
  4763  001E                     _T2CLKCON	set	30
  4764  001C                     _T2CON	set	28
  4765  005F                     _GIE	set	95
  4766  0091                     _PIE2bits	set	145
  4767  009D                     _ADCON0bits	set	157
  4768  009C                     _ADRESH	set	156
  4769  009B                     _ADRESL	set	155
  4770  009F                     _ADCON2	set	159
  4771  009E                     _ADCON1	set	158
  4772  009D                     _ADCON0	set	157
  4773  0095                     _OPTION_REGbits	set	149
  4774  008E                     _TRISC	set	142
  4775  008D                     _TRISB	set	141
  4776  008C                     _TRISA	set	140
  4777  0098                     _OSCTUNE	set	152
  4778  0099                     _OSCCON	set	153
  4779  010E                     _LATC	set	270
  4780  010D                     _LATB	set	269
  4781  010C                     _LATA	set	268
  4782  0877                     _LATC7	set	2167
  4783  086F                     _LATB7	set	2159
  4784  0876                     _LATC6	set	2166
  4785  018C                     _ANSELA	set	396
  4786  018D                     _ANSELB	set	397
  4787  018E                     _ANSELC	set	398
  4788  0211                     _SSPBUF	set	529
  4789  0214                     _SSP1STATbits	set	532
  4790  0211                     _SSP1BUF	set	529
  4791  020E                     _WPUC	set	526
  4792  020C                     _WPUA	set	524
  4793  020D                     _WPUB	set	525
  4794  0212                     _SSP1ADD	set	530
  4795  0215                     _SSP1CON1	set	533
  4796  0214                     _SSP1STAT	set	532
  4797  10A0                     _BF	set	4256
  4798  029E                     _CCPTMRSbits	set	670
  4799  028E                     _ODCONC	set	654
  4800  028D                     _ODCONB	set	653
  4801  028C                     _ODCONA	set	652
  4802  0414                     _PR4	set	1044
  4803  0413                     _TMR4	set	1043
  4804  0415                     _T4CONbits	set	1045
  4805  0418                     _T4RSTbits	set	1048
  4806  0416                     _T4HLTbits	set	1046
  4807  0413                     _T4TMR	set	1043
  4808  0414                     _T4PR	set	1044
  4809  0418                     _T4RST	set	1048
  4810  0416                     _T4HLT	set	1046
  4811  0417                     _T4CLKCON	set	1047
  4812  0415                     _T4CON	set	1045
  4813  061A                     _PWM4DCL	set	1562
  4814  061B                     _PWM4DCH	set	1563
  4815  061C                     _PWM4CON	set	1564
  4816  0617                     _PWM3DCL	set	1559
  4817  0618                     _PWM3DCH	set	1560
  4818  0619                     _PWM3CON	set	1561
  4819  0E1B                     _T4PPS	set	3611
  4820  0E20                     _SSPCLKPPS	set	3616
  4821  0E21                     _SSPDATPPS	set	3617
  4822  0E18                     _T2PPS	set	3608
  4823  0E0F                     _PPSLOCKbits	set	3599
  4824  0E0F                     _PPSLOCK	set	3599
  4825  0EA1                     _RC1PPS	set	3745
  4826  0E9D                     _RB5PPS	set	3741
  4827  0E9E                     _RB6PPS	set	3742
  4828  0EA0                     _RC0PPS	set	3744
  4829                           
  4830                           	psect	stringtext1
  4831  1800                     __pstringtext1:
  4832  1800                     STR_3:
  4833  1800  3420               	retlw	32	;' '
  4834  1801  3420               	retlw	32	;' '
  4835  1802  3425               	retlw	37	;'%'
  4836  1803  3464               	retlw	100	;'d'
  4837  1804  3420               	retlw	32	;' '
  4838  1805  3420               	retlw	32	;' '
  4839  1806  3420               	retlw	32	;' '
  4840  1807  3425               	retlw	37	;'%'
  4841  1808  3464               	retlw	100	;'d'
  4842  1809  3420               	retlw	32	;' '
  4843  180A  3420               	retlw	32	;' '
  4844  180B  3420               	retlw	32	;' '
  4845  180C  3425               	retlw	37	;'%'
  4846  180D  3464               	retlw	100	;'d'
  4847  180E  3420               	retlw	32	;' '
  4848  180F  3420               	retlw	32	;' '
  4849  1810  3420               	retlw	32	;' '
  4850  1811  3425               	retlw	37	;'%'
  4851  1812  3464               	retlw	100	;'d'
  4852  1813  3420               	retlw	32	;' '
  4853  1814  3420               	retlw	32	;' '
  4854  1815  3420               	retlw	32	;' '
  4855  1816  340A               	retlw	10
  4856  1817  3400               	retlw	0
  4857                           
  4858                           	psect	stringtext2
  4859  1818                     __pstringtext2:
  4860  1818                     STR_2:
  4861  1818  3464               	retlw	100	;'d'
  4862  1819  3469               	retlw	105	;'i'
  4863  181A  3467               	retlw	103	;'g'
  4864  181B  3431               	retlw	49	;'1'
  4865  181C  3420               	retlw	32	;' '
  4866  181D  3464               	retlw	100	;'d'
  4867  181E  3469               	retlw	105	;'i'
  4868  181F  3467               	retlw	103	;'g'
  4869  1820  3432               	retlw	50	;'2'
  4870  1821  3420               	retlw	32	;' '
  4871  1822  3464               	retlw	100	;'d'
  4872  1823  3469               	retlw	105	;'i'
  4873  1824  3467               	retlw	103	;'g'
  4874  1825  3433               	retlw	51	;'3'
  4875  1826  3420               	retlw	32	;' '
  4876  1827  3464               	retlw	100	;'d'
  4877  1828  3469               	retlw	105	;'i'
  4878  1829  3467               	retlw	103	;'g'
  4879  182A  3434               	retlw	52	;'4'
  4880  182B  340A               	retlw	10
  4881  182C  3400               	retlw	0
  4882                           
  4883                           	psect	stringtext3
  4884  182D                     __pstringtext3:
  4885  182D                     STR_1:
  4886  182D  346E               	retlw	110	;'n'
  4887  182E  3475               	retlw	117	;'u'
  4888  182F  346D               	retlw	109	;'m'
  4889  1830  343D               	retlw	61	;'='
  4890  1831  3420               	retlw	32	;' '
  4891  1832  3425               	retlw	37	;'%'
  4892  1833  3464               	retlw	100	;'d'
  4893  1834  340A               	retlw	10
  4894  1835  3400               	retlw	0
  4895                           
  4896                           	psect	stringtext4
  4897  0000                     __pstringtext4:
  4898                           
  4899                           	psect	cinit
  4900  001B                     start_initialization:	
  4901                           ; #config settings
  4902                           
  4903  001B                     __initialization:
  4904                           
  4905                           ; Initialize objects allocated to BANK1
  4906  001B  30FD               	movlw	low __pidataBANK1
  4907  001C  0084               	movwf	4
  4908  001D  3096               	movlw	(high __pidataBANK1)| (0+128)
  4909  001E  0085               	movwf	5
  4910  001F  30DB               	movlw	low __pdataBANK1
  4911  0020  0086               	movwf	6
  4912  0021  3000               	movlw	high __pdataBANK1
  4913  0022  0087               	movwf	7
  4914  0023  3011               	movlw	17
  4915  0024  3188  2001  3180   	fcall	init_ram
  4916                           
  4917                           ; Initialize objects allocated to BANK2
  4918  0027  3028               	movlw	low __pidataBANK2
  4919  0028  0084               	movwf	4
  4920  0029  3089               	movlw	(high __pidataBANK2)| (0+128)
  4921  002A  0085               	movwf	5
  4922  002B  3020               	movlw	low __pdataBANK2
  4923  002C  0086               	movwf	6
  4924  002D  3001               	movlw	high __pdataBANK2
  4925  002E  0087               	movwf	7
  4926  002F  3044               	movlw	68
  4927  0030  3188  2001  3180   	fcall	init_ram
  4928                           
  4929                           ; Initialize objects allocated to BANK3
  4930  0033  30B6               	movlw	low __pidataBANK3
  4931  0034  0084               	movwf	4
  4932  0035  3088               	movlw	(high __pidataBANK3)| (0+128)
  4933  0036  0085               	movwf	5
  4934  0037  30A0               	movlw	low __pdataBANK3
  4935  0038  0086               	movwf	6
  4936  0039  3001               	movlw	high __pdataBANK3
  4937  003A  0087               	movwf	7
  4938  003B  3033               	movlw	51
  4939  003C  3188  2001  3180   	fcall	init_ram
  4940                           
  4941                           ; Initialize objects allocated to BANK4
  4942  003F  3083               	movlw	low __pidataBANK4
  4943  0040  0084               	movwf	4
  4944  0041  3088               	movlw	(high __pidataBANK4)| (0+128)
  4945  0042  0085               	movwf	5
  4946  0043  3020               	movlw	low __pdataBANK4
  4947  0044  0086               	movwf	6
  4948  0045  3002               	movlw	high __pdataBANK4
  4949  0046  0087               	movwf	7
  4950  0047  3033               	movlw	51
  4951  0048  3188  2001  3180   	fcall	init_ram
  4952                           
  4953                           ; Clear objects allocated to BANK1
  4954  004B  30C3               	movlw	low __pbssBANK1
  4955  004C  0084               	movwf	4
  4956  004D  3000               	movlw	high __pbssBANK1
  4957  004E  0085               	movwf	5
  4958  004F  3018               	movlw	24
  4959  0050  3196  26AA  3180   	fcall	clear_ram0
  4960                           
  4961                           ; Clear objects allocated to BANK3
  4962  0053  30D3               	movlw	low __pbssBANK3
  4963  0054  0084               	movwf	4
  4964  0055  3001               	movlw	high __pbssBANK3
  4965  0056  0085               	movwf	5
  4966  0057  3010               	movlw	16
  4967  0058  3196  26AA  3180   	fcall	clear_ram0
  4968                           
  4969                           ; Clear objects allocated to BANK5
  4970  005B  30A0               	movlw	low __pbssBANK5
  4971  005C  0084               	movwf	4
  4972  005D  3002               	movlw	high __pbssBANK5
  4973  005E  0085               	movwf	5
  4974  005F  3020               	movlw	32
  4975  0060  3196  26AA  3180   	fcall	clear_ram0
  4976  0063                     end_of_initialization:	
  4977                           ;End of C runtime variable initialization code
  4978                           
  4979  0063                     __end_of__initialization:
  4980  0063  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4981  0064  0020               	movlb	0
  4982  0065  3180  2867         	ljmp	_main	;jump to C main() function
  4983                           
  4984                           	psect	bssBANK1
  4985  00C3                     __pbssBANK1:
  4986  00C3                     _temp_float:
  4987  00C3                     	ds	4
  4988  00C7                     _TC_data:
  4989  00C7                     	ds	4
  4990  00CB                     _milliTime:
  4991  00CB                     	ds	4
  4992  00CF                     _nout:
  4993  00CF                     	ds	2
  4994  00D1                     _width:
  4995  00D1                     	ds	2
  4996  00D3                     _prec:
  4997  00D3                     	ds	2
  4998  00D5                     _flags:
  4999  00D5                     	ds	2
  5000  00D7                     _TMR4_InterruptHandler:
  5001  00D7                     	ds	2
  5002  00D9                     _byteVal:
  5003  00D9                     	ds	1
  5004  00DA                     _dummy:
  5005  00DA                     	ds	1
  5006                           
  5007                           	psect	dataBANK1
  5008  00DB                     __pdataBANK1:
  5009  00DB                     _text10:
  5010  00DB                     	ds	17
  5011                           
  5012                           	psect	dataBANK2
  5013  0120                     __pdataBANK2:
  5014  0120                     _text9:
  5015  0120                     	ds	17
  5016  0131                     _text6:
  5017  0131                     	ds	17
  5018  0142                     _text5:
  5019  0142                     	ds	17
  5020  0153                     _text7:
  5021  0153                     	ds	17
  5022                           
  5023                           	psect	bssBANK3
  5024  01D3                     __pbssBANK3:
  5025  01D3                     _text12:
  5026  01D3                     	ds	16
  5027                           
  5028                           	psect	dataBANK3
  5029  01A0                     __pdataBANK3:
  5030  01A0                     _text11:
  5031  01A0                     	ds	17
  5032  01B1                     _text2:
  5033  01B1                     	ds	17
  5034  01C2                     _text1:
  5035  01C2                     	ds	17
  5036                           
  5037                           	psect	dataBANK4
  5038  0220                     __pdataBANK4:
  5039  0220                     _text8:
  5040  0220                     	ds	17
  5041  0231                     _text4:
  5042  0231                     	ds	17
  5043  0242                     _text3:
  5044  0242                     	ds	17
  5045                           
  5046                           	psect	bssBANK5
  5047  02A0                     __pbssBANK5:
  5048  02A0                     _dbuf:
  5049  02A0                     	ds	32
  5050                           
  5051                           	psect	inittext
  5052  0801                     init_ram:
  5053  0801  00FE               	movwf	btemp
  5054  0802                     initloop:
  5055  0802  0012               	moviw fsr0++
  5056  0803  001E               	movwi fsr1++
  5057  0804  0BFE               	decfsz	btemp,f
  5058  0805  2802               	goto	initloop
  5059  0806  3400               	retlw	0
  5060                           
  5061                           	psect	clrtext
  5062  16AA                     clear_ram0:	
  5063                           ;	Called with FSR0 containing the base address, and
  5064                           ;	WREG with the size to clear
  5065                           
  5066  16AA  0064               	clrwdt	;clear the watchdog before getting into this loop
  5067  16AB                     clrloop0:
  5068  16AB  0180               	clrf	0	;clear RAM location pointed to by FSR
  5069  16AC  3101               	addfsr 0,1
  5070  16AD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5071  16AE  2EAB               	goto	clrloop0	;have we reached the end yet?
  5072  16AF  3400               	retlw	0	;all done for this memory range, return
  5073                           
  5074                           	psect	cstackBANK1
  5075  00A0                     __pcstackBANK1:
  5076  00A0                     	ds	2
  5077  00A2                     printf@ap:
  5078                           
  5079                           ; 1 bytes @ 0x2
  5080  00A2                     	ds	1
  5081  00A3                     ?_stuffIntToCharsBuf:
  5082  00A3                     stuffIntToCharsBuf@num:	
  5083                           ; 1 bytes @ 0x3
  5084                           
  5085                           
  5086                           ; 2 bytes @ 0x3
  5087  00A3                     	ds	2
  5088  00A5                     stuffIntToCharsBuf@buf:
  5089                           
  5090                           ; 1 bytes @ 0x5
  5091  00A5                     	ds	1
  5092  00A6                     stuffIntToCharsBuf@pos:
  5093                           
  5094                           ; 2 bytes @ 0x6
  5095  00A6                     	ds	2
  5096  00A8                     ??_stuffIntToCharsBuf:
  5097                           
  5098                           ; 1 bytes @ 0x8
  5099  00A8                     	ds	3
  5100  00AB                     stuffIntToCharsBuf@dig4:
  5101                           
  5102                           ; 2 bytes @ 0xB
  5103  00AB                     	ds	2
  5104  00AD                     stuffIntToCharsBuf@dig1:
  5105                           
  5106                           ; 2 bytes @ 0xD
  5107  00AD                     	ds	2
  5108  00AF                     stuffIntToCharsBuf@dig2:
  5109                           
  5110                           ; 2 bytes @ 0xF
  5111  00AF                     	ds	2
  5112  00B1                     stuffIntToCharsBuf@dig3:
  5113                           
  5114                           ; 2 bytes @ 0x11
  5115  00B1                     	ds	2
  5116  00B3                     stuffIntToCharsBuf@neg:
  5117                           
  5118                           ; 2 bytes @ 0x13
  5119  00B3                     	ds	2
  5120  00B5                     ??_main:
  5121                           
  5122                           ; 1 bytes @ 0x15
  5123  00B5                     	ds	4
  5124  00B9                     main@upper16:
  5125                           
  5126                           ; 2 bytes @ 0x19
  5127  00B9                     	ds	2
  5128  00BB                     main@lower16:
  5129                           
  5130                           ; 2 bytes @ 0x1B
  5131  00BB                     	ds	2
  5132  00BD                     main@adc_value0:
  5133                           
  5134                           ; 2 bytes @ 0x1D
  5135  00BD                     	ds	2
  5136  00BF                     main@adc_value1:
  5137                           
  5138                           ; 2 bytes @ 0x1F
  5139  00BF                     	ds	2
  5140  00C1                     main@i:
  5141                           
  5142                           ; 2 bytes @ 0x21
  5143  00C1                     	ds	2
  5144                           
  5145                           	psect	cstackCOMMON
  5146  0070                     __pcstackCOMMON:
  5147  0070                     ?_PIN_MANAGER_Initialize:
  5148  0070                     ??_PIN_MANAGER_Initialize:	
  5149                           ; 1 bytes @ 0x0
  5150                           
  5151  0070                     ?_OSCILLATOR_Initialize:	
  5152                           ; 1 bytes @ 0x0
  5153                           
  5154  0070                     ??_OSCILLATOR_Initialize:	
  5155                           ; 1 bytes @ 0x0
  5156                           
  5157  0070                     ?_SPI_Initialize:	
  5158                           ; 1 bytes @ 0x0
  5159                           
  5160  0070                     ??_SPI_Initialize:	
  5161                           ; 1 bytes @ 0x0
  5162                           
  5163  0070                     ?_initDisplay:	
  5164                           ; 1 bytes @ 0x0
  5165                           
  5166  0070                     ?_ADC_Initialize:	
  5167                           ; 1 bytes @ 0x0
  5168                           
  5169  0070                     ??_ADC_Initialize:	
  5170                           ; 1 bytes @ 0x0
  5171                           
  5172  0070                     ?_PWM4_Initialize:	
  5173                           ; 1 bytes @ 0x0
  5174                           
  5175  0070                     ??_PWM4_Initialize:	
  5176                           ; 1 bytes @ 0x0
  5177                           
  5178  0070                     ?_TMR4_Initialize:	
  5179                           ; 1 bytes @ 0x0
  5180                           
  5181  0070                     ?_PWM3_Initialize:	
  5182                           ; 1 bytes @ 0x0
  5183                           
  5184  0070                     ??_PWM3_Initialize:	
  5185                           ; 1 bytes @ 0x0
  5186                           
  5187  0070                     ?_TMR2_Initialize:	
  5188                           ; 1 bytes @ 0x0
  5189                           
  5190  0070                     ??_TMR2_Initialize:	
  5191                           ; 1 bytes @ 0x0
  5192                           
  5193  0070                     ?_TMR2_Start:	
  5194                           ; 1 bytes @ 0x0
  5195                           
  5196  0070                     ??_TMR2_Start:	
  5197                           ; 1 bytes @ 0x0
  5198                           
  5199  0070                     ?_command:	
  5200                           ; 1 bytes @ 0x0
  5201                           
  5202  0070                     ?_dataCMD:	
  5203                           ; 1 bytes @ 0x0
  5204                           
  5205  0070                     ?_initOLED:	
  5206                           ; 1 bytes @ 0x0
  5207                           
  5208  0070                     ?_TMR4_SetInterruptHandler:	
  5209                           ; 1 bytes @ 0x0
  5210                           
  5211  0070                     ?_TMR4_DefaultInterruptHandler:	
  5212                           ; 1 bytes @ 0x0
  5213                           
  5214  0070                     ??_TMR4_DefaultInterruptHandler:	
  5215                           ; 1 bytes @ 0x0
  5216                           
  5217  0070                     ?_TMR4_Start:	
  5218                           ; 1 bytes @ 0x0
  5219                           
  5220  0070                     ??_TMR4_Start:	
  5221                           ; 1 bytes @ 0x0
  5222                           
  5223  0070                     ?_TMR4_CallBack:	
  5224                           ; 1 bytes @ 0x0
  5225                           
  5226  0070                     ??_TMR4_CallBack:	
  5227                           ; 1 bytes @ 0x0
  5228                           
  5229  0070                     ?_putch:	
  5230                           ; 1 bytes @ 0x0
  5231                           
  5232  0070                     ??_putch:	
  5233                           ; 1 bytes @ 0x0
  5234                           
  5235  0070                     ?_SYSTEM_Initialize:	
  5236                           ; 1 bytes @ 0x0
  5237                           
  5238  0070                     ?_PWM3_LoadDutyValue:	
  5239                           ; 1 bytes @ 0x0
  5240                           
  5241  0070                     ?_PWM4_LoadDutyValue:	
  5242                           ; 1 bytes @ 0x0
  5243                           
  5244  0070                     ?_main:	
  5245                           ; 1 bytes @ 0x0
  5246                           
  5247  0070                     ?_spi_transfer:	
  5248                           ; 1 bytes @ 0x0
  5249                           
  5250  0070                     ??_spi_transfer:	
  5251                           ; 1 bytes @ 0x0
  5252                           
  5253  0070                     ?_spi_write:	
  5254                           ; 1 bytes @ 0x0
  5255                           
  5256  0070                     ??_spi_write:	
  5257                           ; 1 bytes @ 0x0
  5258                           
  5259  0070                     ?_TMR4_ISR:	
  5260                           ; 1 bytes @ 0x0
  5261                           
  5262  0070                     ??_TMR4_ISR:	
  5263                           ; 1 bytes @ 0x0
  5264                           
  5265  0070                     ?_INTERRUPT_InterruptManager:	
  5266                           ; 1 bytes @ 0x0
  5267                           
  5268  0070                     ??_INTERRUPT_InterruptManager:	
  5269                           ; 1 bytes @ 0x0
  5270                           
  5271  0070                     ??___aodiv:	
  5272                           ; 1 bytes @ 0x0
  5273                           
  5274  0070                     ??___aomod:	
  5275                           ; 1 bytes @ 0x0
  5276                           
  5277  0070                     ?_fputc:	
  5278                           ; 1 bytes @ 0x0
  5279                           
  5280  0070                     ?_strlen:	
  5281                           ; 2 bytes @ 0x0
  5282                           
  5283  0070                     ?_ADC_GetConversion:	
  5284                           ; 2 bytes @ 0x0
  5285                           
  5286  0070                     ?___wmul:	
  5287                           ; 2 bytes @ 0x0
  5288                           
  5289  0070                     ?___awdiv:	
  5290                           ; 2 bytes @ 0x0
  5291                           
  5292  0070                     ?___fltol:	
  5293                           ; 2 bytes @ 0x0
  5294                           
  5295  0070                     ?___xxtofl:	
  5296                           ; 4 bytes @ 0x0
  5297                           
  5298  0070                     PIN_MANAGER_Initialize@state:	
  5299                           ; 4 bytes @ 0x0
  5300                           
  5301  0070                     spi_transfer@data:	
  5302                           ; 1 bytes @ 0x0
  5303                           
  5304  0070                     putch@c:	
  5305                           ; 1 bytes @ 0x0
  5306                           
  5307  0070                     PWM3_LoadDutyValue@dutyValue:	
  5308                           ; 1 bytes @ 0x0
  5309                           
  5310  0070                     PWM4_LoadDutyValue@dutyValue:	
  5311                           ; 2 bytes @ 0x0
  5312                           
  5313  0070                     TMR4_SetInterruptHandler@InterruptHandler:	
  5314                           ; 2 bytes @ 0x0
  5315                           
  5316  0070                     ___wmul@multiplier:	
  5317                           ; 2 bytes @ 0x0
  5318                           
  5319  0070                     ___awdiv@divisor:	
  5320                           ; 2 bytes @ 0x0
  5321                           
  5322  0070                     fputc@c:	
  5323                           ; 2 bytes @ 0x0
  5324                           
  5325  0070                     ___fltol@f1:	
  5326                           ; 2 bytes @ 0x0
  5327                           
  5328  0070                     ___xxtofl@val:	
  5329                           ; 4 bytes @ 0x0
  5330                           
  5331                           
  5332                           ; 4 bytes @ 0x0
  5333  0070                     	ds	1
  5334  0071                     ?_spi_read_32bits:
  5335  0071                     spi_write@spiByte:	
  5336                           ; 4 bytes @ 0x1
  5337                           
  5338  0071                     ___aodiv@counter:	
  5339                           ; 1 bytes @ 0x1
  5340                           
  5341  0071                     ___aomod@counter:	
  5342                           ; 1 bytes @ 0x1
  5343                           
  5344                           
  5345                           ; 1 bytes @ 0x1
  5346  0071                     	ds	1
  5347  0072                     ??_TMR4_Initialize:
  5348  0072                     ??_command:	
  5349                           ; 1 bytes @ 0x2
  5350                           
  5351  0072                     ??_dataCMD:	
  5352                           ; 1 bytes @ 0x2
  5353                           
  5354  0072                     ??_TMR4_SetInterruptHandler:	
  5355                           ; 1 bytes @ 0x2
  5356                           
  5357  0072                     ??_strlen:	
  5358                           ; 1 bytes @ 0x2
  5359                           
  5360  0072                     ??_ADC_GetConversion:	
  5361                           ; 1 bytes @ 0x2
  5362                           
  5363  0072                     ??_PWM3_LoadDutyValue:	
  5364                           ; 1 bytes @ 0x2
  5365                           
  5366  0072                     ??_PWM4_LoadDutyValue:	
  5367                           ; 1 bytes @ 0x2
  5368                           
  5369  0072                     ___aodiv@sign:	
  5370                           ; 1 bytes @ 0x2
  5371                           
  5372  0072                     ___aomod@sign:	
  5373                           ; 1 bytes @ 0x2
  5374                           
  5375  0072                     fputc@fp:	
  5376                           ; 1 bytes @ 0x2
  5377                           
  5378  0072                     ___wmul@multiplicand:	
  5379                           ; 1 bytes @ 0x2
  5380                           
  5381  0072                     ___awdiv@dividend:	
  5382                           ; 2 bytes @ 0x2
  5383                           
  5384                           
  5385                           ; 2 bytes @ 0x2
  5386  0072                     	ds	1
  5387  0073                     ??_fputc:
  5388  0073                     ?_abs:	
  5389                           ; 1 bytes @ 0x3
  5390                           
  5391  0073                     ADC_GetConversion@channel:	
  5392                           ; 2 bytes @ 0x3
  5393                           
  5394  0073                     strlen@a:	
  5395                           ; 1 bytes @ 0x3
  5396                           
  5397  0073                     abs@a:	
  5398                           ; 1 bytes @ 0x3
  5399                           
  5400  0073                     ___aodiv@quotient:	
  5401                           ; 2 bytes @ 0x3
  5402                           
  5403                           
  5404                           ; 8 bytes @ 0x3
  5405  0073                     	ds	1
  5406  0074                     ?_setMotorSpeed:
  5407  0074                     ??___wmul:	
  5408                           ; 1 bytes @ 0x4
  5409                           
  5410  0074                     ??___awdiv:	
  5411                           ; 1 bytes @ 0x4
  5412                           
  5413  0074                     ??___fltol:	
  5414                           ; 1 bytes @ 0x4
  5415                           
  5416  0074                     ??___xxtofl:	
  5417                           ; 1 bytes @ 0x4
  5418                           
  5419  0074                     command@bit0:	
  5420                           ; 1 bytes @ 0x4
  5421                           
  5422  0074                     dataCMD@bit0:	
  5423                           ; 1 bytes @ 0x4
  5424                           
  5425  0074                     strlen@s:	
  5426                           ; 1 bytes @ 0x4
  5427                           
  5428  0074                     setMotorSpeed@num:	
  5429                           ; 1 bytes @ 0x4
  5430                           
  5431  0074                     ___wmul@product:	
  5432                           ; 2 bytes @ 0x4
  5433                           
  5434                           
  5435                           ; 2 bytes @ 0x4
  5436  0074                     	ds	1
  5437  0075                     ??_spi_read_32bits:
  5438  0075                     ??_abs:	
  5439                           ; 1 bytes @ 0x5
  5440                           
  5441  0075                     command@s:	
  5442                           ; 1 bytes @ 0x5
  5443                           
  5444  0075                     dataCMD@s:	
  5445                           ; 1 bytes @ 0x5
  5446                           
  5447  0075                     ___awdiv@counter:	
  5448                           ; 1 bytes @ 0x5
  5449                           
  5450                           
  5451                           ; 1 bytes @ 0x5
  5452  0075                     	ds	1
  5453  0076                     ___awdiv@sign:
  5454  0076                     setMotorSpeed@motorNum:	
  5455                           ; 1 bytes @ 0x6
  5456                           
  5457  0076                     command@i:	
  5458                           ; 2 bytes @ 0x6
  5459                           
  5460  0076                     dataCMD@i:	
  5461                           ; 2 bytes @ 0x6
  5462                           
  5463                           
  5464                           ; 2 bytes @ 0x6
  5465  0076                     	ds	1
  5466  0077                     ___awdiv@quotient:
  5467                           
  5468                           ; 2 bytes @ 0x7
  5469  0077                     	ds	1
  5470  0078                     ??_setMotorSpeed:
  5471  0078                     ?_fputs:	
  5472                           ; 1 bytes @ 0x8
  5473                           
  5474  0078                     command@sendByte:	
  5475                           ; 2 bytes @ 0x8
  5476                           
  5477  0078                     dataCMD@sendByte:	
  5478                           ; 1 bytes @ 0x8
  5479                           
  5480  0078                     ___xxtofl@sign:	
  5481                           ; 1 bytes @ 0x8
  5482                           
  5483  0078                     fputs@fp:	
  5484                           ; 1 bytes @ 0x8
  5485                           
  5486                           
  5487                           ; 1 bytes @ 0x8
  5488  0078                     	ds	1
  5489  0079                     ?_printByteValue:
  5490  0079                     ??_initOLED:	
  5491                           ; 1 bytes @ 0x9
  5492                           
  5493  0079                     ??_fputs:	
  5494                           ; 1 bytes @ 0x9
  5495                           
  5496  0079                     printByteValue@byteVal:	
  5497                           ; 1 bytes @ 0x9
  5498                           
  5499  0079                     ___fltol@sign1:	
  5500                           ; 1 bytes @ 0x9
  5501                           
  5502  0079                     ___xxtofl@exp:	
  5503                           ; 1 bytes @ 0x9
  5504                           
  5505                           
  5506                           ; 1 bytes @ 0x9
  5507  0079                     	ds	1
  5508  007A                     ___fltol@exp1:
  5509  007A                     printByteValue@pos:	
  5510                           ; 1 bytes @ 0xA
  5511                           
  5512  007A                     ___xxtofl@arg:	
  5513                           ; 2 bytes @ 0xA
  5514                           
  5515                           
  5516                           ; 4 bytes @ 0xA
  5517  007A                     	ds	1
  5518  007B                     ??_initDisplay:
  5519                           
  5520                           ; 1 bytes @ 0xB
  5521  007B                     	ds	1
  5522  007C                     ??_printByteValue:
  5523  007C                     ??_pad:	
  5524                           ; 1 bytes @ 0xC
  5525                           
  5526  007C                     initDisplay@i:	
  5527                           ; 1 bytes @ 0xC
  5528                           
  5529                           
  5530                           ; 2 bytes @ 0xC
  5531  007C                     	ds	1
  5532  007D                     ??_printf:
  5533                           
  5534                           ; 1 bytes @ 0xD
  5535  007D                     	ds	1
  5536  007E                     ??_convert14BitToFloat:
  5537  007E                     ??_SYSTEM_Initialize:	
  5538                           ; 1 bytes @ 0xE
  5539                           
  5540                           
  5541                           	psect	cstackBANK0
  5542  0020                     __pcstackBANK0:	
  5543                           ; 1 bytes @ 0xE
  5544                           
  5545  0020                     ?___fldiv:
  5546  0020                     ?___aodiv:	
  5547                           ; 4 bytes @ 0x0
  5548                           
  5549  0020                     ?___aomod:	
  5550                           ; 8 bytes @ 0x0
  5551                           
  5552  0020                     printByteValue@lowerBits:	
  5553                           ; 8 bytes @ 0x0
  5554                           
  5555  0020                     spi_read_32bits@byte:	
  5556                           ; 1 bytes @ 0x0
  5557                           
  5558  0020                     fputs@c:	
  5559                           ; 1 bytes @ 0x0
  5560                           
  5561  0020                     ___fldiv@a:	
  5562                           ; 1 bytes @ 0x0
  5563                           
  5564  0020                     ___aodiv@divisor:	
  5565                           ; 4 bytes @ 0x0
  5566                           
  5567  0020                     ___aomod@divisor:	
  5568                           ; 8 bytes @ 0x0
  5569                           
  5570                           
  5571                           ; 8 bytes @ 0x0
  5572  0020                     	ds	1
  5573  0021                     printByteValue@upperBits:
  5574  0021                     fputs@i:	
  5575                           ; 1 bytes @ 0x1
  5576                           
  5577  0021                     spi_read_32bits@result:	
  5578                           ; 2 bytes @ 0x1
  5579                           
  5580                           
  5581                           ; 4 bytes @ 0x1
  5582  0021                     	ds	1
  5583  0022                     printByteValue@s:
  5584                           
  5585                           ; 1 bytes @ 0x2
  5586  0022                     	ds	1
  5587  0023                     fputs@s:
  5588  0023                     printByteValue@i:	
  5589                           ; 1 bytes @ 0x3
  5590                           
  5591                           
  5592                           ; 2 bytes @ 0x3
  5593  0023                     	ds	1
  5594  0024                     ?_pad:
  5595  0024                     pad@buf:	
  5596                           ; 2 bytes @ 0x4
  5597                           
  5598  0024                     ___fldiv@b:	
  5599                           ; 1 bytes @ 0x4
  5600                           
  5601                           
  5602                           ; 4 bytes @ 0x4
  5603  0024                     	ds	1
  5604  0025                     spi_read_32bits@i:
  5605  0025                     pad@p:	
  5606                           ; 2 bytes @ 0x5
  5607                           
  5608                           
  5609                           ; 2 bytes @ 0x5
  5610  0025                     	ds	2
  5611  0027                     pad@i:
  5612                           
  5613                           ; 2 bytes @ 0x7
  5614  0027                     	ds	1
  5615  0028                     ??___fldiv:
  5616  0028                     ___aodiv@dividend:	
  5617                           ; 1 bytes @ 0x8
  5618                           
  5619  0028                     ___aomod@dividend:	
  5620                           ; 8 bytes @ 0x8
  5621                           
  5622                           
  5623                           ; 8 bytes @ 0x8
  5624  0028                     	ds	1
  5625  0029                     pad@w:
  5626                           
  5627                           ; 2 bytes @ 0x9
  5628  0029                     	ds	2
  5629  002B                     pad@fp:
  5630                           
  5631                           ; 1 bytes @ 0xB
  5632  002B                     	ds	2
  5633  002D                     ___fldiv@rem:
  5634                           
  5635                           ; 4 bytes @ 0xD
  5636  002D                     	ds	3
  5637  0030                     ?_dtoa:
  5638  0030                     dtoa@d:	
  5639                           ; 2 bytes @ 0x10
  5640                           
  5641                           
  5642                           ; 8 bytes @ 0x10
  5643  0030                     	ds	1
  5644  0031                     ___fldiv@sign:
  5645                           
  5646                           ; 1 bytes @ 0x11
  5647  0031                     	ds	1
  5648  0032                     ___fldiv@new_exp:
  5649                           
  5650                           ; 2 bytes @ 0x12
  5651  0032                     	ds	2
  5652  0034                     ___fldiv@grs:
  5653                           
  5654                           ; 4 bytes @ 0x14
  5655  0034                     	ds	4
  5656  0038                     ??_dtoa:
  5657  0038                     ___fldiv@bexp:	
  5658                           ; 1 bytes @ 0x18
  5659                           
  5660                           
  5661                           ; 1 bytes @ 0x18
  5662  0038                     	ds	1
  5663  0039                     ___fldiv@aexp:
  5664                           
  5665                           ; 1 bytes @ 0x19
  5666  0039                     	ds	1
  5667  003A                     ?_convert14BitToFloat:
  5668  003A                     convert14BitToFloat@raw14bit:	
  5669                           ; 4 bytes @ 0x1A
  5670                           
  5671                           
  5672                           ; 2 bytes @ 0x1A
  5673  003A                     	ds	1
  5674  003B                     _dtoa$1483:
  5675                           
  5676                           ; 2 bytes @ 0x1B
  5677  003B                     	ds	2
  5678  003D                     dtoa@p:
  5679                           
  5680                           ; 2 bytes @ 0x1D
  5681  003D                     	ds	1
  5682  003E                     convert14BitToFloat@temp_Float:
  5683                           
  5684                           ; 4 bytes @ 0x1E
  5685  003E                     	ds	1
  5686  003F                     dtoa@fp:
  5687                           
  5688                           ; 1 bytes @ 0x1F
  5689  003F                     	ds	1
  5690  0040                     dtoa@w:
  5691                           
  5692                           ; 2 bytes @ 0x20
  5693  0040                     	ds	2
  5694  0042                     convert14BitToFloat@signed_int:
  5695  0042                     dtoa@s:	
  5696                           ; 2 bytes @ 0x22
  5697                           
  5698                           
  5699                           ; 2 bytes @ 0x22
  5700  0042                     	ds	2
  5701  0044                     convert14BitToFloat@raw14:
  5702  0044                     dtoa@n:	
  5703                           ; 2 bytes @ 0x24
  5704                           
  5705                           
  5706                           ; 8 bytes @ 0x24
  5707  0044                     	ds	8
  5708  004C                     dtoa@i:
  5709                           
  5710                           ; 2 bytes @ 0x2C
  5711  004C                     	ds	2
  5712  004E                     ?_vfpfcnvrt:
  5713  004E                     vfpfcnvrt@fmt:	
  5714                           ; 2 bytes @ 0x2E
  5715                           
  5716                           
  5717                           ; 1 bytes @ 0x2E
  5718  004E                     	ds	1
  5719  004F                     vfpfcnvrt@ap:
  5720                           
  5721                           ; 1 bytes @ 0x2F
  5722  004F                     	ds	1
  5723  0050                     ??_vfpfcnvrt:
  5724                           
  5725                           ; 1 bytes @ 0x30
  5726  0050                     	ds	5
  5727  0055                     vfpfcnvrt@ll:
  5728                           
  5729                           ; 8 bytes @ 0x35
  5730  0055                     	ds	8
  5731  005D                     vfpfcnvrt@fp:
  5732                           
  5733                           ; 1 bytes @ 0x3D
  5734  005D                     	ds	1
  5735  005E                     ?_vfprintf:
  5736  005E                     vfprintf@fmt:	
  5737                           ; 2 bytes @ 0x3E
  5738                           
  5739                           
  5740                           ; 2 bytes @ 0x3E
  5741  005E                     	ds	2
  5742  0060                     vfprintf@ap:
  5743                           
  5744                           ; 1 bytes @ 0x40
  5745  0060                     	ds	1
  5746  0061                     ??_vfprintf:
  5747                           
  5748                           ; 1 bytes @ 0x41
  5749  0061                     	ds	2
  5750  0063                     vfprintf@fp:
  5751                           
  5752                           ; 1 bytes @ 0x43
  5753  0063                     	ds	1
  5754  0064                     vfprintf@cfmt:
  5755                           
  5756                           ; 2 bytes @ 0x44
  5757  0064                     	ds	2
  5758  0066                     ?_printf:
  5759  0066                     printf@fmt:	
  5760                           ; 2 bytes @ 0x46
  5761                           
  5762                           
  5763                           ; 2 bytes @ 0x46
  5764  0066                     	ds	10
  5765                           
  5766                           	psect	maintext
  5767  0067                     __pmaintext:	
  5768 ;;
  5769 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  5770 ;;
  5771 ;; *************** function _main *****************
  5772 ;; Defined at:
  5773 ;;		line 113 in file "main.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;		None
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  i               2   33[BANK1 ] int 
  5778 ;;  adc_value1      2   31[BANK1 ] unsigned short 
  5779 ;;  adc_value0      2   29[BANK1 ] unsigned short 
  5780 ;;  lower16         2   27[BANK1 ] unsigned short 
  5781 ;;  upper16         2   25[BANK1 ] unsigned short 
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  1    wreg      void 
  5784 ;; Registers used:
  5785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5786 ;; Tracked objects:
  5787 ;;		On entry : B1F/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5792 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  5793 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5794 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  5795 ;;Total ram usage:       14 bytes
  5796 ;; Hardware stack levels required when called:   13
  5797 ;; This function calls:
  5798 ;;		_ADC_GetConversion
  5799 ;;		_SYSTEM_Initialize
  5800 ;;		___fltol
  5801 ;;		_command
  5802 ;;		_convert14BitToFloat
  5803 ;;		_dataCMD
  5804 ;;		_printByteValue
  5805 ;;		_setMotorSpeed
  5806 ;;		_spi_read_32bits
  5807 ;;		_stuffIntToCharsBuf
  5808 ;; This function is called by:
  5809 ;;		Startup code after reset
  5810 ;; This function uses a non-reentrant model
  5811 ;;
  5812                           
  5813                           
  5814                           ;psect for function _main
  5815  0067                     _main:
  5816  0067                     l3383:	
  5817                           ;incstack = 0
  5818                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5819                           
  5820                           
  5821                           ;main.c: 115:     _delay((unsigned long)((50)*(16000000/4000.0)));
  5822  0067  3002               	movlw	2
  5823  0068  0021               	movlb	1	; select bank1
  5824  0069  00B6               	movwf	(??_main^(0+128)+1)
  5825  006A  3004               	movlw	4
  5826  006B  00B5               	movwf	??_main^(0+128)
  5827  006C  30BA               	movlw	186
  5828  006D                     u3347:
  5829  006D  0B89               	decfsz	9,f
  5830  006E  286D               	goto	u3347
  5831  006F  0BB5               	decfsz	??_main^(0+128),f
  5832  0070  286D               	goto	u3347
  5833  0071  0BB6               	decfsz	(??_main^(0+128)+1),f
  5834  0072  286D               	goto	u3347
  5835  0073  0000               	nop
  5836  0074                     l3385:
  5837                           
  5838                           ;main.c: 117:     SYSTEM_Initialize();
  5839  0074  3197  279F  3180   	fcall	_SYSTEM_Initialize
  5840  0077                     l3387:
  5841                           
  5842                           ;main.c: 129:      _delay((unsigned long)((500)*(16000000/4000.0)));
  5843  0077  300B               	movlw	11
  5844  0078  0021               	movlb	1	; select bank1
  5845  0079  00B6               	movwf	(??_main^(0+128)+1)
  5846  007A  3026               	movlw	38
  5847  007B  00B5               	movwf	??_main^(0+128)
  5848  007C  305D               	movlw	93
  5849  007D                     u3357:
  5850  007D  0B89               	decfsz	9,f
  5851  007E  287D               	goto	u3357
  5852  007F  0BB5               	decfsz	??_main^(0+128),f
  5853  0080  287D               	goto	u3357
  5854  0081  0BB6               	decfsz	(??_main^(0+128)+1),f
  5855  0082  287D               	goto	u3357
  5856  0083  3200               	nop2
  5857  0084                     l3389:
  5858  0084                     l3391:
  5859  0084                     l3393:
  5860  0084                     l3395:
  5861  0084                     l3397:
  5862                           
  5863                           ;main.c: 151:     int i;;main.c: 152:     command(0x01);
  5864  0084  3001               	movlw	1
  5865  0085  318A  2256  3180   	fcall	_command
  5866  0088                     l3399:
  5867                           
  5868                           ;main.c: 153:     _delay((unsigned long)((2)*(16000000/4000.0)));
  5869  0088  300B               	movlw	11
  5870  0089  0021               	movlb	1	; select bank1
  5871  008A  00B5               	movwf	??_main^(0+128)
  5872  008B  3062               	movlw	98
  5873  008C                     u3367:
  5874  008C  0B89               	decfsz	9,f
  5875  008D  288C               	goto	u3367
  5876  008E  0BB5               	decfsz	??_main^(0+128),f
  5877  008F  288C               	goto	u3367
  5878  0090  0000               	nop
  5879  0091                     l3401:
  5880                           
  5881                           ;main.c: 154:     for(i=0;i<16;i++){
  5882  0091  0021               	movlb	1	; select bank1
  5883  0092  01C1               	clrf	main@i^(0+128)
  5884  0093  01C2               	clrf	(main@i+1)^(0+128)
  5885  0094                     l3407:
  5886                           
  5887                           ;main.c: 155:        dataCMD(text9[i]);
  5888  0094  0021               	movlb	1	; select bank1
  5889  0095  0841               	movf	main@i^(0+128),w
  5890  0096  3E20               	addlw	(low (_text9| (0+256)))& (0+255)
  5891  0097  0086               	movwf	6
  5892  0098  3001               	movlw	1	; select bank2/3
  5893  0099  0087               	movwf	7
  5894  009A  0801               	movf	1,w
  5895  009B  318A  22B1  3180   	fcall	_dataCMD
  5896  009E                     l3409:
  5897                           
  5898                           ;main.c: 156:     }
  5899  009E  3001               	movlw	1
  5900  009F  0021               	movlb	1	; select bank1
  5901  00A0  07C1               	addwf	main@i^(0+128),f
  5902  00A1  3000               	movlw	0
  5903  00A2  3DC2               	addwfc	(main@i+1)^(0+128),f
  5904  00A3                     l3411:
  5905  00A3  0842               	movf	(main@i+1)^(0+128),w
  5906  00A4  3A80               	xorlw	128
  5907  00A5  00B5               	movwf	??_main^(0+128)
  5908  00A6  3080               	movlw	128
  5909  00A7  0235               	subwf	??_main^(0+128),w
  5910  00A8  1D03               	skipz
  5911  00A9  28AC               	goto	u3195
  5912  00AA  3010               	movlw	16
  5913  00AB  0241               	subwf	main@i^(0+128),w
  5914  00AC                     u3195:
  5915  00AC  1C03               	skipc
  5916  00AD  28AF               	goto	u3191
  5917  00AE  28B0               	goto	u3190
  5918  00AF                     u3191:
  5919  00AF  2894               	goto	l3407
  5920  00B0                     u3190:
  5921  00B0                     l3413:
  5922                           
  5923                           ;main.c: 160:     {;main.c: 209:         adc_value0 = ADC_GetConversion(channel_AN2);
  5924  00B0  3002               	movlw	2
  5925  00B1  3197  2784  3180   	fcall	_ADC_GetConversion
  5926  00B4  0871               	movf	?_ADC_GetConversion+1,w
  5927  00B5  0021               	movlb	1	; select bank1
  5928  00B6  00BE               	movwf	(main@adc_value0+1)^(0+128)
  5929  00B7  0870               	movf	?_ADC_GetConversion,w
  5930  00B8  00BD               	movwf	main@adc_value0^(0+128)
  5931  00B9                     l3415:
  5932                           
  5933                           ;main.c: 210:         adc_value0 = adc_value0 >> 6;
  5934  00B9  083E               	movf	(main@adc_value0+1)^(0+128),w
  5935  00BA  00B6               	movwf	(??_main^(0+128)+1)
  5936  00BB  083D               	movf	main@adc_value0^(0+128),w
  5937  00BC  00B5               	movwf	??_main^(0+128)
  5938  00BD  3006               	movlw	6
  5939  00BE                     u3205:
  5940  00BE  36B6               	lsrf	(??_main^(0+128)+1),f
  5941  00BF  0CB5               	rrf	??_main^(0+128),f
  5942  00C0  0B89               	decfsz	9,f
  5943  00C1  28BE               	goto	u3205
  5944  00C2  0835               	movf	??_main^(0+128),w
  5945  00C3  00BD               	movwf	main@adc_value0^(0+128)
  5946  00C4  0836               	movf	(??_main+1)^(0+128),w
  5947  00C5  00BE               	movwf	(main@adc_value0+1)^(0+128)
  5948  00C6                     l3417:
  5949                           
  5950                           ;main.c: 211:         adc_value1 = ADC_GetConversion(channel_AN3);
  5951  00C6  3003               	movlw	3
  5952  00C7  3197  2784  3180   	fcall	_ADC_GetConversion
  5953  00CA  0871               	movf	?_ADC_GetConversion+1,w
  5954  00CB  0021               	movlb	1	; select bank1
  5955  00CC  00C0               	movwf	(main@adc_value1+1)^(0+128)
  5956  00CD  0870               	movf	?_ADC_GetConversion,w
  5957  00CE  00BF               	movwf	main@adc_value1^(0+128)
  5958                           
  5959                           ;main.c: 212:         adc_value1 = adc_value1 >> 6;
  5960  00CF  0840               	movf	(main@adc_value1+1)^(0+128),w
  5961  00D0  00B6               	movwf	(??_main^(0+128)+1)
  5962  00D1  083F               	movf	main@adc_value1^(0+128),w
  5963  00D2  00B5               	movwf	??_main^(0+128)
  5964  00D3  3006               	movlw	6
  5965  00D4                     u3215:
  5966  00D4  36B6               	lsrf	(??_main^(0+128)+1),f
  5967  00D5  0CB5               	rrf	??_main^(0+128),f
  5968  00D6  0B89               	decfsz	9,f
  5969  00D7  28D4               	goto	u3215
  5970  00D8  0835               	movf	??_main^(0+128),w
  5971  00D9  00BF               	movwf	main@adc_value1^(0+128)
  5972  00DA  0836               	movf	(??_main+1)^(0+128),w
  5973  00DB  00C0               	movwf	(main@adc_value1+1)^(0+128)
  5974  00DC                     l3419:
  5975                           
  5976                           ;main.c: 214:         if (adc_value0< 45)
  5977  00DC  3000               	movlw	0
  5978  00DD  023E               	subwf	(main@adc_value0+1)^(0+128),w
  5979  00DE  302D               	movlw	45
  5980  00DF  1903               	skipnz
  5981  00E0  023D               	subwf	main@adc_value0^(0+128),w
  5982  00E1  1803               	skipnc
  5983  00E2  28E4               	goto	u3221
  5984  00E3  28E5               	goto	u3220
  5985  00E4                     u3221:
  5986  00E4  28E7               	goto	l3423
  5987  00E5                     u3220:
  5988  00E5                     l3421:
  5989                           
  5990                           ;main.c: 215:             adc_value0 = 0;
  5991  00E5  01BD               	clrf	main@adc_value0^(0+128)
  5992  00E6  01BE               	clrf	(main@adc_value0+1)^(0+128)
  5993  00E7                     l3423:
  5994                           
  5995                           ;main.c: 216:         if (adc_value1< 45)
  5996  00E7  3000               	movlw	0
  5997  00E8  0240               	subwf	(main@adc_value1+1)^(0+128),w
  5998  00E9  302D               	movlw	45
  5999  00EA  1903               	skipnz
  6000  00EB  023F               	subwf	main@adc_value1^(0+128),w
  6001  00EC  1803               	skipnc
  6002  00ED  28EF               	goto	u3231
  6003  00EE  28F0               	goto	u3230
  6004  00EF                     u3231:
  6005  00EF  28F2               	goto	l3427
  6006  00F0                     u3230:
  6007  00F0                     l3425:
  6008                           
  6009                           ;main.c: 217:             adc_value1 = 0;
  6010  00F0  01BF               	clrf	main@adc_value1^(0+128)
  6011  00F1  01C0               	clrf	(main@adc_value1+1)^(0+128)
  6012  00F2                     l3427:
  6013                           
  6014                           ;main.c: 219:         stuffIntToCharsBuf(adc_value0 , text10 , 2 );
  6015  00F2  083E               	movf	(main@adc_value0+1)^(0+128),w
  6016  00F3  00A4               	movwf	(stuffIntToCharsBuf@num+1)^(0+128)
  6017  00F4  083D               	movf	main@adc_value0^(0+128),w
  6018  00F5  00A3               	movwf	stuffIntToCharsBuf@num^(0+128)
  6019  00F6  30DB               	movlw	(low (_text10| 0))& (0+255)
  6020  00F7  00B5               	movwf	??_main^(0+128)
  6021  00F8  0835               	movf	??_main^(0+128),w
  6022  00F9  00A5               	movwf	stuffIntToCharsBuf@buf^(0+128)
  6023  00FA  3002               	movlw	2
  6024  00FB  00A6               	movwf	stuffIntToCharsBuf@pos^(0+128)
  6025  00FC  3000               	movlw	0
  6026  00FD  00A7               	movwf	(stuffIntToCharsBuf@pos^(0+128)+1)
  6027  00FE  3185  25CA  3180   	fcall	_stuffIntToCharsBuf
  6028  0101                     l3429:
  6029                           
  6030                           ;main.c: 220:         stuffIntToCharsBuf(adc_value1 , text10 , 9 );
  6031  0101  0021               	movlb	1	; select bank1
  6032  0102  0840               	movf	(main@adc_value1+1)^(0+128),w
  6033  0103  00A4               	movwf	(stuffIntToCharsBuf@num+1)^(0+128)
  6034  0104  083F               	movf	main@adc_value1^(0+128),w
  6035  0105  00A3               	movwf	stuffIntToCharsBuf@num^(0+128)
  6036  0106  30DB               	movlw	(low (_text10| 0))& (0+255)
  6037  0107  00B5               	movwf	??_main^(0+128)
  6038  0108  0835               	movf	??_main^(0+128),w
  6039  0109  00A5               	movwf	stuffIntToCharsBuf@buf^(0+128)
  6040  010A  3009               	movlw	9
  6041  010B  00A6               	movwf	stuffIntToCharsBuf@pos^(0+128)
  6042  010C  3000               	movlw	0
  6043  010D  00A7               	movwf	(stuffIntToCharsBuf@pos^(0+128)+1)
  6044  010E  3185  25CA  3180   	fcall	_stuffIntToCharsBuf
  6045  0111                     l3431:
  6046                           
  6047                           ;main.c: 221:                 command(0x01);
  6048  0111  3001               	movlw	1
  6049  0112  318A  2256  3180   	fcall	_command
  6050  0115                     l3433:
  6051                           
  6052                           ;main.c: 222:         _delay((unsigned long)((2)*(16000000/4000.0)));
  6053  0115  300B               	movlw	11
  6054  0116  0021               	movlb	1	; select bank1
  6055  0117  00B5               	movwf	??_main^(0+128)
  6056  0118  3062               	movlw	98
  6057  0119                     u3377:
  6058  0119  0B89               	decfsz	9,f
  6059  011A  2919               	goto	u3377
  6060  011B  0BB5               	decfsz	??_main^(0+128),f
  6061  011C  2919               	goto	u3377
  6062  011D  0000               	nop
  6063  011E                     l3435:
  6064                           
  6065                           ;main.c: 223:         for(i=0;i<16;i++){
  6066  011E  0021               	movlb	1	; select bank1
  6067  011F  01C1               	clrf	main@i^(0+128)
  6068  0120  01C2               	clrf	(main@i+1)^(0+128)
  6069  0121                     l3441:
  6070                           
  6071                           ;main.c: 224:           dataCMD(text9[i]);
  6072  0121  0021               	movlb	1	; select bank1
  6073  0122  0841               	movf	main@i^(0+128),w
  6074  0123  3E20               	addlw	(low (_text9| (0+256)))& (0+255)
  6075  0124  0086               	movwf	6
  6076  0125  3001               	movlw	1	; select bank2/3
  6077  0126  0087               	movwf	7
  6078  0127  0801               	movf	1,w
  6079  0128  318A  22B1  3180   	fcall	_dataCMD
  6080  012B                     l3443:
  6081                           
  6082                           ;main.c: 225:         }
  6083  012B  3001               	movlw	1
  6084  012C  0021               	movlb	1	; select bank1
  6085  012D  07C1               	addwf	main@i^(0+128),f
  6086  012E  3000               	movlw	0
  6087  012F  3DC2               	addwfc	(main@i+1)^(0+128),f
  6088  0130                     l3445:
  6089  0130  0842               	movf	(main@i+1)^(0+128),w
  6090  0131  3A80               	xorlw	128
  6091  0132  00B5               	movwf	??_main^(0+128)
  6092  0133  3080               	movlw	128
  6093  0134  0235               	subwf	??_main^(0+128),w
  6094  0135  1D03               	skipz
  6095  0136  2939               	goto	u3245
  6096  0137  3010               	movlw	16
  6097  0138  0241               	subwf	main@i^(0+128),w
  6098  0139                     u3245:
  6099  0139  1C03               	skipc
  6100  013A  293C               	goto	u3241
  6101  013B  293D               	goto	u3240
  6102  013C                     u3241:
  6103  013C  2921               	goto	l3441
  6104  013D                     u3240:
  6105  013D                     l3447:
  6106                           
  6107                           ;main.c: 226:         command(0xA0);
  6108  013D  30A0               	movlw	160
  6109  013E  318A  2256  3180   	fcall	_command
  6110  0141                     l3449:
  6111                           
  6112                           ;main.c: 227:         for(i=0;i<16;i++){
  6113  0141  0021               	movlb	1	; select bank1
  6114  0142  01C1               	clrf	main@i^(0+128)
  6115  0143  01C2               	clrf	(main@i+1)^(0+128)
  6116  0144                     l3455:
  6117                           
  6118                           ;main.c: 228:           dataCMD(text10[i]);
  6119  0144  0021               	movlb	1	; select bank1
  6120  0145  0841               	movf	main@i^(0+128),w
  6121  0146  3EDB               	addlw	(low (_text10| 0))& (0+255)
  6122  0147  0086               	movwf	6
  6123  0148  0187               	clrf	7
  6124  0149  0801               	movf	1,w
  6125  014A  318A  22B1  3180   	fcall	_dataCMD
  6126  014D                     l3457:
  6127                           
  6128                           ;main.c: 229:         }
  6129  014D  3001               	movlw	1
  6130  014E  0021               	movlb	1	; select bank1
  6131  014F  07C1               	addwf	main@i^(0+128),f
  6132  0150  3000               	movlw	0
  6133  0151  3DC2               	addwfc	(main@i+1)^(0+128),f
  6134  0152                     l3459:
  6135  0152  0842               	movf	(main@i+1)^(0+128),w
  6136  0153  3A80               	xorlw	128
  6137  0154  00B5               	movwf	??_main^(0+128)
  6138  0155  3080               	movlw	128
  6139  0156  0235               	subwf	??_main^(0+128),w
  6140  0157  1D03               	skipz
  6141  0158  295B               	goto	u3255
  6142  0159  3010               	movlw	16
  6143  015A  0241               	subwf	main@i^(0+128),w
  6144  015B                     u3255:
  6145  015B  1C03               	skipc
  6146  015C  295E               	goto	u3251
  6147  015D  295F               	goto	u3250
  6148  015E                     u3251:
  6149  015E  2944               	goto	l3455
  6150  015F                     u3250:
  6151  015F                     l3461:
  6152                           
  6153                           ;main.c: 230:         setMotorSpeed(adc_value0, 1 );
  6154  015F  0021               	movlb	1	; select bank1
  6155  0160  083E               	movf	(main@adc_value0+1)^(0+128),w
  6156  0161  00F5               	movwf	setMotorSpeed@num+1
  6157  0162  083D               	movf	main@adc_value0^(0+128),w
  6158  0163  00F4               	movwf	setMotorSpeed@num
  6159  0164  3001               	movlw	1
  6160  0165  00F6               	movwf	setMotorSpeed@motorNum
  6161  0166  3000               	movlw	0
  6162  0167  00F7               	movwf	setMotorSpeed@motorNum+1
  6163  0168  3197  27BB  3180   	fcall	_setMotorSpeed
  6164                           
  6165                           ;main.c: 231:         setMotorSpeed(adc_value1, 2 );
  6166  016B  0021               	movlb	1	; select bank1
  6167  016C  0840               	movf	(main@adc_value1+1)^(0+128),w
  6168  016D  00F5               	movwf	setMotorSpeed@num+1
  6169  016E  083F               	movf	main@adc_value1^(0+128),w
  6170  016F  00F4               	movwf	setMotorSpeed@num
  6171  0170  3002               	movlw	2
  6172  0171  00F6               	movwf	setMotorSpeed@motorNum
  6173  0172  3000               	movlw	0
  6174  0173  00F7               	movwf	setMotorSpeed@motorNum+1
  6175  0174  3197  27BB  3180   	fcall	_setMotorSpeed
  6176  0177                     l3463:
  6177                           
  6178                           ;main.c: 232:         _delay((unsigned long)((2000)*(16000000/4000.0)));
  6179  0177  3029               	movlw	41
  6180  0178  0021               	movlb	1	; select bank1
  6181  0179  00B6               	movwf	(??_main^(0+128)+1)
  6182  017A  3096               	movlw	150
  6183  017B  00B5               	movwf	??_main^(0+128)
  6184  017C  307F               	movlw	127
  6185  017D                     u3387:
  6186  017D  0B89               	decfsz	9,f
  6187  017E  297D               	goto	u3387
  6188  017F  0BB5               	decfsz	??_main^(0+128),f
  6189  0180  297D               	goto	u3387
  6190  0181  0BB6               	decfsz	(??_main^(0+128)+1),f
  6191  0182  297D               	goto	u3387
  6192  0183                     l3465:
  6193                           
  6194                           ;main.c: 233:         command(0x01);
  6195  0183  3001               	movlw	1
  6196  0184  318A  2256  3180   	fcall	_command
  6197                           
  6198                           ;main.c: 234:         _delay((unsigned long)((2)*(16000000/4000.0)));
  6199  0187  300B               	movlw	11
  6200  0188  0021               	movlb	1	; select bank1
  6201  0189  00B5               	movwf	??_main^(0+128)
  6202  018A  3062               	movlw	98
  6203  018B                     u3397:
  6204  018B  0B89               	decfsz	9,f
  6205  018C  298B               	goto	u3397
  6206  018D  0BB5               	decfsz	??_main^(0+128),f
  6207  018E  298B               	goto	u3397
  6208  018F  0000               	nop
  6209  0190                     l3467:
  6210                           
  6211                           ;main.c: 235:         for(i=0;i<16;i++){
  6212  0190  0021               	movlb	1	; select bank1
  6213  0191  01C1               	clrf	main@i^(0+128)
  6214  0192  01C2               	clrf	(main@i+1)^(0+128)
  6215  0193                     l3473:
  6216                           
  6217                           ;main.c: 236:           dataCMD(text11[i]);
  6218  0193  0021               	movlb	1	; select bank1
  6219  0194  0841               	movf	main@i^(0+128),w
  6220  0195  3EA0               	addlw	(low (_text11| (0+256)))& (0+255)
  6221  0196  0086               	movwf	6
  6222  0197  3001               	movlw	1	; select bank3/4
  6223  0198  0087               	movwf	7
  6224  0199  0801               	movf	1,w
  6225  019A  318A  22B1  3180   	fcall	_dataCMD
  6226  019D                     l3475:
  6227                           
  6228                           ;main.c: 237:         }
  6229  019D  3001               	movlw	1
  6230  019E  0021               	movlb	1	; select bank1
  6231  019F  07C1               	addwf	main@i^(0+128),f
  6232  01A0  3000               	movlw	0
  6233  01A1  3DC2               	addwfc	(main@i+1)^(0+128),f
  6234  01A2                     l3477:
  6235  01A2  0842               	movf	(main@i+1)^(0+128),w
  6236  01A3  3A80               	xorlw	128
  6237  01A4  00B5               	movwf	??_main^(0+128)
  6238  01A5  3080               	movlw	128
  6239  01A6  0235               	subwf	??_main^(0+128),w
  6240  01A7  1D03               	skipz
  6241  01A8  29AB               	goto	u3265
  6242  01A9  3010               	movlw	16
  6243  01AA  0241               	subwf	main@i^(0+128),w
  6244  01AB                     u3265:
  6245  01AB  1C03               	skipc
  6246  01AC  29AE               	goto	u3261
  6247  01AD  29AF               	goto	u3260
  6248  01AE                     u3261:
  6249  01AE  2993               	goto	l3473
  6250  01AF                     u3260:
  6251  01AF                     l3479:
  6252                           
  6253                           ;main.c: 238:         TC_data = spi_read_32bits();
  6254  01AF  318B  230C  3180   	fcall	_spi_read_32bits
  6255  01B2  0874               	movf	?_spi_read_32bits+3,w
  6256  01B3  0021               	movlb	1	; select bank1
  6257  01B4  00CA               	movwf	(_TC_data+3)^(0+128)
  6258  01B5  0873               	movf	?_spi_read_32bits+2,w
  6259  01B6  00C9               	movwf	(_TC_data+2)^(0+128)
  6260  01B7  0872               	movf	?_spi_read_32bits+1,w
  6261  01B8  00C8               	movwf	(_TC_data+1)^(0+128)
  6262  01B9  0871               	movf	?_spi_read_32bits,w
  6263  01BA  00C7               	movwf	_TC_data^(0+128)
  6264  01BB                     l3481:
  6265                           
  6266                           ;main.c: 242:         upper16 = (TC_data >> 16) & 0xFFFF;
  6267  01BB  0847               	movf	_TC_data^(0+128),w
  6268  01BC  00B5               	movwf	??_main^(0+128)
  6269  01BD  0848               	movf	(_TC_data+1)^(0+128),w
  6270  01BE  00B6               	movwf	(??_main^(0+128)+1)
  6271  01BF  0849               	movf	(_TC_data+2)^(0+128),w
  6272  01C0  00B7               	movwf	(??_main^(0+128)+2)
  6273  01C1  084A               	movf	(_TC_data+3)^(0+128),w
  6274  01C2  00B8               	movwf	(??_main^(0+128)+3)
  6275  01C3  3010               	movlw	16
  6276  01C4                     u3275:
  6277  01C4  36B8               	lsrf	(??_main^(0+128)+3),f
  6278  01C5  0CB7               	rrf	(??_main^(0+128)+2),f
  6279  01C6  0CB6               	rrf	(??_main^(0+128)+1),f
  6280  01C7  0CB5               	rrf	??_main^(0+128),f
  6281  01C8                     u3270:
  6282  01C8  0B89               	decfsz	9,f
  6283  01C9  29C4               	goto	u3275
  6284  01CA  0836               	movf	(??_main+1)^(0+128),w
  6285  01CB  00BA               	movwf	(main@upper16+1)^(0+128)
  6286  01CC  0835               	movf	??_main^(0+128),w
  6287  01CD  00B9               	movwf	main@upper16^(0+128)
  6288  01CE                     l3483:
  6289                           
  6290                           ;main.c: 243:         lower16 = TC_data & 0xFFFF;
  6291  01CE  0848               	movf	(_TC_data+1)^(0+128),w
  6292  01CF  00BC               	movwf	(main@lower16+1)^(0+128)
  6293  01D0  0847               	movf	_TC_data^(0+128),w
  6294  01D1  00BB               	movwf	main@lower16^(0+128)
  6295  01D2                     l3485:
  6296                           
  6297                           ;main.c: 245:         byteVal = (upper16 >> 8) & 0xFF;
  6298  01D2  083A               	movf	(main@upper16+1)^(0+128),w
  6299  01D3  00B5               	movwf	??_main^(0+128)
  6300  01D4  0835               	movf	??_main^(0+128),w
  6301  01D5  00D9               	movwf	_byteVal^(0+128)
  6302  01D6                     l3487:
  6303                           
  6304                           ;main.c: 246:         printByteValue(text7, byteVal,0);
  6305  01D6  0859               	movf	_byteVal^(0+128),w
  6306  01D7  00B5               	movwf	??_main^(0+128)
  6307  01D8  0835               	movf	??_main^(0+128),w
  6308  01D9  00F9               	movwf	printByteValue@byteVal
  6309  01DA  3000               	movlw	0
  6310  01DB  00FA               	movwf	printByteValue@pos
  6311  01DC  00FB               	movwf	printByteValue@pos+1
  6312  01DD  3053               	movlw	(low (_text7| (0+256)))& (0+255)
  6313  01DE  318C  24D3  3180   	fcall	_printByteValue
  6314  01E1                     l3489:
  6315                           
  6316                           ;main.c: 248:         byteVal = upper16 & 0xFF;
  6317  01E1  0021               	movlb	1	; select bank1
  6318  01E2  0839               	movf	main@upper16^(0+128),w
  6319  01E3  00B5               	movwf	??_main^(0+128)
  6320  01E4  0835               	movf	??_main^(0+128),w
  6321  01E5  00D9               	movwf	_byteVal^(0+128)
  6322  01E6                     l3491:
  6323                           
  6324                           ;main.c: 249:         printByteValue(text7, byteVal,1);
  6325  01E6  0859               	movf	_byteVal^(0+128),w
  6326  01E7  00B5               	movwf	??_main^(0+128)
  6327  01E8  0835               	movf	??_main^(0+128),w
  6328  01E9  00F9               	movwf	printByteValue@byteVal
  6329  01EA  3001               	movlw	1
  6330  01EB  00FA               	movwf	printByteValue@pos
  6331  01EC  3000               	movlw	0
  6332  01ED  00FB               	movwf	printByteValue@pos+1
  6333  01EE  3053               	movlw	(low (_text7| (0+256)))& (0+255)
  6334  01EF  318C  24D3  3180   	fcall	_printByteValue
  6335  01F2                     l3493:
  6336                           
  6337                           ;main.c: 251:         byteVal = (lower16 >> 8) & 0xFF;
  6338  01F2  0021               	movlb	1	; select bank1
  6339  01F3  083C               	movf	(main@lower16+1)^(0+128),w
  6340  01F4  00B5               	movwf	??_main^(0+128)
  6341  01F5  0835               	movf	??_main^(0+128),w
  6342  01F6  00D9               	movwf	_byteVal^(0+128)
  6343  01F7                     l3495:
  6344                           
  6345                           ;main.c: 252:         printByteValue(text7, byteVal,2);
  6346  01F7  0859               	movf	_byteVal^(0+128),w
  6347  01F8  00B5               	movwf	??_main^(0+128)
  6348  01F9  0835               	movf	??_main^(0+128),w
  6349  01FA  00F9               	movwf	printByteValue@byteVal
  6350  01FB  3002               	movlw	2
  6351  01FC  00FA               	movwf	printByteValue@pos
  6352  01FD  3000               	movlw	0
  6353  01FE  00FB               	movwf	printByteValue@pos+1
  6354  01FF  3053               	movlw	(low (_text7| (0+256)))& (0+255)
  6355  0200  318C  24D3  3180   	fcall	_printByteValue
  6356  0203                     l3497:
  6357                           
  6358                           ;main.c: 254:         byteVal = lower16 & 0xFF;
  6359  0203  0021               	movlb	1	; select bank1
  6360  0204  083B               	movf	main@lower16^(0+128),w
  6361  0205  00B5               	movwf	??_main^(0+128)
  6362  0206  0835               	movf	??_main^(0+128),w
  6363  0207  00D9               	movwf	_byteVal^(0+128)
  6364  0208                     l3499:
  6365                           
  6366                           ;main.c: 255:         printByteValue(text7, byteVal,3);
  6367  0208  0859               	movf	_byteVal^(0+128),w
  6368  0209  00B5               	movwf	??_main^(0+128)
  6369  020A  0835               	movf	??_main^(0+128),w
  6370  020B  00F9               	movwf	printByteValue@byteVal
  6371  020C  3003               	movlw	3
  6372  020D  00FA               	movwf	printByteValue@pos
  6373  020E  3000               	movlw	0
  6374  020F  00FB               	movwf	printByteValue@pos+1
  6375  0210  3053               	movlw	(low (_text7| (0+256)))& (0+255)
  6376  0211  318C  24D3  3180   	fcall	_printByteValue
  6377  0214                     l3501:
  6378                           
  6379                           ;main.c: 256:         _delay((unsigned long)((2000)*(16000000/4000.0)));
  6380  0214  3029               	movlw	41
  6381  0215  0021               	movlb	1	; select bank1
  6382  0216  00B6               	movwf	(??_main^(0+128)+1)
  6383  0217  3096               	movlw	150
  6384  0218  00B5               	movwf	??_main^(0+128)
  6385  0219  307F               	movlw	127
  6386  021A                     u3407:
  6387  021A  0B89               	decfsz	9,f
  6388  021B  2A1A               	goto	u3407
  6389  021C  0BB5               	decfsz	??_main^(0+128),f
  6390  021D  2A1A               	goto	u3407
  6391  021E  0BB6               	decfsz	(??_main^(0+128)+1),f
  6392  021F  2A1A               	goto	u3407
  6393  0220                     l3503:
  6394                           
  6395                           ;main.c: 258:         temp_float = convert14BitToFloat((upper16 >>2));
  6396  0220  0021               	movlb	1	; select bank1
  6397  0221  083A               	movf	(main@upper16+1)^(0+128),w
  6398  0222  00B6               	movwf	(??_main^(0+128)+1)
  6399  0223  0839               	movf	main@upper16^(0+128),w
  6400  0224  00B5               	movwf	??_main^(0+128)
  6401  0225  36B6               	lsrf	(??_main^(0+128)+1),f
  6402  0226  0CB5               	rrf	??_main^(0+128),f
  6403  0227  36B6               	lsrf	(??_main^(0+128)+1),f
  6404  0228  0CB5               	rrf	??_main^(0+128),f
  6405  0229  0835               	movf	??_main^(0+128),w
  6406  022A  0020               	movlb	0	; select bank0
  6407  022B  00BA               	movwf	convert14BitToFloat@raw14bit
  6408  022C  0021               	movlb	1	; select bank1
  6409  022D  0836               	movf	(??_main+1)^(0+128),w
  6410  022E  0020               	movlb	0	; select bank0
  6411  022F  00BB               	movwf	convert14BitToFloat@raw14bit+1
  6412  0230  3189  21B4  3180   	fcall	_convert14BitToFloat
  6413  0233  0020               	movlb	0	; select bank0
  6414  0234  083D               	movf	?_convert14BitToFloat+3,w
  6415  0235  0021               	movlb	1	; select bank1
  6416  0236  00C6               	movwf	(_temp_float+3)^(0+128)
  6417  0237  0020               	movlb	0	; select bank0
  6418  0238  083C               	movf	?_convert14BitToFloat+2,w
  6419  0239  0021               	movlb	1	; select bank1
  6420  023A  00C5               	movwf	(_temp_float+2)^(0+128)
  6421  023B  0020               	movlb	0	; select bank0
  6422  023C  083B               	movf	?_convert14BitToFloat+1,w
  6423  023D  0021               	movlb	1	; select bank1
  6424  023E  00C4               	movwf	(_temp_float+1)^(0+128)
  6425  023F  0020               	movlb	0	; select bank0
  6426  0240  083A               	movf	?_convert14BitToFloat,w
  6427  0241  0021               	movlb	1	; select bank1
  6428  0242  00C3               	movwf	_temp_float^(0+128)
  6429  0243                     l3505:
  6430                           
  6431                           ;main.c: 260:         stuffIntToCharsBuf( (int16_t)temp_float , text10 , 2 );
  6432  0243  0846               	movf	(_temp_float+3)^(0+128),w
  6433  0244  00F3               	movwf	___fltol@f1+3
  6434  0245  0845               	movf	(_temp_float+2)^(0+128),w
  6435  0246  00F2               	movwf	___fltol@f1+2
  6436  0247  0844               	movf	(_temp_float+1)^(0+128),w
  6437  0248  00F1               	movwf	___fltol@f1+1
  6438  0249  0843               	movf	_temp_float^(0+128),w
  6439  024A  00F0               	movwf	___fltol@f1
  6440  024B  318B  23C8  3180   	fcall	___fltol
  6441  024E  0871               	movf	?___fltol+1,w
  6442  024F  0021               	movlb	1	; select bank1
  6443  0250  00A4               	movwf	(stuffIntToCharsBuf@num+1)^(0+128)
  6444  0251  0870               	movf	?___fltol,w
  6445  0252  00A3               	movwf	stuffIntToCharsBuf@num^(0+128)
  6446  0253  30DB               	movlw	(low (_text10| 0))& (0+255)
  6447  0254  00B5               	movwf	??_main^(0+128)
  6448  0255  0835               	movf	??_main^(0+128),w
  6449  0256  00A5               	movwf	stuffIntToCharsBuf@buf^(0+128)
  6450  0257  3002               	movlw	2
  6451  0258  00A6               	movwf	stuffIntToCharsBuf@pos^(0+128)
  6452  0259  3000               	movlw	0
  6453  025A  00A7               	movwf	(stuffIntToCharsBuf@pos^(0+128)+1)
  6454  025B  3185  25CA  3180   	fcall	_stuffIntToCharsBuf
  6455  025E                     l3507:
  6456                           
  6457                           ;main.c: 261:         stuffIntToCharsBuf((lower16 >>8) , text10 , 9 );
  6458  025E  0021               	movlb	1	; select bank1
  6459  025F  083C               	movf	(main@lower16+1)^(0+128),w
  6460  0260  00B6               	movwf	(??_main^(0+128)+1)
  6461  0261  083B               	movf	main@lower16^(0+128),w
  6462  0262  00B5               	movwf	??_main^(0+128)
  6463  0263  0836               	movf	(??_main^(0+128)+1),w
  6464  0264  00B5               	movwf	??_main^(0+128)
  6465  0265  01B6               	clrf	(??_main^(0+128)+1)
  6466  0266  0835               	movf	??_main^(0+128),w
  6467  0267  00A3               	movwf	stuffIntToCharsBuf@num^(0+128)
  6468  0268  0836               	movf	(??_main+1)^(0+128),w
  6469  0269  00A4               	movwf	(stuffIntToCharsBuf@num+1)^(0+128)
  6470  026A  30DB               	movlw	(low (_text10| 0))& (0+255)
  6471  026B  00B7               	movwf	(??_main+2)^(0+128)
  6472  026C  0837               	movf	(??_main+2)^(0+128),w
  6473  026D  00A5               	movwf	stuffIntToCharsBuf@buf^(0+128)
  6474  026E  3009               	movlw	9
  6475  026F  00A6               	movwf	stuffIntToCharsBuf@pos^(0+128)
  6476  0270  3000               	movlw	0
  6477  0271  00A7               	movwf	(stuffIntToCharsBuf@pos^(0+128)+1)
  6478  0272  3185  25CA  3180   	fcall	_stuffIntToCharsBuf
  6479  0275                     l3509:
  6480                           
  6481                           ;main.c: 262:         command(0xA0);
  6482  0275  30A0               	movlw	160
  6483  0276  318A  2256  3180   	fcall	_command
  6484  0279                     l3511:
  6485                           
  6486                           ;main.c: 263:         for(i=0;i<16;i++){
  6487  0279  0021               	movlb	1	; select bank1
  6488  027A  01C1               	clrf	main@i^(0+128)
  6489  027B  01C2               	clrf	(main@i+1)^(0+128)
  6490  027C                     l3517:
  6491                           
  6492                           ;main.c: 264:           dataCMD(text10[i]);
  6493  027C  0021               	movlb	1	; select bank1
  6494  027D  0841               	movf	main@i^(0+128),w
  6495  027E  3EDB               	addlw	(low (_text10| 0))& (0+255)
  6496  027F  0086               	movwf	6
  6497  0280  0187               	clrf	7
  6498  0281  0801               	movf	1,w
  6499  0282  318A  22B1  3180   	fcall	_dataCMD
  6500  0285                     l3519:
  6501                           
  6502                           ;main.c: 265:         }
  6503  0285  3001               	movlw	1
  6504  0286  0021               	movlb	1	; select bank1
  6505  0287  07C1               	addwf	main@i^(0+128),f
  6506  0288  3000               	movlw	0
  6507  0289  3DC2               	addwfc	(main@i+1)^(0+128),f
  6508  028A                     l3521:
  6509  028A  0842               	movf	(main@i+1)^(0+128),w
  6510  028B  3A80               	xorlw	128
  6511  028C  00B5               	movwf	??_main^(0+128)
  6512  028D  3080               	movlw	128
  6513  028E  0235               	subwf	??_main^(0+128),w
  6514  028F  1D03               	skipz
  6515  0290  2A93               	goto	u3285
  6516  0291  3010               	movlw	16
  6517  0292  0241               	subwf	main@i^(0+128),w
  6518  0293                     u3285:
  6519  0293  1C03               	skipc
  6520  0294  2A96               	goto	u3281
  6521  0295  2A97               	goto	u3280
  6522  0296                     u3281:
  6523  0296  2A7C               	goto	l3517
  6524  0297                     u3280:
  6525  0297                     l3523:
  6526                           
  6527                           ;main.c: 267:         _delay((unsigned long)((2000)*(16000000/4000.0)));
  6528  0297  3029               	movlw	41
  6529  0298  0021               	movlb	1	; select bank1
  6530  0299  00B6               	movwf	(??_main^(0+128)+1)
  6531  029A  3096               	movlw	150
  6532  029B  00B5               	movwf	??_main^(0+128)
  6533  029C  307F               	movlw	127
  6534  029D                     u3417:
  6535  029D  0B89               	decfsz	9,f
  6536  029E  2A9D               	goto	u3417
  6537  029F  0BB5               	decfsz	??_main^(0+128),f
  6538  02A0  2A9D               	goto	u3417
  6539  02A1  0BB6               	decfsz	(??_main^(0+128)+1),f
  6540  02A2  2A9D               	goto	u3417
  6541  02A3  28B0               	goto	l3413
  6542  02A4  3180  2819         	ljmp	start
  6543  02A6                     __end_of_main:
  6544                           
  6545                           	psect	text1
  6546  05CA                     __ptext1:	
  6547 ;; *************** function _stuffIntToCharsBuf *****************
  6548 ;; Defined at:
  6549 ;;		line 375 in file "main.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;  num             2    3[BANK1 ] int 
  6552 ;;  buf             1    5[BANK1 ] PTR unsigned char 
  6553 ;;		 -> text10(17), 
  6554 ;;  pos             2    6[BANK1 ] int 
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;  neg             2   19[BANK1 ] int 
  6557 ;;  dig3            2   17[BANK1 ] int 
  6558 ;;  dig2            2   15[BANK1 ] int 
  6559 ;;  dig1            2   13[BANK1 ] int 
  6560 ;;  dig4            2   11[BANK1 ] int 
  6561 ;; Return value:  Size  Location     Type
  6562 ;;                  1    wreg      void 
  6563 ;; Registers used:
  6564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6570 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6571 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6572 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6573 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  6574 ;;Total ram usage:       18 bytes
  6575 ;; Hardware stack levels used:    1
  6576 ;; Hardware stack levels required when called:   12
  6577 ;; This function calls:
  6578 ;;		___awdiv
  6579 ;;		___wmul
  6580 ;;		_printf
  6581 ;; This function is called by:
  6582 ;;		_main
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           
  6587                           ;psect for function _stuffIntToCharsBuf
  6588  05CA                     _stuffIntToCharsBuf:
  6589  05CA                     l3199:	
  6590                           ;incstack = 0
  6591                           ; Regs used in _stuffIntToCharsBuf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6592                           
  6593                           
  6594                           ;main.c: 377:   printf("num= %d\n", num);
  6595  05CA  302D               	movlw	low (STR_1| (0+32768))
  6596  05CB  0020               	movlb	0	; select bank0
  6597  05CC  00E6               	movwf	printf@fmt
  6598  05CD  3098               	movlw	high (STR_1| (0+32768))
  6599  05CE  00E7               	movwf	printf@fmt+1
  6600  05CF  0021               	movlb	1	; select bank1
  6601  05D0  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  6602  05D1  0020               	movlb	0	; select bank0
  6603  05D2  00E9               	movwf	?_printf+3
  6604  05D3  0021               	movlb	1	; select bank1
  6605  05D4  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  6606  05D5  0020               	movlb	0	; select bank0
  6607  05D6  00E8               	movwf	?_printf+2
  6608  05D7  3197  270E  3185   	fcall	_printf
  6609  05DA                     l3201:
  6610                           
  6611                           ;main.c: 378:   int dig1, dig2, dig3, dig4, neg=0;
  6612  05DA  0021               	movlb	1	; select bank1
  6613  05DB  01B3               	clrf	stuffIntToCharsBuf@neg^(0+128)
  6614  05DC  01B4               	clrf	(stuffIntToCharsBuf@neg+1)^(0+128)
  6615  05DD                     l3203:
  6616                           
  6617                           ;main.c: 380:   if (num < 0) {
  6618  05DD  1FA4               	btfss	(stuffIntToCharsBuf@num+1)^(0+128),7
  6619  05DE  2DE0               	goto	u2951
  6620  05DF  2DE1               	goto	u2950
  6621  05E0                     u2951:
  6622  05E0  2DF4               	goto	l3211
  6623  05E1                     u2950:
  6624  05E1                     l3205:
  6625                           
  6626                           ;main.c: 381:     neg = 1;
  6627  05E1  3001               	movlw	1
  6628  05E2  00B3               	movwf	stuffIntToCharsBuf@neg^(0+128)
  6629  05E3  3000               	movlw	0
  6630  05E4  00B4               	movwf	(stuffIntToCharsBuf@neg^(0+128)+1)
  6631  05E5                     l3207:
  6632                           
  6633                           ;main.c: 382:     buf[0+pos]= 45;
  6634  05E5  302D               	movlw	45
  6635  05E6  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  6636  05E7  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  6637  05E8  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  6638  05E9  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  6639  05EA  0829               	movf	(??_stuffIntToCharsBuf+1)^(0+128),w
  6640  05EB  0086               	movwf	6
  6641  05EC  0187               	clrf	7
  6642  05ED  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  6643  05EE  0081               	movwf	1
  6644  05EF                     l3209:
  6645                           
  6646                           ;main.c: 383:     num= num*(-1);
  6647  05EF  09A3               	comf	stuffIntToCharsBuf@num^(0+128),f
  6648  05F0  09A4               	comf	(stuffIntToCharsBuf@num+1)^(0+128),f
  6649  05F1  0AA3               	incf	stuffIntToCharsBuf@num^(0+128),f
  6650  05F2  1903               	skipnz
  6651  05F3  0AA4               	incf	(stuffIntToCharsBuf@num+1)^(0+128),f
  6652  05F4                     l3211:
  6653                           
  6654                           ;main.c: 386:   dig1 = num/1000;
  6655  05F4  30E8               	movlw	232
  6656  05F5  00F0               	movwf	___awdiv@divisor
  6657  05F6  3003               	movlw	3
  6658  05F7  00F1               	movwf	___awdiv@divisor+1
  6659  05F8  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  6660  05F9  00F3               	movwf	___awdiv@dividend+1
  6661  05FA  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  6662  05FB  00F2               	movwf	___awdiv@dividend
  6663  05FC  318B  2369  3185   	fcall	___awdiv
  6664  05FF  0871               	movf	?___awdiv+1,w
  6665  0600  0021               	movlb	1	; select bank1
  6666  0601  00AE               	movwf	(stuffIntToCharsBuf@dig1+1)^(0+128)
  6667  0602  0870               	movf	?___awdiv,w
  6668  0603  00AD               	movwf	stuffIntToCharsBuf@dig1^(0+128)
  6669  0604                     l3213:
  6670                           
  6671                           ;main.c: 387:   num = num - dig1*1000;
  6672  0604  082E               	movf	(stuffIntToCharsBuf@dig1+1)^(0+128),w
  6673  0605  00F1               	movwf	___wmul@multiplier+1
  6674  0606  082D               	movf	stuffIntToCharsBuf@dig1^(0+128),w
  6675  0607  00F0               	movwf	___wmul@multiplier
  6676  0608  3018               	movlw	24
  6677  0609  00F2               	movwf	___wmul@multiplicand
  6678  060A  30FC               	movlw	252
  6679  060B  00F3               	movwf	___wmul@multiplicand+1
  6680  060C  3188  2007  3185   	fcall	___wmul
  6681  060F  0021               	movlb	1	; select bank1
  6682  0610  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  6683  0611  0770               	addwf	?___wmul,w
  6684  0612  00A3               	movwf	stuffIntToCharsBuf@num^(0+128)
  6685  0613  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  6686  0614  3D71               	addwfc	?___wmul+1,w
  6687  0615  00A4               	movwf	(stuffIntToCharsBuf@num+1)^(0+128)
  6688  0616                     l3215:
  6689                           
  6690                           ;main.c: 388:   dig2 = num /100;
  6691  0616  3064               	movlw	100
  6692  0617  00F0               	movwf	___awdiv@divisor
  6693  0618  3000               	movlw	0
  6694  0619  00F1               	movwf	___awdiv@divisor+1
  6695  061A  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  6696  061B  00F3               	movwf	___awdiv@dividend+1
  6697  061C  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  6698  061D  00F2               	movwf	___awdiv@dividend
  6699  061E  318B  2369  3185   	fcall	___awdiv
  6700  0621  0871               	movf	?___awdiv+1,w
  6701  0622  0021               	movlb	1	; select bank1
  6702  0623  00B0               	movwf	(stuffIntToCharsBuf@dig2+1)^(0+128)
  6703  0624  0870               	movf	?___awdiv,w
  6704  0625  00AF               	movwf	stuffIntToCharsBuf@dig2^(0+128)
  6705  0626                     l3217:
  6706                           
  6707                           ;main.c: 389:   num = num - dig2*100;
  6708  0626  0830               	movf	(stuffIntToCharsBuf@dig2+1)^(0+128),w
  6709  0627  00F1               	movwf	___wmul@multiplier+1
  6710  0628  082F               	movf	stuffIntToCharsBuf@dig2^(0+128),w
  6711  0629  00F0               	movwf	___wmul@multiplier
  6712  062A  309C               	movlw	156
  6713  062B  00F2               	movwf	___wmul@multiplicand
  6714  062C  30FF               	movlw	255
  6715  062D  00F3               	movwf	___wmul@multiplicand+1
  6716  062E  3188  2007  3185   	fcall	___wmul
  6717  0631  0021               	movlb	1	; select bank1
  6718  0632  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  6719  0633  0770               	addwf	?___wmul,w
  6720  0634  00A3               	movwf	stuffIntToCharsBuf@num^(0+128)
  6721  0635  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  6722  0636  3D71               	addwfc	?___wmul+1,w
  6723  0637  00A4               	movwf	(stuffIntToCharsBuf@num+1)^(0+128)
  6724  0638                     l3219:
  6725                           
  6726                           ;main.c: 390:   dig3 = num / 10;
  6727  0638  300A               	movlw	10
  6728  0639  00F0               	movwf	___awdiv@divisor
  6729  063A  3000               	movlw	0
  6730  063B  00F1               	movwf	___awdiv@divisor+1
  6731  063C  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  6732  063D  00F3               	movwf	___awdiv@dividend+1
  6733  063E  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  6734  063F  00F2               	movwf	___awdiv@dividend
  6735  0640  318B  2369  3185   	fcall	___awdiv
  6736  0643  0871               	movf	?___awdiv+1,w
  6737  0644  0021               	movlb	1	; select bank1
  6738  0645  00B2               	movwf	(stuffIntToCharsBuf@dig3+1)^(0+128)
  6739  0646  0870               	movf	?___awdiv,w
  6740  0647  00B1               	movwf	stuffIntToCharsBuf@dig3^(0+128)
  6741  0648                     l3221:
  6742                           
  6743                           ;main.c: 391:   dig4 = num - dig3*10;
  6744  0648  0832               	movf	(stuffIntToCharsBuf@dig3+1)^(0+128),w
  6745  0649  00F1               	movwf	___wmul@multiplier+1
  6746  064A  0831               	movf	stuffIntToCharsBuf@dig3^(0+128),w
  6747  064B  00F0               	movwf	___wmul@multiplier
  6748  064C  30F6               	movlw	246
  6749  064D  00F2               	movwf	___wmul@multiplicand
  6750  064E  30FF               	movlw	255
  6751  064F  00F3               	movwf	___wmul@multiplicand+1
  6752  0650  3188  2007  3185   	fcall	___wmul
  6753  0653  0021               	movlb	1	; select bank1
  6754  0654  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  6755  0655  0770               	addwf	?___wmul,w
  6756  0656  00AB               	movwf	stuffIntToCharsBuf@dig4^(0+128)
  6757  0657  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  6758  0658  3D71               	addwfc	?___wmul+1,w
  6759  0659  00AC               	movwf	(stuffIntToCharsBuf@dig4+1)^(0+128)
  6760  065A                     l3223:
  6761                           
  6762                           ;main.c: 393:   printf("dig1 dig2 dig3 dig4\n");
  6763  065A  3018               	movlw	low (STR_2| (0+32768))
  6764  065B  0020               	movlb	0	; select bank0
  6765  065C  00E6               	movwf	printf@fmt
  6766  065D  3098               	movlw	high (STR_2| (0+32768))
  6767  065E  00E7               	movwf	printf@fmt+1
  6768  065F  3197  270E  3185   	fcall	_printf
  6769  0662                     l3225:
  6770                           
  6771                           ;main.c: 394:   printf("  %d   %d   %d   %d   \n", dig1, dig2, dig3, dig4);
  6772  0662  3000               	movlw	low (STR_3| (0+32768))
  6773  0663  0020               	movlb	0	; select bank0
  6774  0664  00E6               	movwf	printf@fmt
  6775  0665  3098               	movlw	high (STR_3| (0+32768))
  6776  0666  00E7               	movwf	printf@fmt+1
  6777  0667  0021               	movlb	1	; select bank1
  6778  0668  082E               	movf	(stuffIntToCharsBuf@dig1+1)^(0+128),w
  6779  0669  0020               	movlb	0	; select bank0
  6780  066A  00E9               	movwf	?_printf+3
  6781  066B  0021               	movlb	1	; select bank1
  6782  066C  082D               	movf	stuffIntToCharsBuf@dig1^(0+128),w
  6783  066D  0020               	movlb	0	; select bank0
  6784  066E  00E8               	movwf	?_printf+2
  6785  066F  0021               	movlb	1	; select bank1
  6786  0670  0830               	movf	(stuffIntToCharsBuf@dig2+1)^(0+128),w
  6787  0671  0020               	movlb	0	; select bank0
  6788  0672  00EB               	movwf	?_printf+5
  6789  0673  0021               	movlb	1	; select bank1
  6790  0674  082F               	movf	stuffIntToCharsBuf@dig2^(0+128),w
  6791  0675  0020               	movlb	0	; select bank0
  6792  0676  00EA               	movwf	?_printf+4
  6793  0677  0021               	movlb	1	; select bank1
  6794  0678  0832               	movf	(stuffIntToCharsBuf@dig3+1)^(0+128),w
  6795  0679  0020               	movlb	0	; select bank0
  6796  067A  00ED               	movwf	?_printf+7
  6797  067B  0021               	movlb	1	; select bank1
  6798  067C  0831               	movf	stuffIntToCharsBuf@dig3^(0+128),w
  6799  067D  0020               	movlb	0	; select bank0
  6800  067E  00EC               	movwf	?_printf+6
  6801  067F  0021               	movlb	1	; select bank1
  6802  0680  082C               	movf	(stuffIntToCharsBuf@dig4+1)^(0+128),w
  6803  0681  0020               	movlb	0	; select bank0
  6804  0682  00EF               	movwf	?_printf+9
  6805  0683  0021               	movlb	1	; select bank1
  6806  0684  082B               	movf	stuffIntToCharsBuf@dig4^(0+128),w
  6807  0685  0020               	movlb	0	; select bank0
  6808  0686  00EE               	movwf	?_printf+8
  6809  0687  3197  270E  3185   	fcall	_printf
  6810  068A                     l3227:
  6811                           
  6812                           ;main.c: 397:   buf[0+pos+neg] = dig1+48;
  6813  068A  0021               	movlb	1	; select bank1
  6814  068B  082D               	movf	stuffIntToCharsBuf@dig1^(0+128),w
  6815  068C  3E30               	addlw	48
  6816  068D  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  6817  068E  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  6818  068F  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  6819  0690  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  6820  0691  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  6821  0692  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  6822  0693  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  6823  0694  082A               	movf	(??_stuffIntToCharsBuf+2)^(0+128),w
  6824  0695  0086               	movwf	6
  6825  0696  0187               	clrf	7
  6826  0697  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  6827  0698  0081               	movwf	1
  6828  0699                     l3229:
  6829                           
  6830                           ;main.c: 398:   buf[1+pos+neg] = dig2+48;
  6831  0699  082F               	movf	stuffIntToCharsBuf@dig2^(0+128),w
  6832  069A  3E30               	addlw	48
  6833  069B  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  6834  069C  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  6835  069D  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  6836  069E  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  6837  069F  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  6838  06A0  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  6839  06A1  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  6840  06A2  0A2A               	incf	(??_stuffIntToCharsBuf+2)^(0+128),w
  6841  06A3  0086               	movwf	6
  6842  06A4  0187               	clrf	7
  6843  06A5  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  6844  06A6  0081               	movwf	1
  6845  06A7                     l3231:
  6846                           
  6847                           ;main.c: 399:   buf[2+pos+neg] = dig3+48;
  6848  06A7  0831               	movf	stuffIntToCharsBuf@dig3^(0+128),w
  6849  06A8  3E30               	addlw	48
  6850  06A9  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  6851  06AA  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  6852  06AB  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  6853  06AC  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  6854  06AD  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  6855  06AE  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  6856  06AF  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  6857  06B0  082A               	movf	(??_stuffIntToCharsBuf+2)^(0+128),w
  6858  06B1  3E02               	addlw	2
  6859  06B2  0086               	movwf	6
  6860  06B3  0187               	clrf	7
  6861  06B4  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  6862  06B5  0081               	movwf	1
  6863  06B6                     l3233:
  6864                           
  6865                           ;main.c: 400:   buf[3+pos+neg] = dig4+48;
  6866  06B6  082B               	movf	stuffIntToCharsBuf@dig4^(0+128),w
  6867  06B7  3E30               	addlw	48
  6868  06B8  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  6869  06B9  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  6870  06BA  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  6871  06BB  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  6872  06BC  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  6873  06BD  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  6874  06BE  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  6875  06BF  082A               	movf	(??_stuffIntToCharsBuf+2)^(0+128),w
  6876  06C0  3E03               	addlw	3
  6877  06C1  0086               	movwf	6
  6878  06C2  0187               	clrf	7
  6879  06C3  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  6880  06C4  0081               	movwf	1
  6881  06C5                     l3235:
  6882                           
  6883                           ;main.c: 402:   if (dig1 == 0){
  6884  06C5  082D               	movf	stuffIntToCharsBuf@dig1^(0+128),w
  6885  06C6  042E               	iorwf	(stuffIntToCharsBuf@dig1+1)^(0+128),w
  6886  06C7  1D03               	btfss	3,2
  6887  06C8  2ECA               	goto	u2961
  6888  06C9  2ECB               	goto	u2960
  6889  06CA                     u2961:
  6890  06CA  2EFF               	goto	l357
  6891  06CB                     u2960:
  6892  06CB                     l3237:
  6893                           
  6894                           ;main.c: 403:     buf[0+pos+neg] = ' ';
  6895  06CB  3020               	movlw	32
  6896  06CC  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  6897  06CD  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  6898  06CE  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  6899  06CF  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  6900  06D0  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  6901  06D1  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  6902  06D2  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  6903  06D3  082A               	movf	(??_stuffIntToCharsBuf+2)^(0+128),w
  6904  06D4  0086               	movwf	6
  6905  06D5  0187               	clrf	7
  6906  06D6  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  6907  06D7  0081               	movwf	1
  6908  06D8                     l3239:
  6909                           
  6910                           ;main.c: 404:     if (dig2 == 0){
  6911  06D8  082F               	movf	stuffIntToCharsBuf@dig2^(0+128),w
  6912  06D9  0430               	iorwf	(stuffIntToCharsBuf@dig2+1)^(0+128),w
  6913  06DA  1D03               	btfss	3,2
  6914  06DB  2EDD               	goto	u2971
  6915  06DC  2EDE               	goto	u2970
  6916  06DD                     u2971:
  6917  06DD  2EFF               	goto	l357
  6918  06DE                     u2970:
  6919  06DE                     l3241:
  6920                           
  6921                           ;main.c: 405:       buf[1+pos+neg] = ' ';
  6922  06DE  3020               	movlw	32
  6923  06DF  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  6924  06E0  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  6925  06E1  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  6926  06E2  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  6927  06E3  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  6928  06E4  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  6929  06E5  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  6930  06E6  0A2A               	incf	(??_stuffIntToCharsBuf+2)^(0+128),w
  6931  06E7  0086               	movwf	6
  6932  06E8  0187               	clrf	7
  6933  06E9  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  6934  06EA  0081               	movwf	1
  6935  06EB                     l3243:
  6936                           
  6937                           ;main.c: 406:       if (dig3 == 0 )
  6938  06EB  0831               	movf	stuffIntToCharsBuf@dig3^(0+128),w
  6939  06EC  0432               	iorwf	(stuffIntToCharsBuf@dig3+1)^(0+128),w
  6940  06ED  1D03               	btfss	3,2
  6941  06EE  2EF0               	goto	u2981
  6942  06EF  2EF1               	goto	u2980
  6943  06F0                     u2981:
  6944  06F0  2EFF               	goto	l357
  6945  06F1                     u2980:
  6946  06F1                     l3245:
  6947                           
  6948                           ;main.c: 407:         buf[2+pos+neg] = ' ';
  6949  06F1  3020               	movlw	32
  6950  06F2  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  6951  06F3  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  6952  06F4  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  6953  06F5  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  6954  06F6  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  6955  06F7  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  6956  06F8  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  6957  06F9  082A               	movf	(??_stuffIntToCharsBuf+2)^(0+128),w
  6958  06FA  3E02               	addlw	2
  6959  06FB  0086               	movwf	6
  6960  06FC  0187               	clrf	7
  6961  06FD  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  6962  06FE  0081               	movwf	1
  6963  06FF                     l357:
  6964  06FF  0008               	return
  6965  0700                     __end_of_stuffIntToCharsBuf:
  6966                           
  6967                           	psect	text2
  6968  170E                     __ptext2:	
  6969 ;; *************** function _printf *****************
  6970 ;; Defined at:
  6971 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  6974 ;;		 -> STR_3(24), STR_2(21), STR_1(9), 
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;  ret             2    0        int 
  6977 ;;  ap              1    2[BANK1 ] PTR void [1]
  6978 ;;		 -> ?_printf(2), 
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  2   70[BANK0 ] int 
  6981 ;; Registers used:
  6982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6988 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6989 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6990 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6991 ;;      Totals:         1      10       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6992 ;;Total ram usage:       14 bytes
  6993 ;; Hardware stack levels used:    1
  6994 ;; Hardware stack levels required when called:   11
  6995 ;; This function calls:
  6996 ;;		_vfprintf
  6997 ;; This function is called by:
  6998 ;;		_stuffIntToCharsBuf
  6999 ;; This function uses a non-reentrant model
  7000 ;;
  7001                           
  7002                           
  7003                           ;psect for function _printf
  7004  170E                     _printf:
  7005  170E                     l2915:	
  7006                           ;incstack = 0
  7007                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7008                           
  7009  170E  3068               	movlw	(low ((?_printf| 0+2)))& (0+255)
  7010  170F  00FD               	movwf	??_printf
  7011  1710  087D               	movf	??_printf,w
  7012  1711  0021               	movlb	1	; select bank1
  7013  1712  00A2               	movwf	printf@ap^(0+128)
  7014  1713                     l2917:
  7015  1713  0020               	movlb	0	; select bank0
  7016  1714  0867               	movf	printf@fmt+1,w
  7017  1715  00DF               	movwf	vfprintf@fmt+1
  7018  1716  0866               	movf	printf@fmt,w
  7019  1717  00DE               	movwf	vfprintf@fmt
  7020  1718  30A2               	movlw	(low (printf@ap| 0))& (0+255)
  7021  1719  00FD               	movwf	??_printf
  7022  171A  087D               	movf	??_printf,w
  7023  171B  00E0               	movwf	vfprintf@ap
  7024  171C  3000               	movlw	0
  7025  171D  3188  2052  3197   	fcall	_vfprintf
  7026  1720                     l1047:
  7027  1720  0008               	return
  7028  1721                     __end_of_printf:
  7029                           
  7030                           	psect	text3
  7031  0852                     __ptext3:	
  7032 ;; *************** function _vfprintf *****************
  7033 ;; Defined at:
  7034 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;  fp              1    wreg     PTR struct _IO_FILE
  7037 ;;		 -> NULL(0), 
  7038 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  7039 ;;		 -> STR_3(24), STR_2(21), STR_1(9), 
  7040 ;;  ap              1   64[BANK0 ] PTR PTR void 
  7041 ;;		 -> printf@ap(1), 
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  7044 ;;		 -> NULL(0), 
  7045 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  7046 ;;		 -> STR_3(24), STR_2(21), STR_1(9), 
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  2   62[BANK0 ] int 
  7049 ;; Registers used:
  7050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7056 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7057 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7058 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7059 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7060 ;;Total ram usage:        8 bytes
  7061 ;; Hardware stack levels used:    1
  7062 ;; Hardware stack levels required when called:   10
  7063 ;; This function calls:
  7064 ;;		_vfpfcnvrt
  7065 ;; This function is called by:
  7066 ;;		_printf
  7067 ;; This function uses a non-reentrant model
  7068 ;;
  7069                           
  7070                           
  7071                           ;psect for function _vfprintf
  7072  0852                     _vfprintf:
  7073                           
  7074                           ;incstack = 0
  7075                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7076                           ;vfprintf@fp stored from wreg
  7077  0852  0020               	movlb	0	; select bank0
  7078  0853  00E3               	movwf	vfprintf@fp
  7079  0854                     l2793:
  7080                           
  7081                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  7082  0854  085F               	movf	vfprintf@fmt+1,w
  7083  0855  00E5               	movwf	vfprintf@cfmt+1
  7084  0856  085E               	movf	vfprintf@fmt,w
  7085  0857  00E4               	movwf	vfprintf@cfmt
  7086  0858                     l2795:
  7087                           
  7088                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  7089  0858  0021               	movlb	1	; select bank1
  7090  0859  01CF               	clrf	_nout^(0+128)
  7091  085A  01D0               	clrf	(_nout+1)^(0+128)
  7092                           
  7093                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7094  085B  2870               	goto	l2799
  7095  085C                     l2797:
  7096                           
  7097                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  7098  085C  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  7099  085D  00E1               	movwf	??_vfprintf
  7100  085E  0861               	movf	??_vfprintf,w
  7101  085F  00CE               	movwf	vfpfcnvrt@fmt
  7102  0860  0860               	movf	vfprintf@ap,w
  7103  0861  00E2               	movwf	??_vfprintf+1
  7104  0862  0862               	movf	??_vfprintf+1,w
  7105  0863  00CF               	movwf	vfpfcnvrt@ap
  7106  0864  0863               	movf	vfprintf@fp,w
  7107  0865  318E  2624  3188   	fcall	_vfpfcnvrt
  7108  0868  0020               	movlb	0	; select bank0
  7109  0869  084E               	movf	?_vfpfcnvrt,w
  7110  086A  0021               	movlb	1	; select bank1
  7111  086B  07CF               	addwf	_nout^(0+128),f
  7112  086C  0020               	movlb	0	; select bank0
  7113  086D  084F               	movf	?_vfpfcnvrt+1,w
  7114  086E  0021               	movlb	1	; select bank1
  7115  086F  3DD0               	addwfc	(_nout+1)^(0+128),f
  7116  0870                     l2799:
  7117                           
  7118                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7119  0870  0020               	movlb	0	; select bank0
  7120  0871  0864               	movf	vfprintf@cfmt,w
  7121  0872  0084               	movwf	4
  7122  0873  0865               	movf	vfprintf@cfmt+1,w
  7123  0874  0085               	movwf	5
  7124  0875  0012               	moviw fsr0++
  7125  0876  1D03               	btfss	3,2
  7126  0877  2879               	goto	u2311
  7127  0878  287A               	goto	u2310
  7128  0879                     u2311:
  7129  0879  285C               	goto	l2797
  7130  087A                     u2310:
  7131  087A                     l2801:
  7132                           
  7133                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  7134  087A  0021               	movlb	1	; select bank1
  7135  087B  0850               	movf	(_nout+1)^(0+128),w
  7136  087C  0020               	movlb	0	; select bank0
  7137  087D  00DF               	movwf	?_vfprintf+1
  7138  087E  0021               	movlb	1	; select bank1
  7139  087F  084F               	movf	_nout^(0+128),w
  7140  0880  0020               	movlb	0	; select bank0
  7141  0881  00DE               	movwf	?_vfprintf
  7142  0882                     l1119:
  7143  0882  0008               	return
  7144  0883                     __end_of_vfprintf:
  7145                           
  7146                           	psect	text4
  7147  0E24                     __ptext4:	
  7148 ;; *************** function _vfpfcnvrt *****************
  7149 ;; Defined at:
  7150 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;  fp              1    wreg     PTR struct _IO_FILE
  7153 ;;		 -> NULL(0), 
  7154 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  7155 ;;		 -> vfprintf@cfmt(2), 
  7156 ;;  ap              1   47[BANK0 ] PTR PTR void 
  7157 ;;		 -> printf@ap(1), 
  7158 ;; Auto vars:     Size  Location     Type
  7159 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  7160 ;;		 -> NULL(0), 
  7161 ;;  ll              8   53[BANK0 ] long long 
  7162 ;;  llu             8    0        unsigned long long 
  7163 ;;  f               4    0        unsigned long long 
  7164 ;;  ct              3    0        unsigned char [3]
  7165 ;;  vp              2    0        PTR void 
  7166 ;;  i               2    0        int 
  7167 ;;  done            2    0        int 
  7168 ;;  cp              2    0        PTR unsigned char 
  7169 ;;  c               1    0        unsigned char 
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  2   46[BANK0 ] int 
  7172 ;; Registers used:
  7173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7179 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7180 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7181 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7182 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7183 ;;Total ram usage:       16 bytes
  7184 ;; Hardware stack levels used:    1
  7185 ;; Hardware stack levels required when called:    9
  7186 ;; This function calls:
  7187 ;;		_dtoa
  7188 ;;		_fputc
  7189 ;; This function is called by:
  7190 ;;		_vfprintf
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           
  7195                           ;psect for function _vfpfcnvrt
  7196  0E24                     _vfpfcnvrt:
  7197                           
  7198                           ;incstack = 0
  7199                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7200                           ;vfpfcnvrt@fp stored from wreg
  7201  0E24  0020               	movlb	0	; select bank0
  7202  0E25  00DD               	movwf	vfpfcnvrt@fp
  7203  0E26                     l2675:
  7204                           
  7205                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  7206  0E26  084E               	movf	vfpfcnvrt@fmt,w
  7207  0E27  0086               	movwf	6
  7208  0E28  0187               	clrf	7
  7209  0E29  3F40               	moviw [0]fsr1
  7210  0E2A  00D0               	movwf	??_vfpfcnvrt
  7211  0E2B  3F41               	moviw [1]fsr1
  7212  0E2C  00D1               	movwf	??_vfpfcnvrt+1
  7213  0E2D  0850               	movf	??_vfpfcnvrt,w
  7214  0E2E  0084               	movwf	4
  7215  0E2F  0851               	movf	??_vfpfcnvrt+1,w
  7216  0E30  0085               	movwf	5
  7217  0E31  0012               	moviw fsr0++
  7218  0E32  3A25               	xorlw	37
  7219  0E33  1D03               	btfss	3,2
  7220  0E34  2E36               	goto	u2271
  7221  0E35  2E37               	goto	u2270
  7222  0E36                     u2271:
  7223  0E36  2EDB               	goto	l2711
  7224  0E37                     u2270:
  7225  0E37                     l2677:
  7226                           
  7227                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  7228  0E37  084E               	movf	vfpfcnvrt@fmt,w
  7229  0E38  0086               	movwf	6
  7230  0E39  0187               	clrf	7
  7231  0E3A  3001               	movlw	1
  7232  0E3B  0781               	addwf	1,f
  7233  0E3C  3141               	addfsr 1,1
  7234  0E3D  1803               	skipnc
  7235  0E3E  0A81               	incf	1,f
  7236  0E3F                     l2679:
  7237                           
  7238                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  7239  0E3F  0021               	movlb	1	; select bank1
  7240  0E40  01D1               	clrf	_width^(0+128)
  7241  0E41  01D2               	clrf	(_width+1)^(0+128)
  7242  0E42  01D5               	clrf	_flags^(0+128)
  7243  0E43  01D6               	clrf	(_flags+1)^(0+128)
  7244  0E44                     l2681:
  7245                           
  7246                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  7247  0E44  30FF               	movlw	255
  7248  0E45  00D3               	movwf	_prec^(0+128)
  7249  0E46  30FF               	movlw	255
  7250  0E47  00D4               	movwf	(_prec^(0+128)+1)
  7251  0E48                     l2683:
  7252                           
  7253                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7254  0E48  0020               	movlb	0	; select bank0
  7255  0E49  084E               	movf	vfpfcnvrt@fmt,w
  7256  0E4A  0086               	movwf	6
  7257  0E4B  0187               	clrf	7
  7258  0E4C  3F40               	moviw [0]fsr1
  7259  0E4D  00D0               	movwf	??_vfpfcnvrt
  7260  0E4E  3F41               	moviw [1]fsr1
  7261  0E4F  00D1               	movwf	??_vfpfcnvrt+1
  7262  0E50  0850               	movf	??_vfpfcnvrt,w
  7263  0E51  0084               	movwf	4
  7264  0E52  0851               	movf	??_vfpfcnvrt+1,w
  7265  0E53  0085               	movwf	5
  7266  0E54  0012               	moviw fsr0++
  7267  0E55  3A64               	xorlw	100
  7268  0E56  1903               	btfsc	3,2
  7269  0E57  2E59               	goto	u2281
  7270  0E58  2E5A               	goto	u2280
  7271  0E59                     u2281:
  7272  0E59  2E6B               	goto	l2687
  7273  0E5A                     u2280:
  7274  0E5A                     l2685:
  7275  0E5A  084E               	movf	vfpfcnvrt@fmt,w
  7276  0E5B  0086               	movwf	6
  7277  0E5C  0187               	clrf	7
  7278  0E5D  3F40               	moviw [0]fsr1
  7279  0E5E  00D0               	movwf	??_vfpfcnvrt
  7280  0E5F  3F41               	moviw [1]fsr1
  7281  0E60  00D1               	movwf	??_vfpfcnvrt+1
  7282  0E61  0850               	movf	??_vfpfcnvrt,w
  7283  0E62  0084               	movwf	4
  7284  0E63  0851               	movf	??_vfpfcnvrt+1,w
  7285  0E64  0085               	movwf	5
  7286  0E65  0012               	moviw fsr0++
  7287  0E66  3A69               	xorlw	105
  7288  0E67  1D03               	btfss	3,2
  7289  0E68  2E6A               	goto	u2291
  7290  0E69  2E6B               	goto	u2290
  7291  0E6A                     u2291:
  7292  0E6A  2EA6               	goto	l2695
  7293  0E6B                     u2290:
  7294  0E6B                     l2687:
  7295                           
  7296                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7297  0E6B  084E               	movf	vfpfcnvrt@fmt,w
  7298  0E6C  0086               	movwf	6
  7299  0E6D  0187               	clrf	7
  7300  0E6E  3001               	movlw	1
  7301  0E6F  0781               	addwf	1,f
  7302  0E70  3141               	addfsr 1,1
  7303  0E71  1803               	skipnc
  7304  0E72  0A81               	incf	1,f
  7305  0E73                     l2689:
  7306                           
  7307                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7308  0E73  084F               	movf	vfpfcnvrt@ap,w
  7309  0E74  0086               	movwf	6
  7310  0E75  0187               	clrf	7
  7311  0E76  0801               	movf	1,w
  7312  0E77  0084               	movwf	4
  7313  0E78  0185               	clrf	5
  7314  0E79  3002               	movlw	2
  7315  0E7A  0781               	addwf	1,f
  7316  0E7B  3F00               	moviw [0]fsr0
  7317  0E7C  00D0               	movwf	??_vfpfcnvrt
  7318  0E7D  3F01               	moviw [1]fsr0
  7319  0E7E  00D1               	movwf	??_vfpfcnvrt+1
  7320  0E7F  0850               	movf	??_vfpfcnvrt,w
  7321  0E80  00D5               	movwf	vfpfcnvrt@ll
  7322  0E81  0851               	movf	??_vfpfcnvrt+1,w
  7323  0E82  00D6               	movwf	vfpfcnvrt@ll+1
  7324  0E83  0D89               	rlf	9,f
  7325  0E84  3B89               	subwfb	9,f
  7326  0E85  0989               	comf	9,f
  7327  0E86  00D7               	movwf	vfpfcnvrt@ll+2
  7328  0E87  00D8               	movwf	vfpfcnvrt@ll+3
  7329  0E88  00D9               	movwf	vfpfcnvrt@ll+4
  7330  0E89  00DA               	movwf	vfpfcnvrt@ll+5
  7331  0E8A  00DB               	movwf	vfpfcnvrt@ll+6
  7332  0E8B  00DC               	movwf	vfpfcnvrt@ll+7
  7333  0E8C                     l2691:
  7334                           
  7335                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7336  0E8C  0855               	movf	vfpfcnvrt@ll,w
  7337  0E8D  00B0               	movwf	dtoa@d
  7338  0E8E  0856               	movf	vfpfcnvrt@ll+1,w
  7339  0E8F  00B1               	movwf	dtoa@d+1
  7340  0E90  0857               	movf	vfpfcnvrt@ll+2,w
  7341  0E91  00B2               	movwf	dtoa@d+2
  7342  0E92  0858               	movf	vfpfcnvrt@ll+3,w
  7343  0E93  00B3               	movwf	dtoa@d+3
  7344  0E94  0859               	movf	vfpfcnvrt@ll+4,w
  7345  0E95  00B4               	movwf	dtoa@d+4
  7346  0E96  085A               	movf	vfpfcnvrt@ll+5,w
  7347  0E97  00B5               	movwf	dtoa@d+5
  7348  0E98  085B               	movf	vfpfcnvrt@ll+6,w
  7349  0E99  00B6               	movwf	dtoa@d+6
  7350  0E9A  085C               	movf	vfpfcnvrt@ll+7,w
  7351  0E9B  00B7               	movwf	dtoa@d+7
  7352  0E9C  085D               	movf	vfpfcnvrt@fp,w
  7353  0E9D  3184  245A  318E   	fcall	_dtoa
  7354  0EA0  0020               	movlb	0	; select bank0
  7355  0EA1  0831               	movf	?_dtoa+1,w
  7356  0EA2  00CF               	movwf	?_vfpfcnvrt+1
  7357  0EA3  0830               	movf	?_dtoa,w
  7358  0EA4  00CE               	movwf	?_vfpfcnvrt
  7359  0EA5  2EFE               	goto	l1112
  7360  0EA6                     l2695:
  7361                           
  7362                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7363  0EA6  084E               	movf	vfpfcnvrt@fmt,w
  7364  0EA7  0086               	movwf	6
  7365  0EA8  0187               	clrf	7
  7366  0EA9  3F40               	moviw [0]fsr1
  7367  0EAA  00D0               	movwf	??_vfpfcnvrt
  7368  0EAB  3F41               	moviw [1]fsr1
  7369  0EAC  00D1               	movwf	??_vfpfcnvrt+1
  7370  0EAD  0850               	movf	??_vfpfcnvrt,w
  7371  0EAE  0084               	movwf	4
  7372  0EAF  0851               	movf	??_vfpfcnvrt+1,w
  7373  0EB0  0085               	movwf	5
  7374  0EB1  0012               	moviw fsr0++
  7375  0EB2  3A25               	xorlw	37
  7376  0EB3  1D03               	btfss	3,2
  7377  0EB4  2EB6               	goto	u2301
  7378  0EB5  2EB7               	goto	u2300
  7379  0EB6                     u2301:
  7380  0EB6  2ED0               	goto	l2705
  7381  0EB7                     u2300:
  7382  0EB7                     l2697:
  7383                           
  7384                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7385  0EB7  084E               	movf	vfpfcnvrt@fmt,w
  7386  0EB8  0086               	movwf	6
  7387  0EB9  0187               	clrf	7
  7388  0EBA  3001               	movlw	1
  7389  0EBB  0781               	addwf	1,f
  7390  0EBC  3141               	addfsr 1,1
  7391  0EBD  1803               	skipnc
  7392  0EBE  0A81               	incf	1,f
  7393  0EBF                     l2699:
  7394                           
  7395                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7396  0EBF  3025               	movlw	37
  7397  0EC0  00F0               	movwf	fputc@c
  7398  0EC1  3000               	movlw	0
  7399  0EC2  00F1               	movwf	fputc@c+1
  7400  0EC3  085D               	movf	vfpfcnvrt@fp,w
  7401  0EC4  00D0               	movwf	??_vfpfcnvrt
  7402  0EC5  0850               	movf	??_vfpfcnvrt,w
  7403  0EC6  00F2               	movwf	fputc@fp
  7404  0EC7  3188  20E9  318E   	fcall	_fputc
  7405  0ECA                     l2701:
  7406                           
  7407                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7408  0ECA  3001               	movlw	1
  7409  0ECB  0020               	movlb	0	; select bank0
  7410  0ECC  00CE               	movwf	?_vfpfcnvrt
  7411  0ECD  3000               	movlw	0
  7412  0ECE  00CF               	movwf	?_vfpfcnvrt+1
  7413  0ECF  2EFE               	goto	l1112
  7414  0ED0                     l2705:
  7415                           
  7416                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7417  0ED0  084E               	movf	vfpfcnvrt@fmt,w
  7418  0ED1  0086               	movwf	6
  7419  0ED2  0187               	clrf	7
  7420  0ED3  3001               	movlw	1
  7421  0ED4  0781               	addwf	1,f
  7422  0ED5  3141               	addfsr 1,1
  7423  0ED6  1803               	skipnc
  7424  0ED7  0A81               	incf	1,f
  7425  0ED8                     l2707:
  7426                           
  7427                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7428  0ED8  01CE               	clrf	?_vfpfcnvrt
  7429  0ED9  01CF               	clrf	?_vfpfcnvrt+1
  7430  0EDA  2EFE               	goto	l1112
  7431  0EDB                     l2711:
  7432                           
  7433                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7434  0EDB  084E               	movf	vfpfcnvrt@fmt,w
  7435  0EDC  0086               	movwf	6
  7436  0EDD  0187               	clrf	7
  7437  0EDE  3F40               	moviw [0]fsr1
  7438  0EDF  00D0               	movwf	??_vfpfcnvrt
  7439  0EE0  3F41               	moviw [1]fsr1
  7440  0EE1  00D1               	movwf	??_vfpfcnvrt+1
  7441  0EE2  0850               	movf	??_vfpfcnvrt,w
  7442  0EE3  0084               	movwf	4
  7443  0EE4  0851               	movf	??_vfpfcnvrt+1,w
  7444  0EE5  0085               	movwf	5
  7445  0EE6  0800               	movf	0,w	;code access
  7446  0EE7  00D2               	movwf	??_vfpfcnvrt+2
  7447  0EE8  01D3               	clrf	??_vfpfcnvrt+3
  7448  0EE9  0852               	movf	??_vfpfcnvrt+2,w
  7449  0EEA  00F0               	movwf	fputc@c
  7450  0EEB  0853               	movf	??_vfpfcnvrt+3,w
  7451  0EEC  00F1               	movwf	fputc@c+1
  7452  0EED  085D               	movf	vfpfcnvrt@fp,w
  7453  0EEE  00D4               	movwf	??_vfpfcnvrt+4
  7454  0EEF  0854               	movf	??_vfpfcnvrt+4,w
  7455  0EF0  00F2               	movwf	fputc@fp
  7456  0EF1  3188  20E9  318E   	fcall	_fputc
  7457  0EF4                     l2713:
  7458                           
  7459                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7460  0EF4  0020               	movlb	0	; select bank0
  7461  0EF5  084E               	movf	vfpfcnvrt@fmt,w
  7462  0EF6  0086               	movwf	6
  7463  0EF7  0187               	clrf	7
  7464  0EF8  3001               	movlw	1
  7465  0EF9  0781               	addwf	1,f
  7466  0EFA  3141               	addfsr 1,1
  7467  0EFB  1803               	skipnc
  7468  0EFC  0A81               	incf	1,f
  7469  0EFD  2ECA               	goto	l2701
  7470  0EFE                     l1112:
  7471  0EFE  0008               	return
  7472  0EFF                     __end_of_vfpfcnvrt:
  7473                           
  7474                           	psect	text5
  7475  045A                     __ptext5:	
  7476 ;; *************** function _dtoa *****************
  7477 ;; Defined at:
  7478 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  7479 ;; Parameters:    Size  Location     Type
  7480 ;;  fp              1    wreg     PTR struct _IO_FILE
  7481 ;;		 -> NULL(0), 
  7482 ;;  d               8   16[BANK0 ] long long 
  7483 ;; Auto vars:     Size  Location     Type
  7484 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  7485 ;;		 -> NULL(0), 
  7486 ;;  n               8   36[BANK0 ] long long 
  7487 ;;  i               2   44[BANK0 ] int 
  7488 ;;  s               2   34[BANK0 ] int 
  7489 ;;  w               2   32[BANK0 ] int 
  7490 ;;  p               2   29[BANK0 ] int 
  7491 ;; Return value:  Size  Location     Type
  7492 ;;                  2   16[BANK0 ] int 
  7493 ;; Registers used:
  7494 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7495 ;; Tracked objects:
  7496 ;;		On entry : 0/0
  7497 ;;		On exit  : 0/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7500 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7501 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7502 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7503 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7504 ;;Total ram usage:       30 bytes
  7505 ;; Hardware stack levels used:    1
  7506 ;; Hardware stack levels required when called:    8
  7507 ;; This function calls:
  7508 ;;		___aodiv
  7509 ;;		___aomod
  7510 ;;		_abs
  7511 ;;		_pad
  7512 ;; This function is called by:
  7513 ;;		_vfpfcnvrt
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           
  7517                           
  7518                           ;psect for function _dtoa
  7519  045A                     _dtoa:
  7520                           
  7521                           ;incstack = 0
  7522                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7523                           ;dtoa@fp stored from wreg
  7524  045A  0020               	movlb	0	; select bank0
  7525  045B  00BF               	movwf	dtoa@fp
  7526  045C                     l2533:
  7527                           
  7528                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7529  045C  0830               	movf	dtoa@d,w
  7530  045D  00C4               	movwf	dtoa@n
  7531  045E  0831               	movf	dtoa@d+1,w
  7532  045F  00C5               	movwf	dtoa@n+1
  7533  0460  0832               	movf	dtoa@d+2,w
  7534  0461  00C6               	movwf	dtoa@n+2
  7535  0462  0833               	movf	dtoa@d+3,w
  7536  0463  00C7               	movwf	dtoa@n+3
  7537  0464  0834               	movf	dtoa@d+4,w
  7538  0465  00C8               	movwf	dtoa@n+4
  7539  0466  0835               	movf	dtoa@d+5,w
  7540  0467  00C9               	movwf	dtoa@n+5
  7541  0468  0836               	movf	dtoa@d+6,w
  7542  0469  00CA               	movwf	dtoa@n+6
  7543  046A  0837               	movf	dtoa@d+7,w
  7544  046B  00CB               	movwf	dtoa@n+7
  7545  046C                     l2535:
  7546                           
  7547                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7548  046C  3044               	movlw	low dtoa@n
  7549  046D  0086               	movwf	6
  7550  046E  3000               	movlw	high dtoa@n
  7551  046F  0087               	movwf	7
  7552  0470  3F47               	moviw [7]fsr1
  7553  0471  00B8               	movwf	??_dtoa
  7554  0472  1BB8               	btfsc	??_dtoa,7
  7555  0473  2C75               	goto	u2011
  7556  0474  2C77               	goto	u2010
  7557  0475                     u2011:
  7558  0475  3001               	movlw	1
  7559  0476  2C78               	goto	u2020
  7560  0477                     u2010:
  7561  0477  3000               	movlw	0
  7562  0478                     u2020:
  7563  0478  0020               	movlb	0	; select bank0
  7564  0479  00B9               	movwf	??_dtoa+1
  7565  047A  01BA               	clrf	??_dtoa+2
  7566  047B  0839               	movf	??_dtoa+1,w
  7567  047C  00C2               	movwf	dtoa@s
  7568  047D  083A               	movf	??_dtoa+2,w
  7569  047E  00C3               	movwf	dtoa@s+1
  7570  047F                     l2537:
  7571                           
  7572                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7573  047F  0842               	movf	dtoa@s,w
  7574  0480  0443               	iorwf	dtoa@s+1,w
  7575  0481  1903               	btfsc	3,2
  7576  0482  2C84               	goto	u2031
  7577  0483  2C85               	goto	u2030
  7578  0484                     u2031:
  7579  0484  2CA3               	goto	l1082
  7580  0485                     u2030:
  7581  0485                     l2539:
  7582                           
  7583                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7584  0485  09C4               	comf	dtoa@n,f
  7585  0486  09C5               	comf	dtoa@n+1,f
  7586  0487  09C6               	comf	dtoa@n+2,f
  7587  0488  09C7               	comf	dtoa@n+3,f
  7588  0489  09C8               	comf	dtoa@n+4,f
  7589  048A  09C9               	comf	dtoa@n+5,f
  7590  048B  09CA               	comf	dtoa@n+6,f
  7591  048C  09CB               	comf	dtoa@n+7,f
  7592  048D  0AC4               	incf	dtoa@n,f
  7593  048E  1D03               	skipz
  7594  048F  2CA3               	goto	u204lld
  7595  0490  0AC5               	incf	dtoa@n+1,f
  7596  0491  1D03               	skipz
  7597  0492  2CA3               	goto	u204lld
  7598  0493  0AC6               	incf	dtoa@n+2,f
  7599  0494  1D03               	skipz
  7600  0495  2CA3               	goto	u204lld
  7601  0496  0AC7               	incf	dtoa@n+3,f
  7602  0497  1D03               	skipz
  7603  0498  2CA3               	goto	u204lld
  7604  0499  0AC8               	incf	dtoa@n+4,f
  7605  049A  1D03               	skipz
  7606  049B  2CA3               	goto	u204lld
  7607  049C  0AC9               	incf	dtoa@n+5,f
  7608  049D  1D03               	skipz
  7609  049E  2CA3               	goto	u204lld
  7610  049F  0ACA               	incf	dtoa@n+6,f
  7611  04A0  1D03               	skipz
  7612  04A1  2CA3               	goto	u204lld
  7613  04A2  0ACB               	incf	dtoa@n+7,f
  7614  04A3                     u204lld:
  7615  04A3                     l1082:	
  7616                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 297:     }
  7617                           
  7618                           
  7619                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7620  04A3  0021               	movlb	1	; select bank1
  7621  04A4  1BD4               	btfsc	(_prec+1)^(0+128),7
  7622  04A5  2CA7               	goto	u2051
  7623  04A6  2CA8               	goto	u2050
  7624  04A7                     u2051:
  7625  04A7  2CAC               	goto	l1083
  7626  04A8                     u2050:
  7627  04A8                     l2541:
  7628                           
  7629                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7630  04A8  30FD               	movlw	253
  7631  04A9  05D5               	andwf	_flags^(0+128),f
  7632  04AA  30FF               	movlw	255
  7633  04AB  05D6               	andwf	(_flags+1)^(0+128),f
  7634  04AC                     l1083:	
  7635                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 302:     }
  7636                           
  7637                           
  7638                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7639  04AC  0854               	movf	(_prec+1)^(0+128),w
  7640  04AD  3A80               	xorlw	128
  7641  04AE  0020               	movlb	0	; select bank0
  7642  04AF  00B8               	movwf	??_dtoa
  7643  04B0  3080               	movlw	128
  7644  04B1  0238               	subwf	??_dtoa,w
  7645  04B2  1D03               	skipz
  7646  04B3  2CB7               	goto	u2065
  7647  04B4  3001               	movlw	1
  7648  04B5  0021               	movlb	1	; select bank1
  7649  04B6  0253               	subwf	_prec^(0+128),w
  7650  04B7                     u2065:
  7651  04B7  1803               	skipnc
  7652  04B8  2CBA               	goto	u2061
  7653  04B9  2CBB               	goto	u2060
  7654  04BA                     u2061:
  7655  04BA  2CC1               	goto	l2545
  7656  04BB                     u2060:
  7657  04BB                     l2543:
  7658  04BB  3001               	movlw	1
  7659  04BC  0020               	movlb	0	; select bank0
  7660  04BD  00BD               	movwf	dtoa@p
  7661  04BE  3000               	movlw	0
  7662  04BF  00BE               	movwf	dtoa@p+1
  7663  04C0  2CC9               	goto	l1087
  7664  04C1                     l2545:
  7665  04C1  0021               	movlb	1	; select bank1
  7666  04C2  0854               	movf	(_prec+1)^(0+128),w
  7667  04C3  0020               	movlb	0	; select bank0
  7668  04C4  00BE               	movwf	dtoa@p+1
  7669  04C5  0021               	movlb	1	; select bank1
  7670  04C6  0853               	movf	_prec^(0+128),w
  7671  04C7  0020               	movlb	0	; select bank0
  7672  04C8  00BD               	movwf	dtoa@p
  7673  04C9                     l1087:
  7674                           
  7675                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7676  04C9  0021               	movlb	1	; select bank1
  7677  04CA  0852               	movf	(_width+1)^(0+128),w
  7678  04CB  0020               	movlb	0	; select bank0
  7679  04CC  00C1               	movwf	dtoa@w+1
  7680  04CD  0021               	movlb	1	; select bank1
  7681  04CE  0851               	movf	_width^(0+128),w
  7682  04CF  0020               	movlb	0	; select bank0
  7683  04D0  00C0               	movwf	dtoa@w
  7684  04D1                     l2547:
  7685                           
  7686                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7687  04D1  0842               	movf	dtoa@s,w
  7688  04D2  0443               	iorwf	dtoa@s+1,w
  7689  04D3  1D03               	btfss	3,2
  7690  04D4  2CD6               	goto	u2071
  7691  04D5  2CD7               	goto	u2070
  7692  04D6                     u2071:
  7693  04D6  2CDC               	goto	l2551
  7694  04D7                     u2070:
  7695  04D7                     l2549:
  7696  04D7  0021               	movlb	1	; select bank1
  7697  04D8  1D55               	btfss	_flags^(0+128),2
  7698  04D9  2CDB               	goto	u2081
  7699  04DA  2CDC               	goto	u2080
  7700  04DB                     u2081:
  7701  04DB  2CE1               	goto	l1088
  7702  04DC                     u2080:
  7703  04DC                     l2551:
  7704                           
  7705                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  7706  04DC  30FF               	movlw	255
  7707  04DD  0020               	movlb	0	; select bank0
  7708  04DE  07C0               	addwf	dtoa@w,f
  7709  04DF  30FF               	movlw	255
  7710  04E0  3DC1               	addwfc	dtoa@w+1,f
  7711  04E1                     l1088:	
  7712                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 307:     }
  7713                           
  7714                           
  7715                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7716  04E1  301F               	movlw	31
  7717  04E2  0020               	movlb	0	; select bank0
  7718  04E3  00CC               	movwf	dtoa@i
  7719  04E4  3000               	movlw	0
  7720  04E5  00CD               	movwf	dtoa@i+1
  7721  04E6                     l2553:
  7722                           
  7723                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7724  04E6  0025               	movlb	5	; select bank5
  7725  04E7  01BF               	clrf	(_dbuf^(0+640)+31)
  7726                           
  7727                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7728  04E8  2D52               	goto	l1091
  7729  04E9                     l2555:
  7730                           
  7731                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  7732  04E9  30FF               	movlw	255
  7733  04EA  0020               	movlb	0	; select bank0
  7734  04EB  07CC               	addwf	dtoa@i,f
  7735  04EC  30FF               	movlw	255
  7736  04ED  3DCD               	addwfc	dtoa@i+1,f
  7737  04EE                     l2557:
  7738                           
  7739                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7740  04EE  300A               	movlw	10
  7741  04EF  00A0               	movwf	___aomod@divisor
  7742  04F0  01A1               	clrf	___aomod@divisor+1
  7743  04F1  01A2               	clrf	___aomod@divisor+2
  7744  04F2  01A3               	clrf	___aomod@divisor+3
  7745  04F3  01A4               	clrf	___aomod@divisor+4
  7746  04F4  01A5               	clrf	___aomod@divisor+5
  7747  04F5  01A6               	clrf	___aomod@divisor+6
  7748  04F6  01A7               	clrf	___aomod@divisor+7
  7749  04F7  0844               	movf	dtoa@n,w
  7750  04F8  00A8               	movwf	___aomod@dividend
  7751  04F9  0845               	movf	dtoa@n+1,w
  7752  04FA  00A9               	movwf	___aomod@dividend+1
  7753  04FB  0846               	movf	dtoa@n+2,w
  7754  04FC  00AA               	movwf	___aomod@dividend+2
  7755  04FD  0847               	movf	dtoa@n+3,w
  7756  04FE  00AB               	movwf	___aomod@dividend+3
  7757  04FF  0848               	movf	dtoa@n+4,w
  7758  0500  00AC               	movwf	___aomod@dividend+4
  7759  0501  0849               	movf	dtoa@n+5,w
  7760  0502  00AD               	movwf	___aomod@dividend+5
  7761  0503  084A               	movf	dtoa@n+6,w
  7762  0504  00AE               	movwf	___aomod@dividend+6
  7763  0505  084B               	movf	dtoa@n+7,w
  7764  0506  00AF               	movwf	___aomod@dividend+7
  7765  0507  3187  2700  3184   	fcall	___aomod
  7766  050A  0020               	movlb	0	; select bank0
  7767  050B  0821               	movf	?___aomod+1,w
  7768  050C  00F4               	movwf	abs@a+1
  7769  050D  0820               	movf	?___aomod,w
  7770  050E  00F3               	movwf	abs@a
  7771  050F  3197  2750  3184   	fcall	_abs
  7772  0512  0873               	movf	?_abs,w
  7773  0513  3E30               	addlw	48
  7774  0514  0020               	movlb	0	; select bank0
  7775  0515  00B8               	movwf	??_dtoa
  7776  0516  084C               	movf	dtoa@i,w
  7777  0517  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7778  0518  0086               	movwf	6
  7779  0519  3002               	movlw	2	; select bank5/6
  7780  051A  0087               	movwf	7
  7781  051B  0838               	movf	??_dtoa,w
  7782  051C  0081               	movwf	1
  7783  051D                     l2559:
  7784                           
  7785                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  7786  051D  30FF               	movlw	255
  7787  051E  07BD               	addwf	dtoa@p,f
  7788  051F  30FF               	movlw	255
  7789  0520  3DBE               	addwfc	dtoa@p+1,f
  7790  0521                     l2561:
  7791                           
  7792                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  7793  0521  30FF               	movlw	255
  7794  0522  07C0               	addwf	dtoa@w,f
  7795  0523  30FF               	movlw	255
  7796  0524  3DC1               	addwfc	dtoa@w+1,f
  7797  0525                     l2563:
  7798                           
  7799                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7800  0525  300A               	movlw	10
  7801  0526  00A0               	movwf	___aodiv@divisor
  7802  0527  01A1               	clrf	___aodiv@divisor+1
  7803  0528  01A2               	clrf	___aodiv@divisor+2
  7804  0529  01A3               	clrf	___aodiv@divisor+3
  7805  052A  01A4               	clrf	___aodiv@divisor+4
  7806  052B  01A5               	clrf	___aodiv@divisor+5
  7807  052C  01A6               	clrf	___aodiv@divisor+6
  7808  052D  01A7               	clrf	___aodiv@divisor+7
  7809  052E  0844               	movf	dtoa@n,w
  7810  052F  00A8               	movwf	___aodiv@dividend
  7811  0530  0845               	movf	dtoa@n+1,w
  7812  0531  00A9               	movwf	___aodiv@dividend+1
  7813  0532  0846               	movf	dtoa@n+2,w
  7814  0533  00AA               	movwf	___aodiv@dividend+2
  7815  0534  0847               	movf	dtoa@n+3,w
  7816  0535  00AB               	movwf	___aodiv@dividend+3
  7817  0536  0848               	movf	dtoa@n+4,w
  7818  0537  00AC               	movwf	___aodiv@dividend+4
  7819  0538  0849               	movf	dtoa@n+5,w
  7820  0539  00AD               	movwf	___aodiv@dividend+5
  7821  053A  084A               	movf	dtoa@n+6,w
  7822  053B  00AE               	movwf	___aodiv@dividend+6
  7823  053C  084B               	movf	dtoa@n+7,w
  7824  053D  00AF               	movwf	___aodiv@dividend+7
  7825  053E  318E  26FF  3184   	fcall	___aodiv
  7826  0541  0020               	movlb	0	; select bank0
  7827  0542  0820               	movf	?___aodiv,w
  7828  0543  00C4               	movwf	dtoa@n
  7829  0544  0821               	movf	?___aodiv+1,w
  7830  0545  00C5               	movwf	dtoa@n+1
  7831  0546  0822               	movf	?___aodiv+2,w
  7832  0547  00C6               	movwf	dtoa@n+2
  7833  0548  0823               	movf	?___aodiv+3,w
  7834  0549  00C7               	movwf	dtoa@n+3
  7835  054A  0824               	movf	?___aodiv+4,w
  7836  054B  00C8               	movwf	dtoa@n+4
  7837  054C  0825               	movf	?___aodiv+5,w
  7838  054D  00C9               	movwf	dtoa@n+5
  7839  054E  0826               	movf	?___aodiv+6,w
  7840  054F  00CA               	movwf	dtoa@n+6
  7841  0550  0827               	movf	?___aodiv+7,w
  7842  0551  00CB               	movwf	dtoa@n+7
  7843  0552                     l1091:	
  7844                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 318:     }
  7845                           
  7846                           
  7847                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7848  0552  0020               	movlb	0	; select bank0
  7849  0553  084D               	movf	dtoa@i+1,w
  7850  0554  3A80               	xorlw	128
  7851  0555  00B8               	movwf	??_dtoa
  7852  0556  3080               	movlw	128
  7853  0557  0238               	subwf	??_dtoa,w
  7854  0558  1D03               	skipz
  7855  0559  2D5C               	goto	u2095
  7856  055A  3001               	movlw	1
  7857  055B  024C               	subwf	dtoa@i,w
  7858  055C                     u2095:
  7859  055C  1C03               	skipc
  7860  055D  2D5F               	goto	u2091
  7861  055E  2D60               	goto	u2090
  7862  055F                     u2091:
  7863  055F  2D8D               	goto	l2573
  7864  0560                     u2090:
  7865  0560                     l2565:
  7866  0560  0020               	movlb	0	; select bank0
  7867  0561  0844               	movf	dtoa@n,w
  7868  0562  0445               	iorwf	dtoa@n+1,w
  7869  0563  0446               	iorwf	dtoa@n+2,w
  7870  0564  0447               	iorwf	dtoa@n+3,w
  7871  0565  0448               	iorwf	dtoa@n+4,w
  7872  0566  0449               	iorwf	dtoa@n+5,w
  7873  0567  044A               	iorwf	dtoa@n+6,w
  7874  0568  044B               	iorwf	dtoa@n+7,w
  7875  0569  1D03               	skipz
  7876  056A  2D6C               	goto	u2101
  7877  056B  2D6D               	goto	u2100
  7878  056C                     u2101:
  7879  056C  2CE9               	goto	l2555
  7880  056D                     u2100:
  7881  056D                     l2567:
  7882  056D  083E               	movf	dtoa@p+1,w
  7883  056E  3A80               	xorlw	128
  7884  056F  00B8               	movwf	??_dtoa
  7885  0570  3080               	movlw	128
  7886  0571  0238               	subwf	??_dtoa,w
  7887  0572  1D03               	skipz
  7888  0573  2D76               	goto	u2115
  7889  0574  3001               	movlw	1
  7890  0575  023D               	subwf	dtoa@p,w
  7891  0576                     u2115:
  7892  0576  1803               	skipnc
  7893  0577  2D79               	goto	u2111
  7894  0578  2D7A               	goto	u2110
  7895  0579                     u2111:
  7896  0579  2CE9               	goto	l2555
  7897  057A                     u2110:
  7898  057A                     l2569:
  7899  057A  0020               	movlb	0	; select bank0
  7900  057B  0841               	movf	dtoa@w+1,w
  7901  057C  3A80               	xorlw	128
  7902  057D  00B8               	movwf	??_dtoa
  7903  057E  3080               	movlw	128
  7904  057F  0238               	subwf	??_dtoa,w
  7905  0580  1D03               	skipz
  7906  0581  2D84               	goto	u2125
  7907  0582  3001               	movlw	1
  7908  0583  0240               	subwf	dtoa@w,w
  7909  0584                     u2125:
  7910  0584  1C03               	skipc
  7911  0585  2D87               	goto	u2121
  7912  0586  2D88               	goto	u2120
  7913  0587                     u2121:
  7914  0587  2D8D               	goto	l2573
  7915  0588                     u2120:
  7916  0588                     l2571:
  7917  0588  0021               	movlb	1	; select bank1
  7918  0589  18D5               	btfsc	_flags^(0+128),1
  7919  058A  2D8C               	goto	u2131
  7920  058B  2D8D               	goto	u2130
  7921  058C                     u2131:
  7922  058C  2CE9               	goto	l2555
  7923  058D                     u2130:
  7924  058D                     l2573:
  7925                           
  7926                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7927  058D  0020               	movlb	0	; select bank0
  7928  058E  0842               	movf	dtoa@s,w
  7929  058F  0443               	iorwf	dtoa@s+1,w
  7930  0590  1D03               	btfss	3,2
  7931  0591  2D93               	goto	u2141
  7932  0592  2D94               	goto	u2140
  7933  0593                     u2141:
  7934  0593  2D99               	goto	l2577
  7935  0594                     u2140:
  7936  0594                     l2575:
  7937  0594  0021               	movlb	1	; select bank1
  7938  0595  1D55               	btfss	_flags^(0+128),2
  7939  0596  2D98               	goto	u2151
  7940  0597  2D99               	goto	u2150
  7941  0598                     u2151:
  7942  0598  2DB6               	goto	l2587
  7943  0599                     u2150:
  7944  0599                     l2577:
  7945                           
  7946                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  7947  0599  30FF               	movlw	255
  7948  059A  0020               	movlb	0	; select bank0
  7949  059B  07CC               	addwf	dtoa@i,f
  7950  059C  30FF               	movlw	255
  7951  059D  3DCD               	addwfc	dtoa@i+1,f
  7952  059E                     l2579:
  7953                           
  7954                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7955  059E  0842               	movf	dtoa@s,w
  7956  059F  0443               	iorwf	dtoa@s+1,w
  7957  05A0  1D03               	btfss	3,2
  7958  05A1  2DA3               	goto	u2161
  7959  05A2  2DA4               	goto	u2160
  7960  05A3                     u2161:
  7961  05A3  2DA9               	goto	l2583
  7962  05A4                     u2160:
  7963  05A4                     l2581:
  7964  05A4  302B               	movlw	43
  7965  05A5  00BB               	movwf	_dtoa$1483
  7966  05A6  3000               	movlw	0
  7967  05A7  00BC               	movwf	_dtoa$1483+1
  7968  05A8  2DAD               	goto	l2585
  7969  05A9                     l2583:
  7970  05A9  302D               	movlw	45
  7971  05AA  00BB               	movwf	_dtoa$1483
  7972  05AB  3000               	movlw	0
  7973  05AC  00BC               	movwf	_dtoa$1483+1
  7974  05AD                     l2585:
  7975  05AD  083B               	movf	_dtoa$1483,w
  7976  05AE  00B8               	movwf	??_dtoa
  7977  05AF  084C               	movf	dtoa@i,w
  7978  05B0  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7979  05B1  0086               	movwf	6
  7980  05B2  3002               	movlw	2	; select bank5/6
  7981  05B3  0087               	movwf	7
  7982  05B4  0838               	movf	??_dtoa,w
  7983  05B5  0081               	movwf	1
  7984  05B6                     l2587:
  7985                           
  7986                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7987  05B6  0020               	movlb	0	; select bank0
  7988  05B7  084C               	movf	dtoa@i,w
  7989  05B8  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7990  05B9  00B8               	movwf	??_dtoa
  7991  05BA  0838               	movf	??_dtoa,w
  7992  05BB  00A4               	movwf	pad@buf
  7993  05BC  0841               	movf	dtoa@w+1,w
  7994  05BD  00A6               	movwf	pad@p+1
  7995  05BE  0840               	movf	dtoa@w,w
  7996  05BF  00A5               	movwf	pad@p
  7997  05C0  083F               	movf	dtoa@fp,w
  7998  05C1  3189  21FD  3184   	fcall	_pad
  7999  05C4  0020               	movlb	0	; select bank0
  8000  05C5  0825               	movf	?_pad+1,w
  8001  05C6  00B1               	movwf	?_dtoa+1
  8002  05C7  0824               	movf	?_pad,w
  8003  05C8  00B0               	movwf	?_dtoa
  8004  05C9                     l1105:
  8005  05C9  0008               	return
  8006  05CA                     __end_of_dtoa:
  8007                           
  8008                           	psect	text6
  8009  09FD                     __ptext6:	
  8010 ;; *************** function _pad *****************
  8011 ;; Defined at:
  8012 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  8013 ;; Parameters:    Size  Location     Type
  8014 ;;  fp              1    wreg     PTR struct _IO_FILE
  8015 ;;		 -> NULL(0), 
  8016 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  8017 ;;		 -> dbuf(32), 
  8018 ;;  p               2    5[BANK0 ] int 
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  8021 ;;		 -> NULL(0), 
  8022 ;;  w               2    9[BANK0 ] int 
  8023 ;;  i               2    7[BANK0 ] int 
  8024 ;; Return value:  Size  Location     Type
  8025 ;;                  2    4[BANK0 ] int 
  8026 ;; Registers used:
  8027 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8028 ;; Tracked objects:
  8029 ;;		On entry : 0/0
  8030 ;;		On exit  : 0/0
  8031 ;;		Unchanged: 0/0
  8032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8033 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8034 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8035 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8036 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8037 ;;Total ram usage:        9 bytes
  8038 ;; Hardware stack levels used:    1
  8039 ;; Hardware stack levels required when called:    7
  8040 ;; This function calls:
  8041 ;;		_fputc
  8042 ;;		_fputs
  8043 ;;		_strlen
  8044 ;; This function is called by:
  8045 ;;		_dtoa
  8046 ;; This function uses a non-reentrant model
  8047 ;;
  8048                           
  8049                           
  8050                           ;psect for function _pad
  8051  09FD                     _pad:
  8052                           
  8053                           ;incstack = 0
  8054                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8055                           ;pad@fp stored from wreg
  8056  09FD  0020               	movlb	0	; select bank0
  8057  09FE  00AB               	movwf	pad@fp
  8058  09FF                     l2505:
  8059                           
  8060                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8061  09FF  0021               	movlb	1	; select bank1
  8062  0A00  1C55               	btfss	_flags^(0+128),0
  8063  0A01  2A03               	goto	u1951
  8064  0A02  2A04               	goto	u1950
  8065  0A03                     u1951:
  8066  0A03  2A0D               	goto	l2509
  8067  0A04                     u1950:
  8068  0A04                     l2507:
  8069                           
  8070                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8071  0A04  0020               	movlb	0	; select bank0
  8072  0A05  082B               	movf	pad@fp,w
  8073  0A06  00FC               	movwf	??_pad
  8074  0A07  087C               	movf	??_pad,w
  8075  0A08  00F8               	movwf	fputs@fp
  8076  0A09  0824               	movf	pad@buf,w
  8077  0A0A  3197  27D7  3189   	fcall	_fputs
  8078  0A0D                     l2509:
  8079                           
  8080                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8081  0A0D  0020               	movlb	0	; select bank0
  8082  0A0E  1BA6               	btfsc	pad@p+1,7
  8083  0A0F  2A11               	goto	u1961
  8084  0A10  2A12               	goto	u1960
  8085  0A11                     u1961:
  8086  0A11  2A17               	goto	l2513
  8087  0A12                     u1960:
  8088  0A12                     l2511:
  8089  0A12  0826               	movf	pad@p+1,w
  8090  0A13  00AA               	movwf	pad@w+1
  8091  0A14  0825               	movf	pad@p,w
  8092  0A15  00A9               	movwf	pad@w
  8093  0A16  2A19               	goto	l1074
  8094  0A17                     l2513:
  8095  0A17  01A9               	clrf	pad@w
  8096  0A18  01AA               	clrf	pad@w+1
  8097  0A19                     l1074:
  8098                           
  8099                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8100  0A19  01A7               	clrf	pad@i
  8101  0A1A  01A8               	clrf	pad@i+1
  8102                           
  8103                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8104  0A1B  2A2D               	goto	l2519
  8105  0A1C                     l2515:
  8106                           
  8107                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8108  0A1C  3020               	movlw	32
  8109  0A1D  00F0               	movwf	fputc@c
  8110  0A1E  3000               	movlw	0
  8111  0A1F  00F1               	movwf	fputc@c+1
  8112  0A20  0020               	movlb	0	; select bank0
  8113  0A21  082B               	movf	pad@fp,w
  8114  0A22  00FC               	movwf	??_pad
  8115  0A23  087C               	movf	??_pad,w
  8116  0A24  00F2               	movwf	fputc@fp
  8117  0A25  3188  20E9  3189   	fcall	_fputc
  8118  0A28                     l2517:
  8119                           
  8120                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8121  0A28  3001               	movlw	1
  8122  0A29  0020               	movlb	0	; select bank0
  8123  0A2A  07A7               	addwf	pad@i,f
  8124  0A2B  3000               	movlw	0
  8125  0A2C  3DA8               	addwfc	pad@i+1,f
  8126  0A2D                     l2519:
  8127                           
  8128                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8129  0A2D  0828               	movf	pad@i+1,w
  8130  0A2E  3A80               	xorlw	128
  8131  0A2F  00FC               	movwf	??_pad
  8132  0A30  082A               	movf	pad@w+1,w
  8133  0A31  3A80               	xorlw	128
  8134  0A32  027C               	subwf	??_pad,w
  8135  0A33  1D03               	skipz
  8136  0A34  2A37               	goto	u1975
  8137  0A35  0829               	movf	pad@w,w
  8138  0A36  0227               	subwf	pad@i,w
  8139  0A37                     u1975:
  8140  0A37  1C03               	skipc
  8141  0A38  2A3A               	goto	u1971
  8142  0A39  2A3B               	goto	u1970
  8143  0A3A                     u1971:
  8144  0A3A  2A1C               	goto	l2515
  8145  0A3B                     u1970:
  8146  0A3B                     l1077:
  8147                           
  8148                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8149  0A3B  0021               	movlb	1	; select bank1
  8150  0A3C  1855               	btfsc	_flags^(0+128),0
  8151  0A3D  2A3F               	goto	u1981
  8152  0A3E  2A40               	goto	u1980
  8153  0A3F                     u1981:
  8154  0A3F  2A49               	goto	l1078
  8155  0A40                     u1980:
  8156  0A40                     l2521:
  8157                           
  8158                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8159  0A40  0020               	movlb	0	; select bank0
  8160  0A41  082B               	movf	pad@fp,w
  8161  0A42  00FC               	movwf	??_pad
  8162  0A43  087C               	movf	??_pad,w
  8163  0A44  00F8               	movwf	fputs@fp
  8164  0A45  0824               	movf	pad@buf,w
  8165  0A46  3197  27D7  3189   	fcall	_fputs
  8166  0A49                     l1078:	
  8167                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 92:     }
  8168                           
  8169                           
  8170                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8171  0A49  0020               	movlb	0	; select bank0
  8172  0A4A  0824               	movf	pad@buf,w
  8173  0A4B  3197  276A  3189   	fcall	_strlen
  8174  0A4E  0020               	movlb	0	; select bank0
  8175  0A4F  0829               	movf	pad@w,w
  8176  0A50  0770               	addwf	?_strlen,w
  8177  0A51  00A4               	movwf	?_pad
  8178  0A52  082A               	movf	pad@w+1,w
  8179  0A53  3D71               	addwfc	?_strlen+1,w
  8180  0A54  00A5               	movwf	?_pad+1
  8181  0A55                     l1079:
  8182  0A55  0008               	return
  8183  0A56                     __end_of_pad:
  8184                           
  8185                           	psect	text7
  8186  176A                     __ptext7:	
  8187 ;; *************** function _strlen *****************
  8188 ;; Defined at:
  8189 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;  s               1    wreg     PTR const unsigned char 
  8192 ;;		 -> dbuf(32), 
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;  s               1    4[COMMON] PTR const unsigned char 
  8195 ;;		 -> dbuf(32), 
  8196 ;;  a               1    3[COMMON] PTR const unsigned char 
  8197 ;;		 -> dbuf(32), 
  8198 ;; Return value:  Size  Location     Type
  8199 ;;                  2    0[COMMON] unsigned int 
  8200 ;; Registers used:
  8201 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8208 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8210 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8211 ;;Total ram usage:        5 bytes
  8212 ;; Hardware stack levels used:    1
  8213 ;; Hardware stack levels required when called:    4
  8214 ;; This function calls:
  8215 ;;		Nothing
  8216 ;; This function is called by:
  8217 ;;		_pad
  8218 ;; This function uses a non-reentrant model
  8219 ;;
  8220                           
  8221                           
  8222                           ;psect for function _strlen
  8223  176A                     _strlen:
  8224                           
  8225                           ;incstack = 0
  8226                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  8227                           ;strlen@s stored from wreg
  8228  176A  00F4               	movwf	strlen@s
  8229  176B                     l2427:
  8230  176B  0874               	movf	strlen@s,w
  8231  176C  00F2               	movwf	??_strlen
  8232  176D  0872               	movf	??_strlen,w
  8233  176E  00F3               	movwf	strlen@a
  8234  176F  2F74               	goto	l2431
  8235  1770                     l2429:
  8236  1770  3001               	movlw	1
  8237  1771  00F2               	movwf	??_strlen
  8238  1772  0872               	movf	??_strlen,w
  8239  1773  07F4               	addwf	strlen@s,f
  8240  1774                     l2431:
  8241  1774  0874               	movf	strlen@s,w
  8242  1775  0086               	movwf	6
  8243  1776  3002               	movlw	2	; select bank4/5
  8244  1777  0087               	movwf	7
  8245  1778  0801               	movf	1,w
  8246  1779  1D03               	btfss	3,2
  8247  177A  2F7C               	goto	u1731
  8248  177B  2F7D               	goto	u1730
  8249  177C                     u1731:
  8250  177C  2F70               	goto	l2429
  8251  177D                     u1730:
  8252  177D                     l2433:
  8253  177D  0873               	movf	strlen@a,w
  8254  177E  0274               	subwf	strlen@s,w
  8255  177F  00F0               	movwf	?_strlen
  8256  1780  01F1               	clrf	?_strlen+1
  8257  1781  1BF0               	btfsc	?_strlen,7
  8258  1782  03F1               	decf	?_strlen+1,f
  8259  1783                     l1155:
  8260  1783  0008               	return
  8261  1784                     __end_of_strlen:
  8262                           
  8263                           	psect	text8
  8264  17D7                     __ptext8:	
  8265 ;; *************** function _fputs *****************
  8266 ;; Defined at:
  8267 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;  s               1    wreg     PTR const unsigned char 
  8270 ;;		 -> dbuf(32), 
  8271 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  8272 ;;		 -> NULL(0), 
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  8275 ;;		 -> dbuf(32), 
  8276 ;;  i               2    1[BANK0 ] int 
  8277 ;;  c               1    0[BANK0 ] unsigned char 
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  2    8[COMMON] int 
  8280 ;; Registers used:
  8281 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8287 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8288 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8289 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8290 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8291 ;;Total ram usage:        8 bytes
  8292 ;; Hardware stack levels used:    1
  8293 ;; Hardware stack levels required when called:    6
  8294 ;; This function calls:
  8295 ;;		_fputc
  8296 ;; This function is called by:
  8297 ;;		_pad
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           
  8302                           ;psect for function _fputs
  8303  17D7                     _fputs:
  8304                           
  8305                           ;incstack = 0
  8306                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8307                           ;fputs@s stored from wreg
  8308  17D7  0020               	movlb	0	; select bank0
  8309  17D8  00A3               	movwf	fputs@s
  8310  17D9                     l2419:
  8311  17D9  01A1               	clrf	fputs@i
  8312  17DA  01A2               	clrf	fputs@i+1
  8313  17DB  2FEF               	goto	l2425
  8314  17DC                     l2421:
  8315  17DC  0820               	movf	fputs@c,w
  8316  17DD  00F9               	movwf	??_fputs
  8317  17DE  01FA               	clrf	??_fputs+1
  8318  17DF  0879               	movf	??_fputs,w
  8319  17E0  00F0               	movwf	fputc@c
  8320  17E1  087A               	movf	??_fputs+1,w
  8321  17E2  00F1               	movwf	fputc@c+1
  8322  17E3  0878               	movf	fputs@fp,w
  8323  17E4  00FB               	movwf	??_fputs+2
  8324  17E5  087B               	movf	??_fputs+2,w
  8325  17E6  00F2               	movwf	fputc@fp
  8326  17E7  3188  20E9  3197   	fcall	_fputc
  8327  17EA                     l2423:
  8328  17EA  3001               	movlw	1
  8329  17EB  0020               	movlb	0	; select bank0
  8330  17EC  07A1               	addwf	fputs@i,f
  8331  17ED  3000               	movlw	0
  8332  17EE  3DA2               	addwfc	fputs@i+1,f
  8333  17EF                     l2425:
  8334  17EF  0821               	movf	fputs@i,w
  8335  17F0  0723               	addwf	fputs@s,w
  8336  17F1  00F9               	movwf	??_fputs
  8337  17F2  0879               	movf	??_fputs,w
  8338  17F3  0086               	movwf	6
  8339  17F4  3002               	movlw	2	; select bank4/5
  8340  17F5  0087               	movwf	7
  8341  17F6  0801               	movf	1,w
  8342  17F7  00FA               	movwf	??_fputs+1
  8343  17F8  087A               	movf	??_fputs+1,w
  8344  17F9  00A0               	movwf	fputs@c
  8345  17FA  0820               	movf	fputs@c,w
  8346  17FB  1D03               	btfss	3,2
  8347  17FC  2FFE               	goto	u1721
  8348  17FD  2FFF               	goto	u1720
  8349  17FE                     u1721:
  8350  17FE  2FDC               	goto	l2421
  8351  17FF                     u1720:
  8352  17FF                     l1146:
  8353  17FF  0008               	return
  8354  1800                     __end_of_fputs:
  8355                           
  8356                           	psect	text9
  8357  08E9                     __ptext9:	
  8358 ;; *************** function _fputc *****************
  8359 ;; Defined at:
  8360 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;  c               2    0[COMMON] int 
  8363 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  8364 ;;		 -> NULL(0), 
  8365 ;; Auto vars:     Size  Location     Type
  8366 ;;		None
  8367 ;; Return value:  Size  Location     Type
  8368 ;;                  2    0[COMMON] int 
  8369 ;; Registers used:
  8370 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8371 ;; Tracked objects:
  8372 ;;		On entry : 0/0
  8373 ;;		On exit  : 0/0
  8374 ;;		Unchanged: 0/0
  8375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8376 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8378 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8379 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8380 ;;Total ram usage:        8 bytes
  8381 ;; Hardware stack levels used:    1
  8382 ;; Hardware stack levels required when called:    5
  8383 ;; This function calls:
  8384 ;;		_putch
  8385 ;; This function is called by:
  8386 ;;		_pad
  8387 ;;		_vfpfcnvrt
  8388 ;;		_fputs
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           
  8392                           
  8393                           ;psect for function _fputc
  8394  08E9                     _fputc:
  8395  08E9                     l2405:	
  8396                           ;incstack = 0
  8397                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8398                           
  8399  08E9  0872               	movf	fputc@fp,w
  8400  08EA  1903               	btfsc	3,2
  8401  08EB  28ED               	goto	u1681
  8402  08EC  28EE               	goto	u1680
  8403  08ED                     u1681:
  8404  08ED  28F3               	goto	l2409
  8405  08EE                     u1680:
  8406  08EE                     l2407:
  8407  08EE  0872               	movf	fputc@fp,w
  8408  08EF  1D03               	btfss	3,2
  8409  08F0  28F2               	goto	u1691
  8410  08F1  28F3               	goto	u1690
  8411  08F2                     u1691:
  8412  08F2  28F8               	goto	l2411
  8413  08F3                     u1690:
  8414  08F3                     l2409:
  8415  08F3  0870               	movf	fputc@c,w
  8416  08F4  3180  2003  3188   	fcall	_putch
  8417  08F7  2927               	goto	l1138
  8418  08F8                     l2411:
  8419  08F8  0872               	movf	fputc@fp,w
  8420  08F9  3E03               	addlw	3
  8421  08FA  0086               	movwf	6
  8422  08FB  0187               	clrf	7
  8423  08FC  0016               	moviw fsr1++
  8424  08FD  0401               	iorwf	1,w
  8425  08FE  1903               	btfsc	3,2
  8426  08FF  2901               	goto	u1701
  8427  0900  2902               	goto	u1700
  8428  0901                     u1701:
  8429  0901  291F               	goto	l2415
  8430  0902                     u1700:
  8431  0902                     l2413:
  8432  0902  0872               	movf	fputc@fp,w
  8433  0903  3E03               	addlw	3
  8434  0904  0086               	movwf	6
  8435  0905  0187               	clrf	7
  8436  0906  3F40               	moviw [0]fsr1
  8437  0907  00F3               	movwf	??_fputc
  8438  0908  3F41               	moviw [1]fsr1
  8439  0909  00F4               	movwf	??_fputc+1
  8440  090A  0A72               	incf	fputc@fp,w
  8441  090B  0086               	movwf	6
  8442  090C  0187               	clrf	7
  8443  090D  3F40               	moviw [0]fsr1
  8444  090E  00F5               	movwf	??_fputc+2
  8445  090F  3F41               	moviw [1]fsr1
  8446  0910  00F6               	movwf	??_fputc+3
  8447  0911  0876               	movf	??_fputc+3,w
  8448  0912  3A80               	xorlw	128
  8449  0913  00F7               	movwf	??_fputc+4
  8450  0914  0874               	movf	??_fputc+1,w
  8451  0915  3A80               	xorlw	128
  8452  0916  0277               	subwf	??_fputc+4,w
  8453  0917  1D03               	skipz
  8454  0918  291B               	goto	u1715
  8455  0919  0873               	movf	??_fputc,w
  8456  091A  0275               	subwf	??_fputc+2,w
  8457  091B                     u1715:
  8458  091B  1803               	skipnc
  8459  091C  291E               	goto	u1711
  8460  091D  291F               	goto	u1710
  8461  091E                     u1711:
  8462  091E  2927               	goto	l1138
  8463  091F                     u1710:
  8464  091F                     l2415:
  8465  091F  0A72               	incf	fputc@fp,w
  8466  0920  0086               	movwf	6
  8467  0921  0187               	clrf	7
  8468  0922  3001               	movlw	1
  8469  0923  0781               	addwf	1,f
  8470  0924  3141               	addfsr 1,1
  8471  0925  1803               	skipnc
  8472  0926  0A81               	incf	1,f
  8473  0927                     l1138:
  8474  0927  0008               	return
  8475  0928                     __end_of_fputc:
  8476                           
  8477                           	psect	text10
  8478  0003                     __ptext10:	
  8479 ;; *************** function _putch *****************
  8480 ;; Defined at:
  8481 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\putch.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;  c               1    wreg     unsigned char 
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;  c               1    0[COMMON] unsigned char 
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  1    wreg      void 
  8488 ;; Registers used:
  8489 ;;		wreg
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8499 ;;Total ram usage:        0 bytes
  8500 ;; Hardware stack levels used:    1
  8501 ;; Hardware stack levels required when called:    4
  8502 ;; This function calls:
  8503 ;;		Nothing
  8504 ;; This function is called by:
  8505 ;;		_fputc
  8506 ;; This function uses a non-reentrant model
  8507 ;;
  8508                           
  8509                           
  8510                           ;psect for function _putch
  8511  0003                     _putch:
  8512  0003                     l1149:	
  8513                           ;incstack = 0
  8514                           ; Regs used in _putch: [wreg]
  8515                           
  8516  0003  0008               	return
  8517  0004                     __end_of_putch:
  8518                           
  8519                           	psect	text11
  8520  1750                     __ptext11:	
  8521 ;; *************** function _abs *****************
  8522 ;; Defined at:
  8523 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;  a               2    3[COMMON] int 
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;		None
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  2    3[COMMON] int 
  8530 ;; Registers used:
  8531 ;;		wreg, status,2, status,0
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8539 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8540 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8541 ;;Total ram usage:        4 bytes
  8542 ;; Hardware stack levels used:    1
  8543 ;; Hardware stack levels required when called:    4
  8544 ;; This function calls:
  8545 ;;		Nothing
  8546 ;; This function is called by:
  8547 ;;		_dtoa
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           
  8551                           
  8552                           ;psect for function _abs
  8553  1750                     _abs:
  8554  1750                     l2525:	
  8555                           ;incstack = 0
  8556                           ; Regs used in _abs: [wreg+status,2+status,0]
  8557                           
  8558  1750  0874               	movf	abs@a+1,w
  8559  1751  3A80               	xorlw	128
  8560  1752  00F5               	movwf	??_abs
  8561  1753  3080               	movlw	128
  8562  1754  0275               	subwf	??_abs,w
  8563  1755  1D03               	skipz
  8564  1756  2F59               	goto	u1995
  8565  1757  3001               	movlw	1
  8566  1758  0273               	subwf	abs@a,w
  8567  1759                     u1995:
  8568  1759  1803               	skipnc
  8569  175A  2F5C               	goto	u1991
  8570  175B  2F5D               	goto	u1990
  8571  175C                     u1991:
  8572  175C  2F69               	goto	l1123
  8573  175D                     u1990:
  8574  175D                     l2527:
  8575  175D  0973               	comf	abs@a,w
  8576  175E  00F5               	movwf	??_abs
  8577  175F  0974               	comf	abs@a+1,w
  8578  1760  00F6               	movwf	??_abs+1
  8579  1761  0AF5               	incf	??_abs,f
  8580  1762  1903               	skipnz
  8581  1763  0AF6               	incf	??_abs+1,f
  8582  1764  0875               	movf	??_abs,w
  8583  1765  00F3               	movwf	?_abs
  8584  1766  0876               	movf	??_abs+1,w
  8585  1767  00F4               	movwf	?_abs+1
  8586  1768  2F69               	goto	l1126
  8587  1769                     l1123:
  8588  1769                     l1126:
  8589  1769  0008               	return
  8590  176A                     __end_of_abs:
  8591                           
  8592                           	psect	text12
  8593  0700                     __ptext12:	
  8594 ;; *************** function ___aomod *****************
  8595 ;; Defined at:
  8596 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  8597 ;; Parameters:    Size  Location     Type
  8598 ;;  divisor         8    0[BANK0 ] long long 
  8599 ;;  dividend        8    8[BANK0 ] long long 
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;  sign            1    2[COMMON] unsigned char 
  8602 ;;  counter         1    1[COMMON] unsigned char 
  8603 ;; Return value:  Size  Location     Type
  8604 ;;                  8    0[BANK0 ] long long 
  8605 ;; Registers used:
  8606 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8607 ;; Tracked objects:
  8608 ;;		On entry : 0/0
  8609 ;;		On exit  : 0/0
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8612 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8613 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8614 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8615 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8616 ;;Total ram usage:       19 bytes
  8617 ;; Hardware stack levels used:    1
  8618 ;; Hardware stack levels required when called:    4
  8619 ;; This function calls:
  8620 ;;		Nothing
  8621 ;; This function is called by:
  8622 ;;		_dtoa
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626                           
  8627                           ;psect for function ___aomod
  8628  0700                     ___aomod:
  8629  0700                     l2475:	
  8630                           ;incstack = 0
  8631                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  8632                           
  8633  0700  01F2               	clrf	___aomod@sign
  8634  0701                     l2477:
  8635  0701  3028               	movlw	low ___aomod@dividend
  8636  0702  0086               	movwf	6
  8637  0703  3000               	movlw	high ___aomod@dividend
  8638  0704  0087               	movwf	7
  8639  0705  3F47               	moviw [7]fsr1
  8640  0706  00F0               	movwf	??___aomod
  8641  0707  1FF0               	btfss	??___aomod,7
  8642  0708  2F0A               	goto	u1851
  8643  0709  2F0B               	goto	u1850
  8644  070A                     u1851:
  8645  070A  2F2C               	goto	l2481
  8646  070B                     u1850:
  8647  070B                     l2479:
  8648  070B  0020               	movlb	0	; select bank0
  8649  070C  09A8               	comf	___aomod@dividend,f
  8650  070D  09A9               	comf	___aomod@dividend+1,f
  8651  070E  09AA               	comf	___aomod@dividend+2,f
  8652  070F  09AB               	comf	___aomod@dividend+3,f
  8653  0710  09AC               	comf	___aomod@dividend+4,f
  8654  0711  09AD               	comf	___aomod@dividend+5,f
  8655  0712  09AE               	comf	___aomod@dividend+6,f
  8656  0713  09AF               	comf	___aomod@dividend+7,f
  8657  0714  0AA8               	incf	___aomod@dividend,f
  8658  0715  1D03               	skipz
  8659  0716  2F2A               	goto	u186lld
  8660  0717  0AA9               	incf	___aomod@dividend+1,f
  8661  0718  1D03               	skipz
  8662  0719  2F2A               	goto	u186lld
  8663  071A  0AAA               	incf	___aomod@dividend+2,f
  8664  071B  1D03               	skipz
  8665  071C  2F2A               	goto	u186lld
  8666  071D  0AAB               	incf	___aomod@dividend+3,f
  8667  071E  1D03               	skipz
  8668  071F  2F2A               	goto	u186lld
  8669  0720  0AAC               	incf	___aomod@dividend+4,f
  8670  0721  1D03               	skipz
  8671  0722  2F2A               	goto	u186lld
  8672  0723  0AAD               	incf	___aomod@dividend+5,f
  8673  0724  1D03               	skipz
  8674  0725  2F2A               	goto	u186lld
  8675  0726  0AAE               	incf	___aomod@dividend+6,f
  8676  0727  1D03               	skipz
  8677  0728  2F2A               	goto	u186lld
  8678  0729  0AAF               	incf	___aomod@dividend+7,f
  8679  072A                     u186lld:
  8680  072A  01F2               	clrf	___aomod@sign
  8681  072B  0AF2               	incf	___aomod@sign,f
  8682  072C                     l2481:
  8683  072C  3020               	movlw	low ___aomod@divisor
  8684  072D  0086               	movwf	6
  8685  072E  3000               	movlw	high ___aomod@divisor
  8686  072F  0087               	movwf	7
  8687  0730  3F47               	moviw [7]fsr1
  8688  0731  00F0               	movwf	??___aomod
  8689  0732  1FF0               	btfss	??___aomod,7
  8690  0733  2F35               	goto	u1871
  8691  0734  2F36               	goto	u1870
  8692  0735                     u1871:
  8693  0735  2F55               	goto	l2485
  8694  0736                     u1870:
  8695  0736                     l2483:
  8696  0736  0020               	movlb	0	; select bank0
  8697  0737  09A0               	comf	___aomod@divisor,f
  8698  0738  09A1               	comf	___aomod@divisor+1,f
  8699  0739  09A2               	comf	___aomod@divisor+2,f
  8700  073A  09A3               	comf	___aomod@divisor+3,f
  8701  073B  09A4               	comf	___aomod@divisor+4,f
  8702  073C  09A5               	comf	___aomod@divisor+5,f
  8703  073D  09A6               	comf	___aomod@divisor+6,f
  8704  073E  09A7               	comf	___aomod@divisor+7,f
  8705  073F  0AA0               	incf	___aomod@divisor,f
  8706  0740  1D03               	skipz
  8707  0741  2F55               	goto	u188lld
  8708  0742  0AA1               	incf	___aomod@divisor+1,f
  8709  0743  1D03               	skipz
  8710  0744  2F55               	goto	u188lld
  8711  0745  0AA2               	incf	___aomod@divisor+2,f
  8712  0746  1D03               	skipz
  8713  0747  2F55               	goto	u188lld
  8714  0748  0AA3               	incf	___aomod@divisor+3,f
  8715  0749  1D03               	skipz
  8716  074A  2F55               	goto	u188lld
  8717  074B  0AA4               	incf	___aomod@divisor+4,f
  8718  074C  1D03               	skipz
  8719  074D  2F55               	goto	u188lld
  8720  074E  0AA5               	incf	___aomod@divisor+5,f
  8721  074F  1D03               	skipz
  8722  0750  2F55               	goto	u188lld
  8723  0751  0AA6               	incf	___aomod@divisor+6,f
  8724  0752  1D03               	skipz
  8725  0753  2F55               	goto	u188lld
  8726  0754  0AA7               	incf	___aomod@divisor+7,f
  8727  0755                     u188lld:
  8728  0755                     l2485:
  8729  0755  0020               	movlb	0	; select bank0
  8730  0756  0820               	movf	___aomod@divisor,w
  8731  0757  0421               	iorwf	___aomod@divisor+1,w
  8732  0758  0422               	iorwf	___aomod@divisor+2,w
  8733  0759  0423               	iorwf	___aomod@divisor+3,w
  8734  075A  0424               	iorwf	___aomod@divisor+4,w
  8735  075B  0425               	iorwf	___aomod@divisor+5,w
  8736  075C  0426               	iorwf	___aomod@divisor+6,w
  8737  075D  0427               	iorwf	___aomod@divisor+7,w
  8738  075E  1903               	skipnz
  8739  075F  2F61               	goto	u1891
  8740  0760  2F62               	goto	u1890
  8741  0761                     u1891:
  8742  0761  2FB5               	goto	l2501
  8743  0762                     u1890:
  8744  0762                     l2487:
  8745  0762  01F1               	clrf	___aomod@counter
  8746  0763  0AF1               	incf	___aomod@counter,f
  8747  0764  2F71               	goto	l2493
  8748  0765                     l2489:
  8749  0765  35A0               	lslf	___aomod@divisor,f
  8750  0766  0DA1               	rlf	___aomod@divisor+1,f
  8751  0767  0DA2               	rlf	___aomod@divisor+2,f
  8752  0768  0DA3               	rlf	___aomod@divisor+3,f
  8753  0769  0DA4               	rlf	___aomod@divisor+4,f
  8754  076A  0DA5               	rlf	___aomod@divisor+5,f
  8755  076B  0DA6               	rlf	___aomod@divisor+6,f
  8756  076C  0DA7               	rlf	___aomod@divisor+7,f
  8757  076D                     l2491:
  8758  076D  3001               	movlw	1
  8759  076E  00F0               	movwf	??___aomod
  8760  076F  0870               	movf	??___aomod,w
  8761  0770  07F1               	addwf	___aomod@counter,f
  8762  0771                     l2493:
  8763  0771  1FA7               	btfss	___aomod@divisor+7,7
  8764  0772  2F74               	goto	u1901
  8765  0773  2F75               	goto	u1900
  8766  0774                     u1901:
  8767  0774  2F65               	goto	l2489
  8768  0775                     u1900:
  8769  0775                     l2495:
  8770  0775  0827               	movf	___aomod@divisor+7,w
  8771  0776  022F               	subwf	___aomod@dividend+7,w
  8772  0777  1D03               	skipz
  8773  0778  2F93               	goto	u1915
  8774  0779  0826               	movf	___aomod@divisor+6,w
  8775  077A  022E               	subwf	___aomod@dividend+6,w
  8776  077B  1D03               	skipz
  8777  077C  2F93               	goto	u1915
  8778  077D  0825               	movf	___aomod@divisor+5,w
  8779  077E  022D               	subwf	___aomod@dividend+5,w
  8780  077F  1D03               	skipz
  8781  0780  2F93               	goto	u1915
  8782  0781  0824               	movf	___aomod@divisor+4,w
  8783  0782  022C               	subwf	___aomod@dividend+4,w
  8784  0783  1D03               	skipz
  8785  0784  2F93               	goto	u1915
  8786  0785  0823               	movf	___aomod@divisor+3,w
  8787  0786  022B               	subwf	___aomod@dividend+3,w
  8788  0787  1D03               	skipz
  8789  0788  2F93               	goto	u1915
  8790  0789  0822               	movf	___aomod@divisor+2,w
  8791  078A  022A               	subwf	___aomod@dividend+2,w
  8792  078B  1D03               	skipz
  8793  078C  2F93               	goto	u1915
  8794  078D  0821               	movf	___aomod@divisor+1,w
  8795  078E  0229               	subwf	___aomod@dividend+1,w
  8796  078F  1D03               	skipz
  8797  0790  2F93               	goto	u1915
  8798  0791  0820               	movf	___aomod@divisor,w
  8799  0792  0228               	subwf	___aomod@dividend,w
  8800  0793                     u1915:
  8801  0793  1C03               	skipc
  8802  0794  2F96               	goto	u1911
  8803  0795  2F97               	goto	u1910
  8804  0796                     u1911:
  8805  0796  2FA7               	goto	l2499
  8806  0797                     u1910:
  8807  0797                     l2497:
  8808  0797  0820               	movf	___aomod@divisor,w
  8809  0798  02A8               	subwf	___aomod@dividend,f
  8810  0799  0821               	movf	___aomod@divisor+1,w
  8811  079A  3BA9               	subwfb	___aomod@dividend+1,f
  8812  079B  0822               	movf	___aomod@divisor+2,w
  8813  079C  3BAA               	subwfb	___aomod@dividend+2,f
  8814  079D  0823               	movf	___aomod@divisor+3,w
  8815  079E  3BAB               	subwfb	___aomod@dividend+3,f
  8816  079F  0824               	movf	___aomod@divisor+4,w
  8817  07A0  3BAC               	subwfb	___aomod@dividend+4,f
  8818  07A1  0825               	movf	___aomod@divisor+5,w
  8819  07A2  3BAD               	subwfb	___aomod@dividend+5,f
  8820  07A3  0826               	movf	___aomod@divisor+6,w
  8821  07A4  3BAE               	subwfb	___aomod@dividend+6,f
  8822  07A5  0827               	movf	___aomod@divisor+7,w
  8823  07A6  3BAF               	subwfb	___aomod@dividend+7,f
  8824  07A7                     l2499:
  8825  07A7  36A7               	lsrf	___aomod@divisor+7,f
  8826  07A8  0CA6               	rrf	___aomod@divisor+6,f
  8827  07A9  0CA5               	rrf	___aomod@divisor+5,f
  8828  07AA  0CA4               	rrf	___aomod@divisor+4,f
  8829  07AB  0CA3               	rrf	___aomod@divisor+3,f
  8830  07AC  0CA2               	rrf	___aomod@divisor+2,f
  8831  07AD  0CA1               	rrf	___aomod@divisor+1,f
  8832  07AE  0CA0               	rrf	___aomod@divisor,f
  8833  07AF  3001               	movlw	1
  8834  07B0  02F1               	subwf	___aomod@counter,f
  8835  07B1  1D03               	btfss	3,2
  8836  07B2  2FB4               	goto	u1921
  8837  07B3  2FB5               	goto	u1920
  8838  07B4                     u1921:
  8839  07B4  2F75               	goto	l2495
  8840  07B5                     u1920:
  8841  07B5                     l2501:
  8842  07B5  0872               	movf	___aomod@sign,w
  8843  07B6  1903               	btfsc	3,2
  8844  07B7  2FB9               	goto	u1931
  8845  07B8  2FBA               	goto	u1930
  8846  07B9                     u1931:
  8847  07B9  2FD8               	goto	l697
  8848  07BA                     u1930:
  8849  07BA                     l2503:
  8850  07BA  09A8               	comf	___aomod@dividend,f
  8851  07BB  09A9               	comf	___aomod@dividend+1,f
  8852  07BC  09AA               	comf	___aomod@dividend+2,f
  8853  07BD  09AB               	comf	___aomod@dividend+3,f
  8854  07BE  09AC               	comf	___aomod@dividend+4,f
  8855  07BF  09AD               	comf	___aomod@dividend+5,f
  8856  07C0  09AE               	comf	___aomod@dividend+6,f
  8857  07C1  09AF               	comf	___aomod@dividend+7,f
  8858  07C2  0AA8               	incf	___aomod@dividend,f
  8859  07C3  1D03               	skipz
  8860  07C4  2FD8               	goto	u194lld
  8861  07C5  0AA9               	incf	___aomod@dividend+1,f
  8862  07C6  1D03               	skipz
  8863  07C7  2FD8               	goto	u194lld
  8864  07C8  0AAA               	incf	___aomod@dividend+2,f
  8865  07C9  1D03               	skipz
  8866  07CA  2FD8               	goto	u194lld
  8867  07CB  0AAB               	incf	___aomod@dividend+3,f
  8868  07CC  1D03               	skipz
  8869  07CD  2FD8               	goto	u194lld
  8870  07CE  0AAC               	incf	___aomod@dividend+4,f
  8871  07CF  1D03               	skipz
  8872  07D0  2FD8               	goto	u194lld
  8873  07D1  0AAD               	incf	___aomod@dividend+5,f
  8874  07D2  1D03               	skipz
  8875  07D3  2FD8               	goto	u194lld
  8876  07D4  0AAE               	incf	___aomod@dividend+6,f
  8877  07D5  1D03               	skipz
  8878  07D6  2FD8               	goto	u194lld
  8879  07D7  0AAF               	incf	___aomod@dividend+7,f
  8880  07D8                     u194lld:
  8881  07D8                     l697:
  8882  07D8  0020               	movlb	0	; select bank0
  8883  07D9  0828               	movf	___aomod@dividend,w
  8884  07DA  00A0               	movwf	?___aomod
  8885  07DB  0829               	movf	___aomod@dividend+1,w
  8886  07DC  00A1               	movwf	?___aomod+1
  8887  07DD  082A               	movf	___aomod@dividend+2,w
  8888  07DE  00A2               	movwf	?___aomod+2
  8889  07DF  082B               	movf	___aomod@dividend+3,w
  8890  07E0  00A3               	movwf	?___aomod+3
  8891  07E1  082C               	movf	___aomod@dividend+4,w
  8892  07E2  00A4               	movwf	?___aomod+4
  8893  07E3  082D               	movf	___aomod@dividend+5,w
  8894  07E4  00A5               	movwf	?___aomod+5
  8895  07E5  082E               	movf	___aomod@dividend+6,w
  8896  07E6  00A6               	movwf	?___aomod+6
  8897  07E7  082F               	movf	___aomod@dividend+7,w
  8898  07E8  00A7               	movwf	?___aomod+7
  8899  07E9                     l698:
  8900  07E9  0008               	return
  8901  07EA                     __end_of___aomod:
  8902                           
  8903                           	psect	text13
  8904  0EFF                     __ptext13:	
  8905 ;; *************** function ___aodiv *****************
  8906 ;; Defined at:
  8907 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  8908 ;; Parameters:    Size  Location     Type
  8909 ;;  divisor         8    0[BANK0 ] long long 
  8910 ;;  dividend        8    8[BANK0 ] long long 
  8911 ;; Auto vars:     Size  Location     Type
  8912 ;;  quotient        8    3[COMMON] long long 
  8913 ;;  sign            1    2[COMMON] unsigned char 
  8914 ;;  counter         1    1[COMMON] unsigned char 
  8915 ;; Return value:  Size  Location     Type
  8916 ;;                  8    0[BANK0 ] long long 
  8917 ;; Registers used:
  8918 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8919 ;; Tracked objects:
  8920 ;;		On entry : 0/0
  8921 ;;		On exit  : 0/0
  8922 ;;		Unchanged: 0/0
  8923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8924 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8925 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8927 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8928 ;;Total ram usage:       27 bytes
  8929 ;; Hardware stack levels used:    1
  8930 ;; Hardware stack levels required when called:    4
  8931 ;; This function calls:
  8932 ;;		Nothing
  8933 ;; This function is called by:
  8934 ;;		_dtoa
  8935 ;; This function uses a non-reentrant model
  8936 ;;
  8937                           
  8938                           
  8939                           ;psect for function ___aodiv
  8940  0EFF                     ___aodiv:
  8941  0EFF                     l2437:	
  8942                           ;incstack = 0
  8943                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8944                           
  8945  0EFF  01F2               	clrf	___aodiv@sign
  8946  0F00                     l2439:
  8947  0F00  3020               	movlw	low ___aodiv@divisor
  8948  0F01  0086               	movwf	6
  8949  0F02  3000               	movlw	high ___aodiv@divisor
  8950  0F03  0087               	movwf	7
  8951  0F04  3F47               	moviw [7]fsr1
  8952  0F05  00F0               	movwf	??___aodiv
  8953  0F06  1FF0               	btfss	??___aodiv,7
  8954  0F07  2F09               	goto	u1741
  8955  0F08  2F0A               	goto	u1740
  8956  0F09                     u1741:
  8957  0F09  2F2B               	goto	l2443
  8958  0F0A                     u1740:
  8959  0F0A                     l2441:
  8960  0F0A  0020               	movlb	0	; select bank0
  8961  0F0B  09A0               	comf	___aodiv@divisor,f
  8962  0F0C  09A1               	comf	___aodiv@divisor+1,f
  8963  0F0D  09A2               	comf	___aodiv@divisor+2,f
  8964  0F0E  09A3               	comf	___aodiv@divisor+3,f
  8965  0F0F  09A4               	comf	___aodiv@divisor+4,f
  8966  0F10  09A5               	comf	___aodiv@divisor+5,f
  8967  0F11  09A6               	comf	___aodiv@divisor+6,f
  8968  0F12  09A7               	comf	___aodiv@divisor+7,f
  8969  0F13  0AA0               	incf	___aodiv@divisor,f
  8970  0F14  1D03               	skipz
  8971  0F15  2F29               	goto	u175lld
  8972  0F16  0AA1               	incf	___aodiv@divisor+1,f
  8973  0F17  1D03               	skipz
  8974  0F18  2F29               	goto	u175lld
  8975  0F19  0AA2               	incf	___aodiv@divisor+2,f
  8976  0F1A  1D03               	skipz
  8977  0F1B  2F29               	goto	u175lld
  8978  0F1C  0AA3               	incf	___aodiv@divisor+3,f
  8979  0F1D  1D03               	skipz
  8980  0F1E  2F29               	goto	u175lld
  8981  0F1F  0AA4               	incf	___aodiv@divisor+4,f
  8982  0F20  1D03               	skipz
  8983  0F21  2F29               	goto	u175lld
  8984  0F22  0AA5               	incf	___aodiv@divisor+5,f
  8985  0F23  1D03               	skipz
  8986  0F24  2F29               	goto	u175lld
  8987  0F25  0AA6               	incf	___aodiv@divisor+6,f
  8988  0F26  1D03               	skipz
  8989  0F27  2F29               	goto	u175lld
  8990  0F28  0AA7               	incf	___aodiv@divisor+7,f
  8991  0F29                     u175lld:
  8992  0F29  01F2               	clrf	___aodiv@sign
  8993  0F2A  0AF2               	incf	___aodiv@sign,f
  8994  0F2B                     l2443:
  8995  0F2B  3028               	movlw	low ___aodiv@dividend
  8996  0F2C  0086               	movwf	6
  8997  0F2D  3000               	movlw	high ___aodiv@dividend
  8998  0F2E  0087               	movwf	7
  8999  0F2F  3F47               	moviw [7]fsr1
  9000  0F30  00F0               	movwf	??___aodiv
  9001  0F31  1FF0               	btfss	??___aodiv,7
  9002  0F32  2F34               	goto	u1761
  9003  0F33  2F35               	goto	u1760
  9004  0F34                     u1761:
  9005  0F34  2F58               	goto	l2449
  9006  0F35                     u1760:
  9007  0F35                     l2445:
  9008  0F35  0020               	movlb	0	; select bank0
  9009  0F36  09A8               	comf	___aodiv@dividend,f
  9010  0F37  09A9               	comf	___aodiv@dividend+1,f
  9011  0F38  09AA               	comf	___aodiv@dividend+2,f
  9012  0F39  09AB               	comf	___aodiv@dividend+3,f
  9013  0F3A  09AC               	comf	___aodiv@dividend+4,f
  9014  0F3B  09AD               	comf	___aodiv@dividend+5,f
  9015  0F3C  09AE               	comf	___aodiv@dividend+6,f
  9016  0F3D  09AF               	comf	___aodiv@dividend+7,f
  9017  0F3E  0AA8               	incf	___aodiv@dividend,f
  9018  0F3F  1D03               	skipz
  9019  0F40  2F54               	goto	u177lld
  9020  0F41  0AA9               	incf	___aodiv@dividend+1,f
  9021  0F42  1D03               	skipz
  9022  0F43  2F54               	goto	u177lld
  9023  0F44  0AAA               	incf	___aodiv@dividend+2,f
  9024  0F45  1D03               	skipz
  9025  0F46  2F54               	goto	u177lld
  9026  0F47  0AAB               	incf	___aodiv@dividend+3,f
  9027  0F48  1D03               	skipz
  9028  0F49  2F54               	goto	u177lld
  9029  0F4A  0AAC               	incf	___aodiv@dividend+4,f
  9030  0F4B  1D03               	skipz
  9031  0F4C  2F54               	goto	u177lld
  9032  0F4D  0AAD               	incf	___aodiv@dividend+5,f
  9033  0F4E  1D03               	skipz
  9034  0F4F  2F54               	goto	u177lld
  9035  0F50  0AAE               	incf	___aodiv@dividend+6,f
  9036  0F51  1D03               	skipz
  9037  0F52  2F54               	goto	u177lld
  9038  0F53  0AAF               	incf	___aodiv@dividend+7,f
  9039  0F54                     u177lld:
  9040  0F54                     l2447:
  9041  0F54  3001               	movlw	1
  9042  0F55  00F0               	movwf	??___aodiv
  9043  0F56  0870               	movf	??___aodiv,w
  9044  0F57  06F2               	xorwf	___aodiv@sign,f
  9045  0F58                     l2449:
  9046  0F58  3073               	movlw	low ___aodiv@quotient
  9047  0F59  0086               	movwf	6
  9048  0F5A  3000               	movlw	high ___aodiv@quotient
  9049  0F5B  0087               	movwf	7
  9050  0F5C  3008               	movlw	8
  9051  0F5D  00F0               	movwf	??___aodiv
  9052  0F5E  3000               	movlw	0
  9053  0F5F                     u1780:
  9054  0F5F  001E               	movwi fsr1++
  9055  0F60  0BF0               	decfsz	??___aodiv,f
  9056  0F61  2F5F               	goto	u1780
  9057  0F62                     l2451:
  9058  0F62  0020               	movlb	0	; select bank0
  9059  0F63  0820               	movf	___aodiv@divisor,w
  9060  0F64  0421               	iorwf	___aodiv@divisor+1,w
  9061  0F65  0422               	iorwf	___aodiv@divisor+2,w
  9062  0F66  0423               	iorwf	___aodiv@divisor+3,w
  9063  0F67  0424               	iorwf	___aodiv@divisor+4,w
  9064  0F68  0425               	iorwf	___aodiv@divisor+5,w
  9065  0F69  0426               	iorwf	___aodiv@divisor+6,w
  9066  0F6A  0427               	iorwf	___aodiv@divisor+7,w
  9067  0F6B  1903               	skipnz
  9068  0F6C  2F6E               	goto	u1791
  9069  0F6D  2F6F               	goto	u1790
  9070  0F6E                     u1791:
  9071  0F6E  2FCB               	goto	l2471
  9072  0F6F                     u1790:
  9073  0F6F                     l2453:
  9074  0F6F  01F1               	clrf	___aodiv@counter
  9075  0F70  0AF1               	incf	___aodiv@counter,f
  9076  0F71  2F7E               	goto	l2459
  9077  0F72                     l2455:
  9078  0F72  35A0               	lslf	___aodiv@divisor,f
  9079  0F73  0DA1               	rlf	___aodiv@divisor+1,f
  9080  0F74  0DA2               	rlf	___aodiv@divisor+2,f
  9081  0F75  0DA3               	rlf	___aodiv@divisor+3,f
  9082  0F76  0DA4               	rlf	___aodiv@divisor+4,f
  9083  0F77  0DA5               	rlf	___aodiv@divisor+5,f
  9084  0F78  0DA6               	rlf	___aodiv@divisor+6,f
  9085  0F79  0DA7               	rlf	___aodiv@divisor+7,f
  9086  0F7A                     l2457:
  9087  0F7A  3001               	movlw	1
  9088  0F7B  00F0               	movwf	??___aodiv
  9089  0F7C  0870               	movf	??___aodiv,w
  9090  0F7D  07F1               	addwf	___aodiv@counter,f
  9091  0F7E                     l2459:
  9092  0F7E  1FA7               	btfss	___aodiv@divisor+7,7
  9093  0F7F  2F81               	goto	u1801
  9094  0F80  2F82               	goto	u1800
  9095  0F81                     u1801:
  9096  0F81  2F72               	goto	l2455
  9097  0F82                     u1800:
  9098  0F82                     l2461:
  9099  0F82  35F3               	lslf	___aodiv@quotient,f
  9100  0F83  0DF4               	rlf	___aodiv@quotient+1,f
  9101  0F84  0DF5               	rlf	___aodiv@quotient+2,f
  9102  0F85  0DF6               	rlf	___aodiv@quotient+3,f
  9103  0F86  0DF7               	rlf	___aodiv@quotient+4,f
  9104  0F87  0DF8               	rlf	___aodiv@quotient+5,f
  9105  0F88  0DF9               	rlf	___aodiv@quotient+6,f
  9106  0F89  0DFA               	rlf	___aodiv@quotient+7,f
  9107  0F8A                     l2463:
  9108  0F8A  0827               	movf	___aodiv@divisor+7,w
  9109  0F8B  022F               	subwf	___aodiv@dividend+7,w
  9110  0F8C  1D03               	skipz
  9111  0F8D  2FA8               	goto	u1815
  9112  0F8E  0826               	movf	___aodiv@divisor+6,w
  9113  0F8F  022E               	subwf	___aodiv@dividend+6,w
  9114  0F90  1D03               	skipz
  9115  0F91  2FA8               	goto	u1815
  9116  0F92  0825               	movf	___aodiv@divisor+5,w
  9117  0F93  022D               	subwf	___aodiv@dividend+5,w
  9118  0F94  1D03               	skipz
  9119  0F95  2FA8               	goto	u1815
  9120  0F96  0824               	movf	___aodiv@divisor+4,w
  9121  0F97  022C               	subwf	___aodiv@dividend+4,w
  9122  0F98  1D03               	skipz
  9123  0F99  2FA8               	goto	u1815
  9124  0F9A  0823               	movf	___aodiv@divisor+3,w
  9125  0F9B  022B               	subwf	___aodiv@dividend+3,w
  9126  0F9C  1D03               	skipz
  9127  0F9D  2FA8               	goto	u1815
  9128  0F9E  0822               	movf	___aodiv@divisor+2,w
  9129  0F9F  022A               	subwf	___aodiv@dividend+2,w
  9130  0FA0  1D03               	skipz
  9131  0FA1  2FA8               	goto	u1815
  9132  0FA2  0821               	movf	___aodiv@divisor+1,w
  9133  0FA3  0229               	subwf	___aodiv@dividend+1,w
  9134  0FA4  1D03               	skipz
  9135  0FA5  2FA8               	goto	u1815
  9136  0FA6  0820               	movf	___aodiv@divisor,w
  9137  0FA7  0228               	subwf	___aodiv@dividend,w
  9138  0FA8                     u1815:
  9139  0FA8  1C03               	skipc
  9140  0FA9  2FAB               	goto	u1811
  9141  0FAA  2FAC               	goto	u1810
  9142  0FAB                     u1811:
  9143  0FAB  2FBD               	goto	l2469
  9144  0FAC                     u1810:
  9145  0FAC                     l2465:
  9146  0FAC  0820               	movf	___aodiv@divisor,w
  9147  0FAD  02A8               	subwf	___aodiv@dividend,f
  9148  0FAE  0821               	movf	___aodiv@divisor+1,w
  9149  0FAF  3BA9               	subwfb	___aodiv@dividend+1,f
  9150  0FB0  0822               	movf	___aodiv@divisor+2,w
  9151  0FB1  3BAA               	subwfb	___aodiv@dividend+2,f
  9152  0FB2  0823               	movf	___aodiv@divisor+3,w
  9153  0FB3  3BAB               	subwfb	___aodiv@dividend+3,f
  9154  0FB4  0824               	movf	___aodiv@divisor+4,w
  9155  0FB5  3BAC               	subwfb	___aodiv@dividend+4,f
  9156  0FB6  0825               	movf	___aodiv@divisor+5,w
  9157  0FB7  3BAD               	subwfb	___aodiv@dividend+5,f
  9158  0FB8  0826               	movf	___aodiv@divisor+6,w
  9159  0FB9  3BAE               	subwfb	___aodiv@dividend+6,f
  9160  0FBA  0827               	movf	___aodiv@divisor+7,w
  9161  0FBB  3BAF               	subwfb	___aodiv@dividend+7,f
  9162  0FBC                     l2467:
  9163  0FBC  1473               	bsf	___aodiv@quotient,0
  9164  0FBD                     l2469:
  9165  0FBD  36A7               	lsrf	___aodiv@divisor+7,f
  9166  0FBE  0CA6               	rrf	___aodiv@divisor+6,f
  9167  0FBF  0CA5               	rrf	___aodiv@divisor+5,f
  9168  0FC0  0CA4               	rrf	___aodiv@divisor+4,f
  9169  0FC1  0CA3               	rrf	___aodiv@divisor+3,f
  9170  0FC2  0CA2               	rrf	___aodiv@divisor+2,f
  9171  0FC3  0CA1               	rrf	___aodiv@divisor+1,f
  9172  0FC4  0CA0               	rrf	___aodiv@divisor,f
  9173  0FC5  3001               	movlw	1
  9174  0FC6  02F1               	subwf	___aodiv@counter,f
  9175  0FC7  1D03               	btfss	3,2
  9176  0FC8  2FCA               	goto	u1821
  9177  0FC9  2FCB               	goto	u1820
  9178  0FCA                     u1821:
  9179  0FCA  2F82               	goto	l2461
  9180  0FCB                     u1820:
  9181  0FCB                     l2471:
  9182  0FCB  0872               	movf	___aodiv@sign,w
  9183  0FCC  1903               	btfsc	3,2
  9184  0FCD  2FCF               	goto	u1831
  9185  0FCE  2FD0               	goto	u1830
  9186  0FCF                     u1831:
  9187  0FCF  2FEE               	goto	l684
  9188  0FD0                     u1830:
  9189  0FD0                     l2473:
  9190  0FD0  09F3               	comf	___aodiv@quotient,f
  9191  0FD1  09F4               	comf	___aodiv@quotient+1,f
  9192  0FD2  09F5               	comf	___aodiv@quotient+2,f
  9193  0FD3  09F6               	comf	___aodiv@quotient+3,f
  9194  0FD4  09F7               	comf	___aodiv@quotient+4,f
  9195  0FD5  09F8               	comf	___aodiv@quotient+5,f
  9196  0FD6  09F9               	comf	___aodiv@quotient+6,f
  9197  0FD7  09FA               	comf	___aodiv@quotient+7,f
  9198  0FD8  0AF3               	incf	___aodiv@quotient,f
  9199  0FD9  1D03               	skipz
  9200  0FDA  2FEE               	goto	u184lld
  9201  0FDB  0AF4               	incf	___aodiv@quotient+1,f
  9202  0FDC  1D03               	skipz
  9203  0FDD  2FEE               	goto	u184lld
  9204  0FDE  0AF5               	incf	___aodiv@quotient+2,f
  9205  0FDF  1D03               	skipz
  9206  0FE0  2FEE               	goto	u184lld
  9207  0FE1  0AF6               	incf	___aodiv@quotient+3,f
  9208  0FE2  1D03               	skipz
  9209  0FE3  2FEE               	goto	u184lld
  9210  0FE4  0AF7               	incf	___aodiv@quotient+4,f
  9211  0FE5  1D03               	skipz
  9212  0FE6  2FEE               	goto	u184lld
  9213  0FE7  0AF8               	incf	___aodiv@quotient+5,f
  9214  0FE8  1D03               	skipz
  9215  0FE9  2FEE               	goto	u184lld
  9216  0FEA  0AF9               	incf	___aodiv@quotient+6,f
  9217  0FEB  1D03               	skipz
  9218  0FEC  2FEE               	goto	u184lld
  9219  0FED  0AFA               	incf	___aodiv@quotient+7,f
  9220  0FEE                     u184lld:
  9221  0FEE                     l684:
  9222  0FEE  0873               	movf	___aodiv@quotient,w
  9223  0FEF  0020               	movlb	0	; select bank0
  9224  0FF0  00A0               	movwf	?___aodiv
  9225  0FF1  0874               	movf	___aodiv@quotient+1,w
  9226  0FF2  00A1               	movwf	?___aodiv+1
  9227  0FF3  0875               	movf	___aodiv@quotient+2,w
  9228  0FF4  00A2               	movwf	?___aodiv+2
  9229  0FF5  0876               	movf	___aodiv@quotient+3,w
  9230  0FF6  00A3               	movwf	?___aodiv+3
  9231  0FF7  0877               	movf	___aodiv@quotient+4,w
  9232  0FF8  00A4               	movwf	?___aodiv+4
  9233  0FF9  0878               	movf	___aodiv@quotient+5,w
  9234  0FFA  00A5               	movwf	?___aodiv+5
  9235  0FFB  0879               	movf	___aodiv@quotient+6,w
  9236  0FFC  00A6               	movwf	?___aodiv+6
  9237  0FFD  087A               	movf	___aodiv@quotient+7,w
  9238  0FFE  00A7               	movwf	?___aodiv+7
  9239  0FFF                     l685:
  9240  0FFF  0008               	return
  9241  1000                     __end_of___aodiv:
  9242                           
  9243                           	psect	text14
  9244  0807                     __ptext14:	
  9245 ;; *************** function ___wmul *****************
  9246 ;; Defined at:
  9247 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  9248 ;; Parameters:    Size  Location     Type
  9249 ;;  multiplier      2    0[COMMON] unsigned int 
  9250 ;;  multiplicand    2    2[COMMON] unsigned int 
  9251 ;; Auto vars:     Size  Location     Type
  9252 ;;  product         2    4[COMMON] unsigned int 
  9253 ;; Return value:  Size  Location     Type
  9254 ;;                  2    0[COMMON] unsigned int 
  9255 ;; Registers used:
  9256 ;;		wreg, status,2, status,0
  9257 ;; Tracked objects:
  9258 ;;		On entry : 0/0
  9259 ;;		On exit  : 0/0
  9260 ;;		Unchanged: 0/0
  9261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9262 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9263 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9265 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9266 ;;Total ram usage:        6 bytes
  9267 ;; Hardware stack levels used:    1
  9268 ;; Hardware stack levels required when called:    4
  9269 ;; This function calls:
  9270 ;;		Nothing
  9271 ;; This function is called by:
  9272 ;;		_stuffIntToCharsBuf
  9273 ;; This function uses a non-reentrant model
  9274 ;;
  9275                           
  9276                           
  9277                           ;psect for function ___wmul
  9278  0807                     ___wmul:
  9279  0807                     l2931:	
  9280                           ;incstack = 0
  9281                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9282                           
  9283  0807  01F4               	clrf	___wmul@product
  9284  0808  01F5               	clrf	___wmul@product+1
  9285  0809                     l2933:
  9286  0809  1C70               	btfss	___wmul@multiplier,0
  9287  080A  280C               	goto	u2371
  9288  080B  280D               	goto	u2370
  9289  080C                     u2371:
  9290  080C  2811               	goto	l584
  9291  080D                     u2370:
  9292  080D                     l2935:
  9293  080D  0872               	movf	___wmul@multiplicand,w
  9294  080E  07F4               	addwf	___wmul@product,f
  9295  080F  0873               	movf	___wmul@multiplicand+1,w
  9296  0810  3DF5               	addwfc	___wmul@product+1,f
  9297  0811                     l584:
  9298  0811  3001               	movlw	1
  9299  0812                     u2385:
  9300  0812  35F2               	lslf	___wmul@multiplicand,f
  9301  0813  0DF3               	rlf	___wmul@multiplicand+1,f
  9302  0814  0B89               	decfsz	9,f
  9303  0815  2812               	goto	u2385
  9304  0816                     l2937:
  9305  0816  3001               	movlw	1
  9306  0817                     u2395:
  9307  0817  36F1               	lsrf	___wmul@multiplier+1,f
  9308  0818  0CF0               	rrf	___wmul@multiplier,f
  9309  0819  0B89               	decfsz	9,f
  9310  081A  2817               	goto	u2395
  9311  081B                     l2939:
  9312  081B  0870               	movf	___wmul@multiplier,w
  9313  081C  0471               	iorwf	___wmul@multiplier+1,w
  9314  081D  1D03               	btfss	3,2
  9315  081E  2820               	goto	u2401
  9316  081F  2821               	goto	u2400
  9317  0820                     u2401:
  9318  0820  2809               	goto	l2933
  9319  0821                     u2400:
  9320  0821                     l2941:
  9321  0821  0875               	movf	___wmul@product+1,w
  9322  0822  00F1               	movwf	?___wmul+1
  9323  0823  0874               	movf	___wmul@product,w
  9324  0824  00F0               	movwf	?___wmul
  9325  0825                     l586:
  9326  0825  0008               	return
  9327  0826                     __end_of___wmul:
  9328                           
  9329                           	psect	text15
  9330  0B69                     __ptext15:	
  9331 ;; *************** function ___awdiv *****************
  9332 ;; Defined at:
  9333 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awdiv.c"
  9334 ;; Parameters:    Size  Location     Type
  9335 ;;  divisor         2    0[COMMON] int 
  9336 ;;  dividend        2    2[COMMON] int 
  9337 ;; Auto vars:     Size  Location     Type
  9338 ;;  quotient        2    7[COMMON] int 
  9339 ;;  sign            1    6[COMMON] unsigned char 
  9340 ;;  counter         1    5[COMMON] unsigned char 
  9341 ;; Return value:  Size  Location     Type
  9342 ;;                  2    0[COMMON] int 
  9343 ;; Registers used:
  9344 ;;		wreg, status,2, status,0
  9345 ;; Tracked objects:
  9346 ;;		On entry : 0/0
  9347 ;;		On exit  : 0/0
  9348 ;;		Unchanged: 0/0
  9349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9350 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9351 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9352 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9353 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9354 ;;Total ram usage:        9 bytes
  9355 ;; Hardware stack levels used:    1
  9356 ;; Hardware stack levels required when called:    4
  9357 ;; This function calls:
  9358 ;;		Nothing
  9359 ;; This function is called by:
  9360 ;;		_stuffIntToCharsBuf
  9361 ;; This function uses a non-reentrant model
  9362 ;;
  9363                           
  9364                           
  9365                           ;psect for function ___awdiv
  9366  0B69                     ___awdiv:
  9367  0B69                     l2945:	
  9368                           ;incstack = 0
  9369                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9370                           
  9371  0B69  01F6               	clrf	___awdiv@sign
  9372  0B6A                     l2947:
  9373  0B6A  1FF1               	btfss	___awdiv@divisor+1,7
  9374  0B6B  2B6D               	goto	u2411
  9375  0B6C  2B6E               	goto	u2410
  9376  0B6D                     u2411:
  9377  0B6D  2B75               	goto	l2953
  9378  0B6E                     u2410:
  9379  0B6E                     l2949:
  9380  0B6E  09F0               	comf	___awdiv@divisor,f
  9381  0B6F  09F1               	comf	___awdiv@divisor+1,f
  9382  0B70  0AF0               	incf	___awdiv@divisor,f
  9383  0B71  1903               	skipnz
  9384  0B72  0AF1               	incf	___awdiv@divisor+1,f
  9385  0B73                     l2951:
  9386  0B73  01F6               	clrf	___awdiv@sign
  9387  0B74  0AF6               	incf	___awdiv@sign,f
  9388  0B75                     l2953:
  9389  0B75  1FF3               	btfss	___awdiv@dividend+1,7
  9390  0B76  2B78               	goto	u2421
  9391  0B77  2B79               	goto	u2420
  9392  0B78                     u2421:
  9393  0B78  2B82               	goto	l2959
  9394  0B79                     u2420:
  9395  0B79                     l2955:
  9396  0B79  09F2               	comf	___awdiv@dividend,f
  9397  0B7A  09F3               	comf	___awdiv@dividend+1,f
  9398  0B7B  0AF2               	incf	___awdiv@dividend,f
  9399  0B7C  1903               	skipnz
  9400  0B7D  0AF3               	incf	___awdiv@dividend+1,f
  9401  0B7E                     l2957:
  9402  0B7E  3001               	movlw	1
  9403  0B7F  00F4               	movwf	??___awdiv
  9404  0B80  0874               	movf	??___awdiv,w
  9405  0B81  06F6               	xorwf	___awdiv@sign,f
  9406  0B82                     l2959:
  9407  0B82  01F7               	clrf	___awdiv@quotient
  9408  0B83  01F8               	clrf	___awdiv@quotient+1
  9409  0B84                     l2961:
  9410  0B84  0870               	movf	___awdiv@divisor,w
  9411  0B85  0471               	iorwf	___awdiv@divisor+1,w
  9412  0B86  1903               	btfsc	3,2
  9413  0B87  2B89               	goto	u2431
  9414  0B88  2B8A               	goto	u2430
  9415  0B89                     u2431:
  9416  0B89  2BB9               	goto	l2981
  9417  0B8A                     u2430:
  9418  0B8A                     l2963:
  9419  0B8A  01F5               	clrf	___awdiv@counter
  9420  0B8B  0AF5               	incf	___awdiv@counter,f
  9421  0B8C  2B96               	goto	l2969
  9422  0B8D                     l2965:
  9423  0B8D  3001               	movlw	1
  9424  0B8E                     u2445:
  9425  0B8E  35F0               	lslf	___awdiv@divisor,f
  9426  0B8F  0DF1               	rlf	___awdiv@divisor+1,f
  9427  0B90  0B89               	decfsz	9,f
  9428  0B91  2B8E               	goto	u2445
  9429  0B92                     l2967:
  9430  0B92  3001               	movlw	1
  9431  0B93  00F4               	movwf	??___awdiv
  9432  0B94  0874               	movf	??___awdiv,w
  9433  0B95  07F5               	addwf	___awdiv@counter,f
  9434  0B96                     l2969:
  9435  0B96  1FF1               	btfss	___awdiv@divisor+1,7
  9436  0B97  2B99               	goto	u2451
  9437  0B98  2B9A               	goto	u2450
  9438  0B99                     u2451:
  9439  0B99  2B8D               	goto	l2965
  9440  0B9A                     u2450:
  9441  0B9A                     l2971:
  9442  0B9A  3001               	movlw	1
  9443  0B9B                     u2465:
  9444  0B9B  35F7               	lslf	___awdiv@quotient,f
  9445  0B9C  0DF8               	rlf	___awdiv@quotient+1,f
  9446  0B9D  0B89               	decfsz	9,f
  9447  0B9E  2B9B               	goto	u2465
  9448  0B9F  0871               	movf	___awdiv@divisor+1,w
  9449  0BA0  0273               	subwf	___awdiv@dividend+1,w
  9450  0BA1  1D03               	skipz
  9451  0BA2  2BA5               	goto	u2475
  9452  0BA3  0870               	movf	___awdiv@divisor,w
  9453  0BA4  0272               	subwf	___awdiv@dividend,w
  9454  0BA5                     u2475:
  9455  0BA5  1C03               	skipc
  9456  0BA6  2BA8               	goto	u2471
  9457  0BA7  2BA9               	goto	u2470
  9458  0BA8                     u2471:
  9459  0BA8  2BAE               	goto	l2977
  9460  0BA9                     u2470:
  9461  0BA9                     l2973:
  9462  0BA9  0870               	movf	___awdiv@divisor,w
  9463  0BAA  02F2               	subwf	___awdiv@dividend,f
  9464  0BAB  0871               	movf	___awdiv@divisor+1,w
  9465  0BAC  3BF3               	subwfb	___awdiv@dividend+1,f
  9466  0BAD                     l2975:
  9467  0BAD  1477               	bsf	___awdiv@quotient,0
  9468  0BAE                     l2977:
  9469  0BAE  3001               	movlw	1
  9470  0BAF                     u2485:
  9471  0BAF  36F1               	lsrf	___awdiv@divisor+1,f
  9472  0BB0  0CF0               	rrf	___awdiv@divisor,f
  9473  0BB1  0B89               	decfsz	9,f
  9474  0BB2  2BAF               	goto	u2485
  9475  0BB3                     l2979:
  9476  0BB3  3001               	movlw	1
  9477  0BB4  02F5               	subwf	___awdiv@counter,f
  9478  0BB5  1D03               	btfss	3,2
  9479  0BB6  2BB8               	goto	u2491
  9480  0BB7  2BB9               	goto	u2490
  9481  0BB8                     u2491:
  9482  0BB8  2B9A               	goto	l2971
  9483  0BB9                     u2490:
  9484  0BB9                     l2981:
  9485  0BB9  0876               	movf	___awdiv@sign,w
  9486  0BBA  1903               	btfsc	3,2
  9487  0BBB  2BBD               	goto	u2501
  9488  0BBC  2BBE               	goto	u2500
  9489  0BBD                     u2501:
  9490  0BBD  2BC3               	goto	l2985
  9491  0BBE                     u2500:
  9492  0BBE                     l2983:
  9493  0BBE  09F7               	comf	___awdiv@quotient,f
  9494  0BBF  09F8               	comf	___awdiv@quotient+1,f
  9495  0BC0  0AF7               	incf	___awdiv@quotient,f
  9496  0BC1  1903               	skipnz
  9497  0BC2  0AF8               	incf	___awdiv@quotient+1,f
  9498  0BC3                     l2985:
  9499  0BC3  0878               	movf	___awdiv@quotient+1,w
  9500  0BC4  00F1               	movwf	?___awdiv+1
  9501  0BC5  0877               	movf	___awdiv@quotient,w
  9502  0BC6  00F0               	movwf	?___awdiv
  9503  0BC7                     l737:
  9504  0BC7  0008               	return
  9505  0BC8                     __end_of___awdiv:
  9506                           
  9507                           	psect	text16
  9508  0B0C                     __ptext16:	
  9509 ;; *************** function _spi_read_32bits *****************
  9510 ;; Defined at:
  9511 ;;		line 485 in file "main.c"
  9512 ;; Parameters:    Size  Location     Type
  9513 ;;		None
  9514 ;; Auto vars:     Size  Location     Type
  9515 ;;  i               2    5[BANK0 ] int 
  9516 ;;  result          4    1[BANK0 ] unsigned long 
  9517 ;;  byte            1    0[BANK0 ] unsigned char 
  9518 ;; Return value:  Size  Location     Type
  9519 ;;                  4    1[COMMON] unsigned long 
  9520 ;; Registers used:
  9521 ;;		wreg, status,2, status,0, pclath, cstack
  9522 ;; Tracked objects:
  9523 ;;		On entry : 0/0
  9524 ;;		On exit  : 0/0
  9525 ;;		Unchanged: 0/0
  9526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9527 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9528 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9529 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9530 ;;      Totals:        12       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9531 ;;Total ram usage:       19 bytes
  9532 ;; Hardware stack levels used:    1
  9533 ;; Hardware stack levels required when called:    5
  9534 ;; This function calls:
  9535 ;;		_spi_transfer
  9536 ;; This function is called by:
  9537 ;;		_main
  9538 ;; This function uses a non-reentrant model
  9539 ;;
  9540                           
  9541                           
  9542                           ;psect for function _spi_read_32bits
  9543  0B0C                     _spi_read_32bits:
  9544  0B0C                     l3255:	
  9545                           ;incstack = 0
  9546                           ; Regs used in _spi_read_32bits: [wreg+status,2+status,0+pclath+cstack]
  9547                           
  9548                           
  9549                           ;main.c: 486:     uint32_t result = 0;
  9550  0B0C  3000               	movlw	0
  9551  0B0D  0020               	movlb	0	; select bank0
  9552  0B0E  00A4               	movwf	spi_read_32bits@result+3
  9553  0B0F  3000               	movlw	0
  9554  0B10  00A3               	movwf	spi_read_32bits@result+2
  9555  0B11  3000               	movlw	0
  9556  0B12  00A2               	movwf	spi_read_32bits@result+1
  9557  0B13  3000               	movlw	0
  9558  0B14  00A1               	movwf	spi_read_32bits@result
  9559  0B15                     l3257:
  9560                           
  9561                           ;main.c: 487:     uint8_t byte;;main.c: 490:     LATC6 = 0;
  9562  0B15  0022               	movlb	2	; select bank2
  9563  0B16  130E               	bcf	14,6	;volatile
  9564  0B17                     l3259:
  9565                           
  9566                           ;main.c: 492:     for (int i = 0; i < 4; i++) {
  9567  0B17  0020               	movlb	0	; select bank0
  9568  0B18  01A5               	clrf	spi_read_32bits@i
  9569  0B19  01A6               	clrf	spi_read_32bits@i+1
  9570  0B1A                     l3265:
  9571                           
  9572                           ;main.c: 493:         byte = spi_transfer(0x00);
  9573  0B1A  3000               	movlw	0
  9574  0B1B  3196  26CB  318B   	fcall	_spi_transfer
  9575  0B1E  00F5               	movwf	??_spi_read_32bits
  9576  0B1F  0875               	movf	??_spi_read_32bits,w
  9577  0B20  0020               	movlb	0	; select bank0
  9578  0B21  00A0               	movwf	spi_read_32bits@byte
  9579  0B22                     l3267:
  9580                           
  9581                           ;main.c: 494:         LATC6 = 0;
  9582  0B22  0022               	movlb	2	; select bank2
  9583  0B23  130E               	bcf	14,6	;volatile
  9584  0B24                     l3269:
  9585                           
  9586                           ;main.c: 495:         result = (result << 8) | byte;
  9587  0B24  0020               	movlb	0	; select bank0
  9588  0B25  0820               	movf	spi_read_32bits@byte,w
  9589  0B26  00F5               	movwf	??_spi_read_32bits
  9590  0B27  01F6               	clrf	??_spi_read_32bits+1
  9591  0B28  01F7               	clrf	??_spi_read_32bits+2
  9592  0B29  01F8               	clrf	??_spi_read_32bits+3
  9593  0B2A  0821               	movf	spi_read_32bits@result,w
  9594  0B2B  00F9               	movwf	??_spi_read_32bits+4
  9595  0B2C  0822               	movf	spi_read_32bits@result+1,w
  9596  0B2D  00FA               	movwf	??_spi_read_32bits+5
  9597  0B2E  0823               	movf	spi_read_32bits@result+2,w
  9598  0B2F  00FB               	movwf	??_spi_read_32bits+6
  9599  0B30  0824               	movf	spi_read_32bits@result+3,w
  9600  0B31  00FC               	movwf	??_spi_read_32bits+7
  9601  0B32  3008               	movlw	8
  9602  0B33                     u3015:
  9603  0B33  35F9               	lslf	??_spi_read_32bits+4,f
  9604  0B34  0DFA               	rlf	??_spi_read_32bits+5,f
  9605  0B35  0DFB               	rlf	??_spi_read_32bits+6,f
  9606  0B36  0DFC               	rlf	??_spi_read_32bits+7,f
  9607  0B37                     u3010:
  9608  0B37  0B89               	decfsz	9,f
  9609  0B38  2B33               	goto	u3015
  9610  0B39  0879               	movf	??_spi_read_32bits+4,w
  9611  0B3A  04F5               	iorwf	??_spi_read_32bits,f
  9612  0B3B  087A               	movf	??_spi_read_32bits+5,w
  9613  0B3C  04F6               	iorwf	??_spi_read_32bits+1,f
  9614  0B3D  087B               	movf	??_spi_read_32bits+6,w
  9615  0B3E  04F7               	iorwf	??_spi_read_32bits+2,f
  9616  0B3F  087C               	movf	??_spi_read_32bits+7,w
  9617  0B40  04F8               	iorwf	??_spi_read_32bits+3,f
  9618  0B41  0878               	movf	??_spi_read_32bits+3,w
  9619  0B42  00A4               	movwf	spi_read_32bits@result+3
  9620  0B43  0877               	movf	??_spi_read_32bits+2,w
  9621  0B44  00A3               	movwf	spi_read_32bits@result+2
  9622  0B45  0876               	movf	??_spi_read_32bits+1,w
  9623  0B46  00A2               	movwf	spi_read_32bits@result+1
  9624  0B47  0875               	movf	??_spi_read_32bits,w
  9625  0B48  00A1               	movwf	spi_read_32bits@result
  9626  0B49                     l3271:
  9627                           
  9628                           ;main.c: 496:         LATC6 = 0;
  9629  0B49  0022               	movlb	2	; select bank2
  9630  0B4A  130E               	bcf	14,6	;volatile
  9631  0B4B                     l3273:
  9632                           
  9633                           ;main.c: 497:     }
  9634  0B4B  3001               	movlw	1
  9635  0B4C  0020               	movlb	0	; select bank0
  9636  0B4D  07A5               	addwf	spi_read_32bits@i,f
  9637  0B4E  3000               	movlw	0
  9638  0B4F  3DA6               	addwfc	spi_read_32bits@i+1,f
  9639  0B50                     l3275:
  9640  0B50  0826               	movf	spi_read_32bits@i+1,w
  9641  0B51  3A80               	xorlw	128
  9642  0B52  00F5               	movwf	??_spi_read_32bits
  9643  0B53  3080               	movlw	128
  9644  0B54  0275               	subwf	??_spi_read_32bits,w
  9645  0B55  1D03               	skipz
  9646  0B56  2B59               	goto	u3025
  9647  0B57  3004               	movlw	4
  9648  0B58  0225               	subwf	spi_read_32bits@i,w
  9649  0B59                     u3025:
  9650  0B59  1C03               	skipc
  9651  0B5A  2B5C               	goto	u3021
  9652  0B5B  2B5D               	goto	u3020
  9653  0B5C                     u3021:
  9654  0B5C  2B1A               	goto	l3265
  9655  0B5D                     u3020:
  9656  0B5D                     l384:
  9657                           
  9658                           ;main.c: 500:     LATC6 = 1;
  9659  0B5D  0022               	movlb	2	; select bank2
  9660  0B5E  170E               	bsf	14,6	;volatile
  9661  0B5F                     l3277:
  9662                           
  9663                           ;main.c: 502:     return result;
  9664  0B5F  0020               	movlb	0	; select bank0
  9665  0B60  0824               	movf	spi_read_32bits@result+3,w
  9666  0B61  00F4               	movwf	?_spi_read_32bits+3
  9667  0B62  0823               	movf	spi_read_32bits@result+2,w
  9668  0B63  00F3               	movwf	?_spi_read_32bits+2
  9669  0B64  0822               	movf	spi_read_32bits@result+1,w
  9670  0B65  00F2               	movwf	?_spi_read_32bits+1
  9671  0B66  0821               	movf	spi_read_32bits@result,w
  9672  0B67  00F1               	movwf	?_spi_read_32bits
  9673  0B68                     l385:
  9674  0B68  0008               	return
  9675  0B69                     __end_of_spi_read_32bits:
  9676                           
  9677                           	psect	text17
  9678  16CB                     __ptext17:	
  9679 ;; *************** function _spi_transfer *****************
  9680 ;; Defined at:
  9681 ;;		line 468 in file "main.c"
  9682 ;; Parameters:    Size  Location     Type
  9683 ;;  data            1    wreg     unsigned char 
  9684 ;; Auto vars:     Size  Location     Type
  9685 ;;  data            1    0[COMMON] unsigned char 
  9686 ;; Return value:  Size  Location     Type
  9687 ;;                  1    wreg      unsigned char 
  9688 ;; Registers used:
  9689 ;;		wreg
  9690 ;; Tracked objects:
  9691 ;;		On entry : 0/0
  9692 ;;		On exit  : 0/0
  9693 ;;		Unchanged: 0/0
  9694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9698 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9699 ;;Total ram usage:        1 bytes
  9700 ;; Hardware stack levels used:    1
  9701 ;; Hardware stack levels required when called:    4
  9702 ;; This function calls:
  9703 ;;		Nothing
  9704 ;; This function is called by:
  9705 ;;		_spi_read_32bits
  9706 ;; This function uses a non-reentrant model
  9707 ;;
  9708                           
  9709                           
  9710                           ;psect for function _spi_transfer
  9711  16CB                     _spi_transfer:
  9712                           
  9713                           ;incstack = 0
  9714                           ; Regs used in _spi_transfer: [wreg]
  9715                           ;spi_transfer@data stored from wreg
  9716  16CB  00F0               	movwf	spi_transfer@data
  9717  16CC                     l2921:
  9718                           
  9719                           ;main.c: 469:     SSP1BUF = data;
  9720  16CC  0870               	movf	spi_transfer@data,w
  9721  16CD  0024               	movlb	4	; select bank4
  9722  16CE  0091               	movwf	17	;volatile
  9723  16CF                     l374:	
  9724                           ;main.c: 470:     while(!SSP1STATbits.BF);
  9725                           
  9726  16CF  1C14               	btfss	20,0	;volatile
  9727  16D0  2ED2               	goto	u2351
  9728  16D1  2ED3               	goto	u2350
  9729  16D2                     u2351:
  9730  16D2  2ECF               	goto	l374
  9731  16D3                     u2350:
  9732  16D3                     l2923:
  9733                           
  9734                           ;main.c: 471:     return SSP1BUF;
  9735  16D3  0811               	movf	17,w	;volatile
  9736  16D4                     l377:
  9737  16D4  0008               	return
  9738  16D5                     __end_of_spi_transfer:
  9739                           
  9740                           	psect	text18
  9741  17BB                     __ptext18:	
  9742 ;; *************** function _setMotorSpeed *****************
  9743 ;; Defined at:
  9744 ;;		line 346 in file "main.c"
  9745 ;; Parameters:    Size  Location     Type
  9746 ;;  num             2    4[COMMON] unsigned short 
  9747 ;;  motorNum        2    6[COMMON] short 
  9748 ;; Auto vars:     Size  Location     Type
  9749 ;;		None
  9750 ;; Return value:  Size  Location     Type
  9751 ;;                  1    wreg      void 
  9752 ;; Registers used:
  9753 ;;		wreg, status,2, status,0, pclath, cstack
  9754 ;; Tracked objects:
  9755 ;;		On entry : 0/0
  9756 ;;		On exit  : 0/0
  9757 ;;		Unchanged: 0/0
  9758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9759 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9762 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9763 ;;Total ram usage:        4 bytes
  9764 ;; Hardware stack levels used:    1
  9765 ;; Hardware stack levels required when called:    5
  9766 ;; This function calls:
  9767 ;;		_PWM3_LoadDutyValue
  9768 ;;		_PWM4_LoadDutyValue
  9769 ;; This function is called by:
  9770 ;;		_main
  9771 ;; This function uses a non-reentrant model
  9772 ;;
  9773                           
  9774                           
  9775                           ;psect for function _setMotorSpeed
  9776  17BB                     _setMotorSpeed:
  9777  17BB                     l3247:	
  9778                           ;incstack = 0
  9779                           ; Regs used in _setMotorSpeed: [wreg+status,2+status,0+pclath+cstack]
  9780                           
  9781                           
  9782                           ;main.c: 347:     if (motorNum == 1)
  9783  17BB  0376               	decf	setMotorSpeed@motorNum,w
  9784  17BC  0477               	iorwf	setMotorSpeed@motorNum+1,w
  9785  17BD  1D03               	btfss	3,2
  9786  17BE  2FC0               	goto	u2991
  9787  17BF  2FC1               	goto	u2990
  9788  17C0                     u2991:
  9789  17C0  2FC8               	goto	l3251
  9790  17C1                     u2990:
  9791  17C1                     l3249:
  9792                           
  9793                           ;main.c: 348:         PWM3_LoadDutyValue(num);
  9794  17C1  0875               	movf	setMotorSpeed@num+1,w
  9795  17C2  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  9796  17C3  0874               	movf	setMotorSpeed@num,w
  9797  17C4  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  9798  17C5  3197  2721  3197   	fcall	_PWM3_LoadDutyValue
  9799  17C8                     l3251:
  9800                           
  9801                           ;main.c: 349:     if (motorNum == 2)
  9802  17C8  3002               	movlw	2
  9803  17C9  0676               	xorwf	setMotorSpeed@motorNum,w
  9804  17CA  0477               	iorwf	setMotorSpeed@motorNum+1,w
  9805  17CB  1D03               	btfss	3,2
  9806  17CC  2FCE               	goto	u3001
  9807  17CD  2FCF               	goto	u3000
  9808  17CE                     u3001:
  9809  17CE  2FD6               	goto	l343
  9810  17CF                     u3000:
  9811  17CF                     l3253:
  9812                           
  9813                           ;main.c: 350:         PWM4_LoadDutyValue(num);
  9814  17CF  0875               	movf	setMotorSpeed@num+1,w
  9815  17D0  00F1               	movwf	PWM4_LoadDutyValue@dutyValue+1
  9816  17D1  0874               	movf	setMotorSpeed@num,w
  9817  17D2  00F0               	movwf	PWM4_LoadDutyValue@dutyValue
  9818  17D3  3187  27EA  3197   	fcall	_PWM4_LoadDutyValue
  9819  17D6                     l343:
  9820  17D6  0008               	return
  9821  17D7                     __end_of_setMotorSpeed:
  9822                           
  9823                           	psect	text19
  9824  07EA                     __ptext19:	
  9825 ;; *************** function _PWM4_LoadDutyValue *****************
  9826 ;; Defined at:
  9827 ;;		line 74 in file "mcc_generated_files/pwm4.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;  dutyValue       2    0[COMMON] unsigned short 
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;		None
  9832 ;; Return value:  Size  Location     Type
  9833 ;;                  1    wreg      void 
  9834 ;; Registers used:
  9835 ;;		wreg, status,2, status,0
  9836 ;; Tracked objects:
  9837 ;;		On entry : 0/0
  9838 ;;		On exit  : 0/0
  9839 ;;		Unchanged: 0/0
  9840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9841 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9843 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9844 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9845 ;;Total ram usage:        4 bytes
  9846 ;; Hardware stack levels used:    1
  9847 ;; Hardware stack levels required when called:    4
  9848 ;; This function calls:
  9849 ;;		Nothing
  9850 ;; This function is called by:
  9851 ;;		_setMotorSpeed
  9852 ;; This function uses a non-reentrant model
  9853 ;;
  9854                           
  9855                           
  9856                           ;psect for function _PWM4_LoadDutyValue
  9857  07EA                     _PWM4_LoadDutyValue:
  9858  07EA                     l2913:	
  9859                           ;incstack = 0
  9860                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2+status,0]
  9861                           
  9862                           
  9863                           ;mcc_generated_files/pwm4.c: 74:  void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm4.c: 75:  {;mcc_generated_files/pwm4.c: 77:      PWM4DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9864  07EA  0871               	movf	PWM4_LoadDutyValue@dutyValue+1,w
  9865  07EB  00F3               	movwf	??_PWM4_LoadDutyValue+1
  9866  07EC  0870               	movf	PWM4_LoadDutyValue@dutyValue,w
  9867  07ED  00F2               	movwf	??_PWM4_LoadDutyValue
  9868  07EE  36F3               	lsrf	??_PWM4_LoadDutyValue+1,f
  9869  07EF  0CF2               	rrf	??_PWM4_LoadDutyValue,f
  9870  07F0  36F3               	lsrf	??_PWM4_LoadDutyValue+1,f
  9871  07F1  0CF2               	rrf	??_PWM4_LoadDutyValue,f
  9872  07F2  0872               	movf	??_PWM4_LoadDutyValue,w
  9873  07F3  002C               	movlb	12	; select bank12
  9874  07F4  009B               	movwf	27	;volatile
  9875                           
  9876                           ;mcc_generated_files/pwm4.c: 80:      PWM4DCL = (dutyValue & 0x0003)<<6;
  9877  07F5  0870               	movf	PWM4_LoadDutyValue@dutyValue,w
  9878  07F6  3903               	andlw	3
  9879  07F7  00F2               	movwf	??_PWM4_LoadDutyValue
  9880  07F8  3005               	movlw	5
  9881  07F9                     u2345:
  9882  07F9  35F2               	lslf	??_PWM4_LoadDutyValue,f
  9883  07FA  3EFF               	addlw	-1
  9884  07FB  1D03               	skipz
  9885  07FC  2FF9               	goto	u2345
  9886  07FD  3572               	lslf	??_PWM4_LoadDutyValue,w
  9887  07FE  009A               	movwf	26	;volatile
  9888  07FF                     l160:
  9889  07FF  0008               	return
  9890  0800                     __end_of_PWM4_LoadDutyValue:
  9891                           
  9892                           	psect	text20
  9893  1721                     __ptext20:	
  9894 ;; *************** function _PWM3_LoadDutyValue *****************
  9895 ;; Defined at:
  9896 ;;		line 74 in file "mcc_generated_files/pwm3.c"
  9897 ;; Parameters:    Size  Location     Type
  9898 ;;  dutyValue       2    0[COMMON] unsigned short 
  9899 ;; Auto vars:     Size  Location     Type
  9900 ;;		None
  9901 ;; Return value:  Size  Location     Type
  9902 ;;                  1    wreg      void 
  9903 ;; Registers used:
  9904 ;;		wreg, status,2, status,0
  9905 ;; Tracked objects:
  9906 ;;		On entry : 0/0
  9907 ;;		On exit  : 0/0
  9908 ;;		Unchanged: 0/0
  9909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9913 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9914 ;;Total ram usage:        4 bytes
  9915 ;; Hardware stack levels used:    1
  9916 ;; Hardware stack levels required when called:    4
  9917 ;; This function calls:
  9918 ;;		Nothing
  9919 ;; This function is called by:
  9920 ;;		_setMotorSpeed
  9921 ;; This function uses a non-reentrant model
  9922 ;;
  9923                           
  9924                           
  9925                           ;psect for function _PWM3_LoadDutyValue
  9926  1721                     _PWM3_LoadDutyValue:
  9927  1721                     l2911:	
  9928                           ;incstack = 0
  9929                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  9930                           
  9931                           
  9932                           ;mcc_generated_files/pwm3.c: 74:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 75:  {;mcc_generated_files/pwm3.c: 77:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9933  1721  0871               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  9934  1722  00F3               	movwf	??_PWM3_LoadDutyValue+1
  9935  1723  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
  9936  1724  00F2               	movwf	??_PWM3_LoadDutyValue
  9937  1725  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
  9938  1726  0CF2               	rrf	??_PWM3_LoadDutyValue,f
  9939  1727  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
  9940  1728  0CF2               	rrf	??_PWM3_LoadDutyValue,f
  9941  1729  0872               	movf	??_PWM3_LoadDutyValue,w
  9942  172A  002C               	movlb	12	; select bank12
  9943  172B  0098               	movwf	24	;volatile
  9944                           
  9945                           ;mcc_generated_files/pwm3.c: 80:      PWM3DCL = (dutyValue & 0x0003)<<6;
  9946  172C  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
  9947  172D  3903               	andlw	3
  9948  172E  00F2               	movwf	??_PWM3_LoadDutyValue
  9949  172F  3005               	movlw	5
  9950  1730                     u2335:
  9951  1730  35F2               	lslf	??_PWM3_LoadDutyValue,f
  9952  1731  3EFF               	addlw	-1
  9953  1732  1D03               	skipz
  9954  1733  2F30               	goto	u2335
  9955  1734  3572               	lslf	??_PWM3_LoadDutyValue,w
  9956  1735  0097               	movwf	23	;volatile
  9957  1736                     l146:
  9958  1736  0008               	return
  9959  1737                     __end_of_PWM3_LoadDutyValue:
  9960                           
  9961                           	psect	text21
  9962  0CD3                     __ptext21:	
  9963 ;; *************** function _printByteValue *****************
  9964 ;; Defined at:
  9965 ;;		line 304 in file "main.c"
  9966 ;; Parameters:    Size  Location     Type
  9967 ;;  s               1    wreg     PTR unsigned char 
  9968 ;;		 -> text7(17), 
  9969 ;;  byteVal         1    9[COMMON] unsigned char 
  9970 ;;  pos             2   10[COMMON] int 
  9971 ;; Auto vars:     Size  Location     Type
  9972 ;;  s               1    2[BANK0 ] PTR unsigned char 
  9973 ;;		 -> text7(17), 
  9974 ;;  i               2    3[BANK0 ] int 
  9975 ;;  upperBits       1    1[BANK0 ] unsigned char 
  9976 ;;  lowerBits       1    0[BANK0 ] unsigned char 
  9977 ;; Return value:  Size  Location     Type
  9978 ;;                  1    wreg      void 
  9979 ;; Registers used:
  9980 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9981 ;; Tracked objects:
  9982 ;;		On entry : 0/0
  9983 ;;		On exit  : 0/0
  9984 ;;		Unchanged: 0/0
  9985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9986 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9987 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9988 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9989 ;;      Totals:         5       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9990 ;;Total ram usage:       10 bytes
  9991 ;; Hardware stack levels used:    1
  9992 ;; Hardware stack levels required when called:    6
  9993 ;; This function calls:
  9994 ;;		_command
  9995 ;;		_dataCMD
  9996 ;; This function is called by:
  9997 ;;		_main
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           
 10002                           ;psect for function _printByteValue
 10003  0CD3                     _printByteValue:
 10004                           
 10005                           ;incstack = 0
 10006                           ; Regs used in _printByteValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10007                           ;printByteValue@s stored from wreg
 10008  0CD3  0020               	movlb	0	; select bank0
 10009  0CD4  00A2               	movwf	printByteValue@s
 10010  0CD5                     l3281:
 10011                           
 10012                           ;main.c: 304: void printByteValue(char * s, unsigned char byteVal, int pos);main.c: 305:
      +                           {;main.c: 308:    int i;;main.c: 313:    unsigned char lowerBits = byteVal & '\x0F';
 10013  0CD5  0879               	movf	printByteValue@byteVal,w
 10014  0CD6  390F               	andlw	15
 10015  0CD7  00FC               	movwf	??_printByteValue
 10016  0CD8  087C               	movf	??_printByteValue,w
 10017  0CD9  00A0               	movwf	printByteValue@lowerBits
 10018  0CDA                     l3283:
 10019                           
 10020                           ;main.c: 314:    unsigned char upperBits = (byteVal >> 4) & '\x0F';
 10021  0CDA  0879               	movf	printByteValue@byteVal,w
 10022  0CDB  00FC               	movwf	??_printByteValue
 10023  0CDC  3004               	movlw	4
 10024  0CDD                     u3035:
 10025  0CDD  36FC               	lsrf	??_printByteValue,f
 10026  0CDE  0B89               	decfsz	9,f
 10027  0CDF  2CDD               	goto	u3035
 10028  0CE0  087C               	movf	??_printByteValue,w
 10029  0CE1  390F               	andlw	15
 10030  0CE2  00FD               	movwf	??_printByteValue+1
 10031  0CE3  087D               	movf	??_printByteValue+1,w
 10032  0CE4  00A1               	movwf	printByteValue@upperBits
 10033  0CE5                     l3285:
 10034                           
 10035                           ;main.c: 317:    if (lowerBits< 10)
 10036  0CE5  300A               	movlw	10
 10037  0CE6  0220               	subwf	printByteValue@lowerBits,w
 10038  0CE7  1803               	skipnc
 10039  0CE8  2CEA               	goto	u3041
 10040  0CE9  2CEB               	goto	u3040
 10041  0CEA                     u3041:
 10042  0CEA  2CF8               	goto	l3289
 10043  0CEB                     u3040:
 10044  0CEB                     l3287:
 10045                           
 10046                           ;main.c: 318:        s[2*pos+1]= lowerBits | '\x30';
 10047  0CEB  0820               	movf	printByteValue@lowerBits,w
 10048  0CEC  3830               	iorlw	48
 10049  0CED  00FC               	movwf	??_printByteValue
 10050  0CEE  357A               	lslf	printByteValue@pos,w
 10051  0CEF  0722               	addwf	printByteValue@s,w
 10052  0CF0  00FD               	movwf	??_printByteValue+1
 10053  0CF1  0A7D               	incf	??_printByteValue+1,w
 10054  0CF2  0086               	movwf	6
 10055  0CF3  3001               	movlw	1	; select bank2/3
 10056  0CF4  0087               	movwf	7
 10057  0CF5  087C               	movf	??_printByteValue,w
 10058  0CF6  0081               	movwf	1
 10059  0CF7  2D06               	goto	l3291
 10060  0CF8                     l3289:
 10061                           
 10062                           ;main.c: 320:        s[2*pos+1] = ((lowerBits-1)&'\x07') | '\x40';
 10063  0CF8  0820               	movf	printByteValue@lowerBits,w
 10064  0CF9  3EFF               	addlw	255
 10065  0CFA  3907               	andlw	7
 10066  0CFB  3840               	iorlw	64
 10067  0CFC  00FC               	movwf	??_printByteValue
 10068  0CFD  357A               	lslf	printByteValue@pos,w
 10069  0CFE  0722               	addwf	printByteValue@s,w
 10070  0CFF  00FD               	movwf	??_printByteValue+1
 10071  0D00  0A7D               	incf	??_printByteValue+1,w
 10072  0D01  0086               	movwf	6
 10073  0D02  3001               	movlw	1	; select bank2/3
 10074  0D03  0087               	movwf	7
 10075  0D04  087C               	movf	??_printByteValue,w
 10076  0D05  0081               	movwf	1
 10077  0D06                     l3291:
 10078                           
 10079                           ;main.c: 323:    if (upperBits< 10)
 10080  0D06  300A               	movlw	10
 10081  0D07  0221               	subwf	printByteValue@upperBits,w
 10082  0D08  1803               	skipnc
 10083  0D09  2D0B               	goto	u3051
 10084  0D0A  2D0C               	goto	u3050
 10085  0D0B                     u3051:
 10086  0D0B  2D19               	goto	l3295
 10087  0D0C                     u3050:
 10088  0D0C                     l3293:
 10089                           
 10090                           ;main.c: 324:        s[2*pos]= upperBits | '\x30';
 10091  0D0C  0821               	movf	printByteValue@upperBits,w
 10092  0D0D  3830               	iorlw	48
 10093  0D0E  00FC               	movwf	??_printByteValue
 10094  0D0F  357A               	lslf	printByteValue@pos,w
 10095  0D10  0722               	addwf	printByteValue@s,w
 10096  0D11  00FD               	movwf	??_printByteValue+1
 10097  0D12  087D               	movf	??_printByteValue+1,w
 10098  0D13  0086               	movwf	6
 10099  0D14  3001               	movlw	1	; select bank2/3
 10100  0D15  0087               	movwf	7
 10101  0D16  087C               	movf	??_printByteValue,w
 10102  0D17  0081               	movwf	1
 10103  0D18  2D27               	goto	l3297
 10104  0D19                     l3295:
 10105                           
 10106                           ;main.c: 326:        s[2*pos] = ((upperBits- 1)&'\x07') | '\x40';
 10107  0D19  0821               	movf	printByteValue@upperBits,w
 10108  0D1A  3EFF               	addlw	255
 10109  0D1B  3907               	andlw	7
 10110  0D1C  3840               	iorlw	64
 10111  0D1D  00FC               	movwf	??_printByteValue
 10112  0D1E  357A               	lslf	printByteValue@pos,w
 10113  0D1F  0722               	addwf	printByteValue@s,w
 10114  0D20  00FD               	movwf	??_printByteValue+1
 10115  0D21  087D               	movf	??_printByteValue+1,w
 10116  0D22  0086               	movwf	6
 10117  0D23  3001               	movlw	1	; select bank2/3
 10118  0D24  0087               	movwf	7
 10119  0D25  087C               	movf	??_printByteValue,w
 10120  0D26  0081               	movwf	1
 10121  0D27                     l3297:
 10122                           
 10123                           ;main.c: 328:    command(0x01);
 10124  0D27  3001               	movlw	1
 10125  0D28  318A  2256  318C   	fcall	_command
 10126  0D2B                     l3299:
 10127                           
 10128                           ;main.c: 329:    _delay((unsigned long)((2)*(16000000/4000.0)));
 10129  0D2B  300B               	movlw	11
 10130  0D2C  00FC               	movwf	??_printByteValue
 10131  0D2D  3062               	movlw	98
 10132  0D2E                     u3427:
 10133  0D2E  0B89               	decfsz	9,f
 10134  0D2F  2D2E               	goto	u3427
 10135  0D30  0BFC               	decfsz	??_printByteValue,f
 10136  0D31  2D2E               	goto	u3427
 10137  0D32  3200               	nop2
 10138  0D33                     l3301:
 10139                           
 10140                           ;main.c: 330:    for(i=0;i<16;i++){
 10141  0D33  0020               	movlb	0	; select bank0
 10142  0D34  01A3               	clrf	printByteValue@i
 10143  0D35  01A4               	clrf	printByteValue@i+1
 10144  0D36                     l3307:
 10145                           
 10146                           ;main.c: 331:       dataCMD(s[i]);
 10147  0D36  0020               	movlb	0	; select bank0
 10148  0D37  0823               	movf	printByteValue@i,w
 10149  0D38  0722               	addwf	printByteValue@s,w
 10150  0D39  00FC               	movwf	??_printByteValue
 10151  0D3A  087C               	movf	??_printByteValue,w
 10152  0D3B  0086               	movwf	6
 10153  0D3C  3001               	movlw	1	; select bank2/3
 10154  0D3D  0087               	movwf	7
 10155  0D3E  0801               	movf	1,w
 10156  0D3F  318A  22B1  318C   	fcall	_dataCMD
 10157  0D42                     l3309:
 10158                           
 10159                           ;main.c: 332:    }
 10160  0D42  3001               	movlw	1
 10161  0D43  0020               	movlb	0	; select bank0
 10162  0D44  07A3               	addwf	printByteValue@i,f
 10163  0D45  3000               	movlw	0
 10164  0D46  3DA4               	addwfc	printByteValue@i+1,f
 10165  0D47                     l3311:
 10166  0D47  0824               	movf	printByteValue@i+1,w
 10167  0D48  3A80               	xorlw	128
 10168  0D49  00FC               	movwf	??_printByteValue
 10169  0D4A  3080               	movlw	128
 10170  0D4B  027C               	subwf	??_printByteValue,w
 10171  0D4C  1D03               	skipz
 10172  0D4D  2D50               	goto	u3065
 10173  0D4E  3010               	movlw	16
 10174  0D4F  0223               	subwf	printByteValue@i,w
 10175  0D50                     u3065:
 10176  0D50  1C03               	skipc
 10177  0D51  2D53               	goto	u3061
 10178  0D52  2D54               	goto	u3060
 10179  0D53                     u3061:
 10180  0D53  2D36               	goto	l3307
 10181  0D54                     u3060:
 10182  0D54                     l3313:
 10183                           
 10184                           ;main.c: 339:    command(0xA0);
 10185  0D54  30A0               	movlw	160
 10186  0D55  318A  2256  318C   	fcall	_command
 10187  0D58                     l3315:
 10188                           
 10189                           ;main.c: 340:    for(i=0;i<16;i++){
 10190  0D58  0020               	movlb	0	; select bank0
 10191  0D59  01A3               	clrf	printByteValue@i
 10192  0D5A  01A4               	clrf	printByteValue@i+1
 10193  0D5B                     l3321:
 10194                           
 10195                           ;main.c: 341:       dataCMD( text6[i] );
 10196  0D5B  0020               	movlb	0	; select bank0
 10197  0D5C  0823               	movf	printByteValue@i,w
 10198  0D5D  3E31               	addlw	(low (_text6| (0+256)))& (0+255)
 10199  0D5E  0086               	movwf	6
 10200  0D5F  3001               	movlw	1	; select bank2/3
 10201  0D60  0087               	movwf	7
 10202  0D61  0801               	movf	1,w
 10203  0D62  318A  22B1  318C   	fcall	_dataCMD
 10204  0D65                     l3323:
 10205                           
 10206                           ;main.c: 342:    }
 10207  0D65  3001               	movlw	1
 10208  0D66  0020               	movlb	0	; select bank0
 10209  0D67  07A3               	addwf	printByteValue@i,f
 10210  0D68  3000               	movlw	0
 10211  0D69  3DA4               	addwfc	printByteValue@i+1,f
 10212  0D6A                     l3325:
 10213  0D6A  0824               	movf	printByteValue@i+1,w
 10214  0D6B  3A80               	xorlw	128
 10215  0D6C  00FC               	movwf	??_printByteValue
 10216  0D6D  3080               	movlw	128
 10217  0D6E  027C               	subwf	??_printByteValue,w
 10218  0D6F  1D03               	skipz
 10219  0D70  2D73               	goto	u3075
 10220  0D71  3010               	movlw	16
 10221  0D72  0223               	subwf	printByteValue@i,w
 10222  0D73                     u3075:
 10223  0D73  1C03               	skipc
 10224  0D74  2D76               	goto	u3071
 10225  0D75  2D77               	goto	u3070
 10226  0D76                     u3071:
 10227  0D76  2D5B               	goto	l3321
 10228  0D77                     u3070:
 10229  0D77                     l338:
 10230  0D77  0008               	return
 10231  0D78                     __end_of_printByteValue:
 10232                           
 10233                           	psect	text22
 10234  09B4                     __ptext22:	
 10235 ;; *************** function _convert14BitToFloat *****************
 10236 ;; Defined at:
 10237 ;;		line 355 in file "main.c"
 10238 ;; Parameters:    Size  Location     Type
 10239 ;;  raw14bit        2   26[BANK0 ] unsigned short 
 10240 ;; Auto vars:     Size  Location     Type
 10241 ;;  temp_Float      4   30[BANK0 ] float 
 10242 ;;  raw14           2   36[BANK0 ] short 
 10243 ;;  signed_int      2   34[BANK0 ] short 
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  4   26[BANK0 ] float 
 10246 ;; Registers used:
 10247 ;;		wreg, status,2, status,0, pclath, cstack
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10253 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10254 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10256 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10257 ;;Total ram usage:       12 bytes
 10258 ;; Hardware stack levels used:    1
 10259 ;; Hardware stack levels required when called:    5
 10260 ;; This function calls:
 10261 ;;		___fldiv
 10262 ;;		___xxtofl
 10263 ;; This function is called by:
 10264 ;;		_main
 10265 ;; This function uses a non-reentrant model
 10266 ;;
 10267                           
 10268                           
 10269                           ;psect for function _convert14BitToFloat
 10270  09B4                     _convert14BitToFloat:
 10271  09B4                     l3327:	
 10272                           ;incstack = 0
 10273                           ; Regs used in _convert14BitToFloat: [wreg+status,2+status,0+pclath+cstack]
 10274                           
 10275                           
 10276                           ;main.c: 357:     int16_t raw14 = raw14bit & 0x3FFF;
 10277  09B4  30FF               	movlw	255
 10278  09B5  0020               	movlb	0	; select bank0
 10279  09B6  053A               	andwf	convert14BitToFloat@raw14bit,w
 10280  09B7  00C4               	movwf	convert14BitToFloat@raw14
 10281  09B8  303F               	movlw	63
 10282  09B9  053B               	andwf	convert14BitToFloat@raw14bit+1,w
 10283  09BA  00C5               	movwf	convert14BitToFloat@raw14+1
 10284  09BB                     l3329:
 10285                           
 10286                           ;main.c: 358:     int16_t signed_int = (raw14 & 0x2000) ? (raw14 - 0x4000) : raw14;
 10287  09BB  1AC5               	btfsc	convert14BitToFloat@raw14+1,5
 10288  09BC  29BE               	goto	u3081
 10289  09BD  29BF               	goto	u3080
 10290  09BE                     u3081:
 10291  09BE  29C4               	goto	l3333
 10292  09BF                     u3080:
 10293  09BF                     l3331:
 10294  09BF  0845               	movf	convert14BitToFloat@raw14+1,w
 10295  09C0  00C3               	movwf	convert14BitToFloat@signed_int+1
 10296  09C1  0844               	movf	convert14BitToFloat@raw14,w
 10297  09C2  00C2               	movwf	convert14BitToFloat@signed_int
 10298  09C3  29CA               	goto	l3335
 10299  09C4                     l3333:
 10300  09C4  0844               	movf	convert14BitToFloat@raw14,w
 10301  09C5  3E00               	addlw	0
 10302  09C6  00C2               	movwf	convert14BitToFloat@signed_int
 10303  09C7  30C0               	movlw	192
 10304  09C8  3D45               	addwfc	convert14BitToFloat@raw14+1,w
 10305  09C9  00C3               	movwf	convert14BitToFloat@signed_int+1
 10306  09CA                     l3335:
 10307                           
 10308                           ;main.c: 359:     float temp_Float = signed_int / 4.0;
 10309  09CA  3040               	movlw	64
 10310  09CB  00A3               	movwf	___fldiv@a+3
 10311  09CC  3080               	movlw	128
 10312  09CD  00A2               	movwf	___fldiv@a+2
 10313  09CE  3000               	movlw	0
 10314  09CF  00A1               	movwf	___fldiv@a+1
 10315  09D0  3000               	movlw	0
 10316  09D1  00A0               	movwf	___fldiv@a
 10317  09D2  0842               	movf	convert14BitToFloat@signed_int,w
 10318  09D3  00F0               	movwf	___xxtofl@val
 10319  09D4  0843               	movf	convert14BitToFloat@signed_int+1,w
 10320  09D5  00F1               	movwf	___xxtofl@val+1
 10321  09D6  0D89               	rlf	9,f
 10322  09D7  3B89               	subwfb	9,f
 10323  09D8  0989               	comf	9,f
 10324  09D9  00F2               	movwf	___xxtofl@val+2
 10325  09DA  00F3               	movwf	___xxtofl@val+3
 10326  09DB  3001               	movlw	1
 10327  09DC  318D  2578  3189   	fcall	___xxtofl
 10328  09DF  0873               	movf	?___xxtofl+3,w
 10329  09E0  0020               	movlb	0	; select bank0
 10330  09E1  00A7               	movwf	___fldiv@b+3
 10331  09E2  0872               	movf	?___xxtofl+2,w
 10332  09E3  00A6               	movwf	___fldiv@b+2
 10333  09E4  0871               	movf	?___xxtofl+1,w
 10334  09E5  00A5               	movwf	___fldiv@b+1
 10335  09E6  0870               	movf	?___xxtofl,w
 10336  09E7  00A4               	movwf	___fldiv@b
 10337  09E8  3182  22A6  3189   	fcall	___fldiv
 10338  09EB  0020               	movlb	0	; select bank0
 10339  09EC  0823               	movf	?___fldiv+3,w
 10340  09ED  00C1               	movwf	convert14BitToFloat@temp_Float+3
 10341  09EE  0822               	movf	?___fldiv+2,w
 10342  09EF  00C0               	movwf	convert14BitToFloat@temp_Float+2
 10343  09F0  0821               	movf	?___fldiv+1,w
 10344  09F1  00BF               	movwf	convert14BitToFloat@temp_Float+1
 10345  09F2  0820               	movf	?___fldiv,w
 10346  09F3  00BE               	movwf	convert14BitToFloat@temp_Float
 10347  09F4                     l3337:
 10348                           
 10349                           ;main.c: 372:     return temp_Float;
 10350  09F4  0841               	movf	convert14BitToFloat@temp_Float+3,w
 10351  09F5  00BD               	movwf	?_convert14BitToFloat+3
 10352  09F6  0840               	movf	convert14BitToFloat@temp_Float+2,w
 10353  09F7  00BC               	movwf	?_convert14BitToFloat+2
 10354  09F8  083F               	movf	convert14BitToFloat@temp_Float+1,w
 10355  09F9  00BB               	movwf	?_convert14BitToFloat+1
 10356  09FA  083E               	movf	convert14BitToFloat@temp_Float,w
 10357  09FB  00BA               	movwf	?_convert14BitToFloat
 10358  09FC                     l350:
 10359  09FC  0008               	return
 10360  09FD                     __end_of_convert14BitToFloat:
 10361                           
 10362                           	psect	text23
 10363  0D78                     __ptext23:	
 10364 ;; *************** function ___xxtofl *****************
 10365 ;; Defined at:
 10366 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\xxtofl.c"
 10367 ;; Parameters:    Size  Location     Type
 10368 ;;  sign            1    wreg     unsigned char 
 10369 ;;  val             4    0[COMMON] long 
 10370 ;; Auto vars:     Size  Location     Type
 10371 ;;  sign            1    8[COMMON] unsigned char 
 10372 ;;  arg             4   10[COMMON] unsigned long 
 10373 ;;  exp             1    9[COMMON] unsigned char 
 10374 ;; Return value:  Size  Location     Type
 10375 ;;                  4    0[COMMON] unsigned char 
 10376 ;; Registers used:
 10377 ;;		wreg, status,2, status,0
 10378 ;; Tracked objects:
 10379 ;;		On entry : 0/0
 10380 ;;		On exit  : 0/0
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10383 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10384 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10385 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10386 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10387 ;;Total ram usage:       14 bytes
 10388 ;; Hardware stack levels used:    1
 10389 ;; Hardware stack levels required when called:    4
 10390 ;; This function calls:
 10391 ;;		Nothing
 10392 ;; This function is called by:
 10393 ;;		_convert14BitToFloat
 10394 ;; This function uses a non-reentrant model
 10395 ;;
 10396                           
 10397                           
 10398                           ;psect for function ___xxtofl
 10399  0D78                     ___xxtofl:
 10400                           
 10401                           ;incstack = 0
 10402                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10403                           ;___xxtofl@sign stored from wreg
 10404  0D78  00F8               	movwf	___xxtofl@sign
 10405  0D79                     l3129:
 10406  0D79  0878               	movf	___xxtofl@sign,w
 10407  0D7A  1903               	btfsc	3,2
 10408  0D7B  2D7D               	goto	u2801
 10409  0D7C  2D7E               	goto	u2800
 10410  0D7D                     u2801:
 10411  0D7D  2D92               	goto	l3135
 10412  0D7E                     u2800:
 10413  0D7E                     l3131:
 10414  0D7E  1FF3               	btfss	___xxtofl@val+3,7
 10415  0D7F  2D81               	goto	u2811
 10416  0D80  2D82               	goto	u2810
 10417  0D81                     u2811:
 10418  0D81  2D92               	goto	l3135
 10419  0D82                     u2810:
 10420  0D82                     l3133:
 10421  0D82  0970               	comf	___xxtofl@val,w
 10422  0D83  00FA               	movwf	___xxtofl@arg
 10423  0D84  0971               	comf	___xxtofl@val+1,w
 10424  0D85  00FB               	movwf	___xxtofl@arg+1
 10425  0D86  0972               	comf	___xxtofl@val+2,w
 10426  0D87  00FC               	movwf	___xxtofl@arg+2
 10427  0D88  0973               	comf	___xxtofl@val+3,w
 10428  0D89  00FD               	movwf	___xxtofl@arg+3
 10429  0D8A  0AFA               	incf	___xxtofl@arg,f
 10430  0D8B  1903               	skipnz
 10431  0D8C  0AFB               	incf	___xxtofl@arg+1,f
 10432  0D8D  1903               	skipnz
 10433  0D8E  0AFC               	incf	___xxtofl@arg+2,f
 10434  0D8F  1903               	skipnz
 10435  0D90  0AFD               	incf	___xxtofl@arg+3,f
 10436  0D91  2D9A               	goto	l1025
 10437  0D92                     l3135:
 10438  0D92  0873               	movf	___xxtofl@val+3,w
 10439  0D93  00FD               	movwf	___xxtofl@arg+3
 10440  0D94  0872               	movf	___xxtofl@val+2,w
 10441  0D95  00FC               	movwf	___xxtofl@arg+2
 10442  0D96  0871               	movf	___xxtofl@val+1,w
 10443  0D97  00FB               	movwf	___xxtofl@arg+1
 10444  0D98  0870               	movf	___xxtofl@val,w
 10445  0D99  00FA               	movwf	___xxtofl@arg
 10446  0D9A                     l1025:
 10447  0D9A  0873               	movf	___xxtofl@val+3,w
 10448  0D9B  0472               	iorwf	___xxtofl@val+2,w
 10449  0D9C  0471               	iorwf	___xxtofl@val+1,w
 10450  0D9D  0470               	iorwf	___xxtofl@val,w
 10451  0D9E  1D03               	skipz
 10452  0D9F  2DA1               	goto	u2821
 10453  0DA0  2DA2               	goto	u2820
 10454  0DA1                     u2821:
 10455  0DA1  2DAB               	goto	l3141
 10456  0DA2                     u2820:
 10457  0DA2                     l3137:
 10458  0DA2  3000               	movlw	0
 10459  0DA3  00F3               	movwf	?___xxtofl+3
 10460  0DA4  3000               	movlw	0
 10461  0DA5  00F2               	movwf	?___xxtofl+2
 10462  0DA6  3000               	movlw	0
 10463  0DA7  00F1               	movwf	?___xxtofl+1
 10464  0DA8  3000               	movlw	0
 10465  0DA9  00F0               	movwf	?___xxtofl
 10466  0DAA  2E23               	goto	l1027
 10467  0DAB                     l3141:
 10468  0DAB  3096               	movlw	150
 10469  0DAC  00F4               	movwf	??___xxtofl
 10470  0DAD  0874               	movf	??___xxtofl,w
 10471  0DAE  00F9               	movwf	___xxtofl@exp
 10472  0DAF  2DBB               	goto	l3145
 10473  0DB0                     l3143:
 10474  0DB0  3001               	movlw	1
 10475  0DB1  00F4               	movwf	??___xxtofl
 10476  0DB2  0874               	movf	??___xxtofl,w
 10477  0DB3  07F9               	addwf	___xxtofl@exp,f
 10478  0DB4  3001               	movlw	1
 10479  0DB5                     u2835:
 10480  0DB5  36FD               	lsrf	___xxtofl@arg+3,f
 10481  0DB6  0CFC               	rrf	___xxtofl@arg+2,f
 10482  0DB7  0CFB               	rrf	___xxtofl@arg+1,f
 10483  0DB8  0CFA               	rrf	___xxtofl@arg,f
 10484  0DB9  0B89               	decfsz	9,f
 10485  0DBA  2DB5               	goto	u2835
 10486  0DBB                     l3145:
 10487  0DBB  30FE               	movlw	254
 10488  0DBC  057D               	andwf	___xxtofl@arg+3,w
 10489  0DBD  1D03               	btfss	3,2
 10490  0DBE  2DC0               	goto	u2841
 10491  0DBF  2DC1               	goto	u2840
 10492  0DC0                     u2841:
 10493  0DC0  2DB0               	goto	l3143
 10494  0DC1                     u2840:
 10495  0DC1  2DD5               	goto	l1031
 10496  0DC2                     l3147:
 10497  0DC2  3001               	movlw	1
 10498  0DC3  00F4               	movwf	??___xxtofl
 10499  0DC4  0874               	movf	??___xxtofl,w
 10500  0DC5  07F9               	addwf	___xxtofl@exp,f
 10501  0DC6                     l3149:
 10502  0DC6  3001               	movlw	1
 10503  0DC7  07FA               	addwf	___xxtofl@arg,f
 10504  0DC8  3000               	movlw	0
 10505  0DC9  3DFB               	addwfc	___xxtofl@arg+1,f
 10506  0DCA  3000               	movlw	0
 10507  0DCB  3DFC               	addwfc	___xxtofl@arg+2,f
 10508  0DCC  3000               	movlw	0
 10509  0DCD  3DFD               	addwfc	___xxtofl@arg+3,f
 10510  0DCE                     l3151:
 10511  0DCE  3001               	movlw	1
 10512  0DCF                     u2855:
 10513  0DCF  36FD               	lsrf	___xxtofl@arg+3,f
 10514  0DD0  0CFC               	rrf	___xxtofl@arg+2,f
 10515  0DD1  0CFB               	rrf	___xxtofl@arg+1,f
 10516  0DD2  0CFA               	rrf	___xxtofl@arg,f
 10517  0DD3  0B89               	decfsz	9,f
 10518  0DD4  2DCF               	goto	u2855
 10519  0DD5                     l1031:
 10520  0DD5  30FF               	movlw	255
 10521  0DD6  057D               	andwf	___xxtofl@arg+3,w
 10522  0DD7  1D03               	btfss	3,2
 10523  0DD8  2DDA               	goto	u2861
 10524  0DD9  2DDB               	goto	u2860
 10525  0DDA                     u2861:
 10526  0DDA  2DC2               	goto	l3147
 10527  0DDB                     u2860:
 10528  0DDB  2DE5               	goto	l3155
 10529  0DDC                     l3153:
 10530  0DDC  3001               	movlw	1
 10531  0DDD  02F9               	subwf	___xxtofl@exp,f
 10532  0DDE  3001               	movlw	1
 10533  0DDF                     u2875:
 10534  0DDF  35FA               	lslf	___xxtofl@arg,f
 10535  0DE0  0DFB               	rlf	___xxtofl@arg+1,f
 10536  0DE1  0DFC               	rlf	___xxtofl@arg+2,f
 10537  0DE2  0DFD               	rlf	___xxtofl@arg+3,f
 10538  0DE3  0B89               	decfsz	9,f
 10539  0DE4  2DDF               	goto	u2875
 10540  0DE5                     l3155:
 10541  0DE5  1BFC               	btfsc	___xxtofl@arg+2,7
 10542  0DE6  2DE8               	goto	u2881
 10543  0DE7  2DE9               	goto	u2880
 10544  0DE8                     u2881:
 10545  0DE8  2DEF               	goto	l1038
 10546  0DE9                     u2880:
 10547  0DE9                     l3157:
 10548  0DE9  3002               	movlw	2
 10549  0DEA  0279               	subwf	___xxtofl@exp,w
 10550  0DEB  1803               	skipnc
 10551  0DEC  2DEE               	goto	u2891
 10552  0DED  2DEF               	goto	u2890
 10553  0DEE                     u2891:
 10554  0DEE  2DDC               	goto	l3153
 10555  0DEF                     u2890:
 10556  0DEF                     l1038:
 10557  0DEF  1879               	btfsc	___xxtofl@exp,0
 10558  0DF0  2DF2               	goto	u2901
 10559  0DF1  2DF3               	goto	u2900
 10560  0DF2                     u2901:
 10561  0DF2  2DFB               	goto	l1039
 10562  0DF3                     u2900:
 10563  0DF3                     l3159:
 10564  0DF3  30FF               	movlw	255
 10565  0DF4  05FA               	andwf	___xxtofl@arg,f
 10566  0DF5  30FF               	movlw	255
 10567  0DF6  05FB               	andwf	___xxtofl@arg+1,f
 10568  0DF7  307F               	movlw	127
 10569  0DF8  05FC               	andwf	___xxtofl@arg+2,f
 10570  0DF9  30FF               	movlw	255
 10571  0DFA  05FD               	andwf	___xxtofl@arg+3,f
 10572  0DFB                     l1039:
 10573  0DFB  1003               	clrc
 10574  0DFC  0CF9               	rrf	___xxtofl@exp,f
 10575  0DFD                     l3161:
 10576  0DFD  0879               	movf	___xxtofl@exp,w
 10577  0DFE  00F4               	movwf	??___xxtofl
 10578  0DFF  01F5               	clrf	??___xxtofl+1
 10579  0E00  01F6               	clrf	??___xxtofl+2
 10580  0E01  01F7               	clrf	??___xxtofl+3
 10581  0E02  3018               	movlw	24
 10582  0E03                     u2915:
 10583  0E03  35F4               	lslf	??___xxtofl,f
 10584  0E04  0DF5               	rlf	??___xxtofl+1,f
 10585  0E05  0DF6               	rlf	??___xxtofl+2,f
 10586  0E06  0DF7               	rlf	??___xxtofl+3,f
 10587  0E07                     u2910:
 10588  0E07  0B89               	decfsz	9,f
 10589  0E08  2E03               	goto	u2915
 10590  0E09  0874               	movf	??___xxtofl,w
 10591  0E0A  04FA               	iorwf	___xxtofl@arg,f
 10592  0E0B  0875               	movf	??___xxtofl+1,w
 10593  0E0C  04FB               	iorwf	___xxtofl@arg+1,f
 10594  0E0D  0876               	movf	??___xxtofl+2,w
 10595  0E0E  04FC               	iorwf	___xxtofl@arg+2,f
 10596  0E0F  0877               	movf	??___xxtofl+3,w
 10597  0E10  04FD               	iorwf	___xxtofl@arg+3,f
 10598  0E11                     l3163:
 10599  0E11  0878               	movf	___xxtofl@sign,w
 10600  0E12  1903               	btfsc	3,2
 10601  0E13  2E15               	goto	u2921
 10602  0E14  2E16               	goto	u2920
 10603  0E15                     u2921:
 10604  0E15  2E1B               	goto	l3169
 10605  0E16                     u2920:
 10606  0E16                     l3165:
 10607  0E16  1FF3               	btfss	___xxtofl@val+3,7
 10608  0E17  2E19               	goto	u2931
 10609  0E18  2E1A               	goto	u2930
 10610  0E19                     u2931:
 10611  0E19  2E1B               	goto	l3169
 10612  0E1A                     u2930:
 10613  0E1A                     l3167:
 10614  0E1A  17FD               	bsf	___xxtofl@arg+3,7
 10615  0E1B                     l3169:
 10616  0E1B  087D               	movf	___xxtofl@arg+3,w
 10617  0E1C  00F3               	movwf	?___xxtofl+3
 10618  0E1D  087C               	movf	___xxtofl@arg+2,w
 10619  0E1E  00F2               	movwf	?___xxtofl+2
 10620  0E1F  087B               	movf	___xxtofl@arg+1,w
 10621  0E20  00F1               	movwf	?___xxtofl+1
 10622  0E21  087A               	movf	___xxtofl@arg,w
 10623  0E22  00F0               	movwf	?___xxtofl
 10624  0E23                     l1027:
 10625  0E23  0008               	return
 10626  0E24                     __end_of___xxtofl:
 10627                           
 10628                           	psect	text24
 10629  02A6                     __ptext24:	
 10630 ;; *************** function ___fldiv *****************
 10631 ;; Defined at:
 10632 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcdiv.c"
 10633 ;; Parameters:    Size  Location     Type
 10634 ;;  a               4    0[BANK0 ] unsigned char 
 10635 ;;  b               4    4[BANK0 ] unsigned char 
 10636 ;; Auto vars:     Size  Location     Type
 10637 ;;  grs             4   20[BANK0 ] unsigned long 
 10638 ;;  rem             4   13[BANK0 ] unsigned long 
 10639 ;;  new_exp         2   18[BANK0 ] int 
 10640 ;;  aexp            1   25[BANK0 ] unsigned char 
 10641 ;;  bexp            1   24[BANK0 ] unsigned char 
 10642 ;;  sign            1   17[BANK0 ] unsigned char 
 10643 ;; Return value:  Size  Location     Type
 10644 ;;                  4    0[BANK0 ] unsigned char 
 10645 ;; Registers used:
 10646 ;;		wreg, status,2, status,0
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/0
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10652 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10653 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10654 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10655 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10656 ;;Total ram usage:       26 bytes
 10657 ;; Hardware stack levels used:    1
 10658 ;; Hardware stack levels required when called:    4
 10659 ;; This function calls:
 10660 ;;		Nothing
 10661 ;; This function is called by:
 10662 ;;		_convert14BitToFloat
 10663 ;; This function uses a non-reentrant model
 10664 ;;
 10665                           
 10666                           
 10667                           ;psect for function ___fldiv
 10668  02A6                     ___fldiv:
 10669  02A6                     l2989:	
 10670                           ;incstack = 0
 10671                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10672                           
 10673  02A6  0020               	movlb	0	; select bank0
 10674  02A7  0827               	movf	___fldiv@b+3,w
 10675  02A8  3980               	andlw	128
 10676  02A9  00A8               	movwf	??___fldiv
 10677  02AA  0828               	movf	??___fldiv,w
 10678  02AB  00B1               	movwf	___fldiv@sign
 10679  02AC                     l2991:
 10680  02AC  3527               	lslf	___fldiv@b+3,w
 10681  02AD  00A8               	movwf	??___fldiv
 10682  02AE  0828               	movf	??___fldiv,w
 10683  02AF  00B8               	movwf	___fldiv@bexp
 10684  02B0                     l2993:
 10685  02B0  1FA6               	btfss	___fldiv@b+2,7
 10686  02B1  2AB3               	goto	u2511
 10687  02B2  2AB4               	goto	u2510
 10688  02B3                     u2511:
 10689  02B3  2AB5               	goto	l2997
 10690  02B4                     u2510:
 10691  02B4                     l2995:
 10692  02B4  1438               	bsf	___fldiv@bexp,0
 10693  02B5                     l2997:
 10694  02B5  0838               	movf	___fldiv@bexp,w
 10695  02B6  1903               	btfsc	3,2
 10696  02B7  2AB9               	goto	u2521
 10697  02B8  2ABA               	goto	u2520
 10698  02B9                     u2521:
 10699  02B9  2ACA               	goto	l3007
 10700  02BA                     u2520:
 10701  02BA                     l2999:
 10702  02BA  0A38               	incf	___fldiv@bexp,w
 10703  02BB  1D03               	btfss	3,2
 10704  02BC  2ABE               	goto	u2531
 10705  02BD  2ABF               	goto	u2530
 10706  02BE                     u2531:
 10707  02BE  2AC7               	goto	l3003
 10708  02BF                     u2530:
 10709  02BF                     l3001:
 10710  02BF  3000               	movlw	0
 10711  02C0  00A7               	movwf	___fldiv@b+3
 10712  02C1  3000               	movlw	0
 10713  02C2  00A6               	movwf	___fldiv@b+2
 10714  02C3  3000               	movlw	0
 10715  02C4  00A5               	movwf	___fldiv@b+1
 10716  02C5  3000               	movlw	0
 10717  02C6  00A4               	movwf	___fldiv@b
 10718  02C7                     l3003:
 10719  02C7  17A6               	bsf	___fldiv@b+2,7
 10720  02C8                     l3005:
 10721  02C8  01A7               	clrf	___fldiv@b+3
 10722  02C9  2AD2               	goto	l3009
 10723  02CA                     l3007:
 10724  02CA  3000               	movlw	0
 10725  02CB  00A7               	movwf	___fldiv@b+3
 10726  02CC  3000               	movlw	0
 10727  02CD  00A6               	movwf	___fldiv@b+2
 10728  02CE  3000               	movlw	0
 10729  02CF  00A5               	movwf	___fldiv@b+1
 10730  02D0  3000               	movlw	0
 10731  02D1  00A4               	movwf	___fldiv@b
 10732  02D2                     l3009:
 10733  02D2  0823               	movf	___fldiv@a+3,w
 10734  02D3  3980               	andlw	128
 10735  02D4  00A8               	movwf	??___fldiv
 10736  02D5  0828               	movf	??___fldiv,w
 10737  02D6  06B1               	xorwf	___fldiv@sign,f
 10738  02D7                     l3011:
 10739  02D7  3523               	lslf	___fldiv@a+3,w
 10740  02D8  00A8               	movwf	??___fldiv
 10741  02D9  0828               	movf	??___fldiv,w
 10742  02DA  00B9               	movwf	___fldiv@aexp
 10743  02DB                     l3013:
 10744  02DB  1FA2               	btfss	___fldiv@a+2,7
 10745  02DC  2ADE               	goto	u2541
 10746  02DD  2ADF               	goto	u2540
 10747  02DE                     u2541:
 10748  02DE  2AE0               	goto	l3017
 10749  02DF                     u2540:
 10750  02DF                     l3015:
 10751  02DF  1439               	bsf	___fldiv@aexp,0
 10752  02E0                     l3017:
 10753  02E0  0839               	movf	___fldiv@aexp,w
 10754  02E1  1903               	btfsc	3,2
 10755  02E2  2AE4               	goto	u2551
 10756  02E3  2AE5               	goto	u2550
 10757  02E4                     u2551:
 10758  02E4  2AF5               	goto	l3027
 10759  02E5                     u2550:
 10760  02E5                     l3019:
 10761  02E5  0A39               	incf	___fldiv@aexp,w
 10762  02E6  1D03               	btfss	3,2
 10763  02E7  2AE9               	goto	u2561
 10764  02E8  2AEA               	goto	u2560
 10765  02E9                     u2561:
 10766  02E9  2AF2               	goto	l3023
 10767  02EA                     u2560:
 10768  02EA                     l3021:
 10769  02EA  3000               	movlw	0
 10770  02EB  00A3               	movwf	___fldiv@a+3
 10771  02EC  3000               	movlw	0
 10772  02ED  00A2               	movwf	___fldiv@a+2
 10773  02EE  3000               	movlw	0
 10774  02EF  00A1               	movwf	___fldiv@a+1
 10775  02F0  3000               	movlw	0
 10776  02F1  00A0               	movwf	___fldiv@a
 10777  02F2                     l3023:
 10778  02F2  17A2               	bsf	___fldiv@a+2,7
 10779  02F3                     l3025:
 10780  02F3  01A3               	clrf	___fldiv@a+3
 10781  02F4  2AFD               	goto	l941
 10782  02F5                     l3027:
 10783  02F5  3000               	movlw	0
 10784  02F6  00A3               	movwf	___fldiv@a+3
 10785  02F7  3000               	movlw	0
 10786  02F8  00A2               	movwf	___fldiv@a+2
 10787  02F9  3000               	movlw	0
 10788  02FA  00A1               	movwf	___fldiv@a+1
 10789  02FB  3000               	movlw	0
 10790  02FC  00A0               	movwf	___fldiv@a
 10791  02FD                     l941:
 10792  02FD  0823               	movf	___fldiv@a+3,w
 10793  02FE  0422               	iorwf	___fldiv@a+2,w
 10794  02FF  0421               	iorwf	___fldiv@a+1,w
 10795  0300  0420               	iorwf	___fldiv@a,w
 10796  0301  1D03               	skipz
 10797  0302  2B04               	goto	u2571
 10798  0303  2B05               	goto	u2570
 10799  0304                     u2571:
 10800  0304  2B1E               	goto	l3037
 10801  0305                     u2570:
 10802  0305                     l3029:
 10803  0305  3000               	movlw	0
 10804  0306  00A7               	movwf	___fldiv@b+3
 10805  0307  3000               	movlw	0
 10806  0308  00A6               	movwf	___fldiv@b+2
 10807  0309  3000               	movlw	0
 10808  030A  00A5               	movwf	___fldiv@b+1
 10809  030B  3000               	movlw	0
 10810  030C  00A4               	movwf	___fldiv@b
 10811  030D  3080               	movlw	128
 10812  030E  04A6               	iorwf	___fldiv@b+2,f
 10813  030F  307F               	movlw	127
 10814  0310  04A7               	iorwf	___fldiv@b+3,f
 10815  0311                     l3031:
 10816  0311  0831               	movf	___fldiv@sign,w
 10817  0312  00A8               	movwf	??___fldiv
 10818  0313  0828               	movf	??___fldiv,w
 10819  0314  04A7               	iorwf	___fldiv@b+3,f
 10820  0315                     l3033:
 10821  0315  0827               	movf	___fldiv@b+3,w
 10822  0316  00A3               	movwf	?___fldiv+3
 10823  0317  0826               	movf	___fldiv@b+2,w
 10824  0318  00A2               	movwf	?___fldiv+2
 10825  0319  0825               	movf	___fldiv@b+1,w
 10826  031A  00A1               	movwf	?___fldiv+1
 10827  031B  0824               	movf	___fldiv@b,w
 10828  031C  00A0               	movwf	?___fldiv
 10829  031D  2C59               	goto	l943
 10830  031E                     l3037:
 10831  031E  0838               	movf	___fldiv@bexp,w
 10832  031F  1D03               	btfss	3,2
 10833  0320  2B22               	goto	u2581
 10834  0321  2B23               	goto	u2580
 10835  0322                     u2581:
 10836  0322  2B2C               	goto	l3043
 10837  0323                     u2580:
 10838  0323                     l3039:
 10839  0323  3000               	movlw	0
 10840  0324  00A3               	movwf	?___fldiv+3
 10841  0325  3000               	movlw	0
 10842  0326  00A2               	movwf	?___fldiv+2
 10843  0327  3000               	movlw	0
 10844  0328  00A1               	movwf	?___fldiv+1
 10845  0329  3000               	movlw	0
 10846  032A  00A0               	movwf	?___fldiv
 10847  032B  2C59               	goto	l943
 10848  032C                     l3043:
 10849  032C  0838               	movf	___fldiv@bexp,w
 10850  032D  00A8               	movwf	??___fldiv
 10851  032E  01A9               	clrf	??___fldiv+1
 10852  032F  0829               	movf	??___fldiv+1,w
 10853  0330  00AB               	movwf	??___fldiv+3
 10854  0331  0839               	movf	___fldiv@aexp,w
 10855  0332  0228               	subwf	??___fldiv,w
 10856  0333  00AA               	movwf	??___fldiv+2
 10857  0334  1C03               	skipc
 10858  0335  03AB               	decf	??___fldiv+3,f
 10859  0336  082A               	movf	??___fldiv+2,w
 10860  0337  3E7F               	addlw	127
 10861  0338  00B2               	movwf	___fldiv@new_exp
 10862  0339  3000               	movlw	0
 10863  033A  3D2B               	addwfc	??___fldiv+3,w
 10864  033B  00B3               	movwf	___fldiv@new_exp+1
 10865  033C                     l3045:
 10866  033C  0827               	movf	___fldiv@b+3,w
 10867  033D  00B0               	movwf	___fldiv@rem+3
 10868  033E  0826               	movf	___fldiv@b+2,w
 10869  033F  00AF               	movwf	___fldiv@rem+2
 10870  0340  0825               	movf	___fldiv@b+1,w
 10871  0341  00AE               	movwf	___fldiv@rem+1
 10872  0342  0824               	movf	___fldiv@b,w
 10873  0343  00AD               	movwf	___fldiv@rem
 10874  0344                     l3047:
 10875  0344  3000               	movlw	0
 10876  0345  00A7               	movwf	___fldiv@b+3
 10877  0346  3000               	movlw	0
 10878  0347  00A6               	movwf	___fldiv@b+2
 10879  0348  3000               	movlw	0
 10880  0349  00A5               	movwf	___fldiv@b+1
 10881  034A  3000               	movlw	0
 10882  034B  00A4               	movwf	___fldiv@b
 10883  034C                     l3049:
 10884  034C  3000               	movlw	0
 10885  034D  00B7               	movwf	___fldiv@grs+3
 10886  034E  3000               	movlw	0
 10887  034F  00B6               	movwf	___fldiv@grs+2
 10888  0350  3000               	movlw	0
 10889  0351  00B5               	movwf	___fldiv@grs+1
 10890  0352  3000               	movlw	0
 10891  0353  00B4               	movwf	___fldiv@grs
 10892  0354                     l3051:
 10893  0354  01B9               	clrf	___fldiv@aexp
 10894  0355  2B94               	goto	l3071
 10895  0356                     l3053:
 10896  0356  0839               	movf	___fldiv@aexp,w
 10897  0357  1903               	btfsc	3,2
 10898  0358  2B5A               	goto	u2591
 10899  0359  2B5B               	goto	u2590
 10900  035A                     u2591:
 10901  035A  2B75               	goto	l3063
 10902  035B                     u2590:
 10903  035B                     l3055:
 10904  035B  3001               	movlw	1
 10905  035C                     u2605:
 10906  035C  35AD               	lslf	___fldiv@rem,f
 10907  035D  0DAE               	rlf	___fldiv@rem+1,f
 10908  035E  0DAF               	rlf	___fldiv@rem+2,f
 10909  035F  0DB0               	rlf	___fldiv@rem+3,f
 10910  0360  0B89               	decfsz	9,f
 10911  0361  2B5C               	goto	u2605
 10912  0362  3001               	movlw	1
 10913  0363                     u2615:
 10914  0363  35A4               	lslf	___fldiv@b,f
 10915  0364  0DA5               	rlf	___fldiv@b+1,f
 10916  0365  0DA6               	rlf	___fldiv@b+2,f
 10917  0366  0DA7               	rlf	___fldiv@b+3,f
 10918  0367  0B89               	decfsz	9,f
 10919  0368  2B63               	goto	u2615
 10920  0369                     l3057:
 10921  0369  1FB7               	btfss	___fldiv@grs+3,7
 10922  036A  2B6C               	goto	u2621
 10923  036B  2B6D               	goto	u2620
 10924  036C                     u2621:
 10925  036C  2B6E               	goto	l3061
 10926  036D                     u2620:
 10927  036D                     l3059:
 10928  036D  1424               	bsf	___fldiv@b,0
 10929  036E                     l3061:
 10930  036E  3001               	movlw	1
 10931  036F                     u2635:
 10932  036F  35B4               	lslf	___fldiv@grs,f
 10933  0370  0DB5               	rlf	___fldiv@grs+1,f
 10934  0371  0DB6               	rlf	___fldiv@grs+2,f
 10935  0372  0DB7               	rlf	___fldiv@grs+3,f
 10936  0373  0B89               	decfsz	9,f
 10937  0374  2B6F               	goto	u2635
 10938  0375                     l3063:
 10939  0375  0823               	movf	___fldiv@a+3,w
 10940  0376  0230               	subwf	___fldiv@rem+3,w
 10941  0377  1D03               	skipz
 10942  0378  2B83               	goto	u2645
 10943  0379  0822               	movf	___fldiv@a+2,w
 10944  037A  022F               	subwf	___fldiv@rem+2,w
 10945  037B  1D03               	skipz
 10946  037C  2B83               	goto	u2645
 10947  037D  0821               	movf	___fldiv@a+1,w
 10948  037E  022E               	subwf	___fldiv@rem+1,w
 10949  037F  1D03               	skipz
 10950  0380  2B83               	goto	u2645
 10951  0381  0820               	movf	___fldiv@a,w
 10952  0382  022D               	subwf	___fldiv@rem,w
 10953  0383                     u2645:
 10954  0383  1C03               	skipc
 10955  0384  2B86               	goto	u2641
 10956  0385  2B87               	goto	u2640
 10957  0386                     u2641:
 10958  0386  2B90               	goto	l3069
 10959  0387                     u2640:
 10960  0387                     l3065:
 10961  0387  1737               	bsf	___fldiv@grs+3,6
 10962  0388                     l3067:
 10963  0388  0820               	movf	___fldiv@a,w
 10964  0389  02AD               	subwf	___fldiv@rem,f
 10965  038A  0821               	movf	___fldiv@a+1,w
 10966  038B  3BAE               	subwfb	___fldiv@rem+1,f
 10967  038C  0822               	movf	___fldiv@a+2,w
 10968  038D  3BAF               	subwfb	___fldiv@rem+2,f
 10969  038E  0823               	movf	___fldiv@a+3,w
 10970  038F  3BB0               	subwfb	___fldiv@rem+3,f
 10971  0390                     l3069:
 10972  0390  3001               	movlw	1
 10973  0391  00A8               	movwf	??___fldiv
 10974  0392  0828               	movf	??___fldiv,w
 10975  0393  07B9               	addwf	___fldiv@aexp,f
 10976  0394                     l3071:
 10977  0394  301A               	movlw	26
 10978  0395  0239               	subwf	___fldiv@aexp,w
 10979  0396  1C03               	skipc
 10980  0397  2B99               	goto	u2651
 10981  0398  2B9A               	goto	u2650
 10982  0399                     u2651:
 10983  0399  2B56               	goto	l3053
 10984  039A                     u2650:
 10985  039A                     l3073:
 10986  039A  0830               	movf	___fldiv@rem+3,w
 10987  039B  042F               	iorwf	___fldiv@rem+2,w
 10988  039C  042E               	iorwf	___fldiv@rem+1,w
 10989  039D  042D               	iorwf	___fldiv@rem,w
 10990  039E  1903               	skipnz
 10991  039F  2BA1               	goto	u2661
 10992  03A0  2BA2               	goto	u2660
 10993  03A1                     u2661:
 10994  03A1  2BBB               	goto	l3087
 10995  03A2                     u2660:
 10996  03A2                     l3075:
 10997  03A2  1434               	bsf	___fldiv@grs,0
 10998  03A3  2BBB               	goto	l3087
 10999  03A4                     l3077:
 11000  03A4  3001               	movlw	1
 11001  03A5                     u2675:
 11002  03A5  35A4               	lslf	___fldiv@b,f
 11003  03A6  0DA5               	rlf	___fldiv@b+1,f
 11004  03A7  0DA6               	rlf	___fldiv@b+2,f
 11005  03A8  0DA7               	rlf	___fldiv@b+3,f
 11006  03A9  0B89               	decfsz	9,f
 11007  03AA  2BA5               	goto	u2675
 11008  03AB                     l3079:
 11009  03AB  1FB7               	btfss	___fldiv@grs+3,7
 11010  03AC  2BAE               	goto	u2681
 11011  03AD  2BAF               	goto	u2680
 11012  03AE                     u2681:
 11013  03AE  2BB0               	goto	l3083
 11014  03AF                     u2680:
 11015  03AF                     l3081:
 11016  03AF  1424               	bsf	___fldiv@b,0
 11017  03B0                     l3083:
 11018  03B0  3001               	movlw	1
 11019  03B1                     u2695:
 11020  03B1  35B4               	lslf	___fldiv@grs,f
 11021  03B2  0DB5               	rlf	___fldiv@grs+1,f
 11022  03B3  0DB6               	rlf	___fldiv@grs+2,f
 11023  03B4  0DB7               	rlf	___fldiv@grs+3,f
 11024  03B5  0B89               	decfsz	9,f
 11025  03B6  2BB1               	goto	u2695
 11026  03B7                     l3085:
 11027  03B7  30FF               	movlw	255
 11028  03B8  07B2               	addwf	___fldiv@new_exp,f
 11029  03B9  30FF               	movlw	255
 11030  03BA  3DB3               	addwfc	___fldiv@new_exp+1,f
 11031  03BB                     l3087:
 11032  03BB  1FA6               	btfss	___fldiv@b+2,7
 11033  03BC  2BBE               	goto	u2701
 11034  03BD  2BBF               	goto	u2700
 11035  03BE                     u2701:
 11036  03BE  2BA4               	goto	l3077
 11037  03BF                     u2700:
 11038  03BF                     l3089:
 11039  03BF  01B9               	clrf	___fldiv@aexp
 11040  03C0                     l3091:
 11041  03C0  1FB7               	btfss	___fldiv@grs+3,7
 11042  03C1  2BC3               	goto	u2711
 11043  03C2  2BC4               	goto	u2710
 11044  03C3                     u2711:
 11045  03C3  2BE0               	goto	l3099
 11046  03C4                     u2710:
 11047  03C4                     l3093:
 11048  03C4  30FF               	movlw	255
 11049  03C5  0534               	andwf	___fldiv@grs,w
 11050  03C6  00A8               	movwf	??___fldiv
 11051  03C7  30FF               	movlw	255
 11052  03C8  0535               	andwf	___fldiv@grs+1,w
 11053  03C9  00A9               	movwf	??___fldiv+1
 11054  03CA  30FF               	movlw	255
 11055  03CB  0536               	andwf	___fldiv@grs+2,w
 11056  03CC  00AA               	movwf	??___fldiv+2
 11057  03CD  307F               	movlw	127
 11058  03CE  0537               	andwf	___fldiv@grs+3,w
 11059  03CF  00AB               	movwf	??___fldiv+3
 11060  03D0  082B               	movf	??___fldiv+3,w
 11061  03D1  042A               	iorwf	??___fldiv+2,w
 11062  03D2  0429               	iorwf	??___fldiv+1,w
 11063  03D3  0428               	iorwf	??___fldiv,w
 11064  03D4  1903               	skipnz
 11065  03D5  2BD7               	goto	u2721
 11066  03D6  2BD8               	goto	u2720
 11067  03D7                     u2721:
 11068  03D7  2BDB               	goto	l957
 11069  03D8                     u2720:
 11070  03D8                     l3095:
 11071  03D8  01B9               	clrf	___fldiv@aexp
 11072  03D9  0AB9               	incf	___fldiv@aexp,f
 11073  03DA  2BE0               	goto	l3099
 11074  03DB                     l957:
 11075  03DB  1C24               	btfss	___fldiv@b,0
 11076  03DC  2BDE               	goto	u2731
 11077  03DD  2BDF               	goto	u2730
 11078  03DE                     u2731:
 11079  03DE  2BE0               	goto	l3099
 11080  03DF                     u2730:
 11081  03DF  2BD8               	goto	l3095
 11082  03E0                     l3099:
 11083  03E0  0839               	movf	___fldiv@aexp,w
 11084  03E1  1903               	btfsc	3,2
 11085  03E2  2BE4               	goto	u2741
 11086  03E3  2BE5               	goto	u2740
 11087  03E4                     u2741:
 11088  03E4  2C0D               	goto	l3109
 11089  03E5                     u2740:
 11090  03E5                     l3101:
 11091  03E5  3001               	movlw	1
 11092  03E6  07A4               	addwf	___fldiv@b,f
 11093  03E7  3000               	movlw	0
 11094  03E8  3DA5               	addwfc	___fldiv@b+1,f
 11095  03E9  3000               	movlw	0
 11096  03EA  3DA6               	addwfc	___fldiv@b+2,f
 11097  03EB  3000               	movlw	0
 11098  03EC  3DA7               	addwfc	___fldiv@b+3,f
 11099  03ED                     l3103:
 11100  03ED  1C27               	btfss	___fldiv@b+3,0
 11101  03EE  2BF0               	goto	u2751
 11102  03EF  2BF1               	goto	u2750
 11103  03F0                     u2751:
 11104  03F0  2C0D               	goto	l3109
 11105  03F1                     u2750:
 11106  03F1                     l3105:
 11107  03F1  0824               	movf	___fldiv@b,w
 11108  03F2  00A8               	movwf	??___fldiv
 11109  03F3  0825               	movf	___fldiv@b+1,w
 11110  03F4  00A9               	movwf	??___fldiv+1
 11111  03F5  0826               	movf	___fldiv@b+2,w
 11112  03F6  00AA               	movwf	??___fldiv+2
 11113  03F7  0827               	movf	___fldiv@b+3,w
 11114  03F8  00AB               	movwf	??___fldiv+3
 11115  03F9  3001               	movlw	1
 11116  03FA  00AC               	movwf	??___fldiv+4
 11117  03FB                     u2765:
 11118  03FB  37AB               	asrf	??___fldiv+3,f
 11119  03FC  0CAA               	rrf	??___fldiv+2,f
 11120  03FD  0CA9               	rrf	??___fldiv+1,f
 11121  03FE  0CA8               	rrf	??___fldiv,f
 11122  03FF                     u2760:
 11123  03FF  0BAC               	decfsz	??___fldiv+4,f
 11124  0400  2BFB               	goto	u2765
 11125  0401  082B               	movf	??___fldiv+3,w
 11126  0402  00A7               	movwf	___fldiv@b+3
 11127  0403  082A               	movf	??___fldiv+2,w
 11128  0404  00A6               	movwf	___fldiv@b+2
 11129  0405  0829               	movf	??___fldiv+1,w
 11130  0406  00A5               	movwf	___fldiv@b+1
 11131  0407  0828               	movf	??___fldiv,w
 11132  0408  00A4               	movwf	___fldiv@b
 11133  0409                     l3107:
 11134  0409  3001               	movlw	1
 11135  040A  07B2               	addwf	___fldiv@new_exp,f
 11136  040B  3000               	movlw	0
 11137  040C  3DB3               	addwfc	___fldiv@new_exp+1,f
 11138  040D                     l3109:
 11139  040D  0833               	movf	___fldiv@new_exp+1,w
 11140  040E  3A80               	xorlw	128
 11141  040F  00A8               	movwf	??___fldiv
 11142  0410  3080               	movlw	128
 11143  0411  0228               	subwf	??___fldiv,w
 11144  0412  1D03               	skipz
 11145  0413  2C16               	goto	u2775
 11146  0414  30FF               	movlw	255
 11147  0415  0232               	subwf	___fldiv@new_exp,w
 11148  0416                     u2775:
 11149  0416  1C03               	skipc
 11150  0417  2C19               	goto	u2771
 11151  0418  2C1A               	goto	u2770
 11152  0419                     u2771:
 11153  0419  2C27               	goto	l962
 11154  041A                     u2770:
 11155  041A                     l3111:
 11156  041A  30FF               	movlw	255
 11157  041B  0020               	movlb	0	; select bank0
 11158  041C  00B2               	movwf	___fldiv@new_exp
 11159  041D  3000               	movlw	0
 11160  041E  00B3               	movwf	___fldiv@new_exp+1
 11161  041F  3000               	movlw	0
 11162  0420  00A7               	movwf	___fldiv@b+3
 11163  0421  3000               	movlw	0
 11164  0422  00A6               	movwf	___fldiv@b+2
 11165  0423  3000               	movlw	0
 11166  0424  00A5               	movwf	___fldiv@b+1
 11167  0425  3000               	movlw	0
 11168  0426  00A4               	movwf	___fldiv@b
 11169  0427                     l962:
 11170  0427  0020               	movlb	0	; select bank0
 11171  0428  0833               	movf	___fldiv@new_exp+1,w
 11172  0429  3A80               	xorlw	128
 11173  042A  00A8               	movwf	??___fldiv
 11174  042B  3080               	movlw	128
 11175  042C  0228               	subwf	??___fldiv,w
 11176  042D  1D03               	skipz
 11177  042E  2C31               	goto	u2785
 11178  042F  3001               	movlw	1
 11179  0430  0232               	subwf	___fldiv@new_exp,w
 11180  0431                     u2785:
 11181  0431  1803               	skipnc
 11182  0432  2C34               	goto	u2781
 11183  0433  2C35               	goto	u2780
 11184  0434                     u2781:
 11185  0434  2C41               	goto	l963
 11186  0435                     u2780:
 11187  0435                     l3113:
 11188  0435  0020               	movlb	0	; select bank0
 11189  0436  01B2               	clrf	___fldiv@new_exp
 11190  0437  01B3               	clrf	___fldiv@new_exp+1
 11191  0438                     l3115:
 11192  0438  3000               	movlw	0
 11193  0439  00A7               	movwf	___fldiv@b+3
 11194  043A  3000               	movlw	0
 11195  043B  00A6               	movwf	___fldiv@b+2
 11196  043C  3000               	movlw	0
 11197  043D  00A5               	movwf	___fldiv@b+1
 11198  043E  3000               	movlw	0
 11199  043F  00A4               	movwf	___fldiv@b
 11200  0440                     l3117:
 11201  0440  01B1               	clrf	___fldiv@sign
 11202  0441                     l963:
 11203  0441  0020               	movlb	0	; select bank0
 11204  0442  0832               	movf	___fldiv@new_exp,w
 11205  0443  00A8               	movwf	??___fldiv
 11206  0444  0828               	movf	??___fldiv,w
 11207  0445  00B8               	movwf	___fldiv@bexp
 11208  0446                     l3119:
 11209  0446  1C38               	btfss	___fldiv@bexp,0
 11210  0447  2C49               	goto	u2791
 11211  0448  2C4A               	goto	u2790
 11212  0449                     u2791:
 11213  0449  2C4C               	goto	l3123
 11214  044A                     u2790:
 11215  044A                     l3121:
 11216  044A  17A6               	bsf	___fldiv@b+2,7
 11217  044B  2C50               	goto	l965
 11218  044C                     l3123:
 11219  044C  307F               	movlw	127
 11220  044D  00A8               	movwf	??___fldiv
 11221  044E  0828               	movf	??___fldiv,w
 11222  044F  05A6               	andwf	___fldiv@b+2,f
 11223  0450                     l965:
 11224  0450  3638               	lsrf	___fldiv@bexp,w
 11225  0451  00A8               	movwf	??___fldiv
 11226  0452  0828               	movf	??___fldiv,w
 11227  0453  00A7               	movwf	___fldiv@b+3
 11228  0454  0831               	movf	___fldiv@sign,w
 11229  0455  00A8               	movwf	??___fldiv
 11230  0456  0828               	movf	??___fldiv,w
 11231  0457  04A7               	iorwf	___fldiv@b+3,f
 11232  0458  2B15               	goto	l3033
 11233  0459                     l943:
 11234  0459  0008               	return
 11235  045A                     __end_of___fldiv:
 11236                           
 11237                           	psect	text25
 11238  0BC8                     __ptext25:	
 11239 ;; *************** function ___fltol *****************
 11240 ;; Defined at:
 11241 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fltol.c"
 11242 ;; Parameters:    Size  Location     Type
 11243 ;;  f1              4    0[COMMON] unsigned char 
 11244 ;; Auto vars:     Size  Location     Type
 11245 ;;  exp1            1   10[COMMON] unsigned char 
 11246 ;;  sign1           1    9[COMMON] unsigned char 
 11247 ;; Return value:  Size  Location     Type
 11248 ;;                  4    0[COMMON] long 
 11249 ;; Registers used:
 11250 ;;		wreg, status,2, status,0
 11251 ;; Tracked objects:
 11252 ;;		On entry : 0/0
 11253 ;;		On exit  : 0/0
 11254 ;;		Unchanged: 0/0
 11255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11256 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11257 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11258 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11259 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11260 ;;Total ram usage:       11 bytes
 11261 ;; Hardware stack levels used:    1
 11262 ;; Hardware stack levels required when called:    4
 11263 ;; This function calls:
 11264 ;;		Nothing
 11265 ;; This function is called by:
 11266 ;;		_main
 11267 ;; This function uses a non-reentrant model
 11268 ;;
 11269                           
 11270                           
 11271                           ;psect for function ___fltol
 11272  0BC8                     ___fltol:
 11273  0BC8                     l3345:	
 11274                           ;incstack = 0
 11275                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 11276                           
 11277  0BC8  1003               	clrc
 11278  0BC9  0D72               	rlf	___fltol@f1+2,w
 11279  0BCA  0D73               	rlf	___fltol@f1+3,w
 11280  0BCB  00F4               	movwf	??___fltol
 11281  0BCC  0874               	movf	??___fltol,w
 11282  0BCD  00FA               	movwf	___fltol@exp1
 11283  0BCE  087A               	movf	___fltol@exp1,w
 11284  0BCF  1D03               	btfss	3,2
 11285  0BD0  2BD2               	goto	u3091
 11286  0BD1  2BD3               	goto	u3090
 11287  0BD2                     u3091:
 11288  0BD2  2BDC               	goto	l3351
 11289  0BD3                     u3090:
 11290  0BD3                     l3347:
 11291  0BD3  3000               	movlw	0
 11292  0BD4  00F3               	movwf	?___fltol+3
 11293  0BD5  3000               	movlw	0
 11294  0BD6  00F2               	movwf	?___fltol+2
 11295  0BD7  3000               	movlw	0
 11296  0BD8  00F1               	movwf	?___fltol+1
 11297  0BD9  3000               	movlw	0
 11298  0BDA  00F0               	movwf	?___fltol
 11299  0BDB  2C3B               	goto	l778
 11300  0BDC                     l3351:
 11301  0BDC  0870               	movf	___fltol@f1,w
 11302  0BDD  00F4               	movwf	??___fltol
 11303  0BDE  0871               	movf	___fltol@f1+1,w
 11304  0BDF  00F5               	movwf	??___fltol+1
 11305  0BE0  0872               	movf	___fltol@f1+2,w
 11306  0BE1  00F6               	movwf	??___fltol+2
 11307  0BE2  0873               	movf	___fltol@f1+3,w
 11308  0BE3  00F7               	movwf	??___fltol+3
 11309  0BE4  301F               	movlw	31
 11310  0BE5                     u3105:
 11311  0BE5  36F7               	lsrf	??___fltol+3,f
 11312  0BE6  0CF6               	rrf	??___fltol+2,f
 11313  0BE7  0CF5               	rrf	??___fltol+1,f
 11314  0BE8  0CF4               	rrf	??___fltol,f
 11315  0BE9                     u3100:
 11316  0BE9  0B89               	decfsz	9,f
 11317  0BEA  2BE5               	goto	u3105
 11318  0BEB  0874               	movf	??___fltol,w
 11319  0BEC  00F8               	movwf	??___fltol+4
 11320  0BED  0878               	movf	??___fltol+4,w
 11321  0BEE  00F9               	movwf	___fltol@sign1
 11322  0BEF                     l3353:
 11323  0BEF  17F2               	bsf	___fltol@f1+2,7
 11324  0BF0                     l3355:
 11325  0BF0  30FF               	movlw	255
 11326  0BF1  05F0               	andwf	___fltol@f1,f
 11327  0BF2  30FF               	movlw	255
 11328  0BF3  05F1               	andwf	___fltol@f1+1,f
 11329  0BF4  30FF               	movlw	255
 11330  0BF5  05F2               	andwf	___fltol@f1+2,f
 11331  0BF6  3000               	movlw	0
 11332  0BF7  05F3               	andwf	___fltol@f1+3,f
 11333  0BF8                     l3357:
 11334  0BF8  3096               	movlw	150
 11335  0BF9  02FA               	subwf	___fltol@exp1,f
 11336  0BFA                     l3359:
 11337  0BFA  1FFA               	btfss	___fltol@exp1,7
 11338  0BFB  2BFD               	goto	u3111
 11339  0BFC  2BFE               	goto	u3110
 11340  0BFD                     u3111:
 11341  0BFD  2C16               	goto	l3369
 11342  0BFE                     u3110:
 11343  0BFE                     l3361:
 11344  0BFE  087A               	movf	___fltol@exp1,w
 11345  0BFF  3A80               	xorlw	128
 11346  0C00  3E97               	addlw	151
 11347  0C01  1803               	skipnc
 11348  0C02  2C04               	goto	u3121
 11349  0C03  2C05               	goto	u3120
 11350  0C04                     u3121:
 11351  0C04  2C06               	goto	l3367
 11352  0C05                     u3120:
 11353  0C05  2BD3               	goto	l3347
 11354  0C06                     l3367:
 11355  0C06  3001               	movlw	1
 11356  0C07                     u3135:
 11357  0C07  36F3               	lsrf	___fltol@f1+3,f
 11358  0C08  0CF2               	rrf	___fltol@f1+2,f
 11359  0C09  0CF1               	rrf	___fltol@f1+1,f
 11360  0C0A  0CF0               	rrf	___fltol@f1,f
 11361  0C0B  0B89               	decfsz	9,f
 11362  0C0C  2C07               	goto	u3135
 11363  0C0D  3001               	movlw	1
 11364  0C0E  00F4               	movwf	??___fltol
 11365  0C0F  0874               	movf	??___fltol,w
 11366  0C10  07FA               	addwf	___fltol@exp1,f
 11367  0C11  1D03               	btfss	3,2
 11368  0C12  2C14               	goto	u3141
 11369  0C13  2C15               	goto	u3140
 11370  0C14                     u3141:
 11371  0C14  2C06               	goto	l3367
 11372  0C15                     u3140:
 11373  0C15  2C2B               	goto	l3377
 11374  0C16                     l3369:
 11375  0C16  3020               	movlw	32
 11376  0C17  027A               	subwf	___fltol@exp1,w
 11377  0C18  1C03               	skipc
 11378  0C19  2C1B               	goto	u3151
 11379  0C1A  2C1C               	goto	u3150
 11380  0C1B                     u3151:
 11381  0C1B  2C26               	goto	l785
 11382  0C1C                     u3150:
 11383  0C1C  2BD3               	goto	l3347
 11384  0C1D                     l3375:
 11385  0C1D  3001               	movlw	1
 11386  0C1E                     u3165:
 11387  0C1E  35F0               	lslf	___fltol@f1,f
 11388  0C1F  0DF1               	rlf	___fltol@f1+1,f
 11389  0C20  0DF2               	rlf	___fltol@f1+2,f
 11390  0C21  0DF3               	rlf	___fltol@f1+3,f
 11391  0C22  0B89               	decfsz	9,f
 11392  0C23  2C1E               	goto	u3165
 11393  0C24  3001               	movlw	1
 11394  0C25  02FA               	subwf	___fltol@exp1,f
 11395  0C26                     l785:
 11396  0C26  087A               	movf	___fltol@exp1,w
 11397  0C27  1D03               	btfss	3,2
 11398  0C28  2C2A               	goto	u3171
 11399  0C29  2C2B               	goto	u3170
 11400  0C2A                     u3171:
 11401  0C2A  2C1D               	goto	l3375
 11402  0C2B                     u3170:
 11403  0C2B                     l3377:
 11404  0C2B  0879               	movf	___fltol@sign1,w
 11405  0C2C  1903               	btfsc	3,2
 11406  0C2D  2C2F               	goto	u3181
 11407  0C2E  2C30               	goto	u3180
 11408  0C2F                     u3181:
 11409  0C2F  2C3B               	goto	l788
 11410  0C30                     u3180:
 11411  0C30                     l3379:
 11412  0C30  09F0               	comf	___fltol@f1,f
 11413  0C31  09F1               	comf	___fltol@f1+1,f
 11414  0C32  09F2               	comf	___fltol@f1+2,f
 11415  0C33  09F3               	comf	___fltol@f1+3,f
 11416  0C34  0AF0               	incf	___fltol@f1,f
 11417  0C35  1903               	skipnz
 11418  0C36  0AF1               	incf	___fltol@f1+1,f
 11419  0C37  1903               	skipnz
 11420  0C38  0AF2               	incf	___fltol@f1+2,f
 11421  0C39  1903               	skipnz
 11422  0C3A  0AF3               	incf	___fltol@f1+3,f
 11423  0C3B                     l788:
 11424  0C3B                     l778:
 11425  0C3B  0008               	return
 11426  0C3C                     __end_of___fltol:
 11427                           
 11428                           	psect	text26
 11429  179F                     __ptext26:	
 11430 ;; *************** function _SYSTEM_Initialize *****************
 11431 ;; Defined at:
 11432 ;;		line 76 in file "mcc_generated_files/mcc.c"
 11433 ;; Parameters:    Size  Location     Type
 11434 ;;		None
 11435 ;; Auto vars:     Size  Location     Type
 11436 ;;		None
 11437 ;; Return value:  Size  Location     Type
 11438 ;;                  1    wreg      void 
 11439 ;; Registers used:
 11440 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11441 ;; Tracked objects:
 11442 ;;		On entry : 0/0
 11443 ;;		On exit  : 0/0
 11444 ;;		Unchanged: 0/0
 11445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11450 ;;Total ram usage:        0 bytes
 11451 ;; Hardware stack levels used:    1
 11452 ;; Hardware stack levels required when called:    8
 11453 ;; This function calls:
 11454 ;;		_ADC_Initialize
 11455 ;;		_OSCILLATOR_Initialize
 11456 ;;		_PIN_MANAGER_Initialize
 11457 ;;		_PWM3_Initialize
 11458 ;;		_PWM4_Initialize
 11459 ;;		_SPI_Initialize
 11460 ;;		_TMR2_Initialize
 11461 ;;		_TMR4_Initialize
 11462 ;;		_initDisplay
 11463 ;; This function is called by:
 11464 ;;		_main
 11465 ;; This function uses a non-reentrant model
 11466 ;;
 11467                           
 11468                           
 11469                           ;psect for function _SYSTEM_Initialize
 11470  179F                     _SYSTEM_Initialize:
 11471  179F                     l3173:	
 11472                           ;incstack = 0
 11473                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11474                           
 11475                           
 11476                           ;mcc_generated_files/mcc.c: 79:     PIN_MANAGER_Initialize();
 11477  179F  3189  216C  3197   	fcall	_PIN_MANAGER_Initialize
 11478                           
 11479                           ;mcc_generated_files/mcc.c: 80:     OSCILLATOR_Initialize();
 11480  17A2  3196  2693  3197   	fcall	_OSCILLATOR_Initialize
 11481                           
 11482                           ;mcc_generated_files/mcc.c: 81:     SPI_Initialize();
 11483  17A5  3196  269E  3197   	fcall	_SPI_Initialize
 11484  17A8                     l3175:
 11485                           
 11486                           ;mcc_generated_files/mcc.c: 82:     initDisplay();
 11487  17A8  3188  2026  3197   	fcall	_initDisplay
 11488  17AB                     l3177:
 11489                           
 11490                           ;mcc_generated_files/mcc.c: 83:     ADC_Initialize();
 11491  17AB  3196  26B0  3197   	fcall	_ADC_Initialize
 11492  17AE                     l3179:
 11493                           
 11494                           ;mcc_generated_files/mcc.c: 84:     PWM4_Initialize();
 11495  17AE  3196  26C2  3197   	fcall	_PWM4_Initialize
 11496  17B1                     l3181:
 11497                           
 11498                           ;mcc_generated_files/mcc.c: 85:     TMR4_Initialize();
 11499  17B1  3197  2737  3197   	fcall	_TMR4_Initialize
 11500  17B4                     l3183:
 11501                           
 11502                           ;mcc_generated_files/mcc.c: 86:     PWM3_Initialize();
 11503  17B4  3196  26B9  3197   	fcall	_PWM3_Initialize
 11504  17B7                     l3185:
 11505                           
 11506                           ;mcc_generated_files/mcc.c: 87:     TMR2_Initialize();
 11507  17B7  3196  26E2  3197   	fcall	_TMR2_Initialize
 11508  17BA                     l25:
 11509  17BA  0008               	return
 11510  17BB                     __end_of_SYSTEM_Initialize:
 11511                           
 11512                           	psect	text27
 11513  0826                     __ptext27:	
 11514 ;; *************** function _initDisplay *****************
 11515 ;; Defined at:
 11516 ;;		line 543 in file "main.c"
 11517 ;; Parameters:    Size  Location     Type
 11518 ;;		None
 11519 ;; Auto vars:     Size  Location     Type
 11520 ;;  i               2   12[COMMON] int 
 11521 ;; Return value:  Size  Location     Type
 11522 ;;                  1    wreg      void 
 11523 ;; Registers used:
 11524 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11525 ;; Tracked objects:
 11526 ;;		On entry : 0/0
 11527 ;;		On exit  : 0/0
 11528 ;;		Unchanged: 0/0
 11529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11531 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11532 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11533 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11534 ;;Total ram usage:        3 bytes
 11535 ;; Hardware stack levels used:    1
 11536 ;; Hardware stack levels required when called:    7
 11537 ;; This function calls:
 11538 ;;		_command
 11539 ;;		_dataCMD
 11540 ;;		_initOLED
 11541 ;; This function is called by:
 11542 ;;		_SYSTEM_Initialize
 11543 ;; This function uses a non-reentrant model
 11544 ;;
 11545                           
 11546                           
 11547                           ;psect for function _initDisplay
 11548  0826                     _initDisplay:
 11549  0826                     l2845:	
 11550                           ;incstack = 0
 11551                           ; Regs used in _initDisplay: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11552                           
 11553                           
 11554                           ;main.c: 545:     int i;;main.c: 546:     initOLED();
 11555  0826  318C  243C  3188   	fcall	_initOLED
 11556                           
 11557                           ;main.c: 547:     command(0x01);
 11558  0829  3001               	movlw	1
 11559  082A  318A  2256  3188   	fcall	_command
 11560  082D                     l2847:
 11561                           
 11562                           ;main.c: 548:     _delay((unsigned long)((2)*(16000000/4000.0)));
 11563  082D  300B               	movlw	11
 11564  082E  00FB               	movwf	??_initDisplay
 11565  082F  3062               	movlw	98
 11566  0830                     u3437:
 11567  0830  0B89               	decfsz	9,f
 11568  0831  2830               	goto	u3437
 11569  0832  0BFB               	decfsz	??_initDisplay,f
 11570  0833  2830               	goto	u3437
 11571  0834  3200               	nop2
 11572  0835                     l2849:
 11573                           
 11574                           ;main.c: 549:     for(i=0;i<16;i++){
 11575  0835  01FC               	clrf	initDisplay@i
 11576  0836  01FD               	clrf	initDisplay@i+1
 11577  0837                     l2855:
 11578                           
 11579                           ;main.c: 550:        dataCMD(text5[i]);
 11580  0837  087C               	movf	initDisplay@i,w
 11581  0838  3E42               	addlw	(low (_text5| (0+256)))& (0+255)
 11582  0839  0086               	movwf	6
 11583  083A  3001               	movlw	1	; select bank2/3
 11584  083B  0087               	movwf	7
 11585  083C  0801               	movf	1,w
 11586  083D  318A  22B1  3188   	fcall	_dataCMD
 11587  0840                     l2857:
 11588                           
 11589                           ;main.c: 551:     }
 11590  0840  3001               	movlw	1
 11591  0841  07FC               	addwf	initDisplay@i,f
 11592  0842  3000               	movlw	0
 11593  0843  3DFD               	addwfc	initDisplay@i+1,f
 11594  0844                     l2859:
 11595  0844  087D               	movf	initDisplay@i+1,w
 11596  0845  3A80               	xorlw	128
 11597  0846  00FB               	movwf	??_initDisplay
 11598  0847  3080               	movlw	128
 11599  0848  027B               	subwf	??_initDisplay,w
 11600  0849  1D03               	skipz
 11601  084A  284D               	goto	u2325
 11602  084B  3010               	movlw	16
 11603  084C  027C               	subwf	initDisplay@i,w
 11604  084D                     u2325:
 11605  084D  1C03               	skipc
 11606  084E  2850               	goto	u2321
 11607  084F  2851               	goto	u2320
 11608  0850                     u2321:
 11609  0850  2837               	goto	l2855
 11610  0851                     u2320:
 11611  0851                     l403:
 11612  0851  0008               	return
 11613  0852                     __end_of_initDisplay:
 11614                           
 11615                           	psect	text28
 11616  0C3C                     __ptext28:	
 11617 ;; *************** function _initOLED *****************
 11618 ;; Defined at:
 11619 ;;		line 586 in file "main.c"
 11620 ;; Parameters:    Size  Location     Type
 11621 ;;		None
 11622 ;; Auto vars:     Size  Location     Type
 11623 ;;		None
 11624 ;; Return value:  Size  Location     Type
 11625 ;;                  1    wreg      void 
 11626 ;; Registers used:
 11627 ;;		wreg, status,2, status,0, pclath, cstack
 11628 ;; Tracked objects:
 11629 ;;		On entry : 0/0
 11630 ;;		On exit  : 0/0
 11631 ;;		Unchanged: 0/0
 11632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11635 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11636 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11637 ;;Total ram usage:        2 bytes
 11638 ;; Hardware stack levels used:    1
 11639 ;; Hardware stack levels required when called:    6
 11640 ;; This function calls:
 11641 ;;		_command
 11642 ;;		_dataCMD
 11643 ;; This function is called by:
 11644 ;;		_initDisplay
 11645 ;; This function uses a non-reentrant model
 11646 ;;
 11647                           
 11648                           
 11649                           ;psect for function _initOLED
 11650  0C3C                     _initOLED:
 11651  0C3C                     l2721:	
 11652                           ;incstack = 0
 11653                           ; Regs used in _initOLED: [wreg+status,2+status,0+pclath+cstack]
 11654                           
 11655                           
 11656                           ;main.c: 590:      LATC7 = 1;
 11657  0C3C  0022               	movlb	2	; select bank2
 11658  0C3D  178E               	bsf	14,7	;volatile
 11659  0C3E                     l2723:
 11660                           
 11661                           ;main.c: 592:     _delay((unsigned long)((100)*(16000000/4000.0)));
 11662  0C3E  3003               	movlw	3
 11663  0C3F  00FA               	movwf	??_initOLED+1
 11664  0C40  3008               	movlw	8
 11665  0C41  00F9               	movwf	??_initOLED
 11666  0C42  3077               	movlw	119
 11667  0C43                     u3447:
 11668  0C43  0B89               	decfsz	9,f
 11669  0C44  2C43               	goto	u3447
 11670  0C45  0BF9               	decfsz	??_initOLED,f
 11671  0C46  2C43               	goto	u3447
 11672  0C47  0BFA               	decfsz	??_initOLED+1,f
 11673  0C48  2C43               	goto	u3447
 11674  0C49  0000               	nop
 11675  0C4A                     l2725:
 11676                           
 11677                           ;main.c: 594:     command(0x2A);
 11678  0C4A  302A               	movlw	42
 11679  0C4B  318A  2256  318C   	fcall	_command
 11680  0C4E                     l2727:
 11681                           
 11682                           ;main.c: 595:  command(0x71);
 11683  0C4E  3071               	movlw	113
 11684  0C4F  318A  2256  318C   	fcall	_command
 11685  0C52                     l2729:
 11686                           
 11687                           ;main.c: 596:  dataCMD(0x00);
 11688  0C52  3000               	movlw	0
 11689  0C53  318A  22B1  318C   	fcall	_dataCMD
 11690  0C56                     l2731:
 11691                           
 11692                           ;main.c: 597:  command(0x28);
 11693  0C56  3028               	movlw	40
 11694  0C57  318A  2256  318C   	fcall	_command
 11695  0C5A                     l2733:
 11696                           
 11697                           ;main.c: 598:  command(0x08);
 11698  0C5A  3008               	movlw	8
 11699  0C5B  318A  2256  318C   	fcall	_command
 11700  0C5E                     l2735:
 11701                           
 11702                           ;main.c: 599:  command(0x2A);
 11703  0C5E  302A               	movlw	42
 11704  0C5F  318A  2256  318C   	fcall	_command
 11705  0C62                     l2737:
 11706                           
 11707                           ;main.c: 600:  command(0x79);
 11708  0C62  3079               	movlw	121
 11709  0C63  318A  2256  318C   	fcall	_command
 11710  0C66                     l2739:
 11711                           
 11712                           ;main.c: 601:  command(0xD5);
 11713  0C66  30D5               	movlw	213
 11714  0C67  318A  2256  318C   	fcall	_command
 11715  0C6A                     l2741:
 11716                           
 11717                           ;main.c: 602:  command(0x70);
 11718  0C6A  3070               	movlw	112
 11719  0C6B  318A  2256  318C   	fcall	_command
 11720  0C6E                     l2743:
 11721                           
 11722                           ;main.c: 603:  command(0x78);
 11723  0C6E  3078               	movlw	120
 11724  0C6F  318A  2256  318C   	fcall	_command
 11725  0C72                     l2745:
 11726                           
 11727                           ;main.c: 604:  command(0x09);
 11728  0C72  3009               	movlw	9
 11729  0C73  318A  2256  318C   	fcall	_command
 11730  0C76                     l2747:
 11731                           
 11732                           ;main.c: 605:     command(0x06);
 11733  0C76  3006               	movlw	6
 11734  0C77  318A  2256  318C   	fcall	_command
 11735  0C7A                     l2749:
 11736                           
 11737                           ;main.c: 606:  command(0x72);
 11738  0C7A  3072               	movlw	114
 11739  0C7B  318A  2256  318C   	fcall	_command
 11740  0C7E                     l2751:
 11741                           
 11742                           ;main.c: 607:  dataCMD(0x00);
 11743  0C7E  3000               	movlw	0
 11744  0C7F  318A  22B1  318C   	fcall	_dataCMD
 11745  0C82                     l2753:
 11746                           
 11747                           ;main.c: 608:  command(0x2A);
 11748  0C82  302A               	movlw	42
 11749  0C83  318A  2256  318C   	fcall	_command
 11750  0C86                     l2755:
 11751                           
 11752                           ;main.c: 609:  command(0x79);
 11753  0C86  3079               	movlw	121
 11754  0C87  318A  2256  318C   	fcall	_command
 11755  0C8A                     l2757:
 11756                           
 11757                           ;main.c: 610:  command(0xDA);
 11758  0C8A  30DA               	movlw	218
 11759  0C8B  318A  2256  318C   	fcall	_command
 11760  0C8E                     l2759:
 11761                           
 11762                           ;main.c: 612:  command(0x00);
 11763  0C8E  3000               	movlw	0
 11764  0C8F  318A  2256  318C   	fcall	_command
 11765  0C92                     l2761:
 11766                           
 11767                           ;main.c: 613:  command(0xDC);
 11768  0C92  30DC               	movlw	220
 11769  0C93  318A  2256  318C   	fcall	_command
 11770  0C96                     l2763:
 11771                           
 11772                           ;main.c: 614:  command(0x00);
 11773  0C96  3000               	movlw	0
 11774  0C97  318A  2256  318C   	fcall	_command
 11775  0C9A                     l2765:
 11776                           
 11777                           ;main.c: 615:  command(0x81);
 11778  0C9A  3081               	movlw	129
 11779  0C9B  318A  2256  318C   	fcall	_command
 11780  0C9E                     l2767:
 11781                           
 11782                           ;main.c: 616:  command(0x7F);
 11783  0C9E  307F               	movlw	127
 11784  0C9F  318A  2256  318C   	fcall	_command
 11785  0CA2                     l2769:
 11786                           
 11787                           ;main.c: 617:  command(0xD9);
 11788  0CA2  30D9               	movlw	217
 11789  0CA3  318A  2256  318C   	fcall	_command
 11790  0CA6                     l2771:
 11791                           
 11792                           ;main.c: 618:  command(0xF1);
 11793  0CA6  30F1               	movlw	241
 11794  0CA7  318A  2256  318C   	fcall	_command
 11795  0CAA                     l2773:
 11796                           
 11797                           ;main.c: 619:  command(0xDB);
 11798  0CAA  30DB               	movlw	219
 11799  0CAB  318A  2256  318C   	fcall	_command
 11800  0CAE                     l2775:
 11801                           
 11802                           ;main.c: 620:  command(0x40);
 11803  0CAE  3040               	movlw	64
 11804  0CAF  318A  2256  318C   	fcall	_command
 11805  0CB2                     l2777:
 11806                           
 11807                           ;main.c: 621:  command(0x78);
 11808  0CB2  3078               	movlw	120
 11809  0CB3  318A  2256  318C   	fcall	_command
 11810  0CB6                     l2779:
 11811                           
 11812                           ;main.c: 622:  command(0x28);
 11813  0CB6  3028               	movlw	40
 11814  0CB7  318A  2256  318C   	fcall	_command
 11815  0CBA                     l2781:
 11816                           
 11817                           ;main.c: 623:  command(0x01);
 11818  0CBA  3001               	movlw	1
 11819  0CBB  318A  2256  318C   	fcall	_command
 11820  0CBE                     l2783:
 11821                           
 11822                           ;main.c: 624:  command(0x80);
 11823  0CBE  3080               	movlw	128
 11824  0CBF  318A  2256  318C   	fcall	_command
 11825  0CC2                     l2785:
 11826                           
 11827                           ;main.c: 625:  command(0x0C);
 11828  0CC2  300C               	movlw	12
 11829  0CC3  318A  2256  318C   	fcall	_command
 11830  0CC6                     l2787:
 11831                           
 11832                           ;main.c: 627:     _delay((unsigned long)((100)*(16000000/4000.0)));
 11833  0CC6  3003               	movlw	3
 11834  0CC7  00FA               	movwf	??_initOLED+1
 11835  0CC8  3008               	movlw	8
 11836  0CC9  00F9               	movwf	??_initOLED
 11837  0CCA  3077               	movlw	119
 11838  0CCB                     u3457:
 11839  0CCB  0B89               	decfsz	9,f
 11840  0CCC  2CCB               	goto	u3457
 11841  0CCD  0BF9               	decfsz	??_initOLED,f
 11842  0CCE  2CCB               	goto	u3457
 11843  0CCF  0BFA               	decfsz	??_initOLED+1,f
 11844  0CD0  2CCB               	goto	u3457
 11845  0CD1  0000               	nop
 11846  0CD2                     l413:
 11847  0CD2  0008               	return
 11848  0CD3                     __end_of_initOLED:
 11849                           
 11850                           	psect	text29
 11851  0AB1                     __ptext29:	
 11852 ;; *************** function _dataCMD *****************
 11853 ;; Defined at:
 11854 ;;		line 554 in file "main.c"
 11855 ;; Parameters:    Size  Location     Type
 11856 ;;  s               1    wreg     unsigned char 
 11857 ;; Auto vars:     Size  Location     Type
 11858 ;;  s               1    5[COMMON] unsigned char 
 11859 ;;  i               2    6[COMMON] int 
 11860 ;;  sendByte        1    8[COMMON] unsigned char 
 11861 ;;  bit0            1    4[COMMON] unsigned char 
 11862 ;; Return value:  Size  Location     Type
 11863 ;;                  1    wreg      void 
 11864 ;; Registers used:
 11865 ;;		wreg, status,2, status,0, pclath, cstack
 11866 ;; Tracked objects:
 11867 ;;		On entry : 0/0
 11868 ;;		On exit  : 0/0
 11869 ;;		Unchanged: 0/0
 11870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11872 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11873 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11874 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11875 ;;Total ram usage:        7 bytes
 11876 ;; Hardware stack levels used:    1
 11877 ;; Hardware stack levels required when called:    5
 11878 ;; This function calls:
 11879 ;;		_spi_write
 11880 ;; This function is called by:
 11881 ;;		_main
 11882 ;;		_printByteValue
 11883 ;;		_initDisplay
 11884 ;;		_initOLED
 11885 ;;		_printADCValues
 11886 ;; This function uses a non-reentrant model
 11887 ;;
 11888                           
 11889                           
 11890                           ;psect for function _dataCMD
 11891  0AB1                     _dataCMD:
 11892                           
 11893                           ;incstack = 0
 11894                           ; Regs used in _dataCMD: [wreg+status,2+status,0+pclath+cstack]
 11895                           ;dataCMD@s stored from wreg
 11896  0AB1  00F5               	movwf	dataCMD@s
 11897  0AB2                     l2633:
 11898                           
 11899                           ;main.c: 554: void dataCMD(unsigned char s);main.c: 555: {;main.c: 557:     LATB7 =0;
 11900  0AB2  0022               	movlb	2	; select bank2
 11901  0AB3  138D               	bcf	13,7	;volatile
 11902  0AB4                     l2635:
 11903                           
 11904                           ;main.c: 558:     spi_write('\xFA');
 11905  0AB4  30FA               	movlw	250
 11906  0AB5  3196  26EF  318A   	fcall	_spi_write
 11907  0AB8                     l2637:
 11908  0AB8                     l2639:
 11909                           
 11910                           ;main.c: 561:  unsigned char sendByte = '\x00';
 11911  0AB8  01F8               	clrf	dataCMD@sendByte
 11912  0AB9                     l2641:
 11913                           
 11914                           ;main.c: 563:  for(int i=0; i< 8; i++)
 11915  0AB9  01F6               	clrf	dataCMD@i
 11916  0ABA  01F7               	clrf	dataCMD@i+1
 11917  0ABB                     l2647:
 11918                           
 11919                           ;main.c: 564:  {;main.c: 565:   bit0 = s & 1;
 11920  0ABB  0875               	movf	dataCMD@s,w
 11921  0ABC  3901               	andlw	1
 11922  0ABD  00F2               	movwf	??_dataCMD
 11923  0ABE  0872               	movf	??_dataCMD,w
 11924  0ABF  00F4               	movwf	dataCMD@bit0
 11925  0AC0                     l2649:
 11926                           
 11927                           ;main.c: 567:   s = s >>1;
 11928  0AC0  3675               	lsrf	dataCMD@s,w
 11929  0AC1  00F2               	movwf	??_dataCMD
 11930  0AC2  0872               	movf	??_dataCMD,w
 11931  0AC3  00F5               	movwf	dataCMD@s
 11932  0AC4                     l2651:
 11933                           
 11934                           ;main.c: 568:   sendByte = sendByte <<1;
 11935  0AC4  3578               	lslf	dataCMD@sendByte,w
 11936  0AC5  00F2               	movwf	??_dataCMD
 11937  0AC6  0872               	movf	??_dataCMD,w
 11938  0AC7  00F8               	movwf	dataCMD@sendByte
 11939  0AC8                     l2653:
 11940                           
 11941                           ;main.c: 569:   if (bit0 == 1){
 11942  0AC8  0374               	decf	dataCMD@bit0,w
 11943  0AC9  1D03               	btfss	3,2
 11944  0ACA  2ACC               	goto	u2221
 11945  0ACB  2ACD               	goto	u2220
 11946  0ACC                     u2221:
 11947  0ACC  2AD2               	goto	l2657
 11948  0ACD                     u2220:
 11949  0ACD                     l2655:
 11950                           
 11951                           ;main.c: 571:    sendByte= sendByte | 1;}
 11952  0ACD  0878               	movf	dataCMD@sendByte,w
 11953  0ACE  3801               	iorlw	1
 11954  0ACF  00F2               	movwf	??_dataCMD
 11955  0AD0  0872               	movf	??_dataCMD,w
 11956  0AD1  00F8               	movwf	dataCMD@sendByte
 11957  0AD2                     l2657:
 11958                           
 11959                           ;main.c: 572:   if (i==3)
 11960  0AD2  3003               	movlw	3
 11961  0AD3  0676               	xorwf	dataCMD@i,w
 11962  0AD4  0477               	iorwf	dataCMD@i+1,w
 11963  0AD5  1D03               	btfss	3,2
 11964  0AD6  2AD8               	goto	u2231
 11965  0AD7  2AD9               	goto	u2230
 11966  0AD8                     u2231:
 11967  0AD8  2AE9               	goto	l2665
 11968  0AD9                     u2230:
 11969  0AD9                     l2659:
 11970                           
 11971                           ;main.c: 573:   {;main.c: 574:     sendByte = sendByte << 4;
 11972  0AD9  0878               	movf	dataCMD@sendByte,w
 11973  0ADA  00F2               	movwf	??_dataCMD
 11974  0ADB  3003               	movlw	3
 11975  0ADC                     u2245:
 11976  0ADC  35F2               	lslf	??_dataCMD,f
 11977  0ADD  3EFF               	addlw	-1
 11978  0ADE  1D03               	skipz
 11979  0ADF  2ADC               	goto	u2245
 11980  0AE0  3572               	lslf	??_dataCMD,w
 11981  0AE1  00F3               	movwf	??_dataCMD+1
 11982  0AE2  0873               	movf	??_dataCMD+1,w
 11983  0AE3  00F8               	movwf	dataCMD@sendByte
 11984  0AE4                     l2661:
 11985                           
 11986                           ;main.c: 575:     spi_write(sendByte);
 11987  0AE4  0878               	movf	dataCMD@sendByte,w
 11988  0AE5  3196  26EF  318A   	fcall	_spi_write
 11989  0AE8                     l2663:
 11990                           
 11991                           ;main.c: 576:     sendByte = '\x00';
 11992  0AE8  01F8               	clrf	dataCMD@sendByte
 11993  0AE9                     l2665:
 11994                           
 11995                           ;main.c: 578:  }
 11996  0AE9  3001               	movlw	1
 11997  0AEA  07F6               	addwf	dataCMD@i,f
 11998  0AEB  3000               	movlw	0
 11999  0AEC  3DF7               	addwfc	dataCMD@i+1,f
 12000  0AED                     l2667:
 12001  0AED  0877               	movf	dataCMD@i+1,w
 12002  0AEE  3A80               	xorlw	128
 12003  0AEF  00F2               	movwf	??_dataCMD
 12004  0AF0  3080               	movlw	128
 12005  0AF1  0272               	subwf	??_dataCMD,w
 12006  0AF2  1D03               	skipz
 12007  0AF3  2AF6               	goto	u2255
 12008  0AF4  3008               	movlw	8
 12009  0AF5  0276               	subwf	dataCMD@i,w
 12010  0AF6                     u2255:
 12011  0AF6  1C03               	skipc
 12012  0AF7  2AF9               	goto	u2251
 12013  0AF8  2AFA               	goto	u2250
 12014  0AF9                     u2251:
 12015  0AF9  2ABB               	goto	l2647
 12016  0AFA                     u2250:
 12017  0AFA                     l2669:
 12018                           
 12019                           ;main.c: 579:       sendByte = sendByte << 4;
 12020  0AFA  0878               	movf	dataCMD@sendByte,w
 12021  0AFB  00F2               	movwf	??_dataCMD
 12022  0AFC  3003               	movlw	3
 12023  0AFD                     u2265:
 12024  0AFD  35F2               	lslf	??_dataCMD,f
 12025  0AFE  3EFF               	addlw	-1
 12026  0AFF  1D03               	skipz
 12027  0B00  2AFD               	goto	u2265
 12028  0B01  3572               	lslf	??_dataCMD,w
 12029  0B02  00F3               	movwf	??_dataCMD+1
 12030  0B03  0873               	movf	??_dataCMD+1,w
 12031  0B04  00F8               	movwf	dataCMD@sendByte
 12032  0B05                     l2671:
 12033                           
 12034                           ;main.c: 580:    spi_write(sendByte);
 12035  0B05  0878               	movf	dataCMD@sendByte,w
 12036  0B06  3196  26EF  318A   	fcall	_spi_write
 12037  0B09                     l2673:
 12038                           
 12039                           ;main.c: 583:    LATB7=1;
 12040  0B09  0022               	movlb	2	; select bank2
 12041  0B0A  178D               	bsf	13,7	;volatile
 12042  0B0B                     l410:
 12043  0B0B  0008               	return
 12044  0B0C                     __end_of_dataCMD:
 12045                           
 12046                           	psect	text30
 12047  0A56                     __ptext30:	
 12048 ;; *************** function _command *****************
 12049 ;; Defined at:
 12050 ;;		line 511 in file "main.c"
 12051 ;; Parameters:    Size  Location     Type
 12052 ;;  s               1    wreg     unsigned char 
 12053 ;; Auto vars:     Size  Location     Type
 12054 ;;  s               1    5[COMMON] unsigned char 
 12055 ;;  i               2    6[COMMON] int 
 12056 ;;  sendByte        1    8[COMMON] unsigned char 
 12057 ;;  bit0            1    4[COMMON] unsigned char 
 12058 ;; Return value:  Size  Location     Type
 12059 ;;                  1    wreg      void 
 12060 ;; Registers used:
 12061 ;;		wreg, status,2, status,0, pclath, cstack
 12062 ;; Tracked objects:
 12063 ;;		On entry : 0/0
 12064 ;;		On exit  : 0/0
 12065 ;;		Unchanged: 0/0
 12066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12068 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12069 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12070 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12071 ;;Total ram usage:        7 bytes
 12072 ;; Hardware stack levels used:    1
 12073 ;; Hardware stack levels required when called:    5
 12074 ;; This function calls:
 12075 ;;		_spi_write
 12076 ;; This function is called by:
 12077 ;;		_main
 12078 ;;		_printByteValue
 12079 ;;		_initDisplay
 12080 ;;		_initOLED
 12081 ;;		_printADCValues
 12082 ;; This function uses a non-reentrant model
 12083 ;;
 12084                           
 12085                           
 12086                           ;psect for function _command
 12087  0A56                     _command:
 12088                           
 12089                           ;incstack = 0
 12090                           ; Regs used in _command: [wreg+status,2+status,0+pclath+cstack]
 12091                           ;command@s stored from wreg
 12092  0A56  00F5               	movwf	command@s
 12093  0A57                     l2591:
 12094                           
 12095                           ;main.c: 511: void command(unsigned char s);main.c: 512: {;main.c: 514:     LATB7=0;
 12096  0A57  0022               	movlb	2	; select bank2
 12097  0A58  138D               	bcf	13,7	;volatile
 12098  0A59                     l2593:
 12099                           
 12100                           ;main.c: 515:     spi_write('\xF8');
 12101  0A59  30F8               	movlw	248
 12102  0A5A  3196  26EF  318A   	fcall	_spi_write
 12103  0A5D                     l2595:
 12104  0A5D                     l2597:
 12105                           
 12106                           ;main.c: 518:  unsigned char sendByte = '\x00';
 12107  0A5D  01F8               	clrf	command@sendByte
 12108  0A5E                     l2599:
 12109                           
 12110                           ;main.c: 520:  for(int i=0; i< 8; i++)
 12111  0A5E  01F6               	clrf	command@i
 12112  0A5F  01F7               	clrf	command@i+1
 12113  0A60                     l2605:
 12114                           
 12115                           ;main.c: 521:  {;main.c: 522:   bit0 = s & 1;
 12116  0A60  0875               	movf	command@s,w
 12117  0A61  3901               	andlw	1
 12118  0A62  00F2               	movwf	??_command
 12119  0A63  0872               	movf	??_command,w
 12120  0A64  00F4               	movwf	command@bit0
 12121  0A65                     l2607:
 12122                           
 12123                           ;main.c: 524:   s = s >> 1;
 12124  0A65  3675               	lsrf	command@s,w
 12125  0A66  00F2               	movwf	??_command
 12126  0A67  0872               	movf	??_command,w
 12127  0A68  00F5               	movwf	command@s
 12128  0A69                     l2609:
 12129                           
 12130                           ;main.c: 525:   sendByte = sendByte << 1;
 12131  0A69  3578               	lslf	command@sendByte,w
 12132  0A6A  00F2               	movwf	??_command
 12133  0A6B  0872               	movf	??_command,w
 12134  0A6C  00F8               	movwf	command@sendByte
 12135  0A6D                     l2611:
 12136                           
 12137                           ;main.c: 526:   if (bit0 == 1){
 12138  0A6D  0374               	decf	command@bit0,w
 12139  0A6E  1D03               	btfss	3,2
 12140  0A6F  2A71               	goto	u2171
 12141  0A70  2A72               	goto	u2170
 12142  0A71                     u2171:
 12143  0A71  2A77               	goto	l2615
 12144  0A72                     u2170:
 12145  0A72                     l2613:
 12146                           
 12147                           ;main.c: 528:    sendByte= sendByte | 1;}
 12148  0A72  0878               	movf	command@sendByte,w
 12149  0A73  3801               	iorlw	1
 12150  0A74  00F2               	movwf	??_command
 12151  0A75  0872               	movf	??_command,w
 12152  0A76  00F8               	movwf	command@sendByte
 12153  0A77                     l2615:
 12154                           
 12155                           ;main.c: 529:   if (i==3)
 12156  0A77  3003               	movlw	3
 12157  0A78  0676               	xorwf	command@i,w
 12158  0A79  0477               	iorwf	command@i+1,w
 12159  0A7A  1D03               	btfss	3,2
 12160  0A7B  2A7D               	goto	u2181
 12161  0A7C  2A7E               	goto	u2180
 12162  0A7D                     u2181:
 12163  0A7D  2A8E               	goto	l2623
 12164  0A7E                     u2180:
 12165  0A7E                     l2617:
 12166                           
 12167                           ;main.c: 530:   {;main.c: 531:     sendByte = sendByte << 4;
 12168  0A7E  0878               	movf	command@sendByte,w
 12169  0A7F  00F2               	movwf	??_command
 12170  0A80  3003               	movlw	3
 12171  0A81                     u2195:
 12172  0A81  35F2               	lslf	??_command,f
 12173  0A82  3EFF               	addlw	-1
 12174  0A83  1D03               	skipz
 12175  0A84  2A81               	goto	u2195
 12176  0A85  3572               	lslf	??_command,w
 12177  0A86  00F3               	movwf	??_command+1
 12178  0A87  0873               	movf	??_command+1,w
 12179  0A88  00F8               	movwf	command@sendByte
 12180  0A89                     l2619:
 12181                           
 12182                           ;main.c: 532:     spi_write(sendByte);
 12183  0A89  0878               	movf	command@sendByte,w
 12184  0A8A  3196  26EF  318A   	fcall	_spi_write
 12185  0A8D                     l2621:
 12186                           
 12187                           ;main.c: 533:     sendByte = '\x00';
 12188  0A8D  01F8               	clrf	command@sendByte
 12189  0A8E                     l2623:
 12190                           
 12191                           ;main.c: 535:  }
 12192  0A8E  3001               	movlw	1
 12193  0A8F  07F6               	addwf	command@i,f
 12194  0A90  3000               	movlw	0
 12195  0A91  3DF7               	addwfc	command@i+1,f
 12196  0A92                     l2625:
 12197  0A92  0877               	movf	command@i+1,w
 12198  0A93  3A80               	xorlw	128
 12199  0A94  00F2               	movwf	??_command
 12200  0A95  3080               	movlw	128
 12201  0A96  0272               	subwf	??_command,w
 12202  0A97  1D03               	skipz
 12203  0A98  2A9B               	goto	u2205
 12204  0A99  3008               	movlw	8
 12205  0A9A  0276               	subwf	command@i,w
 12206  0A9B                     u2205:
 12207  0A9B  1C03               	skipc
 12208  0A9C  2A9E               	goto	u2201
 12209  0A9D  2A9F               	goto	u2200
 12210  0A9E                     u2201:
 12211  0A9E  2A60               	goto	l2605
 12212  0A9F                     u2200:
 12213  0A9F                     l2627:
 12214                           
 12215                           ;main.c: 536:       sendByte = sendByte << 4;
 12216  0A9F  0878               	movf	command@sendByte,w
 12217  0AA0  00F2               	movwf	??_command
 12218  0AA1  3003               	movlw	3
 12219  0AA2                     u2215:
 12220  0AA2  35F2               	lslf	??_command,f
 12221  0AA3  3EFF               	addlw	-1
 12222  0AA4  1D03               	skipz
 12223  0AA5  2AA2               	goto	u2215
 12224  0AA6  3572               	lslf	??_command,w
 12225  0AA7  00F3               	movwf	??_command+1
 12226  0AA8  0873               	movf	??_command+1,w
 12227  0AA9  00F8               	movwf	command@sendByte
 12228  0AAA                     l2629:
 12229                           
 12230                           ;main.c: 537:    spi_write(sendByte);
 12231  0AAA  0878               	movf	command@sendByte,w
 12232  0AAB  3196  26EF  318A   	fcall	_spi_write
 12233  0AAE                     l2631:
 12234                           
 12235                           ;main.c: 540:    LATB7=1;
 12236  0AAE  0022               	movlb	2	; select bank2
 12237  0AAF  178D               	bsf	13,7	;volatile
 12238  0AB0                     l398:
 12239  0AB0  0008               	return
 12240  0AB1                     __end_of_command:
 12241                           
 12242                           	psect	text31
 12243  16EF                     __ptext31:	
 12244 ;; *************** function _spi_write *****************
 12245 ;; Defined at:
 12246 ;;		line 504 in file "main.c"
 12247 ;; Parameters:    Size  Location     Type
 12248 ;;  spiByte         1    wreg     unsigned char 
 12249 ;; Auto vars:     Size  Location     Type
 12250 ;;  spiByte         1    1[COMMON] unsigned char 
 12251 ;; Return value:  Size  Location     Type
 12252 ;;                  1    wreg      void 
 12253 ;; Registers used:
 12254 ;;		wreg
 12255 ;; Tracked objects:
 12256 ;;		On entry : 0/0
 12257 ;;		On exit  : 0/0
 12258 ;;		Unchanged: 0/0
 12259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12262 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12263 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12264 ;;Total ram usage:        2 bytes
 12265 ;; Hardware stack levels used:    1
 12266 ;; Hardware stack levels required when called:    4
 12267 ;; This function calls:
 12268 ;;		Nothing
 12269 ;; This function is called by:
 12270 ;;		_command
 12271 ;;		_dataCMD
 12272 ;; This function uses a non-reentrant model
 12273 ;;
 12274                           
 12275                           
 12276                           ;psect for function _spi_write
 12277  16EF                     _spi_write:
 12278                           
 12279                           ;incstack = 0
 12280                           ; Regs used in _spi_write: [wreg]
 12281                           ;spi_write@spiByte stored from wreg
 12282  16EF  00F1               	movwf	spi_write@spiByte
 12283  16F0                     l2529:
 12284                           
 12285                           ;main.c: 504: void spi_write(unsigned char spiByte);main.c: 505: {;main.c: 506:      SSP
      +                          BUF=spiByte;
 12286  16F0  0871               	movf	spi_write@spiByte,w
 12287  16F1  0024               	movlb	4	; select bank4
 12288  16F2  0091               	movwf	17	;volatile
 12289  16F3                     l388:	
 12290                           ;main.c: 508:      while(!BF );
 12291                           
 12292  16F3  1C14               	btfss	20,0	;volatile
 12293  16F4  2EF6               	goto	u2001
 12294  16F5  2EF7               	goto	u2000
 12295  16F6                     u2001:
 12296  16F6  2EF3               	goto	l388
 12297  16F7                     u2000:
 12298  16F7                     l2531:
 12299                           
 12300                           ;main.c: 509:      dummy= SSPBUF;
 12301  16F7  0811               	movf	17,w	;volatile
 12302  16F8  00F0               	movwf	??_spi_write
 12303  16F9  0870               	movf	??_spi_write,w
 12304  16FA  0021               	movlb	1	; select bank1
 12305  16FB  00DA               	movwf	_dummy^(0+128)
 12306  16FC                     l391:
 12307  16FC  0008               	return
 12308  16FD                     __end_of_spi_write:
 12309                           
 12310                           	psect	text32
 12311  1737                     __ptext32:	
 12312 ;; *************** function _TMR4_Initialize *****************
 12313 ;; Defined at:
 12314 ;;		line 63 in file "mcc_generated_files/tmr4.c"
 12315 ;; Parameters:    Size  Location     Type
 12316 ;;		None
 12317 ;; Auto vars:     Size  Location     Type
 12318 ;;		None
 12319 ;; Return value:  Size  Location     Type
 12320 ;;                  1    wreg      void 
 12321 ;; Registers used:
 12322 ;;		wreg, status,2, status,0, pclath, cstack
 12323 ;; Tracked objects:
 12324 ;;		On entry : 0/0
 12325 ;;		On exit  : 0/0
 12326 ;;		Unchanged: 0/0
 12327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12332 ;;Total ram usage:        0 bytes
 12333 ;; Hardware stack levels used:    1
 12334 ;; Hardware stack levels required when called:    5
 12335 ;; This function calls:
 12336 ;;		_TMR4_SetInterruptHandler
 12337 ;;		_TMR4_Start
 12338 ;; This function is called by:
 12339 ;;		_SYSTEM_Initialize
 12340 ;; This function uses a non-reentrant model
 12341 ;;
 12342                           
 12343                           
 12344                           ;psect for function _TMR4_Initialize
 12345  1737                     _TMR4_Initialize:
 12346  1737                     l2877:	
 12347                           ;incstack = 0
 12348                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12349                           
 12350                           
 12351                           ;mcc_generated_files/tmr4.c: 68:     T4CON = 0x79;
 12352  1737  3079               	movlw	121
 12353  1738  0028               	movlb	8	; select bank8
 12354  1739  0095               	movwf	21	;volatile
 12355                           
 12356                           ;mcc_generated_files/tmr4.c: 71:     T4CLKCON = 0x03;
 12357  173A  3003               	movlw	3
 12358  173B  0097               	movwf	23	;volatile
 12359  173C                     l2879:
 12360                           
 12361                           ;mcc_generated_files/tmr4.c: 74:     T4HLT = 0x00;
 12362  173C  0196               	clrf	22	;volatile
 12363  173D                     l2881:
 12364                           
 12365                           ;mcc_generated_files/tmr4.c: 77:     T4RST = 0x00;
 12366  173D  0198               	clrf	24	;volatile
 12367                           
 12368                           ;mcc_generated_files/tmr4.c: 80:     T4PR = 0x17;
 12369  173E  3017               	movlw	23
 12370  173F  0094               	movwf	20	;volatile
 12371  1740                     l2883:
 12372                           
 12373                           ;mcc_generated_files/tmr4.c: 83:     T4TMR = 0x00;
 12374  1740  0193               	clrf	19	;volatile
 12375  1741                     l2885:
 12376                           
 12377                           ;mcc_generated_files/tmr4.c: 86:     PIR2bits.TMR4IF = 0;
 12378  1741  0020               	movlb	0	; select bank0
 12379  1742  1091               	bcf	17,1	;volatile
 12380  1743                     l2887:
 12381                           
 12382                           ;mcc_generated_files/tmr4.c: 89:     PIE2bits.TMR4IE = 1;
 12383  1743  0021               	movlb	1	; select bank1
 12384  1744  1491               	bsf	17,1	;volatile
 12385  1745                     l2889:
 12386                           
 12387                           ;mcc_generated_files/tmr4.c: 92:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 12388  1745  3002               	movlw	low _TMR4_DefaultInterruptHandler
 12389  1746  00F0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
 12390  1747  3000               	movlw	high _TMR4_DefaultInterruptHandler
 12391  1748  00F1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
 12392  1749  3196  26A4  3197   	fcall	_TMR4_SetInterruptHandler
 12393  174C                     l2891:
 12394                           
 12395                           ;mcc_generated_files/tmr4.c: 95:     TMR4_Start();
 12396  174C  3196  2690  3197   	fcall	_TMR4_Start
 12397  174F                     l452:
 12398  174F  0008               	return
 12399  1750                     __end_of_TMR4_Initialize:
 12400                           
 12401                           	psect	text33
 12402  1690                     __ptext33:	
 12403 ;; *************** function _TMR4_Start *****************
 12404 ;; Defined at:
 12405 ;;		line 110 in file "mcc_generated_files/tmr4.c"
 12406 ;; Parameters:    Size  Location     Type
 12407 ;;		None
 12408 ;; Auto vars:     Size  Location     Type
 12409 ;;		None
 12410 ;; Return value:  Size  Location     Type
 12411 ;;                  1    wreg      void 
 12412 ;; Registers used:
 12413 ;;		None
 12414 ;; Tracked objects:
 12415 ;;		On entry : 0/0
 12416 ;;		On exit  : 0/0
 12417 ;;		Unchanged: 0/0
 12418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12423 ;;Total ram usage:        0 bytes
 12424 ;; Hardware stack levels used:    1
 12425 ;; Hardware stack levels required when called:    4
 12426 ;; This function calls:
 12427 ;;		Nothing
 12428 ;; This function is called by:
 12429 ;;		_TMR4_Initialize
 12430 ;;		_TMR4_StartTimer
 12431 ;; This function uses a non-reentrant model
 12432 ;;
 12433                           
 12434                           
 12435                           ;psect for function _TMR4_Start
 12436  1690                     _TMR4_Start:
 12437  1690                     l2791:	
 12438                           ;incstack = 0
 12439                           ; Regs used in _TMR4_Start: []
 12440                           
 12441                           
 12442                           ;mcc_generated_files/tmr4.c: 113:     T4CONbits.TMR4ON = 1;
 12443  1690  0028               	movlb	8	; select bank8
 12444  1691  1795               	bsf	21,7	;volatile
 12445  1692                     l461:
 12446  1692  0008               	return
 12447  1693                     __end_of_TMR4_Start:
 12448                           
 12449                           	psect	text34
 12450  16A4                     __ptext34:	
 12451 ;; *************** function _TMR4_SetInterruptHandler *****************
 12452 ;; Defined at:
 12453 ;;		line 188 in file "mcc_generated_files/tmr4.c"
 12454 ;; Parameters:    Size  Location     Type
 12455 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 12456 ;;		 -> TMR4_DefaultInterruptHandler(1), 
 12457 ;; Auto vars:     Size  Location     Type
 12458 ;;		None
 12459 ;; Return value:  Size  Location     Type
 12460 ;;                  1    wreg      void 
 12461 ;; Registers used:
 12462 ;;		wreg
 12463 ;; Tracked objects:
 12464 ;;		On entry : 0/0
 12465 ;;		On exit  : 0/0
 12466 ;;		Unchanged: 0/0
 12467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12471 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12472 ;;Total ram usage:        2 bytes
 12473 ;; Hardware stack levels used:    1
 12474 ;; Hardware stack levels required when called:    4
 12475 ;; This function calls:
 12476 ;;		Nothing
 12477 ;; This function is called by:
 12478 ;;		_TMR4_Initialize
 12479 ;; This function uses a non-reentrant model
 12480 ;;
 12481                           
 12482                           
 12483                           ;psect for function _TMR4_SetInterruptHandler
 12484  16A4                     _TMR4_SetInterruptHandler:
 12485  16A4                     l2789:	
 12486                           ;incstack = 0
 12487                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
 12488                           
 12489                           
 12490                           ;mcc_generated_files/tmr4.c: 189:     TMR4_InterruptHandler = InterruptHandler;
 12491  16A4  0871               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
 12492  16A5  0021               	movlb	1	; select bank1
 12493  16A6  00D8               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
 12494  16A7  0870               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
 12495  16A8  00D7               	movwf	_TMR4_InterruptHandler^(0+128)
 12496  16A9                     l498:
 12497  16A9  0008               	return
 12498  16AA                     __end_of_TMR4_SetInterruptHandler:
 12499                           
 12500                           	psect	text35
 12501  16E2                     __ptext35:	
 12502 ;; *************** function _TMR2_Initialize *****************
 12503 ;; Defined at:
 12504 ;;		line 61 in file "mcc_generated_files/tmr2.c"
 12505 ;; Parameters:    Size  Location     Type
 12506 ;;		None
 12507 ;; Auto vars:     Size  Location     Type
 12508 ;;		None
 12509 ;; Return value:  Size  Location     Type
 12510 ;;                  1    wreg      void 
 12511 ;; Registers used:
 12512 ;;		wreg, status,2, status,0, pclath, cstack
 12513 ;; Tracked objects:
 12514 ;;		On entry : 0/0
 12515 ;;		On exit  : 0/0
 12516 ;;		Unchanged: 0/0
 12517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12522 ;;Total ram usage:        0 bytes
 12523 ;; Hardware stack levels used:    1
 12524 ;; Hardware stack levels required when called:    5
 12525 ;; This function calls:
 12526 ;;		_TMR2_Start
 12527 ;; This function is called by:
 12528 ;;		_SYSTEM_Initialize
 12529 ;; This function uses a non-reentrant model
 12530 ;;
 12531                           
 12532                           
 12533                           ;psect for function _TMR2_Initialize
 12534  16E2                     _TMR2_Initialize:
 12535  16E2                     l2901:	
 12536                           ;incstack = 0
 12537                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12538                           
 12539                           
 12540                           ;mcc_generated_files/tmr2.c: 66:     T2CON = 0x00;
 12541  16E2  0020               	movlb	0	; select bank0
 12542  16E3  019C               	clrf	28	;volatile
 12543                           
 12544                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x00;
 12545  16E4  019E               	clrf	30	;volatile
 12546                           
 12547                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
 12548  16E5  019D               	clrf	29	;volatile
 12549                           
 12550                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 12551  16E6  019F               	clrf	31	;volatile
 12552  16E7                     l2903:
 12553                           
 12554                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0xDB;
 12555  16E7  30DB               	movlw	219
 12556  16E8  009B               	movwf	27	;volatile
 12557  16E9                     l2905:
 12558                           
 12559                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 12560  16E9  019A               	clrf	26	;volatile
 12561  16EA                     l2907:
 12562                           
 12563                           ;mcc_generated_files/tmr2.c: 84:     PIR1bits.TMR2IF = 0;
 12564  16EA  1090               	bcf	16,1	;volatile
 12565  16EB                     l2909:
 12566                           
 12567                           ;mcc_generated_files/tmr2.c: 87:     TMR2_Start();
 12568  16EB  3196  268D  3196   	fcall	_TMR2_Start
 12569  16EE                     l189:
 12570  16EE  0008               	return
 12571  16EF                     __end_of_TMR2_Initialize:
 12572                           
 12573                           	psect	text36
 12574  168D                     __ptext36:	
 12575 ;; *************** function _TMR2_Start *****************
 12576 ;; Defined at:
 12577 ;;		line 102 in file "mcc_generated_files/tmr2.c"
 12578 ;; Parameters:    Size  Location     Type
 12579 ;;		None
 12580 ;; Auto vars:     Size  Location     Type
 12581 ;;		None
 12582 ;; Return value:  Size  Location     Type
 12583 ;;                  1    wreg      void 
 12584 ;; Registers used:
 12585 ;;		None
 12586 ;; Tracked objects:
 12587 ;;		On entry : 0/0
 12588 ;;		On exit  : 0/0
 12589 ;;		Unchanged: 0/0
 12590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12595 ;;Total ram usage:        0 bytes
 12596 ;; Hardware stack levels used:    1
 12597 ;; Hardware stack levels required when called:    4
 12598 ;; This function calls:
 12599 ;;		Nothing
 12600 ;; This function is called by:
 12601 ;;		_TMR2_Initialize
 12602 ;;		_TMR2_StartTimer
 12603 ;; This function uses a non-reentrant model
 12604 ;;
 12605                           
 12606                           
 12607                           ;psect for function _TMR2_Start
 12608  168D                     _TMR2_Start:
 12609  168D                     l2719:	
 12610                           ;incstack = 0
 12611                           ; Regs used in _TMR2_Start: []
 12612                           
 12613                           
 12614                           ;mcc_generated_files/tmr2.c: 105:     T2CONbits.TMR2ON = 1;
 12615  168D  0020               	movlb	0	; select bank0
 12616  168E  179C               	bsf	28,7	;volatile
 12617  168F                     l198:
 12618  168F  0008               	return
 12619  1690                     __end_of_TMR2_Start:
 12620                           
 12621                           	psect	text37
 12622  169E                     __ptext37:	
 12623 ;; *************** function _SPI_Initialize *****************
 12624 ;; Defined at:
 12625 ;;		line 63 in file "mcc_generated_files/spi.c"
 12626 ;; Parameters:    Size  Location     Type
 12627 ;;		None
 12628 ;; Auto vars:     Size  Location     Type
 12629 ;;		None
 12630 ;; Return value:  Size  Location     Type
 12631 ;;                  1    wreg      void 
 12632 ;; Registers used:
 12633 ;;		wreg, status,2
 12634 ;; Tracked objects:
 12635 ;;		On entry : 0/0
 12636 ;;		On exit  : 0/0
 12637 ;;		Unchanged: 0/0
 12638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12643 ;;Total ram usage:        0 bytes
 12644 ;; Hardware stack levels used:    1
 12645 ;; Hardware stack levels required when called:    4
 12646 ;; This function calls:
 12647 ;;		Nothing
 12648 ;; This function is called by:
 12649 ;;		_SYSTEM_Initialize
 12650 ;; This function uses a non-reentrant model
 12651 ;;
 12652                           
 12653                           
 12654                           ;psect for function _SPI_Initialize
 12655  169E                     _SPI_Initialize:
 12656  169E                     l2839:	
 12657                           ;incstack = 0
 12658                           ; Regs used in _SPI_Initialize: [wreg+status,2]
 12659                           
 12660                           
 12661                           ;mcc_generated_files/spi.c: 68:     SSP1STAT = 0x00;
 12662  169E  0024               	movlb	4	; select bank4
 12663  169F  0194               	clrf	20	;volatile
 12664  16A0                     l2841:
 12665                           
 12666                           ;mcc_generated_files/spi.c: 71:     SSP1CON1 = 0x32;
 12667  16A0  3032               	movlw	50
 12668  16A1  0095               	movwf	21	;volatile
 12669  16A2                     l2843:
 12670                           
 12671                           ;mcc_generated_files/spi.c: 74:     SSP1ADD = 0x00;
 12672  16A2  0192               	clrf	18	;volatile
 12673  16A3                     l37:
 12674  16A3  0008               	return
 12675  16A4                     __end_of_SPI_Initialize:
 12676                           
 12677                           	psect	text38
 12678  16C2                     __ptext38:	
 12679 ;; *************** function _PWM4_Initialize *****************
 12680 ;; Defined at:
 12681 ;;		line 57 in file "mcc_generated_files/pwm4.c"
 12682 ;; Parameters:    Size  Location     Type
 12683 ;;		None
 12684 ;; Auto vars:     Size  Location     Type
 12685 ;;		None
 12686 ;; Return value:  Size  Location     Type
 12687 ;;                  1    wreg      void 
 12688 ;; Registers used:
 12689 ;;		wreg, status,2, status,0
 12690 ;; Tracked objects:
 12691 ;;		On entry : 0/0
 12692 ;;		On exit  : 0/0
 12693 ;;		Unchanged: 0/0
 12694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12699 ;;Total ram usage:        0 bytes
 12700 ;; Hardware stack levels used:    1
 12701 ;; Hardware stack levels required when called:    4
 12702 ;; This function calls:
 12703 ;;		Nothing
 12704 ;; This function is called by:
 12705 ;;		_SYSTEM_Initialize
 12706 ;; This function uses a non-reentrant model
 12707 ;;
 12708                           
 12709                           
 12710                           ;psect for function _PWM4_Initialize
 12711  16C2                     _PWM4_Initialize:
 12712  16C2                     l2869:	
 12713                           ;incstack = 0
 12714                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 12715                           
 12716                           
 12717                           ;mcc_generated_files/pwm4.c: 61:      PWM4CON = 0x80;
 12718  16C2  3080               	movlw	128
 12719  16C3  002C               	movlb	12	; select bank12
 12720  16C4  009C               	movwf	28	;volatile
 12721  16C5                     l2871:
 12722                           
 12723                           ;mcc_generated_files/pwm4.c: 64:      PWM4DCH = 0x00;
 12724  16C5  019B               	clrf	27	;volatile
 12725  16C6                     l2873:
 12726                           
 12727                           ;mcc_generated_files/pwm4.c: 67:      PWM4DCL = 0x00;
 12728  16C6  019A               	clrf	26	;volatile
 12729  16C7                     l2875:
 12730                           
 12731                           ;mcc_generated_files/pwm4.c: 71:      CCPTMRSbits.P4TSEL = 0x0;
 12732  16C7  303F               	movlw	-193
 12733  16C8  0025               	movlb	5	; select bank5
 12734  16C9  059E               	andwf	30,f	;volatile
 12735  16CA                     l157:
 12736  16CA  0008               	return
 12737  16CB                     __end_of_PWM4_Initialize:
 12738                           
 12739                           	psect	text39
 12740  16B9                     __ptext39:	
 12741 ;; *************** function _PWM3_Initialize *****************
 12742 ;; Defined at:
 12743 ;;		line 57 in file "mcc_generated_files/pwm3.c"
 12744 ;; Parameters:    Size  Location     Type
 12745 ;;		None
 12746 ;; Auto vars:     Size  Location     Type
 12747 ;;		None
 12748 ;; Return value:  Size  Location     Type
 12749 ;;                  1    wreg      void 
 12750 ;; Registers used:
 12751 ;;		wreg, status,2, status,0
 12752 ;; Tracked objects:
 12753 ;;		On entry : 0/0
 12754 ;;		On exit  : 0/0
 12755 ;;		Unchanged: 0/0
 12756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12761 ;;Total ram usage:        0 bytes
 12762 ;; Hardware stack levels used:    1
 12763 ;; Hardware stack levels required when called:    4
 12764 ;; This function calls:
 12765 ;;		Nothing
 12766 ;; This function is called by:
 12767 ;;		_SYSTEM_Initialize
 12768 ;; This function uses a non-reentrant model
 12769 ;;
 12770                           
 12771                           
 12772                           ;psect for function _PWM3_Initialize
 12773  16B9                     _PWM3_Initialize:
 12774  16B9                     l2893:	
 12775                           ;incstack = 0
 12776                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 12777                           
 12778                           
 12779                           ;mcc_generated_files/pwm3.c: 61:      PWM3CON = 0x80;
 12780  16B9  3080               	movlw	128
 12781  16BA  002C               	movlb	12	; select bank12
 12782  16BB  0099               	movwf	25	;volatile
 12783  16BC                     l2895:
 12784                           
 12785                           ;mcc_generated_files/pwm3.c: 64:      PWM3DCH = 0x00;
 12786  16BC  0198               	clrf	24	;volatile
 12787  16BD                     l2897:
 12788                           
 12789                           ;mcc_generated_files/pwm3.c: 67:      PWM3DCL = 0x00;
 12790  16BD  0197               	clrf	23	;volatile
 12791  16BE                     l2899:
 12792                           
 12793                           ;mcc_generated_files/pwm3.c: 71:      CCPTMRSbits.P3TSEL = 0x0;
 12794  16BE  30CF               	movlw	-49
 12795  16BF  0025               	movlb	5	; select bank5
 12796  16C0  059E               	andwf	30,f	;volatile
 12797  16C1                     l143:
 12798  16C1  0008               	return
 12799  16C2                     __end_of_PWM3_Initialize:
 12800                           
 12801                           	psect	text40
 12802  096C                     __ptext40:	
 12803 ;; *************** function _PIN_MANAGER_Initialize *****************
 12804 ;; Defined at:
 12805 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 12806 ;; Parameters:    Size  Location     Type
 12807 ;;		None
 12808 ;; Auto vars:     Size  Location     Type
 12809 ;;  state           1    0[COMMON] _Bool 
 12810 ;; Return value:  Size  Location     Type
 12811 ;;                  1    wreg      void 
 12812 ;; Registers used:
 12813 ;;		wreg, status,2, status,0
 12814 ;; Tracked objects:
 12815 ;;		On entry : 0/0
 12816 ;;		On exit  : 0/0
 12817 ;;		Unchanged: 0/0
 12818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12822 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12823 ;;Total ram usage:        1 bytes
 12824 ;; Hardware stack levels used:    1
 12825 ;; Hardware stack levels required when called:    4
 12826 ;; This function calls:
 12827 ;;		Nothing
 12828 ;; This function is called by:
 12829 ;;		_SYSTEM_Initialize
 12830 ;; This function uses a non-reentrant model
 12831 ;;
 12832                           
 12833                           
 12834                           ;psect for function _PIN_MANAGER_Initialize
 12835  096C                     _PIN_MANAGER_Initialize:
 12836  096C                     l2805:	
 12837                           ;incstack = 0
 12838                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 12839                           
 12840                           
 12841                           ;mcc_generated_files/pin_manager.c: 57:     LATA = 0x00;
 12842  096C  0022               	movlb	2	; select bank2
 12843  096D  018C               	clrf	12	;volatile
 12844                           
 12845                           ;mcc_generated_files/pin_manager.c: 58:     LATB = 0x00;
 12846  096E  018D               	clrf	13	;volatile
 12847                           
 12848                           ;mcc_generated_files/pin_manager.c: 59:     LATC = 0x00;
 12849  096F  018E               	clrf	14	;volatile
 12850  0970                     l2807:
 12851                           
 12852                           ;mcc_generated_files/pin_manager.c: 64:     TRISA = 0x37;
 12853  0970  3037               	movlw	55
 12854  0971  0021               	movlb	1	; select bank1
 12855  0972  008C               	movwf	12	;volatile
 12856  0973                     l2809:
 12857                           
 12858                           ;mcc_generated_files/pin_manager.c: 65:     TRISB = 0x10;
 12859  0973  3010               	movlw	16
 12860  0974  008D               	movwf	13	;volatile
 12861  0975                     l2811:
 12862                           
 12863                           ;mcc_generated_files/pin_manager.c: 66:     TRISC = 0x3C;
 12864  0975  303C               	movlw	60
 12865  0976  008E               	movwf	14	;volatile
 12866  0977                     l2813:
 12867                           
 12868                           ;mcc_generated_files/pin_manager.c: 71:     ANSELC = 0x0C;
 12869  0977  300C               	movlw	12
 12870  0978  0023               	movlb	3	; select bank3
 12871  0979  008E               	movwf	14	;volatile
 12872                           
 12873                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0x00;
 12874  097A  018D               	clrf	13	;volatile
 12875  097B                     l2815:
 12876                           
 12877                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x17;
 12878  097B  3017               	movlw	23
 12879  097C  008C               	movwf	12	;volatile
 12880  097D                     l2817:
 12881                           
 12882                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0xF0;
 12883  097D  30F0               	movlw	240
 12884  097E  0024               	movlb	4	; select bank4
 12885  097F  008D               	movwf	13	;volatile
 12886  0980                     l2819:
 12887                           
 12888                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x3F;
 12889  0980  303F               	movlw	63
 12890  0981  008C               	movwf	12	;volatile
 12891  0982                     l2821:
 12892                           
 12893                           ;mcc_generated_files/pin_manager.c: 80:     WPUC = 0xFC;
 12894  0982  30FC               	movlw	252
 12895  0983  008E               	movwf	14	;volatile
 12896  0984                     l2823:
 12897                           
 12898                           ;mcc_generated_files/pin_manager.c: 81:     OPTION_REGbits.nWPUEN = 0;
 12899  0984  0021               	movlb	1	; select bank1
 12900  0985  1395               	bcf	21,7	;volatile
 12901                           
 12902                           ;mcc_generated_files/pin_manager.c: 86:     ODCONA = 0x00;
 12903  0986  0025               	movlb	5	; select bank5
 12904  0987  018C               	clrf	12	;volatile
 12905                           
 12906                           ;mcc_generated_files/pin_manager.c: 87:     ODCONB = 0x00;
 12907  0988  018D               	clrf	13	;volatile
 12908                           
 12909                           ;mcc_generated_files/pin_manager.c: 88:     ODCONC = 0x00;
 12910  0989  018E               	clrf	14	;volatile
 12911  098A                     l2825:
 12912                           
 12913                           ;mcc_generated_files/pin_manager.c: 95:     _Bool state = (unsigned char)GIE;
 12914  098A  3000               	movlw	0
 12915  098B  1B8B               	btfsc	11,7	;volatile
 12916  098C  3001               	movlw	1
 12917  098D  00F0               	movwf	PIN_MANAGER_Initialize@state
 12918  098E                     l2827:
 12919                           
 12920                           ;mcc_generated_files/pin_manager.c: 96:     GIE = 0;
 12921  098E  138B               	bcf	11,7	;volatile
 12922                           
 12923                           ;mcc_generated_files/pin_manager.c: 97:     PPSLOCK = 0x55;
 12924  098F  3055               	movlw	85
 12925  0990  003C               	movlb	28	; select bank28
 12926  0991  008F               	movwf	15	;volsfr
 12927                           
 12928                           ;mcc_generated_files/pin_manager.c: 98:     PPSLOCK = 0xAA;
 12929  0992  30AA               	movlw	170
 12930  0993  008F               	movwf	15	;volsfr
 12931  0994                     l2829:
 12932                           
 12933                           ;mcc_generated_files/pin_manager.c: 99:     PPSLOCKbits.PPSLOCKED = 0x00;
 12934  0994  100F               	bcf	15,0	;volsfr
 12935                           
 12936                           ;mcc_generated_files/pin_manager.c: 101:     RC0PPS = 0x0E;
 12937  0995  300E               	movlw	14
 12938  0996  003D               	movlb	29	; select bank29
 12939  0997  00A0               	movwf	32	;volatile
 12940                           
 12941                           ;mcc_generated_files/pin_manager.c: 102:     T2PPS = 0x05;
 12942  0998  3005               	movlw	5
 12943  0999  003C               	movlb	28	; select bank28
 12944  099A  0098               	movwf	24	;volatile
 12945                           
 12946                           ;mcc_generated_files/pin_manager.c: 103:     SSPDATPPS = 0x0C;
 12947  099B  300C               	movlw	12
 12948  099C  00A1               	movwf	33	;volatile
 12949                           
 12950                           ;mcc_generated_files/pin_manager.c: 104:     RB6PPS = 0x10;
 12951  099D  3010               	movlw	16
 12952  099E  003D               	movlb	29	; select bank29
 12953  099F  009E               	movwf	30	;volatile
 12954                           
 12955                           ;mcc_generated_files/pin_manager.c: 105:     RB5PPS = 0x11;
 12956  09A0  3011               	movlw	17
 12957  09A1  009D               	movwf	29	;volatile
 12958                           
 12959                           ;mcc_generated_files/pin_manager.c: 106:     RC1PPS = 0x0F;
 12960  09A2  300F               	movlw	15
 12961  09A3  00A1               	movwf	33	;volatile
 12962                           
 12963                           ;mcc_generated_files/pin_manager.c: 107:     SSPCLKPPS = 0x0E;
 12964  09A4  300E               	movlw	14
 12965  09A5  003C               	movlb	28	; select bank28
 12966  09A6  00A0               	movwf	32	;volatile
 12967                           
 12968                           ;mcc_generated_files/pin_manager.c: 108:     T4PPS = 0x11;
 12969  09A7  3011               	movlw	17
 12970  09A8  009B               	movwf	27	;volatile
 12971                           
 12972                           ;mcc_generated_files/pin_manager.c: 110:     PPSLOCK = 0x55;
 12973  09A9  3055               	movlw	85
 12974  09AA  008F               	movwf	15	;volsfr
 12975                           
 12976                           ;mcc_generated_files/pin_manager.c: 111:     PPSLOCK = 0xAA;
 12977  09AB  30AA               	movlw	170
 12978  09AC  008F               	movwf	15	;volsfr
 12979  09AD                     l2831:
 12980                           
 12981                           ;mcc_generated_files/pin_manager.c: 112:     PPSLOCKbits.PPSLOCKED = 0x01;
 12982  09AD  140F               	bsf	15,0	;volsfr
 12983  09AE                     l2833:
 12984                           
 12985                           ;mcc_generated_files/pin_manager.c: 114:     GIE = state;
 12986  09AE  0C70               	rrf	PIN_MANAGER_Initialize@state,w
 12987  09AF  1C03               	skipc
 12988  09B0  138B               	bcf	11,7	;volatile
 12989  09B1  1803               	skipnc
 12990  09B2  178B               	bsf	11,7	;volatile
 12991  09B3                     l94:
 12992  09B3  0008               	return
 12993  09B4                     __end_of_PIN_MANAGER_Initialize:
 12994                           
 12995                           	psect	text41
 12996  1693                     __ptext41:	
 12997 ;; *************** function _OSCILLATOR_Initialize *****************
 12998 ;; Defined at:
 12999 ;;		line 90 in file "mcc_generated_files/mcc.c"
 13000 ;; Parameters:    Size  Location     Type
 13001 ;;		None
 13002 ;; Auto vars:     Size  Location     Type
 13003 ;;		None
 13004 ;; Return value:  Size  Location     Type
 13005 ;;                  1    wreg      void 
 13006 ;; Registers used:
 13007 ;;		wreg, status,2
 13008 ;; Tracked objects:
 13009 ;;		On entry : 0/0
 13010 ;;		On exit  : 0/0
 13011 ;;		Unchanged: 0/0
 13012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13017 ;;Total ram usage:        0 bytes
 13018 ;; Hardware stack levels used:    1
 13019 ;; Hardware stack levels required when called:    4
 13020 ;; This function calls:
 13021 ;;		Nothing
 13022 ;; This function is called by:
 13023 ;;		_SYSTEM_Initialize
 13024 ;; This function uses a non-reentrant model
 13025 ;;
 13026                           
 13027                           
 13028                           ;psect for function _OSCILLATOR_Initialize
 13029  1693                     _OSCILLATOR_Initialize:
 13030  1693                     l2835:	
 13031                           ;incstack = 0
 13032                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13033                           
 13034                           
 13035                           ;mcc_generated_files/mcc.c: 93:     OSCCON = 0x78;
 13036  1693  3078               	movlw	120
 13037  1694  0021               	movlb	1	; select bank1
 13038  1695  0099               	movwf	25	;volatile
 13039  1696                     l2837:
 13040                           
 13041                           ;mcc_generated_files/mcc.c: 95:     OSCTUNE = 0x00;
 13042  1696  0198               	clrf	24	;volatile
 13043  1697                     l28:
 13044  1697  0008               	return
 13045  1698                     __end_of_OSCILLATOR_Initialize:
 13046                           
 13047                           	psect	text42
 13048  16B0                     __ptext42:	
 13049 ;; *************** function _ADC_Initialize *****************
 13050 ;; Defined at:
 13051 ;;		line 64 in file "mcc_generated_files/adc.c"
 13052 ;; Parameters:    Size  Location     Type
 13053 ;;		None
 13054 ;; Auto vars:     Size  Location     Type
 13055 ;;		None
 13056 ;; Return value:  Size  Location     Type
 13057 ;;                  1    wreg      void 
 13058 ;; Registers used:
 13059 ;;		wreg, status,2
 13060 ;; Tracked objects:
 13061 ;;		On entry : 0/0
 13062 ;;		On exit  : 0/0
 13063 ;;		Unchanged: 0/0
 13064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13069 ;;Total ram usage:        0 bytes
 13070 ;; Hardware stack levels used:    1
 13071 ;; Hardware stack levels required when called:    4
 13072 ;; This function calls:
 13073 ;;		Nothing
 13074 ;; This function is called by:
 13075 ;;		_SYSTEM_Initialize
 13076 ;; This function uses a non-reentrant model
 13077 ;;
 13078                           
 13079                           
 13080                           ;psect for function _ADC_Initialize
 13081  16B0                     _ADC_Initialize:
 13082  16B0                     l2861:	
 13083                           ;incstack = 0
 13084                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 13085                           
 13086                           
 13087                           ;mcc_generated_files/adc.c: 69:     ADCON0 = 0x01;
 13088  16B0  3001               	movlw	1
 13089  16B1  0021               	movlb	1	; select bank1
 13090  16B2  009D               	movwf	29	;volatile
 13091                           
 13092                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x60;
 13093  16B3  3060               	movlw	96
 13094  16B4  009E               	movwf	30	;volatile
 13095  16B5                     l2863:
 13096                           
 13097                           ;mcc_generated_files/adc.c: 75:     ADCON2 = 0x00;
 13098  16B5  019F               	clrf	31	;volatile
 13099  16B6                     l2865:
 13100                           
 13101                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
 13102  16B6  019B               	clrf	27	;volatile
 13103  16B7                     l2867:
 13104                           
 13105                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
 13106  16B7  019C               	clrf	28	;volatile
 13107  16B8                     l114:
 13108  16B8  0008               	return
 13109  16B9                     __end_of_ADC_Initialize:
 13110                           
 13111                           	psect	text43
 13112  1784                     __ptext43:	
 13113 ;; *************** function _ADC_GetConversion *****************
 13114 ;; Defined at:
 13115 ;;		line 112 in file "mcc_generated_files/adc.c"
 13116 ;; Parameters:    Size  Location     Type
 13117 ;;  channel         1    wreg     enum E9639
 13118 ;; Auto vars:     Size  Location     Type
 13119 ;;  channel         1    3[COMMON] enum E9639
 13120 ;; Return value:  Size  Location     Type
 13121 ;;                  2    0[COMMON] unsigned short 
 13122 ;; Registers used:
 13123 ;;		wreg, status,2, status,0
 13124 ;; Tracked objects:
 13125 ;;		On entry : 0/0
 13126 ;;		On exit  : 0/0
 13127 ;;		Unchanged: 0/0
 13128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13129 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13130 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13131 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13132 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13133 ;;Total ram usage:        4 bytes
 13134 ;; Hardware stack levels used:    1
 13135 ;; Hardware stack levels required when called:    4
 13136 ;; This function calls:
 13137 ;;		Nothing
 13138 ;; This function is called by:
 13139 ;;		_main
 13140 ;;		_printADCValues
 13141 ;; This function uses a non-reentrant model
 13142 ;;
 13143                           
 13144                           
 13145                           ;psect for function _ADC_GetConversion
 13146  1784                     _ADC_GetConversion:
 13147                           
 13148                           ;incstack = 0
 13149                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 13150                           ;ADC_GetConversion@channel stored from wreg
 13151  1784  00F3               	movwf	ADC_GetConversion@channel
 13152  1785                     l3187:
 13153                           
 13154                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
 13155  1785  0873               	movf	ADC_GetConversion@channel,w
 13156  1786  00F2               	movwf	??_ADC_GetConversion
 13157  1787  0DF2               	rlf	??_ADC_GetConversion,f
 13158  1788  0DF2               	rlf	??_ADC_GetConversion,f
 13159  1789  0021               	movlb	1	; select bank1
 13160  178A  081D               	movf	29,w	;volatile
 13161  178B  0672               	xorwf	??_ADC_GetConversion,w
 13162  178C  3983               	andlw	-125
 13163  178D  0672               	xorwf	??_ADC_GetConversion,w
 13164  178E  009D               	movwf	29	;volatile
 13165  178F                     l3189:
 13166                           
 13167                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
 13168  178F  141D               	bsf	29,0	;volatile
 13169  1790                     l3191:
 13170                           
 13171                           ;mcc_generated_files/adc.c: 120:     _delay((unsigned long)((5)*(16000000/4000000.0)));
 13172  1790  3006               	movlw	6
 13173  1791                     u3467:
 13174  1791  0B89               	decfsz	9,f
 13175  1792  2F91               	goto	u3467
 13176  1793  3200               	nop2
 13177  1794                     l3193:
 13178                           
 13179                           ;mcc_generated_files/adc.c: 123:     ADCON0bits.GO_nDONE = 1;
 13180  1794  0021               	movlb	1	; select bank1
 13181  1795  149D               	bsf	29,1	;volatile
 13182  1796                     l129:	
 13183                           ;mcc_generated_files/adc.c: 127:     {;mcc_generated_files/adc.c: 128:     }
 13184                           
 13185                           
 13186                           ;mcc_generated_files/adc.c: 126:     while (ADCON0bits.GO_nDONE)
 13187  1796  189D               	btfsc	29,1	;volatile
 13188  1797  2F99               	goto	u2941
 13189  1798  2F9A               	goto	u2940
 13190  1799                     u2941:
 13191  1799  2F96               	goto	l129
 13192  179A                     u2940:
 13193  179A                     l3195:
 13194                           
 13195                           ;mcc_generated_files/adc.c: 131:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 13196  179A  081C               	movf	28,w	;volatile
 13197  179B  00F1               	movwf	?_ADC_GetConversion+1
 13198  179C  081B               	movf	27,w	;volatile
 13199  179D  00F0               	movwf	?_ADC_GetConversion
 13200  179E                     l132:
 13201  179E  0008               	return
 13202  179F                     __end_of_ADC_GetConversion:
 13203                           
 13204                           	psect	intentry
 13205  0004                     __pintentry:	
 13206 ;; *************** function _INTERRUPT_InterruptManager *****************
 13207 ;; Defined at:
 13208 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 13209 ;; Parameters:    Size  Location     Type
 13210 ;;		None
 13211 ;; Auto vars:     Size  Location     Type
 13212 ;;		None
 13213 ;; Return value:  Size  Location     Type
 13214 ;;                  1    wreg      void 
 13215 ;; Registers used:
 13216 ;;		wreg, status,2, status,0, pclath, cstack
 13217 ;; Tracked objects:
 13218 ;;		On entry : 0/0
 13219 ;;		On exit  : 0/0
 13220 ;;		Unchanged: 0/0
 13221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13226 ;;Total ram usage:        0 bytes
 13227 ;; Hardware stack levels used:    1
 13228 ;; Hardware stack levels required when called:    3
 13229 ;; This function calls:
 13230 ;;		_TMR4_ISR
 13231 ;; This function is called by:
 13232 ;;		Interrupt level 1
 13233 ;; This function uses a non-reentrant model
 13234 ;;
 13235                           
 13236  0004                     _INTERRUPT_InterruptManager:
 13237                           
 13238                           ;incstack = 0
 13239  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13240                           
 13241                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 13242  0005  3180               	pagesel	$
 13243  0006                     i1l3575:
 13244                           
 13245                           ;mcc_generated_files/interrupt_manager.c: 54:     if(INTCONbits.PEIE == 1 && PIE2bits.TM
      +                          R4IE == 1 && PIR2bits.TMR4IF == 1)
 13246  0006  1F0B               	btfss	11,6	;volatile
 13247  0007  2809               	goto	u331_21
 13248  0008  280A               	goto	u331_20
 13249  0009                     u331_21:
 13250  0009  2817               	goto	i1l516
 13251  000A                     u331_20:
 13252  000A                     i1l3577:
 13253  000A  0021               	movlb	1	; select bank1
 13254  000B  1C91               	btfss	17,1	;volatile
 13255  000C  280E               	goto	u332_21
 13256  000D  280F               	goto	u332_20
 13257  000E                     u332_21:
 13258  000E  2817               	goto	i1l516
 13259  000F                     u332_20:
 13260  000F                     i1l3579:
 13261  000F  0020               	movlb	0	; select bank0
 13262  0010  1C91               	btfss	17,1	;volatile
 13263  0011  2813               	goto	u333_21
 13264  0012  2814               	goto	u333_20
 13265  0013                     u333_21:
 13266  0013  2817               	goto	i1l516
 13267  0014                     u333_20:
 13268  0014                     i1l3581:
 13269                           
 13270                           ;mcc_generated_files/interrupt_manager.c: 55:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 56:         TMR4_ISR();
 13271  0014  3196  2698  3180   	fcall	_TMR4_ISR
 13272  0017                     i1l516:	
 13273                           ;mcc_generated_files/interrupt_manager.c: 57:     }
 13274                           
 13275  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13276  0018  0009               	retfie
 13277  0019                     __end_of_INTERRUPT_InterruptManager:
 13278                           
 13279                           	psect	text45
 13280  1698                     __ptext45:	
 13281 ;; *************** function _TMR4_ISR *****************
 13282 ;; Defined at:
 13283 ;;		line 167 in file "mcc_generated_files/tmr4.c"
 13284 ;; Parameters:    Size  Location     Type
 13285 ;;		None
 13286 ;; Auto vars:     Size  Location     Type
 13287 ;;		None
 13288 ;; Return value:  Size  Location     Type
 13289 ;;                  1    wreg      void 
 13290 ;; Registers used:
 13291 ;;		wreg, status,2, status,0, pclath, cstack
 13292 ;; Tracked objects:
 13293 ;;		On entry : 0/0
 13294 ;;		On exit  : 0/0
 13295 ;;		Unchanged: 0/0
 13296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13301 ;;Total ram usage:        0 bytes
 13302 ;; Hardware stack levels used:    1
 13303 ;; Hardware stack levels required when called:    2
 13304 ;; This function calls:
 13305 ;;		_TMR4_CallBack
 13306 ;; This function is called by:
 13307 ;;		_INTERRUPT_InterruptManager
 13308 ;; This function uses a non-reentrant model
 13309 ;;
 13310                           
 13311                           
 13312                           ;psect for function _TMR4_ISR
 13313  1698                     _TMR4_ISR:
 13314  1698                     i1l3341:	
 13315                           ;incstack = 0
 13316                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 13317                           
 13318                           
 13319                           ;mcc_generated_files/tmr4.c: 171:     PIR2bits.TMR4IF = 0;
 13320  1698  0020               	movlb	0	; select bank0
 13321  1699  1091               	bcf	17,1	;volatile
 13322  169A                     i1l3343:
 13323                           
 13324                           ;mcc_generated_files/tmr4.c: 175:     TMR4_CallBack();
 13325  169A  3196  26D5  3196   	fcall	_TMR4_CallBack
 13326  169D                     i1l491:
 13327  169D  0008               	return
 13328  169E                     __end_of_TMR4_ISR:
 13329                           
 13330                           	psect	text46
 13331  16D5                     __ptext46:	
 13332 ;; *************** function _TMR4_CallBack *****************
 13333 ;; Defined at:
 13334 ;;		line 178 in file "mcc_generated_files/tmr4.c"
 13335 ;; Parameters:    Size  Location     Type
 13336 ;;		None
 13337 ;; Auto vars:     Size  Location     Type
 13338 ;;		None
 13339 ;; Return value:  Size  Location     Type
 13340 ;;                  1    wreg      void 
 13341 ;; Registers used:
 13342 ;;		wreg, status,2, status,0, pclath, cstack
 13343 ;; Tracked objects:
 13344 ;;		On entry : 0/0
 13345 ;;		On exit  : 0/0
 13346 ;;		Unchanged: 0/0
 13347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13352 ;;Total ram usage:        0 bytes
 13353 ;; Hardware stack levels used:    1
 13354 ;; Hardware stack levels required when called:    1
 13355 ;; This function calls:
 13356 ;;		Absolute function
 13357 ;;		_TMR4_DefaultInterruptHandler
 13358 ;; This function is called by:
 13359 ;;		_TMR4_ISR
 13360 ;; This function uses a non-reentrant model
 13361 ;;
 13362                           
 13363                           
 13364                           ;psect for function _TMR4_CallBack
 13365  16D5                     _TMR4_CallBack:
 13366  16D5                     i1l2927:	
 13367                           ;incstack = 0
 13368                           ; Regs used in _TMR4_CallBack: [wreg+status,2+status,0+pclath+cstack]
 13369                           
 13370                           
 13371                           ;mcc_generated_files/tmr4.c: 182:     if(TMR4_InterruptHandler)
 13372  16D5  0021               	movlb	1	; select bank1
 13373  16D6  0857               	movf	_TMR4_InterruptHandler^(0+128),w
 13374  16D7  0458               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
 13375  16D8  1903               	btfsc	3,2
 13376  16D9  2EDB               	goto	u236_21
 13377  16DA  2EDC               	goto	u236_20
 13378  16DB                     u236_21:
 13379  16DB  2EE1               	goto	i1l495
 13380  16DC                     u236_20:
 13381  16DC                     i1l2929:
 13382                           
 13383                           ;mcc_generated_files/tmr4.c: 183:     {;mcc_generated_files/tmr4.c: 184:         TMR4_In
      +                          terruptHandler();
 13384  16DC  0858               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
 13385  16DD  008A               	movwf	10
 13386  16DE  0857               	movf	_TMR4_InterruptHandler^(0+128),w
 13387  16DF  000A               	callw
 13388  16E0  3196               	pagesel	$
 13389  16E1                     i1l495:
 13390  16E1  0008               	return
 13391  16E2                     __end_of_TMR4_CallBack:
 13392                           
 13393                           	psect	text47
 13394  0002                     __ptext47:	
 13395 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 13396 ;; Defined at:
 13397 ;;		line 192 in file "mcc_generated_files/tmr4.c"
 13398 ;; Parameters:    Size  Location     Type
 13399 ;;		None
 13400 ;; Auto vars:     Size  Location     Type
 13401 ;;		None
 13402 ;; Return value:  Size  Location     Type
 13403 ;;                  1    wreg      void 
 13404 ;; Registers used:
 13405 ;;		None
 13406 ;; Tracked objects:
 13407 ;;		On entry : 0/0
 13408 ;;		On exit  : 0/0
 13409 ;;		Unchanged: 0/0
 13410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13415 ;;Total ram usage:        0 bytes
 13416 ;; Hardware stack levels used:    1
 13417 ;; This function calls:
 13418 ;;		Nothing
 13419 ;; This function is called by:
 13420 ;;		_TMR4_Initialize
 13421 ;;		_TMR4_CallBack
 13422 ;; This function uses a non-reentrant model
 13423 ;;
 13424                           
 13425                           
 13426                           ;psect for function _TMR4_DefaultInterruptHandler
 13427  0002                     _TMR4_DefaultInterruptHandler:
 13428  0002                     i1l501:	
 13429                           ;incstack = 0
 13430                           ; Regs used in _TMR4_DefaultInterruptHandler: []
 13431                           
 13432  0002  0008               	return
 13433  0003                     __end_of_TMR4_DefaultInterruptHandler:
 13434  007E                     btemp	set	126	;btemp
 13435  007E                     int$flags	set	126
 13436  007E                     wtemp0	set	126
 13437                           
 13438                           	psect	config
 13439                           
 13440                           ;Config register CONFIG1 @ 0x8007
 13441                           ;	Oscillator Selection Bits
 13442                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 13443                           ;	Power-up Timer Enable
 13444                           ;	PWRTE = OFF, PWRT disabled
 13445                           ;	MCLR Pin Function Select
 13446                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 13447                           ;	Flash Program Memory Code Protection
 13448                           ;	CP = OFF, Program memory code protection is disabled
 13449                           ;	Brown-out Reset Enable
 13450                           ;	BOREN = ON, Brown-out Reset enabled
 13451                           ;	Clock Out Enable
 13452                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 13453                           ;	Internal/External Switch Over
 13454                           ;	IESO = ON, Internal External Switch Over mode is enabled
 13455                           ;	Fail-Safe Clock Monitor Enable
 13456                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13457  8007                     	org	32775
 13458  8007  3FFC               	dw	16380
 13459                           
 13460                           ;Config register CONFIG2 @ 0x8008
 13461                           ;	Flash Memory Self-Write Protection
 13462                           ;	WRT = OFF, Write protection off
 13463                           ;	Peripheral Pin Select one-way control
 13464                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 13465                           ;	Zero Cross Detect Disable Bit
 13466                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 13467                           ;	PLL Enable Bit
 13468                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
 13469                           ;	Stack Overflow/Underflow Reset Enable
 13470                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 13471                           ;	Brown-out Reset Voltage Selection
 13472                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 13473                           ;	Low-Power Brown Out Reset
 13474                           ;	LPBOR = OFF, Low-Power BOR is disabled
 13475                           ;	Low-Voltage Programming Enable
 13476                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 13477  8008                     	org	32776
 13478  8008  1EFF               	dw	7935
 13479                           
 13480                           ;Config register CONFIG3 @ 0x8009
 13481                           ;	WDT Period Select
 13482                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
 13483                           ;	Watchdog Timer Enable
 13484                           ;	WDTE = OFF, WDT disabled
 13485                           ;	WDT Window Select
 13486                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
 13487                           ;	WDT Input Clock Selector
 13488                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
 13489  8009                     	org	32777
 13490  8009  3F9F               	dw	16287

Data Sizes:
    Strings     54
    Constant    0
    Data        187
    BSS         72
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     35      76
    BANK2            80      0      68
    BANK3            80      0      67
    BANK4            80      0      51
    BANK5            80      0      32
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1419_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_3(CODE[24]), STR_2(CODE[21]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_3(CODE[24]), STR_2(CODE[21]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_3(CODE[24]), STR_2(CODE[21]), STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR4_DefaultInterruptHandler(), 

    stuffIntToCharsBuf@buf	PTR unsigned char  size(1) Largest target is 17
		 -> text10(BANK1[17]), 

    printByteValue@s	PTR unsigned char  size(1) Largest target is 17
		 -> text7(BANK2[17]), 


Critical Paths under _main in COMMON

    _main->_printByteValue
    _stuffIntToCharsBuf->_printf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _spi_read_32bits->_spi_transfer
    _setMotorSpeed->_PWM3_LoadDutyValue
    _setMotorSpeed->_PWM4_LoadDutyValue
    _printByteValue->_command
    _printByteValue->_dataCMD
    _convert14BitToFloat->___xxtofl
    ___fldiv->___xxtofl
    _SYSTEM_Initialize->_initDisplay
    _initDisplay->_initOLED
    _initOLED->_command
    _initOLED->_dataCMD
    _dataCMD->_spi_write
    _command->_spi_write
    _TMR4_Initialize->_TMR4_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _stuffIntToCharsBuf->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _convert14BitToFloat->___fldiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_stuffIntToCharsBuf
    _stuffIntToCharsBuf->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   16649
                                             21 BANK1     14    14      0
                  _ADC_GetConversion
                  _SYSTEM_Initialize
                            ___fltol
                            _command
                _convert14BitToFloat
                            _dataCMD
                     _printByteValue
                      _setMotorSpeed
                    _spi_read_32bits
                 _stuffIntToCharsBuf
 ---------------------------------------------------------------------------------
 (1) _stuffIntToCharsBuf                                  18    13      5    9193
                                              3 BANK1     18    13      5
                            ___awdiv
                            ___fltol (ARG)
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10    5956
                                             13 COMMON     1     1      0
                                             70 BANK0     10     0     10
                                              0 BANK1      3     3      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3    5674
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2    5346
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    4045
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2422
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1083
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     768
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _spi_read_32bits                                     19    15      4     137
                                              1 COMMON    12     8      4
                                              0 BANK0      7     7      0
                       _spi_transfer
 ---------------------------------------------------------------------------------
 (2) _spi_transfer                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setMotorSpeed                                        4     0      4     632
                                              4 COMMON     4     0      4
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM4_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _printByteValue                                      10     7      3    1846
                                              9 COMMON     5     2      3
                                              0 BANK0      5     5      0
                            _command
                            _dataCMD
 ---------------------------------------------------------------------------------
 (1) _convert14BitToFloat                                 12     8      4    1883
                                             26 BANK0     12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1377
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                     _SPI_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                        _initDisplay
 ---------------------------------------------------------------------------------
 (2) _initDisplay                                          3     3      0    1256
                                             11 COMMON     3     3      0
                            _command
                            _dataCMD
                           _initOLED
 ---------------------------------------------------------------------------------
 (3) _initOLED                                             2     2      0     594
                                              9 COMMON     2     2      0
                            _command
                            _dataCMD
 ---------------------------------------------------------------------------------
 (2) _dataCMD                                              7     7      0     297
                                              2 COMMON     7     7      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (2) _command                                              7     7      0     297
                                              2 COMMON     7     7      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (3) _spi_write                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0      98
           _TMR4_SetInterruptHandler
                         _TMR4_Start
 ---------------------------------------------------------------------------------
 (3) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (3) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0       0
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR4_ISR                                            0     0      0       0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (12) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _SPI_Initialize
     _TMR2_Initialize
       _TMR2_Start
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
       _TMR4_Start
     _initDisplay
       _command
         _spi_write
       _dataCMD
         _spi_write
       _initOLED
         _command
           _spi_write
         _dataCMD
           _spi_write
   ___fltol
   _command
     _spi_write
   _convert14BitToFloat
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
   _dataCMD
     _spi_write
   _printByteValue
     _command
       _spi_write
     _dataCMD
       _spi_write
   _setMotorSpeed
     _PWM3_LoadDutyValue
     _PWM4_LoadDutyValue
   _spi_read_32bits
     _spi_transfer
   _stuffIntToCharsBuf
     ___awdiv
     ___fltol (ARG)
     ___wmul (ARG)
     _printf (ARG)
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch

 _INTERRUPT_InterruptManager (ROOT)
   _TMR4_ISR
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     23      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      44       9       85.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      43      11       83.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      33      13       63.7%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      20      15       40.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     184      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     184      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Aug 23 16:27:28 2025

                          _SPI_Initialize 169E                              ___fldiv@aexp 0039  
                            ___fldiv@bexp 0038                              ___fldiv@sign 0031  
             __end_of_convert14BitToFloat 09FD                                        _BF 10A0  
                                      l25 17BA                                        l28 1697  
                                      l37 16A3                                        l94 09B3  
                            ___awdiv@sign 0076                       ___wmul@multiplicand 0072  
                 printByteValue@upperBits 0021                                       l114 16B8  
                                     l132 179E                                       l143 16C1  
                                     l160 07FF                                       l129 1796  
                                     l410 0B0B                                       l146 1736  
                                     l403 0851                                       l157 16CA  
                                     l413 0CD2                                       l350 09FC  
                                     l343 17D6                                       l338 0D77  
                                     l452 174F                                       l189 16EE  
                                     l461 1692                                       l357 06FF  
                                     l198 168F                                       l374 16CF  
                                     l391 16FC                                       l384 0B5D  
                                     l377 16D4                                       l385 0B68  
                                     l388 16F3                                       l398 0AB0  
                                     l584 0811                                       l737 0BC7  
                                     l498 16A9                                       l586 0825  
                                     l684 0FEE                                       l941 02FD  
                                     l685 0FFF                                       l943 0459  
                                     l785 0C26                                       l697 07D8  
                                     l778 0C3B                                       l962 0427  
                                     l698 07E9                                       l963 0441  
                                     l788 0C3B                                       l965 0450  
                                     l957 03DB                                       _GIE 005F  
                                     _PR2 001B                                       _PR4 0414  
                                     _abs 1750                                       _pad 09FD  
                         _TMR2_Initialize 16E2                           _PWM4_Initialize 16C2  
                                     wreg 0009                          spi_write@spiByte 0071  
                             command@bit0 0074                              ___fltol@exp1 007A  
                                    l1031 0DD5                                      l1112 0EFE  
                                    l1025 0D9A                                      l1105 05C9  
                                    l1027 0E23                                      l1123 1769  
                                    ?_abs 0073                                      l1038 0DEF  
                                    l1126 1769                                      l1039 0DFB  
                                    l1119 0882                                      l1047 1720  
                                    l3001 02BF                                      l1138 0927  
                                    l1146 17FF                                      l1074 0A19  
                                    l1082 04A3                                      l3011 02D7  
                                    l3003 02C7                                      l1155 1783  
                                    l1091 0552                                      l1083 04AC  
                                    l3101 03E5                                      l3021 02EA  
                                    l3013 02DB                                      l3005 02C8  
                                    l1149 0003                                      l1077 0A3B  
                                    l1078 0A49                                      l3111 041A  
                                    l3103 03ED                                      l3031 0311  
                                    l3023 02F2                                      l3015 02DF  
                                    l3007 02CA                                      l1079 0A55  
                                    l1087 04C9                                      l1088 04E1  
                                    l3121 044A                                      l3113 0435  
                                    l3105 03F1                                      l3033 0315  
                                    l3025 02F3                                      l3017 02E0  
                                    l3009 02D2                                      l3201 05DA  
                                    l3123 044C                                      l3115 0438  
                                    l3107 0409                                      l3051 0354  
                                    l3043 032C                                      l3019 02E5  
                                    l3027 02F5                                      l3131 0D7E  
                                    l2411 08F8                                      l3211 05F4  
                                    l3203 05DD                                      l3117 0440  
                                    l3109 040D                                      l3061 036E  
                                    l3053 0356                                      l3045 033C  
                                    l3029 0305                                      l3037 031E  
                                    l3141 0DAB                                      l3133 0D82  
                                    l3301 0D33                                      l2501 07B5  
                                    l2413 0902                                      l2405 08E9  
                                    l2421 17DC                                      l3221 0648  
                                    l3213 0604                                      l3205 05E1  
                                    l3119 0446                                      l3055 035B  
                                    l3063 0375                                      l3071 0394  
                                    l3047 0344                                      l3039 0323  
                                    l3151 0DCE                                      l3143 0DB0  
                                    l3135 0D92                                      l3311 0D47  
                                    l2503 07BA                                      l2415 091F  
                                    l2407 08EE                                      l2423 17EA  
                                    l2431 1774                                      l2511 0A12  
                                    l3231 06A7                                      l3223 065A  
                                    l3215 0616                                      l3207 05E5  
                                    l3081 03AF                                      l3073 039A  
                                    l3065 0387                                      l3057 0369  
                                    l3049 034C                                      l3161 0DFD  
                                    l3153 0DDC                                      l3145 0DBB  
                                    l3137 0DA2                                      l3129 0D79  
                                    l3321 0D5B                                      l3313 0D54  
                                    l2441 0F0A                                      l2409 08F3  
                                    l2425 17EF                                      l2433 177D  
                                    l2521 0A40                                      l2513 0A17  
                                    l2505 09FF                                      l3241 06DE  
                                    l3233 06B6                                      l3225 0662  
                                    l3217 0626                                      l3209 05EF  
                                    l3401 0091                                      l2531 16F7  
                                    l2611 0A6D                                      l3091 03C0  
                                    l3083 03B0                                      l3075 03A2  
                                    l3067 0388                                      l3059 036D  
                                    l3163 0E11                                      l3155 0DE5  
                                    l3147 0DC2                                      l3331 09BF  
                                    l3323 0D65                                      l3315 0D58  
                                    l3307 0D36                                      l3251 17C8  
                                    l2451 0F62                                      l2443 0F2B  
                                    l2419 17D9                                      l2427 176B  
                                    l2515 0A1C                                      l2507 0A04  
                                    l3243 06EB                                      l3235 06C5  
                                    l3227 068A                                      l3219 0638  
                                    l3411 00A3                                      l2621 0A8D  
                                    l2613 0A72                                      l2605 0A60  
                                    l3181 17B1                                      l3173 179F  
                                    l3093 03C4                                      l3085 03B7  
                                    l3077 03A4                                      l3069 0390  
                                    l3165 0E16                                      l3157 0DE9  
                                    l3149 0DC6                                      l3333 09C4  
                                    l3325 0D6A                                      l3309 0D42  
                                    l3253 17CF                                      l2461 0F82  
                                    l2453 0F6F                                      l2445 0F35  
                                    l2437 0EFF                                      l2525 1750  
                                    l2429 1770                                      l2517 0A28  
                                    l2509 0A0D                                      l2541 04A8  
                                    l2533 045C                                      l2701 0ECA  
                                    l3245 06F1                                      l3237 06CB  
                                    l3229 0699                                      l3501 0214  
                                    l3421 00E5                                      l3413 00B0  
                                    l3191 1790                                      l2631 0AAE  
                                    l2623 0A8E                                      l2615 0A77  
                                    l2607 0A65                                      l3183 17B4  
                                    l3175 17A8                                      l3351 0BDC  
                                    l3095 03D8                                      l3079 03AB  
                                    l3087 03BB                                      l3167 0E1A  
                                    l3159 0DF3                                      l3335 09CA  
                                    l3327 09B4                                      l3247 17BB  
                                    l3271 0B49                                      l3255 0B0C  
                                    l2463 0F8A                                      l2455 0F72  
                                    l2471 0FCB                                      l2447 0F54  
                                    l2439 0F00                                      l2527 175D  
                                    l2519 0A2D                                      l2551 04DC  
                                    l2543 04BB                                      l2535 046C  
                                    l2711 0EDB                                      l3239 06D8  
                                    l3511 0279                                      l3503 0220  
                                    l3431 0111                                      l3423 00E7  
                                    l3415 00B9                                      l3407 0094  
                                    l3193 1794                                      l2529 16F0  
                                    l2625 0A92                                      l2617 0A7E  
                                    l2609 0A69                                      l2641 0AB9  
                                    l2633 0AB2                                      l2721 0C3C  
                                    l3185 17B7                                      l3177 17AB  
                                    l3361 0BFE                                      l3353 0BEF  
                                    l3345 0BC8                                      l3089 03BF  
                                    l3169 0E1B                                      l3337 09F4  
                                    l3329 09BB                                      l3281 0CD5  
                                    l3249 17C1                                      l3273 0B4B  
                                    l3265 0B1A                                      l3257 0B15  
                                    l2473 0FD0                                      l2465 0FAC  
                                    l2457 0F7A                                      l2449 0F58  
                                    l2481 072C                                      l2561 0521  
                                    l2553 04E6                                      l2545 04C1  
                                    l2537 047F                                      l2713 0EF4  
                                    l2705 0ED0                                      l2801 087A  
                                    l3521 028A                                      l3505 0243  
                                    l3441 0121                                      l3433 0115  
                                    l3425 00F0                                      l3417 00C6  
                                    l3409 009E                                      l3195 179A  
                                    l3187 1785                                      l2811 0975  
                                    l2627 0A9F                                      l2619 0A89  
                                    l2651 0AC4                                      l2635 0AB4  
                                    l2731 0C56                                      l2723 0C3E  
                                    l3179 17AE                                      l3355 0BF0  
                                    l3347 0BD3                                      l3099 03E0  
                                    l3291 0D06                                      l3283 0CDA  
                                    l3275 0B50                                      l3267 0B22  
                                    l3259 0B17                                      l2467 0FBC  
                                    l2459 0F7E                                      l2491 076D  
                                    l2483 0736                                      l2475 0700  
                                    l2571 0588                                      l2563 0525  
                                    l2555 04E9                                      l2547 04D1  
                                    l2539 0485                                      l2707 0ED8  
                                    l3523 0297                                      l3507 025E  
                                    l3443 012B                                      l3435 011E  
                                    l3427 00F2                                      l3419 00DC  
                                    l3189 178F                                      l2821 0982  
                                    l2813 0977                                      l2805 096C  
                                    l2901 16E2                                      l2629 0AAA  
                                    l2661 0AE4                                      l2653 0AC8  
                                    l2637 0AB8                                      l2741 0C6A  
                                    l2733 0C5A                                      l2725 0C4A  
                                    l3357 0BF8                                      l3293 0D0C  
                                    l3285 0CE5                                      l3277 0B5F  
                                    l3269 0B24                                      l2469 0FBD  
                                    l2493 0771                                      l2485 0755  
                                    l2477 0701                                      l2581 05A4  
                                    l2565 0560                                      l2573 058D  
                                    l2557 04EE                                      l2549 04D7  
                                    l3517 027C                                      l3509 0275  
                                    l3461 015F                                      l3445 0130  
                                    l3429 0101                                      l2831 09AD  
                                    l2823 0984                                      l2815 097B  
                                    l2807 0970                                      l2719 168D  
                                    l2903 16E7                                      l2591 0A57  
                                    l2671 0B05                                      l2663 0AE8  
                                    l2655 0ACD                                      l2647 0ABB  
                                    l2639 0AB8                                      l2751 0C7E  
                                    l2743 0C6E                                      l2735 0C5E  
                                    l2727 0C4E                                      l3375 0C1D  
                                    l3367 0C06                                      l3359 0BFA  
                                    l3295 0D19                                      l3287 0CEB  
                                    l2911 1721                                      l2495 0775  
                                    l2487 0762                                      l2479 070B  
                                    l2583 05A9                                      l2575 0594  
                                    l2567 056D                                      l2559 051D  
                                    l3199 05CA                                      l3519 0285  
                                    l3463 0177                                      l3455 0144  
                                    l3447 013D                                      l3391 0084  
                                    l3383 0067                                      l2833 09AE  
                                    l2825 098A                                      l2817 097D  
                                    l2809 0973                                      l2841 16A0  
                                    l2905 16E9                                      l2593 0A59  
                                    l2673 0B09                                      l2665 0AE9  
                                    l2657 0AD2                                      l2649 0AC0  
                                    l2761 0C92                                      l2753 0C82  
                                    l2745 0C72                                      l2737 0C62  
                                    l2729 0C52                                      l3377 0C2B  
                                    l3369 0C16                                      l3297 0D27  
                                    l3289 0CF8                                      l2913 07EA  
                                    l2921 16CC                                      l2497 0797  
                                    l2489 0765                                      l2585 05AD  
                                    l2577 0599                                      l2569 057A  
                                    l2681 0E44                                      l3481 01BB  
                                    l3473 0193                                      l3465 0183  
                                    l3457 014D                                      l3449 0141  
                                    l3393 0084                                      l3385 0074  
                                    l2835 1693                                      l2827 098E  
                                    l2819 0980                                      l2843 16A2  
                                    l2907 16EA                                      l2595 0A5D  
                                    l2667 0AED                                      l2659 0AD9  
                                    l2771 0CA6                                      l2763 0C96  
                                    l2755 0C86                                      l2747 0C76  
                                    l2739 0C66                                      l3379 0C30  
                                    l3299 0D2B                                      l2923 16D3  
                                    l2931 0807                                      l2499 07A7  
                                    l2579 059E                                      l2587 05B6  
                                    l2691 0E8C                                      l2683 0E48  
                                    l2675 0E26                                      l2915 170E  
                                    l3491 01E6                                      l3483 01CE  
                                    l3475 019D                                      l3467 0190  
                                    l3459 0152                                      l3395 0084  
                                    l3387 0077                                      l2861 16B0  
                                    l2837 1696                                      l2829 0994  
                                    l2909 16EB                                      l2597 0A5D  
                                    l2669 0AFA                                      l2781 0CBA  
                                    l2773 0CAA                                      l2765 0C9A  
                                    l2757 0C8A                                      l2749 0C7A  
                                    l2845 0826                                      l2941 0821  
                                    l2933 0809                                      l2685 0E5A  
                                    l2677 0E37                                      l2917 1713  
                                    l3493 01F2                                      l3485 01D2  
                                    l3477 01A2                                      l3397 0084  
                                    l3389 0084                                      ?_pad 0024  
                                    l2863 16B5                                      l2871 16C5  
                                    l2839 169E                                      l2791 1690  
                                    l2599 0A5E                                      l2783 0CBE  
                                    l2775 0CAE                                      l2767 0C9E  
                                    l2759 0C8E                                      l2855 0837  
                                    l2847 082D                                      l2951 0B73  
                                    l2935 080D                                      l2695 0EA6  
                                    l2687 0E6B                                      l2679 0E3F  
                                    l3495 01F7                                      l3487 01D6  
                                    l3479 01AF                                      l3399 0088  
                                    l2865 16B6                                      l2873 16C6  
                                    l2881 173D                                      l2785 0CC2  
                                    l2777 0CB2                                      l2769 0CA2  
                                    l2857 0840                                      l2849 0835  
                                    l2961 0B84                                      l2953 0B75  
                                    l2945 0B69                                      l2937 0816  
                                    l2697 0EB7                                      l2689 0E73  
                                    l2793 0854                                      l3497 0203  
                                    l3489 01E1                                      l2867 16B7  
                                    l2875 16C7                                      l2891 174C  
                                    l2883 1740                                      l2787 0CC6  
                                    l2779 0CB6                                      l2859 0844  
                                    l2971 0B9A                                      l2963 0B8A  
                                    l2955 0B79                                      l2947 0B6A  
                                    l2939 081B                                      l2699 0EBF  
                                    l2795 0858                                      l3499 0208  
                                    l2893 16B9                                      l2869 16C2  
                                    l2789 16A4                                      l2885 1741  
                                    l2877 1737                                      l2973 0BA9  
                                    l2965 0B8D                                      l2981 0BB9  
                                    l2957 0B7E                                      l2949 0B6E  
                                    l2797 085C                                      l2895 16BC  
                                    l2887 1743                                      l2879 173C  
                                    l2991 02AC                                      l2983 0BBE  
                                    l2975 0BAD                                      l2967 0B92  
                                    l2959 0B82                                      l2799 0870  
                                    l2897 16BD                                      l2889 1745  
                                    l2993 02B0                                      l2985 0BC3  
                                    l2977 0BAE                                      l2969 0B96  
                                    l2899 16BE                                      l2995 02B4  
                                    l2979 0BB3                                      l2997 02B5  
                                    l2989 02A6                                      l2999 02BA  
                                    STR_1 182D                                      STR_2 1818  
                                    STR_3 1800                                      u2000 16F7  
                                    u2001 16F6                                      u2010 0477  
                                    u2011 0475                                      u2100 056D  
                                    u2020 0478                                      u2101 056C  
                                    u2110 057A                                      u2030 0485  
                                    u2111 0579                                      u2031 0484  
                                    u2200 0A9F                                      u3000 17CF  
                                    u2120 0588                                      u2201 0A9E  
                                    u3001 17CE                                      u2121 0587  
                                    u3010 0B37                                      u2130 058D  
                                    u2050 04A8                                      u2131 058C  
                                    u2115 0576                                      u2051 04A7  
                                    u2220 0ACD                                      u3100 0BE9  
                                    u3020 0B5D                                      u2140 0594  
                                    u2060 04BB                                      u2300 0EB7  
                                    u2205 0A9B                                      u2221 0ACC  
                                    u3021 0B5C                                      u2141 0593  
                                    u2125 0584                                      u2061 04BA  
                                    u2301 0EB6                                      _LATA 010C  
                                    u2230 0AD9                                      u3110 0BFE  
                                    u2150 0599                                      u2070 04D7  
                                    u2310 087A                                      _LATB 010D  
                                    u2215 0AA2                                      u2231 0AD8  
                                    u3111 0BFD                                      u3015 0B33  
                                    u2151 0598                                      u2071 04D6  
                                    u2311 0879                                      _LATC 010E  
                                    u2320 0851                                      u3120 0C05  
                                    u3040 0CEB                                      u2400 0821  
                                    u2160 05A4                                      u2080 04DC  
                                    u2321 0850                                      u3121 0C04  
                                    u3105 0BE5                                      u3041 0CEA  
                                    u3025 0B59                                      u2401 0820  
                                    u2161 05A3                                      u2081 04DB  
                                    u2065 04B7                                      u2170 0A72  
                                    u2250 0AFA                                      u3050 0D0C  
                                    u2410 0B6E                                      u2090 0560  
                                    u2171 0A71                                      u2251 0AF9  
                                    u3051 0D0B                                      u3035 0CDD  
                                    u2411 0B6D                                      u2091 055F  
                                    u2180 0A7E                                      u3140 0C15  
                                    u3060 0D54                                      u2500 0BBE  
                                    u2420 0B79                                      u1700 0902  
                                    u3220 00E5                                      u2181 0A7D  
                                    u2245 0ADC                                      u2325 084D  
                                    u3141 0C14                                      u3061 0D53  
                                    u2501 0BBD                                      u2421 0B78  
                                    u1701 0901                                      u3221 00E4  
                                    u3205 00BE                                      u3150 0C1C  
                                    u2510 02B4                                      u3070 0D77  
                                    u2350 16D3                                      u2430 0B8A  
                                    u1710 091F                                      u2270 0E37  
                                    u3230 00F0                                      u2255 0AF6  
                                    u3151 0C1B                                      u3135 0C07  
                                    u2511 02B3                                      u3071 0D76  
                                    u2335 1730                                      u2351 16D2  
                                    u2431 0B89                                      u1711 091E  
                                    u2095 055C                                      u2271 0E36  
                                    u3231 00EF                                      u3215 00D4  
                                    u2520 02BA                                      u3080 09BF  
                                    u1800 0F82                                      u1720 17FF  
                                    u2280 0E5A                                      u3240 013D  
                                    u2265 0AFD                                      u2521 02B9  
                                    u3081 09BE                                      u3065 0D50  
                                    u2345 07F9                                      u1801 0F81  
                                    u1721 17FE                                      u2281 0E59  
                                    u3241 013C                                      u3170 0C2B  
                                    u3090 0BD3                                      u2530 02BF  
                                    u2450 0B9A                                      u2370 080D  
                                    u1810 0FAC                                      u1730 177D  
                                    u2290 0E6B                                      u3250 015F  
                                    _T2PR 001B                                      u2195 0A81  
                                    u3171 0C2A                                      u3091 0BD2  
                                    u2531 02BE                                      u3075 0D73  
                                    u2451 0B99                                      u2371 080C  
                                    u1811 0FAB                                      u1715 091B  
                                    u1731 177C                                      u2291 0E6A  
                                    u3251 015E                                      u3180 0C30  
                                    u2700 03BF                                      u2620 036D  
                                    u2540 02DF                                      u1820 0FCB  
                                    u1740 0F0A                                      u1900 0775  
                                    u3260 01AF                                      u3181 0C2F  
                                    u3165 0C1E                                      u2701 03BE  
                                    u2621 036C                                      u2605 035C  
                                    u2541 02DE                                      u2445 0B8E  
                                    u1821 0FCA                                      u1741 0F09  
                                    u1901 0774                                      u3261 01AE  
                                    u3245 0139                                      u2710 03C4  
                                    u2550 02E5                                      u2470 0BA9  
                                    u1830 0FD0                                      u1910 0797  
                                    u3270 01C8                                      u3190 00B0  
                                    u2711 03C3                                      u2615 0363  
                                    u2551 02E4                                      u2471 0BA8  
                                    u1831 0FCF                                      u1815 0FA8  
                                    u1911 0796                                      u3407 021A  
                                    u3255 015B                                      u3191 00AF  
                                    u2720 03D8                                      u2640 0387  
                                    u2560 02EA                                      u2800 0D7E  
                                    u1760 0F35                                      u1920 07B5  
                                    u1680 08EE                                      u3280 0297  
                                    u2721 03D7                                      u2641 0386  
                                    u2561 02E9                                      u2801 0D7D  
                                    u2465 0B9B                                      u2385 0812  
                                    u1761 0F34                                      u1921 07B4  
                                    u1681 08ED                                      u3417 029D  
                                    u3281 0296                                      u3265 01AB  
                                    u2730 03DF                                      u2650 039A  
                                    u2570 0305                                      u2810 0D82  
                                    u2490 0BB9                                      u1930 07BA  
                                    u1850 070B                                      u1690 08F3  
                                    _T4PR 0414                                      u2731 03DE  
                                    u2651 0399                                      u2635 036F  
                                    u2571 0304                                      u2811 0D81  
                                    u3427 0D2E                                      u2491 0BB8  
                                    u2475 0BA5                                      u2395 0817  
                                    u1931 07B9                                      u1915 0793  
                                    u1851 070A                                      u1691 08F2  
                                    u3275 01C4                                      u3195 00AC  
                                    u3347 006D                                      u2740 03E5  
                                    u2660 03A2                                      u2580 0323  
                                    u2900 0DF3                                      u2820 0DA2  
                                    u1780 0F5F                                      u3437 0830  
                                    u2741 03E4                                      u2661 03A1  
                                    u2645 0383                                      u2581 0322  
                                    u2901 0DF2                                      u2821 0DA1  
                                    u2485 0BAF                                      u3285 0293  
                                    u3357 007D                                      u2750 03F1  
                                    u2590 035B                                      u2910 0E07  
                                    u1790 0F6F                                      u1870 0736  
                                    u1950 0A04                                      u3447 0C43  
                                    u2751 03F0                                      u2591 035A  
                                    u1791 0F6E                                      u1871 0735  
                                    u1951 0A03                                      u3367 008C  
                                    u2760 03FF                                      u2680 03AF  
                                    u2920 0E16                                      u2840 0DC1  
                                    u1960 0A12                                      u3457 0CCB  
                                    u2681 03AE                                      u2921 0E15  
                                    u2841 0DC0                                      u1961 0A11  
                                    u3377 0119                                      u2770 041A  
                                    u2930 0E1A                                      u1890 0762  
                                    u1970 0A3B                                      u3467 1791  
                                    u2771 0419                                      u2675 03A5  
                                    u2931 0E19                                      u2915 0E03  
                                    u2835 0DB5                                      u1891 0761  
                                    u1971 0A3A                                      u3387 017D  
                                    u2940 179A                                      u2780 0435  
                                    u2860 0DDB                                      u1980 0A40  
                                    u2941 1799                                      u2781 0434  
                                    u2765 03FB                                      u2861 0DDA  
                                    u1981 0A3F                                      u3397 018B  
                                    u2790 044A                                      u1990 175D  
                                    u2950 05E1                                      u2791 0449  
                                    u2775 0416                                      u2695 03B1  
                                    u2855 0DCF                                      u1991 175C  
                                    u1975 0A37                                      u2951 05E0  
                                    u2880 0DE9                                      u2960 06CB  
                                    u2785 0431                                      u2881 0DE8  
                                    u2961 06CA                                      u2890 0DEF  
                                    u2970 06DE                                      u2891 0DEE  
                                    u2875 0DDF                                      u1995 1759  
                                    u2971 06DD                                      u2980 06F1  
                                    u2981 06F0                                      u2990 17C1  
                                    u2991 17C0                                      _TMR2 001A  
                                    _TMR4 0413                                      _WPUA 020C  
                                    _WPUB 020D                                      _WPUC 020E  
                             main@lower16 00BB                                      abs@a 0073  
                                    _dbuf 02A0                                      _main 0067  
                                    _dtoa 045A                                      _prec 00D3  
                                    _nout 00CF                                      pad@i 0027  
                                    pad@p 0025                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      pad@w 0029  
                                    btemp 007E                                      start 0019  
                             main@upper16 00B9                           ___fldiv@new_exp 0032  
                  __end_of_SPI_Initialize 16A4                              ?_initDisplay 0070  
              ??_TMR4_SetInterruptHandler 0072               convert14BitToFloat@raw14bit 003A  
                                   ??_abs 0075                                     ??_pad 007C  
          __size_of_OSCILLATOR_Initialize 0005             __end_of_OSCILLATOR_Initialize 1698  
                           ___fltol@sign1 0079                           __end_of___aodiv 1000  
                                   ?_main 0070                                     ?_dtoa 0030  
                         __end_of___aomod 07EA                           __end_of___fldiv 045A  
                         __end_of___awdiv 0BC8                           __end_of___fltol 0C3C  
                         ___awdiv@divisor 0070                                     _T2CON 001C  
                                   _LATB7 086F                                     _LATC6 0876  
                                   _LATC7 0877                                     _T4CON 0415  
                                   _T2HLT 001D                                     _T4HLT 0416  
                                   _T2PPS 0E18                                     _T2TMR 001A  
                                   _T2RST 001F                                     _T4PPS 0E1B  
                                   i1l501 0002                                     i1l516 0017  
                                   _T4TMR 0413                                     _T4RST 0418  
                                   i1l491 169D                                     i1l495 16E1  
                         ___awdiv@counter 0075                           __end_of_dataCMD 0B0C  
                            vfpfcnvrt@fmt 004E                        _PWM4_LoadDutyValue 07EA  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                           _TMR4_Initialize 1737  
                         __end_of_command 0AB1                          __end_of_TMR4_ISR 169E  
                                   _flags 00D5                               ?_TMR2_Start 0070  
                                   _dummy 00DA                                     _fputc 08E9  
                                   _fputs 17D7                               ?_TMR4_Start 0070  
                     ?_PWM4_LoadDutyValue 0070                                     _text1 01C2  
                                   _text2 01B1                                     _text3 0242  
                                   _text4 0231                                     _text5 0142  
                                   _text6 0131                                     _text7 0153  
                                   _text8 0220                                     _text9 0120  
                                   pad@fp 002B                                     _width 00D1  
                                   _putch 0003                                     main@i 00C1  
                                   dtoa@d 0030                                     dtoa@i 004C  
                                   dtoa@n 0044                                     dtoa@p 003D  
                                   dtoa@s 0042                                     dtoa@w 0040  
                 __end_of_PWM3_Initialize 16C2                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         ?_SPI_Initialize 0070                           __initialization 001B  
                            __end_of_main 02A6                              __end_of_dtoa 05CA  
                    ??_PWM4_LoadDutyValue 0072                   __end_of_PWM4_Initialize 16CB  
                 __end_of_TMR2_Initialize 16EF               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 00B5                                    ??_dtoa 0038  
                        ??_printByteValue 007C                     __end_of_setMotorSpeed 17D7  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADCON2 009F                                    ?_fputc 0070  
                                  ?_fputs 0078                                    _ADRESH 009C  
                                  _ADRESL 009B                          ___awdiv@dividend 0072  
                                  _ANSELA 018C                                    ?_putch 0070  
                                  _ANSELB 018D                                    _ANSELC 018E  
                                  _RC0PPS 0EA0                                    _RC1PPS 0EA1  
                                  _RB5PPS 0E9D                                    _RB6PPS 0E9E  
                                  _ODCONA 028C                                    _ODCONB 028D  
                                  _ODCONC 028E                                    i1l3341 1698  
                                  i1l3343 169A                                    i1l3581 0014  
                                  i1l2927 16D5                                    i1l3575 0006  
                                  i1l2929 16DC                                    i1l3577 000A  
                                  i1l3579 000F                                    u331_20 000A  
                                  u331_21 0009                                    u236_20 16DC  
                                  u332_20 000F                                    u236_21 16DB  
                                  u332_21 000E                                    u333_20 0014  
                                  u333_21 0013                                    _OSCCON 0099  
                         printByteValue@i 0023                           printByteValue@s 0022  
                                  u204lld 04A3                                    u175lld 0F29  
                                  u184lld 0FEE                                    u177lld 0F54  
                                  u194lld 07D8                                    u186lld 072A  
                                  u188lld 0755                                    _SSPBUF 0211  
                        __end_of___xxtofl 0E24                  convert14BitToFloat@raw14 0044  
                            vfprintf@cfmt 0064               __size_of_PWM3_LoadDutyValue 0016  
                               ??___aodiv 0070                                 ??___aomod 0070  
                                  ___wmul 0807                                 ??___fldiv 0028  
                               ??___awdiv 0074                          __end_of_initOLED 0CD3  
                               ??___fltol 0074                       __size_of_TMR2_Start 0003  
                               ??_dataCMD 0072                       __size_of_TMR4_Start 0003  
                 __end_of_TMR4_Initialize 1750                          ___awdiv@quotient 0077  
                                  _text10 00DB                                    _text11 01A0  
                                  _text12 01D3                __end_of_stuffIntToCharsBuf 0700  
                                  _printf 170E                                    pad@buf 0024  
                                  dtoa@fp 003F                                 ??_command 0072  
                                  _strlen 176A      __end_of_TMR4_DefaultInterruptHandler 0003  
   __size_of_TMR4_DefaultInterruptHandler 0001              _TMR4_DefaultInterruptHandler 0002  
                                  fputc@c 0070                                    fputs@c 0020  
                                  fputs@i 0021                                    fputs@s 0023  
                        setMotorSpeed@num 0074                  ADC_GetConversion@channel 0073  
                                  putch@c 0070                          __end_of_vfprintf 0883  
TMR4_SetInterruptHandler@InterruptHandler 0070                            main@adc_value0 00BD  
                          main@adc_value1 00BF                          ?_PWM3_Initialize 0070  
                            ___xxtofl@arg 007A                              ___xxtofl@exp 0079  
                       _SYSTEM_Initialize 179F                              ___xxtofl@val 0070  
                 __end_of__initialization 0063                     setMotorSpeed@motorNum 0076  
                      ?_SYSTEM_Initialize 0070                                ___fltol@f1 0070  
                          __pcstackCOMMON 0070                     __end_of_TMR4_CallBack 16E2  
                            __pidataBANK1 16FD                              __pidataBANK2 0928  
                            __pidataBANK3 08B6                              __pidataBANK4 0883  
                     ??_SYSTEM_Initialize 007E                                 ?_TMR4_ISR 0070  
                    __size_of_initDisplay 002C                             __end_of_fputc 0928  
                           __end_of_fputs 1800                  __size_of_spi_read_32bits 005D  
                           __end_of_putch 0004                          ?_TMR2_Initialize 0070  
                        ?_PWM4_Initialize 0070               PWM4_LoadDutyValue@dutyValue 0070  
                          _OPTION_REGbits 0095                     stuffIntToCharsBuf@buf 00A5  
                   stuffIntToCharsBuf@neg 00B3                     stuffIntToCharsBuf@num 00A3  
                   stuffIntToCharsBuf@pos 00A6             ?_TMR4_DefaultInterruptHandler 0070  
                                 ??_fputc 0073                 __end_of_SYSTEM_Initialize 17BB  
                                 ??_fputs 0079                                   ??_putch 0070  
                              __pbssBANK1 00C3                                __pbssBANK3 01D3  
                              __pbssBANK5 02A0                     _TMR4_InterruptHandler 00D7  
                              __pmaintext 0067                              initDisplay@i 007C  
                                 ?___wmul 0070                                ??_TMR4_ISR 0070  
                              __pintentry 0004                          ?_TMR4_Initialize 0070  
                                 ?_printf 0066                   __size_of_ADC_Initialize 0009  
                                 ?_strlen 0070                                 ?___xxtofl 0070  
            __size_of_convert14BitToFloat 0049                        __size_of_vfpfcnvrt 00DB  
                                 _OSCTUNE 0098                                   _PWM3DCH 0618  
                                 _PWM3DCL 0617                                   _PWM4DCH 061B  
                      __size_of_spi_write 000E                                   _PWM4DCL 061A  
                                 _PWM3CON 0619                                   _PWM4CON 061C  
                                 _SSP1ADD 0212                                   _PPSLOCK 0E0F  
                                 _SSP1BUF 0211                              ??_TMR2_Start 0070  
                            ??_TMR4_Start 0070                                   _TC_data 00C7  
                               ?_initOLED 0070                          ??_SPI_Initialize 0070  
                                 ___aodiv 0EFF                                   ___aomod 0700  
                                 ___fldiv 02A6                                   ___awdiv 0B69  
                                 ___fltol 0BC8                           __size_of___wmul 001F  
                               ?_vfprintf 005E                     spi_read_32bits@result 0021  
                                 _dataCMD 0AB1                        __end_of_TMR2_Start 1690  
                      __end_of_TMR4_Start 1693                                   __ptext1 05CA  
                                 __ptext2 170E                                   __ptext3 0852  
                                 __ptext4 0E24                                   __ptext5 045A  
                                 __ptext6 09FD                                   __ptext7 176A  
                                 __ptext8 17D7                                   __ptext9 08E9  
                         __size_of_printf 0013                                   _command 0A56  
                         __size_of_strlen 001A                                   _byteVal 00D9  
                   _OSCILLATOR_Initialize 1693                                 _T2CONbits 001C  
                            __size_of_abs 001A                              __size_of_pad 0059  
                              ??___xxtofl 0074                                 _T4CONbits 0415  
                       ??_spi_read_32bits 0075                  ??_PIN_MANAGER_Initialize 0070  
       __size_of_TMR4_SetInterruptHandler 0006                                 _T2HLTbits 001D  
               ?_TMR4_SetInterruptHandler 0070                                 _T4HLTbits 0416  
              __size_of_SYSTEM_Initialize 001C                                   clrloop0 16AB  
                    end_of_initialization 0063                                 _T2RSTbits 001F  
          ??_TMR4_DefaultInterruptHandler 0070                                ??_initOLED 0079  
                               _T4RSTbits 0418                                   fputc@fp 0072  
                                 init_ram 0801                                   fputs@fp 0078  
                                 initloop 0802                         __end_of_vfpfcnvrt 0EFF  
                       __end_of_spi_write 16FD                                _temp_float 00C3  
             __size_of_PWM4_LoadDutyValue 0016                                ??_vfprintf 0061  
                                 strlen@a 0073                                   strlen@s 0074  
                               _SSPDATPPS 0E21                                 _SSPCLKPPS 0E20  
                           ___xxtofl@sign 0078                               ___fldiv@grs 0034  
                             ___fldiv@rem 002D                        _stuffIntToCharsBuf 05CA  
                           ?_spi_transfer 0070                       ?_stuffIntToCharsBuf 00A3  
              __end_of_PWM3_LoadDutyValue 1737                    __size_of_setMotorSpeed 001C  
                             vfpfcnvrt@ap 004F                               vfpfcnvrt@fp 005D  
                             vfpfcnvrt@ll 0055                            __end_of___wmul 0826  
                       __size_of_TMR4_ISR 0006                            _ADC_Initialize 16B0  
                         command@sendByte 0078                    ?_OSCILLATOR_Initialize 0070  
                    ??_stuffIntToCharsBuf 00A8                            __end_of_printf 1721  
                          __end_of_strlen 1784                       start_initialization 001B  
           convert14BitToFloat@temp_Float 003E           __size_of_PIN_MANAGER_Initialize 0048  
                             __end_of_abs 176A                               __end_of_pad 0A56  
           convert14BitToFloat@signed_int 0042                   __size_of_printByteValue 00A5  
                          ??_spi_transfer 0070                    stuffIntToCharsBuf@dig1 00AD  
                  stuffIntToCharsBuf@dig2 00AF                    stuffIntToCharsBuf@dig3 00B1  
                  stuffIntToCharsBuf@dig4 00AB                           dataCMD@sendByte 0078  
                     _convert14BitToFloat 09B4                             ??_initDisplay 007B  
                __size_of_PWM3_Initialize 0009                               vfprintf@fmt 005E  
                                ??___wmul 0074                               _CCPTMRSbits 029E  
                  __end_of_ADC_Initialize 16B9                               __pdataBANK1 00DB  
                             __pdataBANK2 0120                               __pdataBANK3 01A0  
                             __pdataBANK4 0220                                  ??_printf 007D  
                                ??_strlen 0072                                 ___fldiv@a 0020  
                               ___fldiv@b 0024                      ?_convert14BitToFloat 003A  
                           _setMotorSpeed 17BB                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                        ___aodiv@dividend 0028                  __size_of_PWM4_Initialize 0009  
                __size_of_TMR2_Initialize 000D                         __size_of___xxtofl 00AC  
                  __size_of_TMR4_CallBack 000D                         __size_of_initOLED 0097  
                  _PIN_MANAGER_Initialize 096C                                 _dtoa$1483 003B  
                                ?___aodiv 0020                                  ?___aomod 0020  
        __end_of_TMR4_SetInterruptHandler 16AA                                  ?___fldiv 0020  
                                ?___awdiv 0070                          ___aodiv@quotient 0073  
                         _spi_read_32bits 0B0C                                  ?___fltol 0070  
                         ?_ADC_Initialize 0070                                  ?_dataCMD 0070  
                     __end_of_initDisplay 0852              ??_INTERRUPT_InterruptManager 0070  
                       __size_of_vfprintf 0031                                  ?_command 0070  
                   ??_convert14BitToFloat 007E                            ?_setMotorSpeed 0074  
                __size_of_TMR4_Initialize 0019                            __size_of_fputc 003F  
                                _T2CLKCON 001E                            __size_of_fputs 0029  
                                _T4CLKCON 0417                            __size_of_putch 0001  
                               _milliTime 00CB                            ___wmul@product 0074  
                             dataCMD@bit0 0074                                 clear_ram0 16AA  
                                _PIE2bits 0091       __size_of_INTERRUPT_InterruptManager 0015  
                                _PIR1bits 0010                                  _PIR2bits 0011  
                       printByteValue@pos 007A                     printByteValue@byteVal 0079  
                                _SSP1CON1 0215                                  _TMR4_ISR 1698  
                           _TMR4_CallBack 16D5                                  _SSP1STAT 0214  
                               _vfpfcnvrt 0E24                                 _spi_write 16EF  
                       ??_PWM3_Initialize 0070                      __end_of_spi_transfer 16D5  
                              _ADCON0bits 009D                         ___wmul@multiplier 0070  
                        spi_transfer@data 0070                            _printByteValue 0CD3  
                       ??_TMR2_Initialize 0070                         ??_PWM4_Initialize 0070  
                 __end_of_spi_read_32bits 0B69                __end_of_PWM4_LoadDutyValue 0800  
                              vfprintf@ap 0060                                vfprintf@fp 0063  
                             _initDisplay 0826                         _ADC_GetConversion 1784  
                          ?_TMR4_CallBack 0070                   __size_of_SPI_Initialize 0006  
                 ??_OSCILLATOR_Initialize 0070                        ?_ADC_GetConversion 0070  
                        __size_of___aodiv 0101                          __size_of___aomod 00EA  
                        __size_of___fldiv 01B4                          __size_of___awdiv 005F  
                        __size_of___fltol 0074                                ?_vfpfcnvrt 004E  
                        __size_of_dataCMD 005B                                ?_spi_write 0070  
                         ___aodiv@divisor 0020                           ??_setMotorSpeed 0078  
                         ___aodiv@counter 0071                  _TMR4_SetInterruptHandler 16A4  
                      _PWM3_LoadDutyValue 1721                       ??_ADC_GetConversion 0072  
                        __size_of_command 005B                                  ___xxtofl 0D78  
                  __end_of_printByteValue 0D78                                  __ptext10 0003  
                                __ptext11 1750                                  __ptext20 1721  
                                __ptext12 0700                                  __ptext21 0CD3  
                                __ptext13 0EFF                                  __ptext30 0A56  
                                __ptext22 09B4                                  __ptext14 0807  
                                __ptext31 16EF                                  __ptext23 0D78  
                                __ptext15 0B69                                  __ptext40 096C  
                                __ptext32 1737                                  __ptext24 02A6  
                                __ptext16 0B0C                                  __ptext41 1693  
                                __ptext33 1690                                  __ptext25 0BC8  
                                __ptext17 16CB                                  __ptext42 16B0  
                                __ptext34 16A4                                  __ptext26 179F  
                                __ptext18 17BB                                  __ptext43 1784  
                                __ptext35 16E2                                  __ptext27 0826  
                                __ptext19 07EA                                  __ptext36 168D  
                                __ptext28 0C3C                                  __ptext45 1698  
                                __ptext37 169E                                  __ptext29 0AB1  
                                __ptext46 16D5                                  __ptext38 16C2  
                                __ptext47 0002                                  __ptext39 16B9  
                     ?_PWM3_LoadDutyValue 0070                                  dataCMD@i 0076  
                                dataCMD@s 0075                                  _initOLED 0C3C  
                     spi_read_32bits@byte 0020                         ??_TMR4_Initialize 0072  
                           __size_of_main 023F                             __size_of_dtoa 0170  
                        spi_read_32bits@i 0025                 __end_of_ADC_GetConversion 179F  
                    ??_PWM3_LoadDutyValue 0072                                  int$flags 007E  
                                _vfprintf 0852        __end_of_INTERRUPT_InterruptManager 0019  
              _INTERRUPT_InterruptManager 0004                                  command@i 0076  
                                command@s 0075                                 printf@fmt 0066  
                            _SSP1STATbits 0214               PIN_MANAGER_Initialize@state 0070  
                        ___aomod@dividend 0028               __size_of_stuffIntToCharsBuf 0136  
                              _INTCONbits 000B                           ?_printByteValue 0079  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0070  
                             _PPSLOCKbits 0E0F                          ?_spi_read_32bits 0071  
                        ??_ADC_Initialize 0070                           ??_TMR4_CallBack 0070  
                   __size_of_spi_transfer 000A                                  printf@ap 00A2  
             PWM3_LoadDutyValue@dutyValue 0070                           ___aomod@divisor 0020  
                             ??_vfpfcnvrt 0050                           ___aomod@counter 0071  
                             ??_spi_write 0070                             __pstringtext1 1800  
                           __pstringtext2 1818                             __pstringtext3 182D  
                           __pstringtext4 0000                                _TMR2_Start 168D  
                              _TMR4_Start 1690                              ___aodiv@sign 0072  
          __end_of_PIN_MANAGER_Initialize 09B4                   printByteValue@lowerBits 0020  
                            _spi_transfer 16CB                __size_of_ADC_GetConversion 001B  
                            ___aomod@sign 0072                           _PWM3_Initialize 16B9  
