

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Aug 28 13:43:27 2025

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	idataBANK4,global,class=CODE,delta=2,noexec
     8                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    19                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,noexec
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	intentry,global,class=CODE,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,delta=2
    74                           	psect	text49,local,class=CODE,merge=1,delta=2
    75                           	psect	text50,local,class=CODE,merge=1,delta=2
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    77                           	dabs	1,0x7E,2
    78  0000                     
    79                           ; Version 2.20
    80                           ; Generated 12/02/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16F1619 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0090                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0095                     	;# 
   156  0096                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009A                     	;# 
   160  009B                     	;# 
   161  009B                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  0111                     	;# 
   170  0112                     	;# 
   171  0113                     	;# 
   172  0114                     	;# 
   173  0115                     	;# 
   174  0116                     	;# 
   175  0117                     	;# 
   176  0118                     	;# 
   177  0119                     	;# 
   178  011C                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  018E                     	;# 
   182  0191                     	;# 
   183  0191                     	;# 
   184  0192                     	;# 
   185  0193                     	;# 
   186  0193                     	;# 
   187  0194                     	;# 
   188  0195                     	;# 
   189  0196                     	;# 
   190  0197                     	;# 
   191  0199                     	;# 
   192  0199                     	;# 
   193  0199                     	;# 
   194  019A                     	;# 
   195  019A                     	;# 
   196  019A                     	;# 
   197  019B                     	;# 
   198  019B                     	;# 
   199  019B                     	;# 
   200  019B                     	;# 
   201  019B                     	;# 
   202  019C                     	;# 
   203  019C                     	;# 
   204  019C                     	;# 
   205  019D                     	;# 
   206  019D                     	;# 
   207  019D                     	;# 
   208  019E                     	;# 
   209  019E                     	;# 
   210  019E                     	;# 
   211  019F                     	;# 
   212  019F                     	;# 
   213  019F                     	;# 
   214  019F                     	;# 
   215  019F                     	;# 
   216  020C                     	;# 
   217  020D                     	;# 
   218  020E                     	;# 
   219  0211                     	;# 
   220  0211                     	;# 
   221  0212                     	;# 
   222  0212                     	;# 
   223  0213                     	;# 
   224  0213                     	;# 
   225  0214                     	;# 
   226  0214                     	;# 
   227  0215                     	;# 
   228  0215                     	;# 
   229  0215                     	;# 
   230  0215                     	;# 
   231  0216                     	;# 
   232  0216                     	;# 
   233  0217                     	;# 
   234  0217                     	;# 
   235  028C                     	;# 
   236  028D                     	;# 
   237  028E                     	;# 
   238  0291                     	;# 
   239  0291                     	;# 
   240  0292                     	;# 
   241  0293                     	;# 
   242  0294                     	;# 
   243  0298                     	;# 
   244  0298                     	;# 
   245  0299                     	;# 
   246  029A                     	;# 
   247  029B                     	;# 
   248  029E                     	;# 
   249  030C                     	;# 
   250  030D                     	;# 
   251  030E                     	;# 
   252  038C                     	;# 
   253  038D                     	;# 
   254  038E                     	;# 
   255  0391                     	;# 
   256  0392                     	;# 
   257  0393                     	;# 
   258  0394                     	;# 
   259  0395                     	;# 
   260  0396                     	;# 
   261  0397                     	;# 
   262  0398                     	;# 
   263  0399                     	;# 
   264  040E                     	;# 
   265  0413                     	;# 
   266  0413                     	;# 
   267  0414                     	;# 
   268  0414                     	;# 
   269  0415                     	;# 
   270  0416                     	;# 
   271  0417                     	;# 
   272  0418                     	;# 
   273  041A                     	;# 
   274  041A                     	;# 
   275  041B                     	;# 
   276  041B                     	;# 
   277  041C                     	;# 
   278  041D                     	;# 
   279  041E                     	;# 
   280  041F                     	;# 
   281  0493                     	;# 
   282  0494                     	;# 
   283  0495                     	;# 
   284  0496                     	;# 
   285  049A                     	;# 
   286  049B                     	;# 
   287  049C                     	;# 
   288  049D                     	;# 
   289  058C                     	;# 
   290  058C                     	;# 
   291  058D                     	;# 
   292  058E                     	;# 
   293  058E                     	;# 
   294  058F                     	;# 
   295  0590                     	;# 
   296  0590                     	;# 
   297  0591                     	;# 
   298  0592                     	;# 
   299  0592                     	;# 
   300  0593                     	;# 
   301  0594                     	;# 
   302  0594                     	;# 
   303  0595                     	;# 
   304  0596                     	;# 
   305  0596                     	;# 
   306  0597                     	;# 
   307  0598                     	;# 
   308  0599                     	;# 
   309  059A                     	;# 
   310  059B                     	;# 
   311  059B                     	;# 
   312  059C                     	;# 
   313  059D                     	;# 
   314  060C                     	;# 
   315  060C                     	;# 
   316  060D                     	;# 
   317  060E                     	;# 
   318  060F                     	;# 
   319  060F                     	;# 
   320  0610                     	;# 
   321  0611                     	;# 
   322  0612                     	;# 
   323  0613                     	;# 
   324  0614                     	;# 
   325  0617                     	;# 
   326  0617                     	;# 
   327  0618                     	;# 
   328  0619                     	;# 
   329  061A                     	;# 
   330  061A                     	;# 
   331  061B                     	;# 
   332  061C                     	;# 
   333  0691                     	;# 
   334  0692                     	;# 
   335  0693                     	;# 
   336  0694                     	;# 
   337  0695                     	;# 
   338  0696                     	;# 
   339  0697                     	;# 
   340  0699                     	;# 
   341  069A                     	;# 
   342  0711                     	;# 
   343  0712                     	;# 
   344  0713                     	;# 
   345  0714                     	;# 
   346  0715                     	;# 
   347  0718                     	;# 
   348  0718                     	;# 
   349  0719                     	;# 
   350  071A                     	;# 
   351  071A                     	;# 
   352  071B                     	;# 
   353  071C                     	;# 
   354  071D                     	;# 
   355  0791                     	;# 
   356  0791                     	;# 
   357  0792                     	;# 
   358  0793                     	;# 
   359  0793                     	;# 
   360  0794                     	;# 
   361  0795                     	;# 
   362  0795                     	;# 
   363  0796                     	;# 
   364  0797                     	;# 
   365  0797                     	;# 
   366  0798                     	;# 
   367  0799                     	;# 
   368  079A                     	;# 
   369  080C                     	;# 
   370  080C                     	;# 
   371  080D                     	;# 
   372  080E                     	;# 
   373  080E                     	;# 
   374  080F                     	;# 
   375  0810                     	;# 
   376  0810                     	;# 
   377  0811                     	;# 
   378  0812                     	;# 
   379  0812                     	;# 
   380  0813                     	;# 
   381  0814                     	;# 
   382  0815                     	;# 
   383  0816                     	;# 
   384  0817                     	;# 
   385  0818                     	;# 
   386  0819                     	;# 
   387  081A                     	;# 
   388  081A                     	;# 
   389  081B                     	;# 
   390  081C                     	;# 
   391  081C                     	;# 
   392  081D                     	;# 
   393  088C                     	;# 
   394  088D                     	;# 
   395  088E                     	;# 
   396  088F                     	;# 
   397  088F                     	;# 
   398  0890                     	;# 
   399  0891                     	;# 
   400  0892                     	;# 
   401  0893                     	;# 
   402  0893                     	;# 
   403  0894                     	;# 
   404  0895                     	;# 
   405  0896                     	;# 
   406  0897                     	;# 
   407  0897                     	;# 
   408  0898                     	;# 
   409  0899                     	;# 
   410  0D8C                     	;# 
   411  0D8C                     	;# 
   412  0D8D                     	;# 
   413  0D8E                     	;# 
   414  0D8F                     	;# 
   415  0D8F                     	;# 
   416  0D90                     	;# 
   417  0D91                     	;# 
   418  0D92                     	;# 
   419  0D92                     	;# 
   420  0D93                     	;# 
   421  0D94                     	;# 
   422  0D95                     	;# 
   423  0D95                     	;# 
   424  0D96                     	;# 
   425  0D97                     	;# 
   426  0D98                     	;# 
   427  0D99                     	;# 
   428  0D9A                     	;# 
   429  0D9B                     	;# 
   430  0D9C                     	;# 
   431  0D9D                     	;# 
   432  0D9E                     	;# 
   433  0D9E                     	;# 
   434  0D9F                     	;# 
   435  0DA0                     	;# 
   436  0DA1                     	;# 
   437  0DA1                     	;# 
   438  0DA2                     	;# 
   439  0DA3                     	;# 
   440  0DA4                     	;# 
   441  0DA4                     	;# 
   442  0DA5                     	;# 
   443  0DA6                     	;# 
   444  0DA7                     	;# 
   445  0DA7                     	;# 
   446  0DA8                     	;# 
   447  0DA9                     	;# 
   448  0DAA                     	;# 
   449  0DAB                     	;# 
   450  0DAC                     	;# 
   451  0DAD                     	;# 
   452  0DAE                     	;# 
   453  0DAF                     	;# 
   454  0E0F                     	;# 
   455  0E10                     	;# 
   456  0E11                     	;# 
   457  0E12                     	;# 
   458  0E13                     	;# 
   459  0E14                     	;# 
   460  0E15                     	;# 
   461  0E16                     	;# 
   462  0E17                     	;# 
   463  0E18                     	;# 
   464  0E19                     	;# 
   465  0E1A                     	;# 
   466  0E1B                     	;# 
   467  0E1C                     	;# 
   468  0E1D                     	;# 
   469  0E1E                     	;# 
   470  0E1F                     	;# 
   471  0E20                     	;# 
   472  0E21                     	;# 
   473  0E22                     	;# 
   474  0E23                     	;# 
   475  0E24                     	;# 
   476  0E25                     	;# 
   477  0E26                     	;# 
   478  0E27                     	;# 
   479  0E28                     	;# 
   480  0E29                     	;# 
   481  0E2A                     	;# 
   482  0E2B                     	;# 
   483  0E2C                     	;# 
   484  0E2D                     	;# 
   485  0E2E                     	;# 
   486  0E90                     	;# 
   487  0E91                     	;# 
   488  0E92                     	;# 
   489  0E94                     	;# 
   490  0E95                     	;# 
   491  0E9C                     	;# 
   492  0E9D                     	;# 
   493  0E9E                     	;# 
   494  0E9F                     	;# 
   495  0EA0                     	;# 
   496  0EA1                     	;# 
   497  0EA2                     	;# 
   498  0EA3                     	;# 
   499  0EA4                     	;# 
   500  0EA5                     	;# 
   501  0EA6                     	;# 
   502  0EA7                     	;# 
   503  0F0F                     	;# 
   504  0F10                     	;# 
   505  0F11                     	;# 
   506  0F12                     	;# 
   507  0F13                     	;# 
   508  0F14                     	;# 
   509  0F15                     	;# 
   510  0F16                     	;# 
   511  0F17                     	;# 
   512  0F18                     	;# 
   513  0F19                     	;# 
   514  0F1A                     	;# 
   515  0F1B                     	;# 
   516  0F1C                     	;# 
   517  0F1D                     	;# 
   518  0F1E                     	;# 
   519  0F1F                     	;# 
   520  0F20                     	;# 
   521  0F21                     	;# 
   522  0F22                     	;# 
   523  0F23                     	;# 
   524  0F24                     	;# 
   525  0F25                     	;# 
   526  0F26                     	;# 
   527  0F27                     	;# 
   528  0F28                     	;# 
   529  0F29                     	;# 
   530  0F2A                     	;# 
   531  0F2B                     	;# 
   532  0F2C                     	;# 
   533  0F2D                     	;# 
   534  0F2E                     	;# 
   535  0F2F                     	;# 
   536  0F30                     	;# 
   537  0F31                     	;# 
   538  0F32                     	;# 
   539  0F33                     	;# 
   540  0F34                     	;# 
   541  0F35                     	;# 
   542  0F36                     	;# 
   543  0F37                     	;# 
   544  0FE4                     	;# 
   545  0FE5                     	;# 
   546  0FE6                     	;# 
   547  0FE7                     	;# 
   548  0FE8                     	;# 
   549  0FE9                     	;# 
   550  0FEA                     	;# 
   551  0FEB                     	;# 
   552  0FED                     	;# 
   553  0FEE                     	;# 
   554  0FEF                     	;# 
   555  0000                     	;# 
   556  0001                     	;# 
   557  0002                     	;# 
   558  0003                     	;# 
   559  0004                     	;# 
   560  0005                     	;# 
   561  0006                     	;# 
   562  0007                     	;# 
   563  0008                     	;# 
   564  0009                     	;# 
   565  000A                     	;# 
   566  000B                     	;# 
   567  000C                     	;# 
   568  000D                     	;# 
   569  000E                     	;# 
   570  0010                     	;# 
   571  0011                     	;# 
   572  0012                     	;# 
   573  0013                     	;# 
   574  0014                     	;# 
   575  0015                     	;# 
   576  0016                     	;# 
   577  0016                     	;# 
   578  0017                     	;# 
   579  0018                     	;# 
   580  0019                     	;# 
   581  001A                     	;# 
   582  001A                     	;# 
   583  001B                     	;# 
   584  001B                     	;# 
   585  001C                     	;# 
   586  001D                     	;# 
   587  001E                     	;# 
   588  001F                     	;# 
   589  008C                     	;# 
   590  008D                     	;# 
   591  008E                     	;# 
   592  0090                     	;# 
   593  0091                     	;# 
   594  0092                     	;# 
   595  0093                     	;# 
   596  0094                     	;# 
   597  0095                     	;# 
   598  0096                     	;# 
   599  0098                     	;# 
   600  0099                     	;# 
   601  009A                     	;# 
   602  009B                     	;# 
   603  009B                     	;# 
   604  009C                     	;# 
   605  009D                     	;# 
   606  009E                     	;# 
   607  009F                     	;# 
   608  010C                     	;# 
   609  010D                     	;# 
   610  010E                     	;# 
   611  0111                     	;# 
   612  0112                     	;# 
   613  0113                     	;# 
   614  0114                     	;# 
   615  0115                     	;# 
   616  0116                     	;# 
   617  0117                     	;# 
   618  0118                     	;# 
   619  0119                     	;# 
   620  011C                     	;# 
   621  018C                     	;# 
   622  018D                     	;# 
   623  018E                     	;# 
   624  0191                     	;# 
   625  0191                     	;# 
   626  0192                     	;# 
   627  0193                     	;# 
   628  0193                     	;# 
   629  0194                     	;# 
   630  0195                     	;# 
   631  0196                     	;# 
   632  0197                     	;# 
   633  0199                     	;# 
   634  0199                     	;# 
   635  0199                     	;# 
   636  019A                     	;# 
   637  019A                     	;# 
   638  019A                     	;# 
   639  019B                     	;# 
   640  019B                     	;# 
   641  019B                     	;# 
   642  019B                     	;# 
   643  019B                     	;# 
   644  019C                     	;# 
   645  019C                     	;# 
   646  019C                     	;# 
   647  019D                     	;# 
   648  019D                     	;# 
   649  019D                     	;# 
   650  019E                     	;# 
   651  019E                     	;# 
   652  019E                     	;# 
   653  019F                     	;# 
   654  019F                     	;# 
   655  019F                     	;# 
   656  019F                     	;# 
   657  019F                     	;# 
   658  020C                     	;# 
   659  020D                     	;# 
   660  020E                     	;# 
   661  0211                     	;# 
   662  0211                     	;# 
   663  0212                     	;# 
   664  0212                     	;# 
   665  0213                     	;# 
   666  0213                     	;# 
   667  0214                     	;# 
   668  0214                     	;# 
   669  0215                     	;# 
   670  0215                     	;# 
   671  0215                     	;# 
   672  0215                     	;# 
   673  0216                     	;# 
   674  0216                     	;# 
   675  0217                     	;# 
   676  0217                     	;# 
   677  028C                     	;# 
   678  028D                     	;# 
   679  028E                     	;# 
   680  0291                     	;# 
   681  0291                     	;# 
   682  0292                     	;# 
   683  0293                     	;# 
   684  0294                     	;# 
   685  0298                     	;# 
   686  0298                     	;# 
   687  0299                     	;# 
   688  029A                     	;# 
   689  029B                     	;# 
   690  029E                     	;# 
   691  030C                     	;# 
   692  030D                     	;# 
   693  030E                     	;# 
   694  038C                     	;# 
   695  038D                     	;# 
   696  038E                     	;# 
   697  0391                     	;# 
   698  0392                     	;# 
   699  0393                     	;# 
   700  0394                     	;# 
   701  0395                     	;# 
   702  0396                     	;# 
   703  0397                     	;# 
   704  0398                     	;# 
   705  0399                     	;# 
   706  040E                     	;# 
   707  0413                     	;# 
   708  0413                     	;# 
   709  0414                     	;# 
   710  0414                     	;# 
   711  0415                     	;# 
   712  0416                     	;# 
   713  0417                     	;# 
   714  0418                     	;# 
   715  041A                     	;# 
   716  041A                     	;# 
   717  041B                     	;# 
   718  041B                     	;# 
   719  041C                     	;# 
   720  041D                     	;# 
   721  041E                     	;# 
   722  041F                     	;# 
   723  0493                     	;# 
   724  0494                     	;# 
   725  0495                     	;# 
   726  0496                     	;# 
   727  049A                     	;# 
   728  049B                     	;# 
   729  049C                     	;# 
   730  049D                     	;# 
   731  058C                     	;# 
   732  058C                     	;# 
   733  058D                     	;# 
   734  058E                     	;# 
   735  058E                     	;# 
   736  058F                     	;# 
   737  0590                     	;# 
   738  0590                     	;# 
   739  0591                     	;# 
   740  0592                     	;# 
   741  0592                     	;# 
   742  0593                     	;# 
   743  0594                     	;# 
   744  0594                     	;# 
   745  0595                     	;# 
   746  0596                     	;# 
   747  0596                     	;# 
   748  0597                     	;# 
   749  0598                     	;# 
   750  0599                     	;# 
   751  059A                     	;# 
   752  059B                     	;# 
   753  059B                     	;# 
   754  059C                     	;# 
   755  059D                     	;# 
   756  060C                     	;# 
   757  060C                     	;# 
   758  060D                     	;# 
   759  060E                     	;# 
   760  060F                     	;# 
   761  060F                     	;# 
   762  0610                     	;# 
   763  0611                     	;# 
   764  0612                     	;# 
   765  0613                     	;# 
   766  0614                     	;# 
   767  0617                     	;# 
   768  0617                     	;# 
   769  0618                     	;# 
   770  0619                     	;# 
   771  061A                     	;# 
   772  061A                     	;# 
   773  061B                     	;# 
   774  061C                     	;# 
   775  0691                     	;# 
   776  0692                     	;# 
   777  0693                     	;# 
   778  0694                     	;# 
   779  0695                     	;# 
   780  0696                     	;# 
   781  0697                     	;# 
   782  0699                     	;# 
   783  069A                     	;# 
   784  0711                     	;# 
   785  0712                     	;# 
   786  0713                     	;# 
   787  0714                     	;# 
   788  0715                     	;# 
   789  0718                     	;# 
   790  0718                     	;# 
   791  0719                     	;# 
   792  071A                     	;# 
   793  071A                     	;# 
   794  071B                     	;# 
   795  071C                     	;# 
   796  071D                     	;# 
   797  0791                     	;# 
   798  0791                     	;# 
   799  0792                     	;# 
   800  0793                     	;# 
   801  0793                     	;# 
   802  0794                     	;# 
   803  0795                     	;# 
   804  0795                     	;# 
   805  0796                     	;# 
   806  0797                     	;# 
   807  0797                     	;# 
   808  0798                     	;# 
   809  0799                     	;# 
   810  079A                     	;# 
   811  080C                     	;# 
   812  080C                     	;# 
   813  080D                     	;# 
   814  080E                     	;# 
   815  080E                     	;# 
   816  080F                     	;# 
   817  0810                     	;# 
   818  0810                     	;# 
   819  0811                     	;# 
   820  0812                     	;# 
   821  0812                     	;# 
   822  0813                     	;# 
   823  0814                     	;# 
   824  0815                     	;# 
   825  0816                     	;# 
   826  0817                     	;# 
   827  0818                     	;# 
   828  0819                     	;# 
   829  081A                     	;# 
   830  081A                     	;# 
   831  081B                     	;# 
   832  081C                     	;# 
   833  081C                     	;# 
   834  081D                     	;# 
   835  088C                     	;# 
   836  088D                     	;# 
   837  088E                     	;# 
   838  088F                     	;# 
   839  088F                     	;# 
   840  0890                     	;# 
   841  0891                     	;# 
   842  0892                     	;# 
   843  0893                     	;# 
   844  0893                     	;# 
   845  0894                     	;# 
   846  0895                     	;# 
   847  0896                     	;# 
   848  0897                     	;# 
   849  0897                     	;# 
   850  0898                     	;# 
   851  0899                     	;# 
   852  0D8C                     	;# 
   853  0D8C                     	;# 
   854  0D8D                     	;# 
   855  0D8E                     	;# 
   856  0D8F                     	;# 
   857  0D8F                     	;# 
   858  0D90                     	;# 
   859  0D91                     	;# 
   860  0D92                     	;# 
   861  0D92                     	;# 
   862  0D93                     	;# 
   863  0D94                     	;# 
   864  0D95                     	;# 
   865  0D95                     	;# 
   866  0D96                     	;# 
   867  0D97                     	;# 
   868  0D98                     	;# 
   869  0D99                     	;# 
   870  0D9A                     	;# 
   871  0D9B                     	;# 
   872  0D9C                     	;# 
   873  0D9D                     	;# 
   874  0D9E                     	;# 
   875  0D9E                     	;# 
   876  0D9F                     	;# 
   877  0DA0                     	;# 
   878  0DA1                     	;# 
   879  0DA1                     	;# 
   880  0DA2                     	;# 
   881  0DA3                     	;# 
   882  0DA4                     	;# 
   883  0DA4                     	;# 
   884  0DA5                     	;# 
   885  0DA6                     	;# 
   886  0DA7                     	;# 
   887  0DA7                     	;# 
   888  0DA8                     	;# 
   889  0DA9                     	;# 
   890  0DAA                     	;# 
   891  0DAB                     	;# 
   892  0DAC                     	;# 
   893  0DAD                     	;# 
   894  0DAE                     	;# 
   895  0DAF                     	;# 
   896  0E0F                     	;# 
   897  0E10                     	;# 
   898  0E11                     	;# 
   899  0E12                     	;# 
   900  0E13                     	;# 
   901  0E14                     	;# 
   902  0E15                     	;# 
   903  0E16                     	;# 
   904  0E17                     	;# 
   905  0E18                     	;# 
   906  0E19                     	;# 
   907  0E1A                     	;# 
   908  0E1B                     	;# 
   909  0E1C                     	;# 
   910  0E1D                     	;# 
   911  0E1E                     	;# 
   912  0E1F                     	;# 
   913  0E20                     	;# 
   914  0E21                     	;# 
   915  0E22                     	;# 
   916  0E23                     	;# 
   917  0E24                     	;# 
   918  0E25                     	;# 
   919  0E26                     	;# 
   920  0E27                     	;# 
   921  0E28                     	;# 
   922  0E29                     	;# 
   923  0E2A                     	;# 
   924  0E2B                     	;# 
   925  0E2C                     	;# 
   926  0E2D                     	;# 
   927  0E2E                     	;# 
   928  0E90                     	;# 
   929  0E91                     	;# 
   930  0E92                     	;# 
   931  0E94                     	;# 
   932  0E95                     	;# 
   933  0E9C                     	;# 
   934  0E9D                     	;# 
   935  0E9E                     	;# 
   936  0E9F                     	;# 
   937  0EA0                     	;# 
   938  0EA1                     	;# 
   939  0EA2                     	;# 
   940  0EA3                     	;# 
   941  0EA4                     	;# 
   942  0EA5                     	;# 
   943  0EA6                     	;# 
   944  0EA7                     	;# 
   945  0F0F                     	;# 
   946  0F10                     	;# 
   947  0F11                     	;# 
   948  0F12                     	;# 
   949  0F13                     	;# 
   950  0F14                     	;# 
   951  0F15                     	;# 
   952  0F16                     	;# 
   953  0F17                     	;# 
   954  0F18                     	;# 
   955  0F19                     	;# 
   956  0F1A                     	;# 
   957  0F1B                     	;# 
   958  0F1C                     	;# 
   959  0F1D                     	;# 
   960  0F1E                     	;# 
   961  0F1F                     	;# 
   962  0F20                     	;# 
   963  0F21                     	;# 
   964  0F22                     	;# 
   965  0F23                     	;# 
   966  0F24                     	;# 
   967  0F25                     	;# 
   968  0F26                     	;# 
   969  0F27                     	;# 
   970  0F28                     	;# 
   971  0F29                     	;# 
   972  0F2A                     	;# 
   973  0F2B                     	;# 
   974  0F2C                     	;# 
   975  0F2D                     	;# 
   976  0F2E                     	;# 
   977  0F2F                     	;# 
   978  0F30                     	;# 
   979  0F31                     	;# 
   980  0F32                     	;# 
   981  0F33                     	;# 
   982  0F34                     	;# 
   983  0F35                     	;# 
   984  0F36                     	;# 
   985  0F37                     	;# 
   986  0FE4                     	;# 
   987  0FE5                     	;# 
   988  0FE6                     	;# 
   989  0FE7                     	;# 
   990  0FE8                     	;# 
   991  0FE9                     	;# 
   992  0FEA                     	;# 
   993  0FEB                     	;# 
   994  0FED                     	;# 
   995  0FEE                     	;# 
   996  0FEF                     	;# 
   997  0000                     	;# 
   998  0001                     	;# 
   999  0002                     	;# 
  1000  0003                     	;# 
  1001  0004                     	;# 
  1002  0005                     	;# 
  1003  0006                     	;# 
  1004  0007                     	;# 
  1005  0008                     	;# 
  1006  0009                     	;# 
  1007  000A                     	;# 
  1008  000B                     	;# 
  1009  000C                     	;# 
  1010  000D                     	;# 
  1011  000E                     	;# 
  1012  0010                     	;# 
  1013  0011                     	;# 
  1014  0012                     	;# 
  1015  0013                     	;# 
  1016  0014                     	;# 
  1017  0015                     	;# 
  1018  0016                     	;# 
  1019  0016                     	;# 
  1020  0017                     	;# 
  1021  0018                     	;# 
  1022  0019                     	;# 
  1023  001A                     	;# 
  1024  001A                     	;# 
  1025  001B                     	;# 
  1026  001B                     	;# 
  1027  001C                     	;# 
  1028  001D                     	;# 
  1029  001E                     	;# 
  1030  001F                     	;# 
  1031  008C                     	;# 
  1032  008D                     	;# 
  1033  008E                     	;# 
  1034  0090                     	;# 
  1035  0091                     	;# 
  1036  0092                     	;# 
  1037  0093                     	;# 
  1038  0094                     	;# 
  1039  0095                     	;# 
  1040  0096                     	;# 
  1041  0098                     	;# 
  1042  0099                     	;# 
  1043  009A                     	;# 
  1044  009B                     	;# 
  1045  009B                     	;# 
  1046  009C                     	;# 
  1047  009D                     	;# 
  1048  009E                     	;# 
  1049  009F                     	;# 
  1050  010C                     	;# 
  1051  010D                     	;# 
  1052  010E                     	;# 
  1053  0111                     	;# 
  1054  0112                     	;# 
  1055  0113                     	;# 
  1056  0114                     	;# 
  1057  0115                     	;# 
  1058  0116                     	;# 
  1059  0117                     	;# 
  1060  0118                     	;# 
  1061  0119                     	;# 
  1062  011C                     	;# 
  1063  018C                     	;# 
  1064  018D                     	;# 
  1065  018E                     	;# 
  1066  0191                     	;# 
  1067  0191                     	;# 
  1068  0192                     	;# 
  1069  0193                     	;# 
  1070  0193                     	;# 
  1071  0194                     	;# 
  1072  0195                     	;# 
  1073  0196                     	;# 
  1074  0197                     	;# 
  1075  0199                     	;# 
  1076  0199                     	;# 
  1077  0199                     	;# 
  1078  019A                     	;# 
  1079  019A                     	;# 
  1080  019A                     	;# 
  1081  019B                     	;# 
  1082  019B                     	;# 
  1083  019B                     	;# 
  1084  019B                     	;# 
  1085  019B                     	;# 
  1086  019C                     	;# 
  1087  019C                     	;# 
  1088  019C                     	;# 
  1089  019D                     	;# 
  1090  019D                     	;# 
  1091  019D                     	;# 
  1092  019E                     	;# 
  1093  019E                     	;# 
  1094  019E                     	;# 
  1095  019F                     	;# 
  1096  019F                     	;# 
  1097  019F                     	;# 
  1098  019F                     	;# 
  1099  019F                     	;# 
  1100  020C                     	;# 
  1101  020D                     	;# 
  1102  020E                     	;# 
  1103  0211                     	;# 
  1104  0211                     	;# 
  1105  0212                     	;# 
  1106  0212                     	;# 
  1107  0213                     	;# 
  1108  0213                     	;# 
  1109  0214                     	;# 
  1110  0214                     	;# 
  1111  0215                     	;# 
  1112  0215                     	;# 
  1113  0215                     	;# 
  1114  0215                     	;# 
  1115  0216                     	;# 
  1116  0216                     	;# 
  1117  0217                     	;# 
  1118  0217                     	;# 
  1119  028C                     	;# 
  1120  028D                     	;# 
  1121  028E                     	;# 
  1122  0291                     	;# 
  1123  0291                     	;# 
  1124  0292                     	;# 
  1125  0293                     	;# 
  1126  0294                     	;# 
  1127  0298                     	;# 
  1128  0298                     	;# 
  1129  0299                     	;# 
  1130  029A                     	;# 
  1131  029B                     	;# 
  1132  029E                     	;# 
  1133  030C                     	;# 
  1134  030D                     	;# 
  1135  030E                     	;# 
  1136  038C                     	;# 
  1137  038D                     	;# 
  1138  038E                     	;# 
  1139  0391                     	;# 
  1140  0392                     	;# 
  1141  0393                     	;# 
  1142  0394                     	;# 
  1143  0395                     	;# 
  1144  0396                     	;# 
  1145  0397                     	;# 
  1146  0398                     	;# 
  1147  0399                     	;# 
  1148  040E                     	;# 
  1149  0413                     	;# 
  1150  0413                     	;# 
  1151  0414                     	;# 
  1152  0414                     	;# 
  1153  0415                     	;# 
  1154  0416                     	;# 
  1155  0417                     	;# 
  1156  0418                     	;# 
  1157  041A                     	;# 
  1158  041A                     	;# 
  1159  041B                     	;# 
  1160  041B                     	;# 
  1161  041C                     	;# 
  1162  041D                     	;# 
  1163  041E                     	;# 
  1164  041F                     	;# 
  1165  0493                     	;# 
  1166  0494                     	;# 
  1167  0495                     	;# 
  1168  0496                     	;# 
  1169  049A                     	;# 
  1170  049B                     	;# 
  1171  049C                     	;# 
  1172  049D                     	;# 
  1173  058C                     	;# 
  1174  058C                     	;# 
  1175  058D                     	;# 
  1176  058E                     	;# 
  1177  058E                     	;# 
  1178  058F                     	;# 
  1179  0590                     	;# 
  1180  0590                     	;# 
  1181  0591                     	;# 
  1182  0592                     	;# 
  1183  0592                     	;# 
  1184  0593                     	;# 
  1185  0594                     	;# 
  1186  0594                     	;# 
  1187  0595                     	;# 
  1188  0596                     	;# 
  1189  0596                     	;# 
  1190  0597                     	;# 
  1191  0598                     	;# 
  1192  0599                     	;# 
  1193  059A                     	;# 
  1194  059B                     	;# 
  1195  059B                     	;# 
  1196  059C                     	;# 
  1197  059D                     	;# 
  1198  060C                     	;# 
  1199  060C                     	;# 
  1200  060D                     	;# 
  1201  060E                     	;# 
  1202  060F                     	;# 
  1203  060F                     	;# 
  1204  0610                     	;# 
  1205  0611                     	;# 
  1206  0612                     	;# 
  1207  0613                     	;# 
  1208  0614                     	;# 
  1209  0617                     	;# 
  1210  0617                     	;# 
  1211  0618                     	;# 
  1212  0619                     	;# 
  1213  061A                     	;# 
  1214  061A                     	;# 
  1215  061B                     	;# 
  1216  061C                     	;# 
  1217  0691                     	;# 
  1218  0692                     	;# 
  1219  0693                     	;# 
  1220  0694                     	;# 
  1221  0695                     	;# 
  1222  0696                     	;# 
  1223  0697                     	;# 
  1224  0699                     	;# 
  1225  069A                     	;# 
  1226  0711                     	;# 
  1227  0712                     	;# 
  1228  0713                     	;# 
  1229  0714                     	;# 
  1230  0715                     	;# 
  1231  0718                     	;# 
  1232  0718                     	;# 
  1233  0719                     	;# 
  1234  071A                     	;# 
  1235  071A                     	;# 
  1236  071B                     	;# 
  1237  071C                     	;# 
  1238  071D                     	;# 
  1239  0791                     	;# 
  1240  0791                     	;# 
  1241  0792                     	;# 
  1242  0793                     	;# 
  1243  0793                     	;# 
  1244  0794                     	;# 
  1245  0795                     	;# 
  1246  0795                     	;# 
  1247  0796                     	;# 
  1248  0797                     	;# 
  1249  0797                     	;# 
  1250  0798                     	;# 
  1251  0799                     	;# 
  1252  079A                     	;# 
  1253  080C                     	;# 
  1254  080C                     	;# 
  1255  080D                     	;# 
  1256  080E                     	;# 
  1257  080E                     	;# 
  1258  080F                     	;# 
  1259  0810                     	;# 
  1260  0810                     	;# 
  1261  0811                     	;# 
  1262  0812                     	;# 
  1263  0812                     	;# 
  1264  0813                     	;# 
  1265  0814                     	;# 
  1266  0815                     	;# 
  1267  0816                     	;# 
  1268  0817                     	;# 
  1269  0818                     	;# 
  1270  0819                     	;# 
  1271  081A                     	;# 
  1272  081A                     	;# 
  1273  081B                     	;# 
  1274  081C                     	;# 
  1275  081C                     	;# 
  1276  081D                     	;# 
  1277  088C                     	;# 
  1278  088D                     	;# 
  1279  088E                     	;# 
  1280  088F                     	;# 
  1281  088F                     	;# 
  1282  0890                     	;# 
  1283  0891                     	;# 
  1284  0892                     	;# 
  1285  0893                     	;# 
  1286  0893                     	;# 
  1287  0894                     	;# 
  1288  0895                     	;# 
  1289  0896                     	;# 
  1290  0897                     	;# 
  1291  0897                     	;# 
  1292  0898                     	;# 
  1293  0899                     	;# 
  1294  0D8C                     	;# 
  1295  0D8C                     	;# 
  1296  0D8D                     	;# 
  1297  0D8E                     	;# 
  1298  0D8F                     	;# 
  1299  0D8F                     	;# 
  1300  0D90                     	;# 
  1301  0D91                     	;# 
  1302  0D92                     	;# 
  1303  0D92                     	;# 
  1304  0D93                     	;# 
  1305  0D94                     	;# 
  1306  0D95                     	;# 
  1307  0D95                     	;# 
  1308  0D96                     	;# 
  1309  0D97                     	;# 
  1310  0D98                     	;# 
  1311  0D99                     	;# 
  1312  0D9A                     	;# 
  1313  0D9B                     	;# 
  1314  0D9C                     	;# 
  1315  0D9D                     	;# 
  1316  0D9E                     	;# 
  1317  0D9E                     	;# 
  1318  0D9F                     	;# 
  1319  0DA0                     	;# 
  1320  0DA1                     	;# 
  1321  0DA1                     	;# 
  1322  0DA2                     	;# 
  1323  0DA3                     	;# 
  1324  0DA4                     	;# 
  1325  0DA4                     	;# 
  1326  0DA5                     	;# 
  1327  0DA6                     	;# 
  1328  0DA7                     	;# 
  1329  0DA7                     	;# 
  1330  0DA8                     	;# 
  1331  0DA9                     	;# 
  1332  0DAA                     	;# 
  1333  0DAB                     	;# 
  1334  0DAC                     	;# 
  1335  0DAD                     	;# 
  1336  0DAE                     	;# 
  1337  0DAF                     	;# 
  1338  0E0F                     	;# 
  1339  0E10                     	;# 
  1340  0E11                     	;# 
  1341  0E12                     	;# 
  1342  0E13                     	;# 
  1343  0E14                     	;# 
  1344  0E15                     	;# 
  1345  0E16                     	;# 
  1346  0E17                     	;# 
  1347  0E18                     	;# 
  1348  0E19                     	;# 
  1349  0E1A                     	;# 
  1350  0E1B                     	;# 
  1351  0E1C                     	;# 
  1352  0E1D                     	;# 
  1353  0E1E                     	;# 
  1354  0E1F                     	;# 
  1355  0E20                     	;# 
  1356  0E21                     	;# 
  1357  0E22                     	;# 
  1358  0E23                     	;# 
  1359  0E24                     	;# 
  1360  0E25                     	;# 
  1361  0E26                     	;# 
  1362  0E27                     	;# 
  1363  0E28                     	;# 
  1364  0E29                     	;# 
  1365  0E2A                     	;# 
  1366  0E2B                     	;# 
  1367  0E2C                     	;# 
  1368  0E2D                     	;# 
  1369  0E2E                     	;# 
  1370  0E90                     	;# 
  1371  0E91                     	;# 
  1372  0E92                     	;# 
  1373  0E94                     	;# 
  1374  0E95                     	;# 
  1375  0E9C                     	;# 
  1376  0E9D                     	;# 
  1377  0E9E                     	;# 
  1378  0E9F                     	;# 
  1379  0EA0                     	;# 
  1380  0EA1                     	;# 
  1381  0EA2                     	;# 
  1382  0EA3                     	;# 
  1383  0EA4                     	;# 
  1384  0EA5                     	;# 
  1385  0EA6                     	;# 
  1386  0EA7                     	;# 
  1387  0F0F                     	;# 
  1388  0F10                     	;# 
  1389  0F11                     	;# 
  1390  0F12                     	;# 
  1391  0F13                     	;# 
  1392  0F14                     	;# 
  1393  0F15                     	;# 
  1394  0F16                     	;# 
  1395  0F17                     	;# 
  1396  0F18                     	;# 
  1397  0F19                     	;# 
  1398  0F1A                     	;# 
  1399  0F1B                     	;# 
  1400  0F1C                     	;# 
  1401  0F1D                     	;# 
  1402  0F1E                     	;# 
  1403  0F1F                     	;# 
  1404  0F20                     	;# 
  1405  0F21                     	;# 
  1406  0F22                     	;# 
  1407  0F23                     	;# 
  1408  0F24                     	;# 
  1409  0F25                     	;# 
  1410  0F26                     	;# 
  1411  0F27                     	;# 
  1412  0F28                     	;# 
  1413  0F29                     	;# 
  1414  0F2A                     	;# 
  1415  0F2B                     	;# 
  1416  0F2C                     	;# 
  1417  0F2D                     	;# 
  1418  0F2E                     	;# 
  1419  0F2F                     	;# 
  1420  0F30                     	;# 
  1421  0F31                     	;# 
  1422  0F32                     	;# 
  1423  0F33                     	;# 
  1424  0F34                     	;# 
  1425  0F35                     	;# 
  1426  0F36                     	;# 
  1427  0F37                     	;# 
  1428  0FE4                     	;# 
  1429  0FE5                     	;# 
  1430  0FE6                     	;# 
  1431  0FE7                     	;# 
  1432  0FE8                     	;# 
  1433  0FE9                     	;# 
  1434  0FEA                     	;# 
  1435  0FEB                     	;# 
  1436  0FED                     	;# 
  1437  0FEE                     	;# 
  1438  0FEF                     	;# 
  1439  0000                     	;# 
  1440  0001                     	;# 
  1441  0002                     	;# 
  1442  0003                     	;# 
  1443  0004                     	;# 
  1444  0005                     	;# 
  1445  0006                     	;# 
  1446  0007                     	;# 
  1447  0008                     	;# 
  1448  0009                     	;# 
  1449  000A                     	;# 
  1450  000B                     	;# 
  1451  000C                     	;# 
  1452  000D                     	;# 
  1453  000E                     	;# 
  1454  0010                     	;# 
  1455  0011                     	;# 
  1456  0012                     	;# 
  1457  0013                     	;# 
  1458  0014                     	;# 
  1459  0015                     	;# 
  1460  0016                     	;# 
  1461  0016                     	;# 
  1462  0017                     	;# 
  1463  0018                     	;# 
  1464  0019                     	;# 
  1465  001A                     	;# 
  1466  001A                     	;# 
  1467  001B                     	;# 
  1468  001B                     	;# 
  1469  001C                     	;# 
  1470  001D                     	;# 
  1471  001E                     	;# 
  1472  001F                     	;# 
  1473  008C                     	;# 
  1474  008D                     	;# 
  1475  008E                     	;# 
  1476  0090                     	;# 
  1477  0091                     	;# 
  1478  0092                     	;# 
  1479  0093                     	;# 
  1480  0094                     	;# 
  1481  0095                     	;# 
  1482  0096                     	;# 
  1483  0098                     	;# 
  1484  0099                     	;# 
  1485  009A                     	;# 
  1486  009B                     	;# 
  1487  009B                     	;# 
  1488  009C                     	;# 
  1489  009D                     	;# 
  1490  009E                     	;# 
  1491  009F                     	;# 
  1492  010C                     	;# 
  1493  010D                     	;# 
  1494  010E                     	;# 
  1495  0111                     	;# 
  1496  0112                     	;# 
  1497  0113                     	;# 
  1498  0114                     	;# 
  1499  0115                     	;# 
  1500  0116                     	;# 
  1501  0117                     	;# 
  1502  0118                     	;# 
  1503  0119                     	;# 
  1504  011C                     	;# 
  1505  018C                     	;# 
  1506  018D                     	;# 
  1507  018E                     	;# 
  1508  0191                     	;# 
  1509  0191                     	;# 
  1510  0192                     	;# 
  1511  0193                     	;# 
  1512  0193                     	;# 
  1513  0194                     	;# 
  1514  0195                     	;# 
  1515  0196                     	;# 
  1516  0197                     	;# 
  1517  0199                     	;# 
  1518  0199                     	;# 
  1519  0199                     	;# 
  1520  019A                     	;# 
  1521  019A                     	;# 
  1522  019A                     	;# 
  1523  019B                     	;# 
  1524  019B                     	;# 
  1525  019B                     	;# 
  1526  019B                     	;# 
  1527  019B                     	;# 
  1528  019C                     	;# 
  1529  019C                     	;# 
  1530  019C                     	;# 
  1531  019D                     	;# 
  1532  019D                     	;# 
  1533  019D                     	;# 
  1534  019E                     	;# 
  1535  019E                     	;# 
  1536  019E                     	;# 
  1537  019F                     	;# 
  1538  019F                     	;# 
  1539  019F                     	;# 
  1540  019F                     	;# 
  1541  019F                     	;# 
  1542  020C                     	;# 
  1543  020D                     	;# 
  1544  020E                     	;# 
  1545  0211                     	;# 
  1546  0211                     	;# 
  1547  0212                     	;# 
  1548  0212                     	;# 
  1549  0213                     	;# 
  1550  0213                     	;# 
  1551  0214                     	;# 
  1552  0214                     	;# 
  1553  0215                     	;# 
  1554  0215                     	;# 
  1555  0215                     	;# 
  1556  0215                     	;# 
  1557  0216                     	;# 
  1558  0216                     	;# 
  1559  0217                     	;# 
  1560  0217                     	;# 
  1561  028C                     	;# 
  1562  028D                     	;# 
  1563  028E                     	;# 
  1564  0291                     	;# 
  1565  0291                     	;# 
  1566  0292                     	;# 
  1567  0293                     	;# 
  1568  0294                     	;# 
  1569  0298                     	;# 
  1570  0298                     	;# 
  1571  0299                     	;# 
  1572  029A                     	;# 
  1573  029B                     	;# 
  1574  029E                     	;# 
  1575  030C                     	;# 
  1576  030D                     	;# 
  1577  030E                     	;# 
  1578  038C                     	;# 
  1579  038D                     	;# 
  1580  038E                     	;# 
  1581  0391                     	;# 
  1582  0392                     	;# 
  1583  0393                     	;# 
  1584  0394                     	;# 
  1585  0395                     	;# 
  1586  0396                     	;# 
  1587  0397                     	;# 
  1588  0398                     	;# 
  1589  0399                     	;# 
  1590  040E                     	;# 
  1591  0413                     	;# 
  1592  0413                     	;# 
  1593  0414                     	;# 
  1594  0414                     	;# 
  1595  0415                     	;# 
  1596  0416                     	;# 
  1597  0417                     	;# 
  1598  0418                     	;# 
  1599  041A                     	;# 
  1600  041A                     	;# 
  1601  041B                     	;# 
  1602  041B                     	;# 
  1603  041C                     	;# 
  1604  041D                     	;# 
  1605  041E                     	;# 
  1606  041F                     	;# 
  1607  0493                     	;# 
  1608  0494                     	;# 
  1609  0495                     	;# 
  1610  0496                     	;# 
  1611  049A                     	;# 
  1612  049B                     	;# 
  1613  049C                     	;# 
  1614  049D                     	;# 
  1615  058C                     	;# 
  1616  058C                     	;# 
  1617  058D                     	;# 
  1618  058E                     	;# 
  1619  058E                     	;# 
  1620  058F                     	;# 
  1621  0590                     	;# 
  1622  0590                     	;# 
  1623  0591                     	;# 
  1624  0592                     	;# 
  1625  0592                     	;# 
  1626  0593                     	;# 
  1627  0594                     	;# 
  1628  0594                     	;# 
  1629  0595                     	;# 
  1630  0596                     	;# 
  1631  0596                     	;# 
  1632  0597                     	;# 
  1633  0598                     	;# 
  1634  0599                     	;# 
  1635  059A                     	;# 
  1636  059B                     	;# 
  1637  059B                     	;# 
  1638  059C                     	;# 
  1639  059D                     	;# 
  1640  060C                     	;# 
  1641  060C                     	;# 
  1642  060D                     	;# 
  1643  060E                     	;# 
  1644  060F                     	;# 
  1645  060F                     	;# 
  1646  0610                     	;# 
  1647  0611                     	;# 
  1648  0612                     	;# 
  1649  0613                     	;# 
  1650  0614                     	;# 
  1651  0617                     	;# 
  1652  0617                     	;# 
  1653  0618                     	;# 
  1654  0619                     	;# 
  1655  061A                     	;# 
  1656  061A                     	;# 
  1657  061B                     	;# 
  1658  061C                     	;# 
  1659  0691                     	;# 
  1660  0692                     	;# 
  1661  0693                     	;# 
  1662  0694                     	;# 
  1663  0695                     	;# 
  1664  0696                     	;# 
  1665  0697                     	;# 
  1666  0699                     	;# 
  1667  069A                     	;# 
  1668  0711                     	;# 
  1669  0712                     	;# 
  1670  0713                     	;# 
  1671  0714                     	;# 
  1672  0715                     	;# 
  1673  0718                     	;# 
  1674  0718                     	;# 
  1675  0719                     	;# 
  1676  071A                     	;# 
  1677  071A                     	;# 
  1678  071B                     	;# 
  1679  071C                     	;# 
  1680  071D                     	;# 
  1681  0791                     	;# 
  1682  0791                     	;# 
  1683  0792                     	;# 
  1684  0793                     	;# 
  1685  0793                     	;# 
  1686  0794                     	;# 
  1687  0795                     	;# 
  1688  0795                     	;# 
  1689  0796                     	;# 
  1690  0797                     	;# 
  1691  0797                     	;# 
  1692  0798                     	;# 
  1693  0799                     	;# 
  1694  079A                     	;# 
  1695  080C                     	;# 
  1696  080C                     	;# 
  1697  080D                     	;# 
  1698  080E                     	;# 
  1699  080E                     	;# 
  1700  080F                     	;# 
  1701  0810                     	;# 
  1702  0810                     	;# 
  1703  0811                     	;# 
  1704  0812                     	;# 
  1705  0812                     	;# 
  1706  0813                     	;# 
  1707  0814                     	;# 
  1708  0815                     	;# 
  1709  0816                     	;# 
  1710  0817                     	;# 
  1711  0818                     	;# 
  1712  0819                     	;# 
  1713  081A                     	;# 
  1714  081A                     	;# 
  1715  081B                     	;# 
  1716  081C                     	;# 
  1717  081C                     	;# 
  1718  081D                     	;# 
  1719  088C                     	;# 
  1720  088D                     	;# 
  1721  088E                     	;# 
  1722  088F                     	;# 
  1723  088F                     	;# 
  1724  0890                     	;# 
  1725  0891                     	;# 
  1726  0892                     	;# 
  1727  0893                     	;# 
  1728  0893                     	;# 
  1729  0894                     	;# 
  1730  0895                     	;# 
  1731  0896                     	;# 
  1732  0897                     	;# 
  1733  0897                     	;# 
  1734  0898                     	;# 
  1735  0899                     	;# 
  1736  0D8C                     	;# 
  1737  0D8C                     	;# 
  1738  0D8D                     	;# 
  1739  0D8E                     	;# 
  1740  0D8F                     	;# 
  1741  0D8F                     	;# 
  1742  0D90                     	;# 
  1743  0D91                     	;# 
  1744  0D92                     	;# 
  1745  0D92                     	;# 
  1746  0D93                     	;# 
  1747  0D94                     	;# 
  1748  0D95                     	;# 
  1749  0D95                     	;# 
  1750  0D96                     	;# 
  1751  0D97                     	;# 
  1752  0D98                     	;# 
  1753  0D99                     	;# 
  1754  0D9A                     	;# 
  1755  0D9B                     	;# 
  1756  0D9C                     	;# 
  1757  0D9D                     	;# 
  1758  0D9E                     	;# 
  1759  0D9E                     	;# 
  1760  0D9F                     	;# 
  1761  0DA0                     	;# 
  1762  0DA1                     	;# 
  1763  0DA1                     	;# 
  1764  0DA2                     	;# 
  1765  0DA3                     	;# 
  1766  0DA4                     	;# 
  1767  0DA4                     	;# 
  1768  0DA5                     	;# 
  1769  0DA6                     	;# 
  1770  0DA7                     	;# 
  1771  0DA7                     	;# 
  1772  0DA8                     	;# 
  1773  0DA9                     	;# 
  1774  0DAA                     	;# 
  1775  0DAB                     	;# 
  1776  0DAC                     	;# 
  1777  0DAD                     	;# 
  1778  0DAE                     	;# 
  1779  0DAF                     	;# 
  1780  0E0F                     	;# 
  1781  0E10                     	;# 
  1782  0E11                     	;# 
  1783  0E12                     	;# 
  1784  0E13                     	;# 
  1785  0E14                     	;# 
  1786  0E15                     	;# 
  1787  0E16                     	;# 
  1788  0E17                     	;# 
  1789  0E18                     	;# 
  1790  0E19                     	;# 
  1791  0E1A                     	;# 
  1792  0E1B                     	;# 
  1793  0E1C                     	;# 
  1794  0E1D                     	;# 
  1795  0E1E                     	;# 
  1796  0E1F                     	;# 
  1797  0E20                     	;# 
  1798  0E21                     	;# 
  1799  0E22                     	;# 
  1800  0E23                     	;# 
  1801  0E24                     	;# 
  1802  0E25                     	;# 
  1803  0E26                     	;# 
  1804  0E27                     	;# 
  1805  0E28                     	;# 
  1806  0E29                     	;# 
  1807  0E2A                     	;# 
  1808  0E2B                     	;# 
  1809  0E2C                     	;# 
  1810  0E2D                     	;# 
  1811  0E2E                     	;# 
  1812  0E90                     	;# 
  1813  0E91                     	;# 
  1814  0E92                     	;# 
  1815  0E94                     	;# 
  1816  0E95                     	;# 
  1817  0E9C                     	;# 
  1818  0E9D                     	;# 
  1819  0E9E                     	;# 
  1820  0E9F                     	;# 
  1821  0EA0                     	;# 
  1822  0EA1                     	;# 
  1823  0EA2                     	;# 
  1824  0EA3                     	;# 
  1825  0EA4                     	;# 
  1826  0EA5                     	;# 
  1827  0EA6                     	;# 
  1828  0EA7                     	;# 
  1829  0F0F                     	;# 
  1830  0F10                     	;# 
  1831  0F11                     	;# 
  1832  0F12                     	;# 
  1833  0F13                     	;# 
  1834  0F14                     	;# 
  1835  0F15                     	;# 
  1836  0F16                     	;# 
  1837  0F17                     	;# 
  1838  0F18                     	;# 
  1839  0F19                     	;# 
  1840  0F1A                     	;# 
  1841  0F1B                     	;# 
  1842  0F1C                     	;# 
  1843  0F1D                     	;# 
  1844  0F1E                     	;# 
  1845  0F1F                     	;# 
  1846  0F20                     	;# 
  1847  0F21                     	;# 
  1848  0F22                     	;# 
  1849  0F23                     	;# 
  1850  0F24                     	;# 
  1851  0F25                     	;# 
  1852  0F26                     	;# 
  1853  0F27                     	;# 
  1854  0F28                     	;# 
  1855  0F29                     	;# 
  1856  0F2A                     	;# 
  1857  0F2B                     	;# 
  1858  0F2C                     	;# 
  1859  0F2D                     	;# 
  1860  0F2E                     	;# 
  1861  0F2F                     	;# 
  1862  0F30                     	;# 
  1863  0F31                     	;# 
  1864  0F32                     	;# 
  1865  0F33                     	;# 
  1866  0F34                     	;# 
  1867  0F35                     	;# 
  1868  0F36                     	;# 
  1869  0F37                     	;# 
  1870  0FE4                     	;# 
  1871  0FE5                     	;# 
  1872  0FE6                     	;# 
  1873  0FE7                     	;# 
  1874  0FE8                     	;# 
  1875  0FE9                     	;# 
  1876  0FEA                     	;# 
  1877  0FEB                     	;# 
  1878  0FED                     	;# 
  1879  0FEE                     	;# 
  1880  0FEF                     	;# 
  1881  0000                     	;# 
  1882  0001                     	;# 
  1883  0002                     	;# 
  1884  0003                     	;# 
  1885  0004                     	;# 
  1886  0005                     	;# 
  1887  0006                     	;# 
  1888  0007                     	;# 
  1889  0008                     	;# 
  1890  0009                     	;# 
  1891  000A                     	;# 
  1892  000B                     	;# 
  1893  000C                     	;# 
  1894  000D                     	;# 
  1895  000E                     	;# 
  1896  0010                     	;# 
  1897  0011                     	;# 
  1898  0012                     	;# 
  1899  0013                     	;# 
  1900  0014                     	;# 
  1901  0015                     	;# 
  1902  0016                     	;# 
  1903  0016                     	;# 
  1904  0017                     	;# 
  1905  0018                     	;# 
  1906  0019                     	;# 
  1907  001A                     	;# 
  1908  001A                     	;# 
  1909  001B                     	;# 
  1910  001B                     	;# 
  1911  001C                     	;# 
  1912  001D                     	;# 
  1913  001E                     	;# 
  1914  001F                     	;# 
  1915  008C                     	;# 
  1916  008D                     	;# 
  1917  008E                     	;# 
  1918  0090                     	;# 
  1919  0091                     	;# 
  1920  0092                     	;# 
  1921  0093                     	;# 
  1922  0094                     	;# 
  1923  0095                     	;# 
  1924  0096                     	;# 
  1925  0098                     	;# 
  1926  0099                     	;# 
  1927  009A                     	;# 
  1928  009B                     	;# 
  1929  009B                     	;# 
  1930  009C                     	;# 
  1931  009D                     	;# 
  1932  009E                     	;# 
  1933  009F                     	;# 
  1934  010C                     	;# 
  1935  010D                     	;# 
  1936  010E                     	;# 
  1937  0111                     	;# 
  1938  0112                     	;# 
  1939  0113                     	;# 
  1940  0114                     	;# 
  1941  0115                     	;# 
  1942  0116                     	;# 
  1943  0117                     	;# 
  1944  0118                     	;# 
  1945  0119                     	;# 
  1946  011C                     	;# 
  1947  018C                     	;# 
  1948  018D                     	;# 
  1949  018E                     	;# 
  1950  0191                     	;# 
  1951  0191                     	;# 
  1952  0192                     	;# 
  1953  0193                     	;# 
  1954  0193                     	;# 
  1955  0194                     	;# 
  1956  0195                     	;# 
  1957  0196                     	;# 
  1958  0197                     	;# 
  1959  0199                     	;# 
  1960  0199                     	;# 
  1961  0199                     	;# 
  1962  019A                     	;# 
  1963  019A                     	;# 
  1964  019A                     	;# 
  1965  019B                     	;# 
  1966  019B                     	;# 
  1967  019B                     	;# 
  1968  019B                     	;# 
  1969  019B                     	;# 
  1970  019C                     	;# 
  1971  019C                     	;# 
  1972  019C                     	;# 
  1973  019D                     	;# 
  1974  019D                     	;# 
  1975  019D                     	;# 
  1976  019E                     	;# 
  1977  019E                     	;# 
  1978  019E                     	;# 
  1979  019F                     	;# 
  1980  019F                     	;# 
  1981  019F                     	;# 
  1982  019F                     	;# 
  1983  019F                     	;# 
  1984  020C                     	;# 
  1985  020D                     	;# 
  1986  020E                     	;# 
  1987  0211                     	;# 
  1988  0211                     	;# 
  1989  0212                     	;# 
  1990  0212                     	;# 
  1991  0213                     	;# 
  1992  0213                     	;# 
  1993  0214                     	;# 
  1994  0214                     	;# 
  1995  0215                     	;# 
  1996  0215                     	;# 
  1997  0215                     	;# 
  1998  0215                     	;# 
  1999  0216                     	;# 
  2000  0216                     	;# 
  2001  0217                     	;# 
  2002  0217                     	;# 
  2003  028C                     	;# 
  2004  028D                     	;# 
  2005  028E                     	;# 
  2006  0291                     	;# 
  2007  0291                     	;# 
  2008  0292                     	;# 
  2009  0293                     	;# 
  2010  0294                     	;# 
  2011  0298                     	;# 
  2012  0298                     	;# 
  2013  0299                     	;# 
  2014  029A                     	;# 
  2015  029B                     	;# 
  2016  029E                     	;# 
  2017  030C                     	;# 
  2018  030D                     	;# 
  2019  030E                     	;# 
  2020  038C                     	;# 
  2021  038D                     	;# 
  2022  038E                     	;# 
  2023  0391                     	;# 
  2024  0392                     	;# 
  2025  0393                     	;# 
  2026  0394                     	;# 
  2027  0395                     	;# 
  2028  0396                     	;# 
  2029  0397                     	;# 
  2030  0398                     	;# 
  2031  0399                     	;# 
  2032  040E                     	;# 
  2033  0413                     	;# 
  2034  0413                     	;# 
  2035  0414                     	;# 
  2036  0414                     	;# 
  2037  0415                     	;# 
  2038  0416                     	;# 
  2039  0417                     	;# 
  2040  0418                     	;# 
  2041  041A                     	;# 
  2042  041A                     	;# 
  2043  041B                     	;# 
  2044  041B                     	;# 
  2045  041C                     	;# 
  2046  041D                     	;# 
  2047  041E                     	;# 
  2048  041F                     	;# 
  2049  0493                     	;# 
  2050  0494                     	;# 
  2051  0495                     	;# 
  2052  0496                     	;# 
  2053  049A                     	;# 
  2054  049B                     	;# 
  2055  049C                     	;# 
  2056  049D                     	;# 
  2057  058C                     	;# 
  2058  058C                     	;# 
  2059  058D                     	;# 
  2060  058E                     	;# 
  2061  058E                     	;# 
  2062  058F                     	;# 
  2063  0590                     	;# 
  2064  0590                     	;# 
  2065  0591                     	;# 
  2066  0592                     	;# 
  2067  0592                     	;# 
  2068  0593                     	;# 
  2069  0594                     	;# 
  2070  0594                     	;# 
  2071  0595                     	;# 
  2072  0596                     	;# 
  2073  0596                     	;# 
  2074  0597                     	;# 
  2075  0598                     	;# 
  2076  0599                     	;# 
  2077  059A                     	;# 
  2078  059B                     	;# 
  2079  059B                     	;# 
  2080  059C                     	;# 
  2081  059D                     	;# 
  2082  060C                     	;# 
  2083  060C                     	;# 
  2084  060D                     	;# 
  2085  060E                     	;# 
  2086  060F                     	;# 
  2087  060F                     	;# 
  2088  0610                     	;# 
  2089  0611                     	;# 
  2090  0612                     	;# 
  2091  0613                     	;# 
  2092  0614                     	;# 
  2093  0617                     	;# 
  2094  0617                     	;# 
  2095  0618                     	;# 
  2096  0619                     	;# 
  2097  061A                     	;# 
  2098  061A                     	;# 
  2099  061B                     	;# 
  2100  061C                     	;# 
  2101  0691                     	;# 
  2102  0692                     	;# 
  2103  0693                     	;# 
  2104  0694                     	;# 
  2105  0695                     	;# 
  2106  0696                     	;# 
  2107  0697                     	;# 
  2108  0699                     	;# 
  2109  069A                     	;# 
  2110  0711                     	;# 
  2111  0712                     	;# 
  2112  0713                     	;# 
  2113  0714                     	;# 
  2114  0715                     	;# 
  2115  0718                     	;# 
  2116  0718                     	;# 
  2117  0719                     	;# 
  2118  071A                     	;# 
  2119  071A                     	;# 
  2120  071B                     	;# 
  2121  071C                     	;# 
  2122  071D                     	;# 
  2123  0791                     	;# 
  2124  0791                     	;# 
  2125  0792                     	;# 
  2126  0793                     	;# 
  2127  0793                     	;# 
  2128  0794                     	;# 
  2129  0795                     	;# 
  2130  0795                     	;# 
  2131  0796                     	;# 
  2132  0797                     	;# 
  2133  0797                     	;# 
  2134  0798                     	;# 
  2135  0799                     	;# 
  2136  079A                     	;# 
  2137  080C                     	;# 
  2138  080C                     	;# 
  2139  080D                     	;# 
  2140  080E                     	;# 
  2141  080E                     	;# 
  2142  080F                     	;# 
  2143  0810                     	;# 
  2144  0810                     	;# 
  2145  0811                     	;# 
  2146  0812                     	;# 
  2147  0812                     	;# 
  2148  0813                     	;# 
  2149  0814                     	;# 
  2150  0815                     	;# 
  2151  0816                     	;# 
  2152  0817                     	;# 
  2153  0818                     	;# 
  2154  0819                     	;# 
  2155  081A                     	;# 
  2156  081A                     	;# 
  2157  081B                     	;# 
  2158  081C                     	;# 
  2159  081C                     	;# 
  2160  081D                     	;# 
  2161  088C                     	;# 
  2162  088D                     	;# 
  2163  088E                     	;# 
  2164  088F                     	;# 
  2165  088F                     	;# 
  2166  0890                     	;# 
  2167  0891                     	;# 
  2168  0892                     	;# 
  2169  0893                     	;# 
  2170  0893                     	;# 
  2171  0894                     	;# 
  2172  0895                     	;# 
  2173  0896                     	;# 
  2174  0897                     	;# 
  2175  0897                     	;# 
  2176  0898                     	;# 
  2177  0899                     	;# 
  2178  0D8C                     	;# 
  2179  0D8C                     	;# 
  2180  0D8D                     	;# 
  2181  0D8E                     	;# 
  2182  0D8F                     	;# 
  2183  0D8F                     	;# 
  2184  0D90                     	;# 
  2185  0D91                     	;# 
  2186  0D92                     	;# 
  2187  0D92                     	;# 
  2188  0D93                     	;# 
  2189  0D94                     	;# 
  2190  0D95                     	;# 
  2191  0D95                     	;# 
  2192  0D96                     	;# 
  2193  0D97                     	;# 
  2194  0D98                     	;# 
  2195  0D99                     	;# 
  2196  0D9A                     	;# 
  2197  0D9B                     	;# 
  2198  0D9C                     	;# 
  2199  0D9D                     	;# 
  2200  0D9E                     	;# 
  2201  0D9E                     	;# 
  2202  0D9F                     	;# 
  2203  0DA0                     	;# 
  2204  0DA1                     	;# 
  2205  0DA1                     	;# 
  2206  0DA2                     	;# 
  2207  0DA3                     	;# 
  2208  0DA4                     	;# 
  2209  0DA4                     	;# 
  2210  0DA5                     	;# 
  2211  0DA6                     	;# 
  2212  0DA7                     	;# 
  2213  0DA7                     	;# 
  2214  0DA8                     	;# 
  2215  0DA9                     	;# 
  2216  0DAA                     	;# 
  2217  0DAB                     	;# 
  2218  0DAC                     	;# 
  2219  0DAD                     	;# 
  2220  0DAE                     	;# 
  2221  0DAF                     	;# 
  2222  0E0F                     	;# 
  2223  0E10                     	;# 
  2224  0E11                     	;# 
  2225  0E12                     	;# 
  2226  0E13                     	;# 
  2227  0E14                     	;# 
  2228  0E15                     	;# 
  2229  0E16                     	;# 
  2230  0E17                     	;# 
  2231  0E18                     	;# 
  2232  0E19                     	;# 
  2233  0E1A                     	;# 
  2234  0E1B                     	;# 
  2235  0E1C                     	;# 
  2236  0E1D                     	;# 
  2237  0E1E                     	;# 
  2238  0E1F                     	;# 
  2239  0E20                     	;# 
  2240  0E21                     	;# 
  2241  0E22                     	;# 
  2242  0E23                     	;# 
  2243  0E24                     	;# 
  2244  0E25                     	;# 
  2245  0E26                     	;# 
  2246  0E27                     	;# 
  2247  0E28                     	;# 
  2248  0E29                     	;# 
  2249  0E2A                     	;# 
  2250  0E2B                     	;# 
  2251  0E2C                     	;# 
  2252  0E2D                     	;# 
  2253  0E2E                     	;# 
  2254  0E90                     	;# 
  2255  0E91                     	;# 
  2256  0E92                     	;# 
  2257  0E94                     	;# 
  2258  0E95                     	;# 
  2259  0E9C                     	;# 
  2260  0E9D                     	;# 
  2261  0E9E                     	;# 
  2262  0E9F                     	;# 
  2263  0EA0                     	;# 
  2264  0EA1                     	;# 
  2265  0EA2                     	;# 
  2266  0EA3                     	;# 
  2267  0EA4                     	;# 
  2268  0EA5                     	;# 
  2269  0EA6                     	;# 
  2270  0EA7                     	;# 
  2271  0F0F                     	;# 
  2272  0F10                     	;# 
  2273  0F11                     	;# 
  2274  0F12                     	;# 
  2275  0F13                     	;# 
  2276  0F14                     	;# 
  2277  0F15                     	;# 
  2278  0F16                     	;# 
  2279  0F17                     	;# 
  2280  0F18                     	;# 
  2281  0F19                     	;# 
  2282  0F1A                     	;# 
  2283  0F1B                     	;# 
  2284  0F1C                     	;# 
  2285  0F1D                     	;# 
  2286  0F1E                     	;# 
  2287  0F1F                     	;# 
  2288  0F20                     	;# 
  2289  0F21                     	;# 
  2290  0F22                     	;# 
  2291  0F23                     	;# 
  2292  0F24                     	;# 
  2293  0F25                     	;# 
  2294  0F26                     	;# 
  2295  0F27                     	;# 
  2296  0F28                     	;# 
  2297  0F29                     	;# 
  2298  0F2A                     	;# 
  2299  0F2B                     	;# 
  2300  0F2C                     	;# 
  2301  0F2D                     	;# 
  2302  0F2E                     	;# 
  2303  0F2F                     	;# 
  2304  0F30                     	;# 
  2305  0F31                     	;# 
  2306  0F32                     	;# 
  2307  0F33                     	;# 
  2308  0F34                     	;# 
  2309  0F35                     	;# 
  2310  0F36                     	;# 
  2311  0F37                     	;# 
  2312  0FE4                     	;# 
  2313  0FE5                     	;# 
  2314  0FE6                     	;# 
  2315  0FE7                     	;# 
  2316  0FE8                     	;# 
  2317  0FE9                     	;# 
  2318  0FEA                     	;# 
  2319  0FEB                     	;# 
  2320  0FED                     	;# 
  2321  0FEE                     	;# 
  2322  0FEF                     	;# 
  2323  0000                     	;# 
  2324  0001                     	;# 
  2325  0002                     	;# 
  2326  0003                     	;# 
  2327  0004                     	;# 
  2328  0005                     	;# 
  2329  0006                     	;# 
  2330  0007                     	;# 
  2331  0008                     	;# 
  2332  0009                     	;# 
  2333  000A                     	;# 
  2334  000B                     	;# 
  2335  000C                     	;# 
  2336  000D                     	;# 
  2337  000E                     	;# 
  2338  0010                     	;# 
  2339  0011                     	;# 
  2340  0012                     	;# 
  2341  0013                     	;# 
  2342  0014                     	;# 
  2343  0015                     	;# 
  2344  0016                     	;# 
  2345  0016                     	;# 
  2346  0017                     	;# 
  2347  0018                     	;# 
  2348  0019                     	;# 
  2349  001A                     	;# 
  2350  001A                     	;# 
  2351  001B                     	;# 
  2352  001B                     	;# 
  2353  001C                     	;# 
  2354  001D                     	;# 
  2355  001E                     	;# 
  2356  001F                     	;# 
  2357  008C                     	;# 
  2358  008D                     	;# 
  2359  008E                     	;# 
  2360  0090                     	;# 
  2361  0091                     	;# 
  2362  0092                     	;# 
  2363  0093                     	;# 
  2364  0094                     	;# 
  2365  0095                     	;# 
  2366  0096                     	;# 
  2367  0098                     	;# 
  2368  0099                     	;# 
  2369  009A                     	;# 
  2370  009B                     	;# 
  2371  009B                     	;# 
  2372  009C                     	;# 
  2373  009D                     	;# 
  2374  009E                     	;# 
  2375  009F                     	;# 
  2376  010C                     	;# 
  2377  010D                     	;# 
  2378  010E                     	;# 
  2379  0111                     	;# 
  2380  0112                     	;# 
  2381  0113                     	;# 
  2382  0114                     	;# 
  2383  0115                     	;# 
  2384  0116                     	;# 
  2385  0117                     	;# 
  2386  0118                     	;# 
  2387  0119                     	;# 
  2388  011C                     	;# 
  2389  018C                     	;# 
  2390  018D                     	;# 
  2391  018E                     	;# 
  2392  0191                     	;# 
  2393  0191                     	;# 
  2394  0192                     	;# 
  2395  0193                     	;# 
  2396  0193                     	;# 
  2397  0194                     	;# 
  2398  0195                     	;# 
  2399  0196                     	;# 
  2400  0197                     	;# 
  2401  0199                     	;# 
  2402  0199                     	;# 
  2403  0199                     	;# 
  2404  019A                     	;# 
  2405  019A                     	;# 
  2406  019A                     	;# 
  2407  019B                     	;# 
  2408  019B                     	;# 
  2409  019B                     	;# 
  2410  019B                     	;# 
  2411  019B                     	;# 
  2412  019C                     	;# 
  2413  019C                     	;# 
  2414  019C                     	;# 
  2415  019D                     	;# 
  2416  019D                     	;# 
  2417  019D                     	;# 
  2418  019E                     	;# 
  2419  019E                     	;# 
  2420  019E                     	;# 
  2421  019F                     	;# 
  2422  019F                     	;# 
  2423  019F                     	;# 
  2424  019F                     	;# 
  2425  019F                     	;# 
  2426  020C                     	;# 
  2427  020D                     	;# 
  2428  020E                     	;# 
  2429  0211                     	;# 
  2430  0211                     	;# 
  2431  0212                     	;# 
  2432  0212                     	;# 
  2433  0213                     	;# 
  2434  0213                     	;# 
  2435  0214                     	;# 
  2436  0214                     	;# 
  2437  0215                     	;# 
  2438  0215                     	;# 
  2439  0215                     	;# 
  2440  0215                     	;# 
  2441  0216                     	;# 
  2442  0216                     	;# 
  2443  0217                     	;# 
  2444  0217                     	;# 
  2445  028C                     	;# 
  2446  028D                     	;# 
  2447  028E                     	;# 
  2448  0291                     	;# 
  2449  0291                     	;# 
  2450  0292                     	;# 
  2451  0293                     	;# 
  2452  0294                     	;# 
  2453  0298                     	;# 
  2454  0298                     	;# 
  2455  0299                     	;# 
  2456  029A                     	;# 
  2457  029B                     	;# 
  2458  029E                     	;# 
  2459  030C                     	;# 
  2460  030D                     	;# 
  2461  030E                     	;# 
  2462  038C                     	;# 
  2463  038D                     	;# 
  2464  038E                     	;# 
  2465  0391                     	;# 
  2466  0392                     	;# 
  2467  0393                     	;# 
  2468  0394                     	;# 
  2469  0395                     	;# 
  2470  0396                     	;# 
  2471  0397                     	;# 
  2472  0398                     	;# 
  2473  0399                     	;# 
  2474  040E                     	;# 
  2475  0413                     	;# 
  2476  0413                     	;# 
  2477  0414                     	;# 
  2478  0414                     	;# 
  2479  0415                     	;# 
  2480  0416                     	;# 
  2481  0417                     	;# 
  2482  0418                     	;# 
  2483  041A                     	;# 
  2484  041A                     	;# 
  2485  041B                     	;# 
  2486  041B                     	;# 
  2487  041C                     	;# 
  2488  041D                     	;# 
  2489  041E                     	;# 
  2490  041F                     	;# 
  2491  0493                     	;# 
  2492  0494                     	;# 
  2493  0495                     	;# 
  2494  0496                     	;# 
  2495  049A                     	;# 
  2496  049B                     	;# 
  2497  049C                     	;# 
  2498  049D                     	;# 
  2499  058C                     	;# 
  2500  058C                     	;# 
  2501  058D                     	;# 
  2502  058E                     	;# 
  2503  058E                     	;# 
  2504  058F                     	;# 
  2505  0590                     	;# 
  2506  0590                     	;# 
  2507  0591                     	;# 
  2508  0592                     	;# 
  2509  0592                     	;# 
  2510  0593                     	;# 
  2511  0594                     	;# 
  2512  0594                     	;# 
  2513  0595                     	;# 
  2514  0596                     	;# 
  2515  0596                     	;# 
  2516  0597                     	;# 
  2517  0598                     	;# 
  2518  0599                     	;# 
  2519  059A                     	;# 
  2520  059B                     	;# 
  2521  059B                     	;# 
  2522  059C                     	;# 
  2523  059D                     	;# 
  2524  060C                     	;# 
  2525  060C                     	;# 
  2526  060D                     	;# 
  2527  060E                     	;# 
  2528  060F                     	;# 
  2529  060F                     	;# 
  2530  0610                     	;# 
  2531  0611                     	;# 
  2532  0612                     	;# 
  2533  0613                     	;# 
  2534  0614                     	;# 
  2535  0617                     	;# 
  2536  0617                     	;# 
  2537  0618                     	;# 
  2538  0619                     	;# 
  2539  061A                     	;# 
  2540  061A                     	;# 
  2541  061B                     	;# 
  2542  061C                     	;# 
  2543  0691                     	;# 
  2544  0692                     	;# 
  2545  0693                     	;# 
  2546  0694                     	;# 
  2547  0695                     	;# 
  2548  0696                     	;# 
  2549  0697                     	;# 
  2550  0699                     	;# 
  2551  069A                     	;# 
  2552  0711                     	;# 
  2553  0712                     	;# 
  2554  0713                     	;# 
  2555  0714                     	;# 
  2556  0715                     	;# 
  2557  0718                     	;# 
  2558  0718                     	;# 
  2559  0719                     	;# 
  2560  071A                     	;# 
  2561  071A                     	;# 
  2562  071B                     	;# 
  2563  071C                     	;# 
  2564  071D                     	;# 
  2565  0791                     	;# 
  2566  0791                     	;# 
  2567  0792                     	;# 
  2568  0793                     	;# 
  2569  0793                     	;# 
  2570  0794                     	;# 
  2571  0795                     	;# 
  2572  0795                     	;# 
  2573  0796                     	;# 
  2574  0797                     	;# 
  2575  0797                     	;# 
  2576  0798                     	;# 
  2577  0799                     	;# 
  2578  079A                     	;# 
  2579  080C                     	;# 
  2580  080C                     	;# 
  2581  080D                     	;# 
  2582  080E                     	;# 
  2583  080E                     	;# 
  2584  080F                     	;# 
  2585  0810                     	;# 
  2586  0810                     	;# 
  2587  0811                     	;# 
  2588  0812                     	;# 
  2589  0812                     	;# 
  2590  0813                     	;# 
  2591  0814                     	;# 
  2592  0815                     	;# 
  2593  0816                     	;# 
  2594  0817                     	;# 
  2595  0818                     	;# 
  2596  0819                     	;# 
  2597  081A                     	;# 
  2598  081A                     	;# 
  2599  081B                     	;# 
  2600  081C                     	;# 
  2601  081C                     	;# 
  2602  081D                     	;# 
  2603  088C                     	;# 
  2604  088D                     	;# 
  2605  088E                     	;# 
  2606  088F                     	;# 
  2607  088F                     	;# 
  2608  0890                     	;# 
  2609  0891                     	;# 
  2610  0892                     	;# 
  2611  0893                     	;# 
  2612  0893                     	;# 
  2613  0894                     	;# 
  2614  0895                     	;# 
  2615  0896                     	;# 
  2616  0897                     	;# 
  2617  0897                     	;# 
  2618  0898                     	;# 
  2619  0899                     	;# 
  2620  0D8C                     	;# 
  2621  0D8C                     	;# 
  2622  0D8D                     	;# 
  2623  0D8E                     	;# 
  2624  0D8F                     	;# 
  2625  0D8F                     	;# 
  2626  0D90                     	;# 
  2627  0D91                     	;# 
  2628  0D92                     	;# 
  2629  0D92                     	;# 
  2630  0D93                     	;# 
  2631  0D94                     	;# 
  2632  0D95                     	;# 
  2633  0D95                     	;# 
  2634  0D96                     	;# 
  2635  0D97                     	;# 
  2636  0D98                     	;# 
  2637  0D99                     	;# 
  2638  0D9A                     	;# 
  2639  0D9B                     	;# 
  2640  0D9C                     	;# 
  2641  0D9D                     	;# 
  2642  0D9E                     	;# 
  2643  0D9E                     	;# 
  2644  0D9F                     	;# 
  2645  0DA0                     	;# 
  2646  0DA1                     	;# 
  2647  0DA1                     	;# 
  2648  0DA2                     	;# 
  2649  0DA3                     	;# 
  2650  0DA4                     	;# 
  2651  0DA4                     	;# 
  2652  0DA5                     	;# 
  2653  0DA6                     	;# 
  2654  0DA7                     	;# 
  2655  0DA7                     	;# 
  2656  0DA8                     	;# 
  2657  0DA9                     	;# 
  2658  0DAA                     	;# 
  2659  0DAB                     	;# 
  2660  0DAC                     	;# 
  2661  0DAD                     	;# 
  2662  0DAE                     	;# 
  2663  0DAF                     	;# 
  2664  0E0F                     	;# 
  2665  0E10                     	;# 
  2666  0E11                     	;# 
  2667  0E12                     	;# 
  2668  0E13                     	;# 
  2669  0E14                     	;# 
  2670  0E15                     	;# 
  2671  0E16                     	;# 
  2672  0E17                     	;# 
  2673  0E18                     	;# 
  2674  0E19                     	;# 
  2675  0E1A                     	;# 
  2676  0E1B                     	;# 
  2677  0E1C                     	;# 
  2678  0E1D                     	;# 
  2679  0E1E                     	;# 
  2680  0E1F                     	;# 
  2681  0E20                     	;# 
  2682  0E21                     	;# 
  2683  0E22                     	;# 
  2684  0E23                     	;# 
  2685  0E24                     	;# 
  2686  0E25                     	;# 
  2687  0E26                     	;# 
  2688  0E27                     	;# 
  2689  0E28                     	;# 
  2690  0E29                     	;# 
  2691  0E2A                     	;# 
  2692  0E2B                     	;# 
  2693  0E2C                     	;# 
  2694  0E2D                     	;# 
  2695  0E2E                     	;# 
  2696  0E90                     	;# 
  2697  0E91                     	;# 
  2698  0E92                     	;# 
  2699  0E94                     	;# 
  2700  0E95                     	;# 
  2701  0E9C                     	;# 
  2702  0E9D                     	;# 
  2703  0E9E                     	;# 
  2704  0E9F                     	;# 
  2705  0EA0                     	;# 
  2706  0EA1                     	;# 
  2707  0EA2                     	;# 
  2708  0EA3                     	;# 
  2709  0EA4                     	;# 
  2710  0EA5                     	;# 
  2711  0EA6                     	;# 
  2712  0EA7                     	;# 
  2713  0F0F                     	;# 
  2714  0F10                     	;# 
  2715  0F11                     	;# 
  2716  0F12                     	;# 
  2717  0F13                     	;# 
  2718  0F14                     	;# 
  2719  0F15                     	;# 
  2720  0F16                     	;# 
  2721  0F17                     	;# 
  2722  0F18                     	;# 
  2723  0F19                     	;# 
  2724  0F1A                     	;# 
  2725  0F1B                     	;# 
  2726  0F1C                     	;# 
  2727  0F1D                     	;# 
  2728  0F1E                     	;# 
  2729  0F1F                     	;# 
  2730  0F20                     	;# 
  2731  0F21                     	;# 
  2732  0F22                     	;# 
  2733  0F23                     	;# 
  2734  0F24                     	;# 
  2735  0F25                     	;# 
  2736  0F26                     	;# 
  2737  0F27                     	;# 
  2738  0F28                     	;# 
  2739  0F29                     	;# 
  2740  0F2A                     	;# 
  2741  0F2B                     	;# 
  2742  0F2C                     	;# 
  2743  0F2D                     	;# 
  2744  0F2E                     	;# 
  2745  0F2F                     	;# 
  2746  0F30                     	;# 
  2747  0F31                     	;# 
  2748  0F32                     	;# 
  2749  0F33                     	;# 
  2750  0F34                     	;# 
  2751  0F35                     	;# 
  2752  0F36                     	;# 
  2753  0F37                     	;# 
  2754  0FE4                     	;# 
  2755  0FE5                     	;# 
  2756  0FE6                     	;# 
  2757  0FE7                     	;# 
  2758  0FE8                     	;# 
  2759  0FE9                     	;# 
  2760  0FEA                     	;# 
  2761  0FEB                     	;# 
  2762  0FED                     	;# 
  2763  0FEE                     	;# 
  2764  0FEF                     	;# 
  2765  0000                     	;# 
  2766  0001                     	;# 
  2767  0002                     	;# 
  2768  0003                     	;# 
  2769  0004                     	;# 
  2770  0005                     	;# 
  2771  0006                     	;# 
  2772  0007                     	;# 
  2773  0008                     	;# 
  2774  0009                     	;# 
  2775  000A                     	;# 
  2776  000B                     	;# 
  2777  000C                     	;# 
  2778  000D                     	;# 
  2779  000E                     	;# 
  2780  0010                     	;# 
  2781  0011                     	;# 
  2782  0012                     	;# 
  2783  0013                     	;# 
  2784  0014                     	;# 
  2785  0015                     	;# 
  2786  0016                     	;# 
  2787  0016                     	;# 
  2788  0017                     	;# 
  2789  0018                     	;# 
  2790  0019                     	;# 
  2791  001A                     	;# 
  2792  001A                     	;# 
  2793  001B                     	;# 
  2794  001B                     	;# 
  2795  001C                     	;# 
  2796  001D                     	;# 
  2797  001E                     	;# 
  2798  001F                     	;# 
  2799  008C                     	;# 
  2800  008D                     	;# 
  2801  008E                     	;# 
  2802  0090                     	;# 
  2803  0091                     	;# 
  2804  0092                     	;# 
  2805  0093                     	;# 
  2806  0094                     	;# 
  2807  0095                     	;# 
  2808  0096                     	;# 
  2809  0098                     	;# 
  2810  0099                     	;# 
  2811  009A                     	;# 
  2812  009B                     	;# 
  2813  009B                     	;# 
  2814  009C                     	;# 
  2815  009D                     	;# 
  2816  009E                     	;# 
  2817  009F                     	;# 
  2818  010C                     	;# 
  2819  010D                     	;# 
  2820  010E                     	;# 
  2821  0111                     	;# 
  2822  0112                     	;# 
  2823  0113                     	;# 
  2824  0114                     	;# 
  2825  0115                     	;# 
  2826  0116                     	;# 
  2827  0117                     	;# 
  2828  0118                     	;# 
  2829  0119                     	;# 
  2830  011C                     	;# 
  2831  018C                     	;# 
  2832  018D                     	;# 
  2833  018E                     	;# 
  2834  0191                     	;# 
  2835  0191                     	;# 
  2836  0192                     	;# 
  2837  0193                     	;# 
  2838  0193                     	;# 
  2839  0194                     	;# 
  2840  0195                     	;# 
  2841  0196                     	;# 
  2842  0197                     	;# 
  2843  0199                     	;# 
  2844  0199                     	;# 
  2845  0199                     	;# 
  2846  019A                     	;# 
  2847  019A                     	;# 
  2848  019A                     	;# 
  2849  019B                     	;# 
  2850  019B                     	;# 
  2851  019B                     	;# 
  2852  019B                     	;# 
  2853  019B                     	;# 
  2854  019C                     	;# 
  2855  019C                     	;# 
  2856  019C                     	;# 
  2857  019D                     	;# 
  2858  019D                     	;# 
  2859  019D                     	;# 
  2860  019E                     	;# 
  2861  019E                     	;# 
  2862  019E                     	;# 
  2863  019F                     	;# 
  2864  019F                     	;# 
  2865  019F                     	;# 
  2866  019F                     	;# 
  2867  019F                     	;# 
  2868  020C                     	;# 
  2869  020D                     	;# 
  2870  020E                     	;# 
  2871  0211                     	;# 
  2872  0211                     	;# 
  2873  0212                     	;# 
  2874  0212                     	;# 
  2875  0213                     	;# 
  2876  0213                     	;# 
  2877  0214                     	;# 
  2878  0214                     	;# 
  2879  0215                     	;# 
  2880  0215                     	;# 
  2881  0215                     	;# 
  2882  0215                     	;# 
  2883  0216                     	;# 
  2884  0216                     	;# 
  2885  0217                     	;# 
  2886  0217                     	;# 
  2887  028C                     	;# 
  2888  028D                     	;# 
  2889  028E                     	;# 
  2890  0291                     	;# 
  2891  0291                     	;# 
  2892  0292                     	;# 
  2893  0293                     	;# 
  2894  0294                     	;# 
  2895  0298                     	;# 
  2896  0298                     	;# 
  2897  0299                     	;# 
  2898  029A                     	;# 
  2899  029B                     	;# 
  2900  029E                     	;# 
  2901  030C                     	;# 
  2902  030D                     	;# 
  2903  030E                     	;# 
  2904  038C                     	;# 
  2905  038D                     	;# 
  2906  038E                     	;# 
  2907  0391                     	;# 
  2908  0392                     	;# 
  2909  0393                     	;# 
  2910  0394                     	;# 
  2911  0395                     	;# 
  2912  0396                     	;# 
  2913  0397                     	;# 
  2914  0398                     	;# 
  2915  0399                     	;# 
  2916  040E                     	;# 
  2917  0413                     	;# 
  2918  0413                     	;# 
  2919  0414                     	;# 
  2920  0414                     	;# 
  2921  0415                     	;# 
  2922  0416                     	;# 
  2923  0417                     	;# 
  2924  0418                     	;# 
  2925  041A                     	;# 
  2926  041A                     	;# 
  2927  041B                     	;# 
  2928  041B                     	;# 
  2929  041C                     	;# 
  2930  041D                     	;# 
  2931  041E                     	;# 
  2932  041F                     	;# 
  2933  0493                     	;# 
  2934  0494                     	;# 
  2935  0495                     	;# 
  2936  0496                     	;# 
  2937  049A                     	;# 
  2938  049B                     	;# 
  2939  049C                     	;# 
  2940  049D                     	;# 
  2941  058C                     	;# 
  2942  058C                     	;# 
  2943  058D                     	;# 
  2944  058E                     	;# 
  2945  058E                     	;# 
  2946  058F                     	;# 
  2947  0590                     	;# 
  2948  0590                     	;# 
  2949  0591                     	;# 
  2950  0592                     	;# 
  2951  0592                     	;# 
  2952  0593                     	;# 
  2953  0594                     	;# 
  2954  0594                     	;# 
  2955  0595                     	;# 
  2956  0596                     	;# 
  2957  0596                     	;# 
  2958  0597                     	;# 
  2959  0598                     	;# 
  2960  0599                     	;# 
  2961  059A                     	;# 
  2962  059B                     	;# 
  2963  059B                     	;# 
  2964  059C                     	;# 
  2965  059D                     	;# 
  2966  060C                     	;# 
  2967  060C                     	;# 
  2968  060D                     	;# 
  2969  060E                     	;# 
  2970  060F                     	;# 
  2971  060F                     	;# 
  2972  0610                     	;# 
  2973  0611                     	;# 
  2974  0612                     	;# 
  2975  0613                     	;# 
  2976  0614                     	;# 
  2977  0617                     	;# 
  2978  0617                     	;# 
  2979  0618                     	;# 
  2980  0619                     	;# 
  2981  061A                     	;# 
  2982  061A                     	;# 
  2983  061B                     	;# 
  2984  061C                     	;# 
  2985  0691                     	;# 
  2986  0692                     	;# 
  2987  0693                     	;# 
  2988  0694                     	;# 
  2989  0695                     	;# 
  2990  0696                     	;# 
  2991  0697                     	;# 
  2992  0699                     	;# 
  2993  069A                     	;# 
  2994  0711                     	;# 
  2995  0712                     	;# 
  2996  0713                     	;# 
  2997  0714                     	;# 
  2998  0715                     	;# 
  2999  0718                     	;# 
  3000  0718                     	;# 
  3001  0719                     	;# 
  3002  071A                     	;# 
  3003  071A                     	;# 
  3004  071B                     	;# 
  3005  071C                     	;# 
  3006  071D                     	;# 
  3007  0791                     	;# 
  3008  0791                     	;# 
  3009  0792                     	;# 
  3010  0793                     	;# 
  3011  0793                     	;# 
  3012  0794                     	;# 
  3013  0795                     	;# 
  3014  0795                     	;# 
  3015  0796                     	;# 
  3016  0797                     	;# 
  3017  0797                     	;# 
  3018  0798                     	;# 
  3019  0799                     	;# 
  3020  079A                     	;# 
  3021  080C                     	;# 
  3022  080C                     	;# 
  3023  080D                     	;# 
  3024  080E                     	;# 
  3025  080E                     	;# 
  3026  080F                     	;# 
  3027  0810                     	;# 
  3028  0810                     	;# 
  3029  0811                     	;# 
  3030  0812                     	;# 
  3031  0812                     	;# 
  3032  0813                     	;# 
  3033  0814                     	;# 
  3034  0815                     	;# 
  3035  0816                     	;# 
  3036  0817                     	;# 
  3037  0818                     	;# 
  3038  0819                     	;# 
  3039  081A                     	;# 
  3040  081A                     	;# 
  3041  081B                     	;# 
  3042  081C                     	;# 
  3043  081C                     	;# 
  3044  081D                     	;# 
  3045  088C                     	;# 
  3046  088D                     	;# 
  3047  088E                     	;# 
  3048  088F                     	;# 
  3049  088F                     	;# 
  3050  0890                     	;# 
  3051  0891                     	;# 
  3052  0892                     	;# 
  3053  0893                     	;# 
  3054  0893                     	;# 
  3055  0894                     	;# 
  3056  0895                     	;# 
  3057  0896                     	;# 
  3058  0897                     	;# 
  3059  0897                     	;# 
  3060  0898                     	;# 
  3061  0899                     	;# 
  3062  0D8C                     	;# 
  3063  0D8C                     	;# 
  3064  0D8D                     	;# 
  3065  0D8E                     	;# 
  3066  0D8F                     	;# 
  3067  0D8F                     	;# 
  3068  0D90                     	;# 
  3069  0D91                     	;# 
  3070  0D92                     	;# 
  3071  0D92                     	;# 
  3072  0D93                     	;# 
  3073  0D94                     	;# 
  3074  0D95                     	;# 
  3075  0D95                     	;# 
  3076  0D96                     	;# 
  3077  0D97                     	;# 
  3078  0D98                     	;# 
  3079  0D99                     	;# 
  3080  0D9A                     	;# 
  3081  0D9B                     	;# 
  3082  0D9C                     	;# 
  3083  0D9D                     	;# 
  3084  0D9E                     	;# 
  3085  0D9E                     	;# 
  3086  0D9F                     	;# 
  3087  0DA0                     	;# 
  3088  0DA1                     	;# 
  3089  0DA1                     	;# 
  3090  0DA2                     	;# 
  3091  0DA3                     	;# 
  3092  0DA4                     	;# 
  3093  0DA4                     	;# 
  3094  0DA5                     	;# 
  3095  0DA6                     	;# 
  3096  0DA7                     	;# 
  3097  0DA7                     	;# 
  3098  0DA8                     	;# 
  3099  0DA9                     	;# 
  3100  0DAA                     	;# 
  3101  0DAB                     	;# 
  3102  0DAC                     	;# 
  3103  0DAD                     	;# 
  3104  0DAE                     	;# 
  3105  0DAF                     	;# 
  3106  0E0F                     	;# 
  3107  0E10                     	;# 
  3108  0E11                     	;# 
  3109  0E12                     	;# 
  3110  0E13                     	;# 
  3111  0E14                     	;# 
  3112  0E15                     	;# 
  3113  0E16                     	;# 
  3114  0E17                     	;# 
  3115  0E18                     	;# 
  3116  0E19                     	;# 
  3117  0E1A                     	;# 
  3118  0E1B                     	;# 
  3119  0E1C                     	;# 
  3120  0E1D                     	;# 
  3121  0E1E                     	;# 
  3122  0E1F                     	;# 
  3123  0E20                     	;# 
  3124  0E21                     	;# 
  3125  0E22                     	;# 
  3126  0E23                     	;# 
  3127  0E24                     	;# 
  3128  0E25                     	;# 
  3129  0E26                     	;# 
  3130  0E27                     	;# 
  3131  0E28                     	;# 
  3132  0E29                     	;# 
  3133  0E2A                     	;# 
  3134  0E2B                     	;# 
  3135  0E2C                     	;# 
  3136  0E2D                     	;# 
  3137  0E2E                     	;# 
  3138  0E90                     	;# 
  3139  0E91                     	;# 
  3140  0E92                     	;# 
  3141  0E94                     	;# 
  3142  0E95                     	;# 
  3143  0E9C                     	;# 
  3144  0E9D                     	;# 
  3145  0E9E                     	;# 
  3146  0E9F                     	;# 
  3147  0EA0                     	;# 
  3148  0EA1                     	;# 
  3149  0EA2                     	;# 
  3150  0EA3                     	;# 
  3151  0EA4                     	;# 
  3152  0EA5                     	;# 
  3153  0EA6                     	;# 
  3154  0EA7                     	;# 
  3155  0F0F                     	;# 
  3156  0F10                     	;# 
  3157  0F11                     	;# 
  3158  0F12                     	;# 
  3159  0F13                     	;# 
  3160  0F14                     	;# 
  3161  0F15                     	;# 
  3162  0F16                     	;# 
  3163  0F17                     	;# 
  3164  0F18                     	;# 
  3165  0F19                     	;# 
  3166  0F1A                     	;# 
  3167  0F1B                     	;# 
  3168  0F1C                     	;# 
  3169  0F1D                     	;# 
  3170  0F1E                     	;# 
  3171  0F1F                     	;# 
  3172  0F20                     	;# 
  3173  0F21                     	;# 
  3174  0F22                     	;# 
  3175  0F23                     	;# 
  3176  0F24                     	;# 
  3177  0F25                     	;# 
  3178  0F26                     	;# 
  3179  0F27                     	;# 
  3180  0F28                     	;# 
  3181  0F29                     	;# 
  3182  0F2A                     	;# 
  3183  0F2B                     	;# 
  3184  0F2C                     	;# 
  3185  0F2D                     	;# 
  3186  0F2E                     	;# 
  3187  0F2F                     	;# 
  3188  0F30                     	;# 
  3189  0F31                     	;# 
  3190  0F32                     	;# 
  3191  0F33                     	;# 
  3192  0F34                     	;# 
  3193  0F35                     	;# 
  3194  0F36                     	;# 
  3195  0F37                     	;# 
  3196  0FE4                     	;# 
  3197  0FE5                     	;# 
  3198  0FE6                     	;# 
  3199  0FE7                     	;# 
  3200  0FE8                     	;# 
  3201  0FE9                     	;# 
  3202  0FEA                     	;# 
  3203  0FEB                     	;# 
  3204  0FED                     	;# 
  3205  0FEE                     	;# 
  3206  0FEF                     	;# 
  3207  0000                     	;# 
  3208  0001                     	;# 
  3209  0002                     	;# 
  3210  0003                     	;# 
  3211  0004                     	;# 
  3212  0005                     	;# 
  3213  0006                     	;# 
  3214  0007                     	;# 
  3215  0008                     	;# 
  3216  0009                     	;# 
  3217  000A                     	;# 
  3218  000B                     	;# 
  3219  000C                     	;# 
  3220  000D                     	;# 
  3221  000E                     	;# 
  3222  0010                     	;# 
  3223  0011                     	;# 
  3224  0012                     	;# 
  3225  0013                     	;# 
  3226  0014                     	;# 
  3227  0015                     	;# 
  3228  0016                     	;# 
  3229  0016                     	;# 
  3230  0017                     	;# 
  3231  0018                     	;# 
  3232  0019                     	;# 
  3233  001A                     	;# 
  3234  001A                     	;# 
  3235  001B                     	;# 
  3236  001B                     	;# 
  3237  001C                     	;# 
  3238  001D                     	;# 
  3239  001E                     	;# 
  3240  001F                     	;# 
  3241  008C                     	;# 
  3242  008D                     	;# 
  3243  008E                     	;# 
  3244  0090                     	;# 
  3245  0091                     	;# 
  3246  0092                     	;# 
  3247  0093                     	;# 
  3248  0094                     	;# 
  3249  0095                     	;# 
  3250  0096                     	;# 
  3251  0098                     	;# 
  3252  0099                     	;# 
  3253  009A                     	;# 
  3254  009B                     	;# 
  3255  009B                     	;# 
  3256  009C                     	;# 
  3257  009D                     	;# 
  3258  009E                     	;# 
  3259  009F                     	;# 
  3260  010C                     	;# 
  3261  010D                     	;# 
  3262  010E                     	;# 
  3263  0111                     	;# 
  3264  0112                     	;# 
  3265  0113                     	;# 
  3266  0114                     	;# 
  3267  0115                     	;# 
  3268  0116                     	;# 
  3269  0117                     	;# 
  3270  0118                     	;# 
  3271  0119                     	;# 
  3272  011C                     	;# 
  3273  018C                     	;# 
  3274  018D                     	;# 
  3275  018E                     	;# 
  3276  0191                     	;# 
  3277  0191                     	;# 
  3278  0192                     	;# 
  3279  0193                     	;# 
  3280  0193                     	;# 
  3281  0194                     	;# 
  3282  0195                     	;# 
  3283  0196                     	;# 
  3284  0197                     	;# 
  3285  0199                     	;# 
  3286  0199                     	;# 
  3287  0199                     	;# 
  3288  019A                     	;# 
  3289  019A                     	;# 
  3290  019A                     	;# 
  3291  019B                     	;# 
  3292  019B                     	;# 
  3293  019B                     	;# 
  3294  019B                     	;# 
  3295  019B                     	;# 
  3296  019C                     	;# 
  3297  019C                     	;# 
  3298  019C                     	;# 
  3299  019D                     	;# 
  3300  019D                     	;# 
  3301  019D                     	;# 
  3302  019E                     	;# 
  3303  019E                     	;# 
  3304  019E                     	;# 
  3305  019F                     	;# 
  3306  019F                     	;# 
  3307  019F                     	;# 
  3308  019F                     	;# 
  3309  019F                     	;# 
  3310  020C                     	;# 
  3311  020D                     	;# 
  3312  020E                     	;# 
  3313  0211                     	;# 
  3314  0211                     	;# 
  3315  0212                     	;# 
  3316  0212                     	;# 
  3317  0213                     	;# 
  3318  0213                     	;# 
  3319  0214                     	;# 
  3320  0214                     	;# 
  3321  0215                     	;# 
  3322  0215                     	;# 
  3323  0215                     	;# 
  3324  0215                     	;# 
  3325  0216                     	;# 
  3326  0216                     	;# 
  3327  0217                     	;# 
  3328  0217                     	;# 
  3329  028C                     	;# 
  3330  028D                     	;# 
  3331  028E                     	;# 
  3332  0291                     	;# 
  3333  0291                     	;# 
  3334  0292                     	;# 
  3335  0293                     	;# 
  3336  0294                     	;# 
  3337  0298                     	;# 
  3338  0298                     	;# 
  3339  0299                     	;# 
  3340  029A                     	;# 
  3341  029B                     	;# 
  3342  029E                     	;# 
  3343  030C                     	;# 
  3344  030D                     	;# 
  3345  030E                     	;# 
  3346  038C                     	;# 
  3347  038D                     	;# 
  3348  038E                     	;# 
  3349  0391                     	;# 
  3350  0392                     	;# 
  3351  0393                     	;# 
  3352  0394                     	;# 
  3353  0395                     	;# 
  3354  0396                     	;# 
  3355  0397                     	;# 
  3356  0398                     	;# 
  3357  0399                     	;# 
  3358  040E                     	;# 
  3359  0413                     	;# 
  3360  0413                     	;# 
  3361  0414                     	;# 
  3362  0414                     	;# 
  3363  0415                     	;# 
  3364  0416                     	;# 
  3365  0417                     	;# 
  3366  0418                     	;# 
  3367  041A                     	;# 
  3368  041A                     	;# 
  3369  041B                     	;# 
  3370  041B                     	;# 
  3371  041C                     	;# 
  3372  041D                     	;# 
  3373  041E                     	;# 
  3374  041F                     	;# 
  3375  0493                     	;# 
  3376  0494                     	;# 
  3377  0495                     	;# 
  3378  0496                     	;# 
  3379  049A                     	;# 
  3380  049B                     	;# 
  3381  049C                     	;# 
  3382  049D                     	;# 
  3383  058C                     	;# 
  3384  058C                     	;# 
  3385  058D                     	;# 
  3386  058E                     	;# 
  3387  058E                     	;# 
  3388  058F                     	;# 
  3389  0590                     	;# 
  3390  0590                     	;# 
  3391  0591                     	;# 
  3392  0592                     	;# 
  3393  0592                     	;# 
  3394  0593                     	;# 
  3395  0594                     	;# 
  3396  0594                     	;# 
  3397  0595                     	;# 
  3398  0596                     	;# 
  3399  0596                     	;# 
  3400  0597                     	;# 
  3401  0598                     	;# 
  3402  0599                     	;# 
  3403  059A                     	;# 
  3404  059B                     	;# 
  3405  059B                     	;# 
  3406  059C                     	;# 
  3407  059D                     	;# 
  3408  060C                     	;# 
  3409  060C                     	;# 
  3410  060D                     	;# 
  3411  060E                     	;# 
  3412  060F                     	;# 
  3413  060F                     	;# 
  3414  0610                     	;# 
  3415  0611                     	;# 
  3416  0612                     	;# 
  3417  0613                     	;# 
  3418  0614                     	;# 
  3419  0617                     	;# 
  3420  0617                     	;# 
  3421  0618                     	;# 
  3422  0619                     	;# 
  3423  061A                     	;# 
  3424  061A                     	;# 
  3425  061B                     	;# 
  3426  061C                     	;# 
  3427  0691                     	;# 
  3428  0692                     	;# 
  3429  0693                     	;# 
  3430  0694                     	;# 
  3431  0695                     	;# 
  3432  0696                     	;# 
  3433  0697                     	;# 
  3434  0699                     	;# 
  3435  069A                     	;# 
  3436  0711                     	;# 
  3437  0712                     	;# 
  3438  0713                     	;# 
  3439  0714                     	;# 
  3440  0715                     	;# 
  3441  0718                     	;# 
  3442  0718                     	;# 
  3443  0719                     	;# 
  3444  071A                     	;# 
  3445  071A                     	;# 
  3446  071B                     	;# 
  3447  071C                     	;# 
  3448  071D                     	;# 
  3449  0791                     	;# 
  3450  0791                     	;# 
  3451  0792                     	;# 
  3452  0793                     	;# 
  3453  0793                     	;# 
  3454  0794                     	;# 
  3455  0795                     	;# 
  3456  0795                     	;# 
  3457  0796                     	;# 
  3458  0797                     	;# 
  3459  0797                     	;# 
  3460  0798                     	;# 
  3461  0799                     	;# 
  3462  079A                     	;# 
  3463  080C                     	;# 
  3464  080C                     	;# 
  3465  080D                     	;# 
  3466  080E                     	;# 
  3467  080E                     	;# 
  3468  080F                     	;# 
  3469  0810                     	;# 
  3470  0810                     	;# 
  3471  0811                     	;# 
  3472  0812                     	;# 
  3473  0812                     	;# 
  3474  0813                     	;# 
  3475  0814                     	;# 
  3476  0815                     	;# 
  3477  0816                     	;# 
  3478  0817                     	;# 
  3479  0818                     	;# 
  3480  0819                     	;# 
  3481  081A                     	;# 
  3482  081A                     	;# 
  3483  081B                     	;# 
  3484  081C                     	;# 
  3485  081C                     	;# 
  3486  081D                     	;# 
  3487  088C                     	;# 
  3488  088D                     	;# 
  3489  088E                     	;# 
  3490  088F                     	;# 
  3491  088F                     	;# 
  3492  0890                     	;# 
  3493  0891                     	;# 
  3494  0892                     	;# 
  3495  0893                     	;# 
  3496  0893                     	;# 
  3497  0894                     	;# 
  3498  0895                     	;# 
  3499  0896                     	;# 
  3500  0897                     	;# 
  3501  0897                     	;# 
  3502  0898                     	;# 
  3503  0899                     	;# 
  3504  0D8C                     	;# 
  3505  0D8C                     	;# 
  3506  0D8D                     	;# 
  3507  0D8E                     	;# 
  3508  0D8F                     	;# 
  3509  0D8F                     	;# 
  3510  0D90                     	;# 
  3511  0D91                     	;# 
  3512  0D92                     	;# 
  3513  0D92                     	;# 
  3514  0D93                     	;# 
  3515  0D94                     	;# 
  3516  0D95                     	;# 
  3517  0D95                     	;# 
  3518  0D96                     	;# 
  3519  0D97                     	;# 
  3520  0D98                     	;# 
  3521  0D99                     	;# 
  3522  0D9A                     	;# 
  3523  0D9B                     	;# 
  3524  0D9C                     	;# 
  3525  0D9D                     	;# 
  3526  0D9E                     	;# 
  3527  0D9E                     	;# 
  3528  0D9F                     	;# 
  3529  0DA0                     	;# 
  3530  0DA1                     	;# 
  3531  0DA1                     	;# 
  3532  0DA2                     	;# 
  3533  0DA3                     	;# 
  3534  0DA4                     	;# 
  3535  0DA4                     	;# 
  3536  0DA5                     	;# 
  3537  0DA6                     	;# 
  3538  0DA7                     	;# 
  3539  0DA7                     	;# 
  3540  0DA8                     	;# 
  3541  0DA9                     	;# 
  3542  0DAA                     	;# 
  3543  0DAB                     	;# 
  3544  0DAC                     	;# 
  3545  0DAD                     	;# 
  3546  0DAE                     	;# 
  3547  0DAF                     	;# 
  3548  0E0F                     	;# 
  3549  0E10                     	;# 
  3550  0E11                     	;# 
  3551  0E12                     	;# 
  3552  0E13                     	;# 
  3553  0E14                     	;# 
  3554  0E15                     	;# 
  3555  0E16                     	;# 
  3556  0E17                     	;# 
  3557  0E18                     	;# 
  3558  0E19                     	;# 
  3559  0E1A                     	;# 
  3560  0E1B                     	;# 
  3561  0E1C                     	;# 
  3562  0E1D                     	;# 
  3563  0E1E                     	;# 
  3564  0E1F                     	;# 
  3565  0E20                     	;# 
  3566  0E21                     	;# 
  3567  0E22                     	;# 
  3568  0E23                     	;# 
  3569  0E24                     	;# 
  3570  0E25                     	;# 
  3571  0E26                     	;# 
  3572  0E27                     	;# 
  3573  0E28                     	;# 
  3574  0E29                     	;# 
  3575  0E2A                     	;# 
  3576  0E2B                     	;# 
  3577  0E2C                     	;# 
  3578  0E2D                     	;# 
  3579  0E2E                     	;# 
  3580  0E90                     	;# 
  3581  0E91                     	;# 
  3582  0E92                     	;# 
  3583  0E94                     	;# 
  3584  0E95                     	;# 
  3585  0E9C                     	;# 
  3586  0E9D                     	;# 
  3587  0E9E                     	;# 
  3588  0E9F                     	;# 
  3589  0EA0                     	;# 
  3590  0EA1                     	;# 
  3591  0EA2                     	;# 
  3592  0EA3                     	;# 
  3593  0EA4                     	;# 
  3594  0EA5                     	;# 
  3595  0EA6                     	;# 
  3596  0EA7                     	;# 
  3597  0F0F                     	;# 
  3598  0F10                     	;# 
  3599  0F11                     	;# 
  3600  0F12                     	;# 
  3601  0F13                     	;# 
  3602  0F14                     	;# 
  3603  0F15                     	;# 
  3604  0F16                     	;# 
  3605  0F17                     	;# 
  3606  0F18                     	;# 
  3607  0F19                     	;# 
  3608  0F1A                     	;# 
  3609  0F1B                     	;# 
  3610  0F1C                     	;# 
  3611  0F1D                     	;# 
  3612  0F1E                     	;# 
  3613  0F1F                     	;# 
  3614  0F20                     	;# 
  3615  0F21                     	;# 
  3616  0F22                     	;# 
  3617  0F23                     	;# 
  3618  0F24                     	;# 
  3619  0F25                     	;# 
  3620  0F26                     	;# 
  3621  0F27                     	;# 
  3622  0F28                     	;# 
  3623  0F29                     	;# 
  3624  0F2A                     	;# 
  3625  0F2B                     	;# 
  3626  0F2C                     	;# 
  3627  0F2D                     	;# 
  3628  0F2E                     	;# 
  3629  0F2F                     	;# 
  3630  0F30                     	;# 
  3631  0F31                     	;# 
  3632  0F32                     	;# 
  3633  0F33                     	;# 
  3634  0F34                     	;# 
  3635  0F35                     	;# 
  3636  0F36                     	;# 
  3637  0F37                     	;# 
  3638  0FE4                     	;# 
  3639  0FE5                     	;# 
  3640  0FE6                     	;# 
  3641  0FE7                     	;# 
  3642  0FE8                     	;# 
  3643  0FE9                     	;# 
  3644  0FEA                     	;# 
  3645  0FEB                     	;# 
  3646  0FED                     	;# 
  3647  0FEE                     	;# 
  3648  0FEF                     	;# 
  3649  0000                     	;# 
  3650  0001                     	;# 
  3651  0002                     	;# 
  3652  0003                     	;# 
  3653  0004                     	;# 
  3654  0005                     	;# 
  3655  0006                     	;# 
  3656  0007                     	;# 
  3657  0008                     	;# 
  3658  0009                     	;# 
  3659  000A                     	;# 
  3660  000B                     	;# 
  3661  000C                     	;# 
  3662  000D                     	;# 
  3663  000E                     	;# 
  3664  0010                     	;# 
  3665  0011                     	;# 
  3666  0012                     	;# 
  3667  0013                     	;# 
  3668  0014                     	;# 
  3669  0015                     	;# 
  3670  0016                     	;# 
  3671  0016                     	;# 
  3672  0017                     	;# 
  3673  0018                     	;# 
  3674  0019                     	;# 
  3675  001A                     	;# 
  3676  001A                     	;# 
  3677  001B                     	;# 
  3678  001B                     	;# 
  3679  001C                     	;# 
  3680  001D                     	;# 
  3681  001E                     	;# 
  3682  001F                     	;# 
  3683  008C                     	;# 
  3684  008D                     	;# 
  3685  008E                     	;# 
  3686  0090                     	;# 
  3687  0091                     	;# 
  3688  0092                     	;# 
  3689  0093                     	;# 
  3690  0094                     	;# 
  3691  0095                     	;# 
  3692  0096                     	;# 
  3693  0098                     	;# 
  3694  0099                     	;# 
  3695  009A                     	;# 
  3696  009B                     	;# 
  3697  009B                     	;# 
  3698  009C                     	;# 
  3699  009D                     	;# 
  3700  009E                     	;# 
  3701  009F                     	;# 
  3702  010C                     	;# 
  3703  010D                     	;# 
  3704  010E                     	;# 
  3705  0111                     	;# 
  3706  0112                     	;# 
  3707  0113                     	;# 
  3708  0114                     	;# 
  3709  0115                     	;# 
  3710  0116                     	;# 
  3711  0117                     	;# 
  3712  0118                     	;# 
  3713  0119                     	;# 
  3714  011C                     	;# 
  3715  018C                     	;# 
  3716  018D                     	;# 
  3717  018E                     	;# 
  3718  0191                     	;# 
  3719  0191                     	;# 
  3720  0192                     	;# 
  3721  0193                     	;# 
  3722  0193                     	;# 
  3723  0194                     	;# 
  3724  0195                     	;# 
  3725  0196                     	;# 
  3726  0197                     	;# 
  3727  0199                     	;# 
  3728  0199                     	;# 
  3729  0199                     	;# 
  3730  019A                     	;# 
  3731  019A                     	;# 
  3732  019A                     	;# 
  3733  019B                     	;# 
  3734  019B                     	;# 
  3735  019B                     	;# 
  3736  019B                     	;# 
  3737  019B                     	;# 
  3738  019C                     	;# 
  3739  019C                     	;# 
  3740  019C                     	;# 
  3741  019D                     	;# 
  3742  019D                     	;# 
  3743  019D                     	;# 
  3744  019E                     	;# 
  3745  019E                     	;# 
  3746  019E                     	;# 
  3747  019F                     	;# 
  3748  019F                     	;# 
  3749  019F                     	;# 
  3750  019F                     	;# 
  3751  019F                     	;# 
  3752  020C                     	;# 
  3753  020D                     	;# 
  3754  020E                     	;# 
  3755  0211                     	;# 
  3756  0211                     	;# 
  3757  0212                     	;# 
  3758  0212                     	;# 
  3759  0213                     	;# 
  3760  0213                     	;# 
  3761  0214                     	;# 
  3762  0214                     	;# 
  3763  0215                     	;# 
  3764  0215                     	;# 
  3765  0215                     	;# 
  3766  0215                     	;# 
  3767  0216                     	;# 
  3768  0216                     	;# 
  3769  0217                     	;# 
  3770  0217                     	;# 
  3771  028C                     	;# 
  3772  028D                     	;# 
  3773  028E                     	;# 
  3774  0291                     	;# 
  3775  0291                     	;# 
  3776  0292                     	;# 
  3777  0293                     	;# 
  3778  0294                     	;# 
  3779  0298                     	;# 
  3780  0298                     	;# 
  3781  0299                     	;# 
  3782  029A                     	;# 
  3783  029B                     	;# 
  3784  029E                     	;# 
  3785  030C                     	;# 
  3786  030D                     	;# 
  3787  030E                     	;# 
  3788  038C                     	;# 
  3789  038D                     	;# 
  3790  038E                     	;# 
  3791  0391                     	;# 
  3792  0392                     	;# 
  3793  0393                     	;# 
  3794  0394                     	;# 
  3795  0395                     	;# 
  3796  0396                     	;# 
  3797  0397                     	;# 
  3798  0398                     	;# 
  3799  0399                     	;# 
  3800  040E                     	;# 
  3801  0413                     	;# 
  3802  0413                     	;# 
  3803  0414                     	;# 
  3804  0414                     	;# 
  3805  0415                     	;# 
  3806  0416                     	;# 
  3807  0417                     	;# 
  3808  0418                     	;# 
  3809  041A                     	;# 
  3810  041A                     	;# 
  3811  041B                     	;# 
  3812  041B                     	;# 
  3813  041C                     	;# 
  3814  041D                     	;# 
  3815  041E                     	;# 
  3816  041F                     	;# 
  3817  0493                     	;# 
  3818  0494                     	;# 
  3819  0495                     	;# 
  3820  0496                     	;# 
  3821  049A                     	;# 
  3822  049B                     	;# 
  3823  049C                     	;# 
  3824  049D                     	;# 
  3825  058C                     	;# 
  3826  058C                     	;# 
  3827  058D                     	;# 
  3828  058E                     	;# 
  3829  058E                     	;# 
  3830  058F                     	;# 
  3831  0590                     	;# 
  3832  0590                     	;# 
  3833  0591                     	;# 
  3834  0592                     	;# 
  3835  0592                     	;# 
  3836  0593                     	;# 
  3837  0594                     	;# 
  3838  0594                     	;# 
  3839  0595                     	;# 
  3840  0596                     	;# 
  3841  0596                     	;# 
  3842  0597                     	;# 
  3843  0598                     	;# 
  3844  0599                     	;# 
  3845  059A                     	;# 
  3846  059B                     	;# 
  3847  059B                     	;# 
  3848  059C                     	;# 
  3849  059D                     	;# 
  3850  060C                     	;# 
  3851  060C                     	;# 
  3852  060D                     	;# 
  3853  060E                     	;# 
  3854  060F                     	;# 
  3855  060F                     	;# 
  3856  0610                     	;# 
  3857  0611                     	;# 
  3858  0612                     	;# 
  3859  0613                     	;# 
  3860  0614                     	;# 
  3861  0617                     	;# 
  3862  0617                     	;# 
  3863  0618                     	;# 
  3864  0619                     	;# 
  3865  061A                     	;# 
  3866  061A                     	;# 
  3867  061B                     	;# 
  3868  061C                     	;# 
  3869  0691                     	;# 
  3870  0692                     	;# 
  3871  0693                     	;# 
  3872  0694                     	;# 
  3873  0695                     	;# 
  3874  0696                     	;# 
  3875  0697                     	;# 
  3876  0699                     	;# 
  3877  069A                     	;# 
  3878  0711                     	;# 
  3879  0712                     	;# 
  3880  0713                     	;# 
  3881  0714                     	;# 
  3882  0715                     	;# 
  3883  0718                     	;# 
  3884  0718                     	;# 
  3885  0719                     	;# 
  3886  071A                     	;# 
  3887  071A                     	;# 
  3888  071B                     	;# 
  3889  071C                     	;# 
  3890  071D                     	;# 
  3891  0791                     	;# 
  3892  0791                     	;# 
  3893  0792                     	;# 
  3894  0793                     	;# 
  3895  0793                     	;# 
  3896  0794                     	;# 
  3897  0795                     	;# 
  3898  0795                     	;# 
  3899  0796                     	;# 
  3900  0797                     	;# 
  3901  0797                     	;# 
  3902  0798                     	;# 
  3903  0799                     	;# 
  3904  079A                     	;# 
  3905  080C                     	;# 
  3906  080C                     	;# 
  3907  080D                     	;# 
  3908  080E                     	;# 
  3909  080E                     	;# 
  3910  080F                     	;# 
  3911  0810                     	;# 
  3912  0810                     	;# 
  3913  0811                     	;# 
  3914  0812                     	;# 
  3915  0812                     	;# 
  3916  0813                     	;# 
  3917  0814                     	;# 
  3918  0815                     	;# 
  3919  0816                     	;# 
  3920  0817                     	;# 
  3921  0818                     	;# 
  3922  0819                     	;# 
  3923  081A                     	;# 
  3924  081A                     	;# 
  3925  081B                     	;# 
  3926  081C                     	;# 
  3927  081C                     	;# 
  3928  081D                     	;# 
  3929  088C                     	;# 
  3930  088D                     	;# 
  3931  088E                     	;# 
  3932  088F                     	;# 
  3933  088F                     	;# 
  3934  0890                     	;# 
  3935  0891                     	;# 
  3936  0892                     	;# 
  3937  0893                     	;# 
  3938  0893                     	;# 
  3939  0894                     	;# 
  3940  0895                     	;# 
  3941  0896                     	;# 
  3942  0897                     	;# 
  3943  0897                     	;# 
  3944  0898                     	;# 
  3945  0899                     	;# 
  3946  0D8C                     	;# 
  3947  0D8C                     	;# 
  3948  0D8D                     	;# 
  3949  0D8E                     	;# 
  3950  0D8F                     	;# 
  3951  0D8F                     	;# 
  3952  0D90                     	;# 
  3953  0D91                     	;# 
  3954  0D92                     	;# 
  3955  0D92                     	;# 
  3956  0D93                     	;# 
  3957  0D94                     	;# 
  3958  0D95                     	;# 
  3959  0D95                     	;# 
  3960  0D96                     	;# 
  3961  0D97                     	;# 
  3962  0D98                     	;# 
  3963  0D99                     	;# 
  3964  0D9A                     	;# 
  3965  0D9B                     	;# 
  3966  0D9C                     	;# 
  3967  0D9D                     	;# 
  3968  0D9E                     	;# 
  3969  0D9E                     	;# 
  3970  0D9F                     	;# 
  3971  0DA0                     	;# 
  3972  0DA1                     	;# 
  3973  0DA1                     	;# 
  3974  0DA2                     	;# 
  3975  0DA3                     	;# 
  3976  0DA4                     	;# 
  3977  0DA4                     	;# 
  3978  0DA5                     	;# 
  3979  0DA6                     	;# 
  3980  0DA7                     	;# 
  3981  0DA7                     	;# 
  3982  0DA8                     	;# 
  3983  0DA9                     	;# 
  3984  0DAA                     	;# 
  3985  0DAB                     	;# 
  3986  0DAC                     	;# 
  3987  0DAD                     	;# 
  3988  0DAE                     	;# 
  3989  0DAF                     	;# 
  3990  0E0F                     	;# 
  3991  0E10                     	;# 
  3992  0E11                     	;# 
  3993  0E12                     	;# 
  3994  0E13                     	;# 
  3995  0E14                     	;# 
  3996  0E15                     	;# 
  3997  0E16                     	;# 
  3998  0E17                     	;# 
  3999  0E18                     	;# 
  4000  0E19                     	;# 
  4001  0E1A                     	;# 
  4002  0E1B                     	;# 
  4003  0E1C                     	;# 
  4004  0E1D                     	;# 
  4005  0E1E                     	;# 
  4006  0E1F                     	;# 
  4007  0E20                     	;# 
  4008  0E21                     	;# 
  4009  0E22                     	;# 
  4010  0E23                     	;# 
  4011  0E24                     	;# 
  4012  0E25                     	;# 
  4013  0E26                     	;# 
  4014  0E27                     	;# 
  4015  0E28                     	;# 
  4016  0E29                     	;# 
  4017  0E2A                     	;# 
  4018  0E2B                     	;# 
  4019  0E2C                     	;# 
  4020  0E2D                     	;# 
  4021  0E2E                     	;# 
  4022  0E90                     	;# 
  4023  0E91                     	;# 
  4024  0E92                     	;# 
  4025  0E94                     	;# 
  4026  0E95                     	;# 
  4027  0E9C                     	;# 
  4028  0E9D                     	;# 
  4029  0E9E                     	;# 
  4030  0E9F                     	;# 
  4031  0EA0                     	;# 
  4032  0EA1                     	;# 
  4033  0EA2                     	;# 
  4034  0EA3                     	;# 
  4035  0EA4                     	;# 
  4036  0EA5                     	;# 
  4037  0EA6                     	;# 
  4038  0EA7                     	;# 
  4039  0F0F                     	;# 
  4040  0F10                     	;# 
  4041  0F11                     	;# 
  4042  0F12                     	;# 
  4043  0F13                     	;# 
  4044  0F14                     	;# 
  4045  0F15                     	;# 
  4046  0F16                     	;# 
  4047  0F17                     	;# 
  4048  0F18                     	;# 
  4049  0F19                     	;# 
  4050  0F1A                     	;# 
  4051  0F1B                     	;# 
  4052  0F1C                     	;# 
  4053  0F1D                     	;# 
  4054  0F1E                     	;# 
  4055  0F1F                     	;# 
  4056  0F20                     	;# 
  4057  0F21                     	;# 
  4058  0F22                     	;# 
  4059  0F23                     	;# 
  4060  0F24                     	;# 
  4061  0F25                     	;# 
  4062  0F26                     	;# 
  4063  0F27                     	;# 
  4064  0F28                     	;# 
  4065  0F29                     	;# 
  4066  0F2A                     	;# 
  4067  0F2B                     	;# 
  4068  0F2C                     	;# 
  4069  0F2D                     	;# 
  4070  0F2E                     	;# 
  4071  0F2F                     	;# 
  4072  0F30                     	;# 
  4073  0F31                     	;# 
  4074  0F32                     	;# 
  4075  0F33                     	;# 
  4076  0F34                     	;# 
  4077  0F35                     	;# 
  4078  0F36                     	;# 
  4079  0F37                     	;# 
  4080  0FE4                     	;# 
  4081  0FE5                     	;# 
  4082  0FE6                     	;# 
  4083  0FE7                     	;# 
  4084  0FE8                     	;# 
  4085  0FE9                     	;# 
  4086  0FEA                     	;# 
  4087  0FEB                     	;# 
  4088  0FED                     	;# 
  4089  0FEE                     	;# 
  4090  0FEF                     	;# 
  4091  0000                     	;# 
  4092  0001                     	;# 
  4093  0002                     	;# 
  4094  0003                     	;# 
  4095  0004                     	;# 
  4096  0005                     	;# 
  4097  0006                     	;# 
  4098  0007                     	;# 
  4099  0008                     	;# 
  4100  0009                     	;# 
  4101  000A                     	;# 
  4102  000B                     	;# 
  4103  000C                     	;# 
  4104  000D                     	;# 
  4105  000E                     	;# 
  4106  0010                     	;# 
  4107  0011                     	;# 
  4108  0012                     	;# 
  4109  0013                     	;# 
  4110  0014                     	;# 
  4111  0015                     	;# 
  4112  0016                     	;# 
  4113  0016                     	;# 
  4114  0017                     	;# 
  4115  0018                     	;# 
  4116  0019                     	;# 
  4117  001A                     	;# 
  4118  001A                     	;# 
  4119  001B                     	;# 
  4120  001B                     	;# 
  4121  001C                     	;# 
  4122  001D                     	;# 
  4123  001E                     	;# 
  4124  001F                     	;# 
  4125  008C                     	;# 
  4126  008D                     	;# 
  4127  008E                     	;# 
  4128  0090                     	;# 
  4129  0091                     	;# 
  4130  0092                     	;# 
  4131  0093                     	;# 
  4132  0094                     	;# 
  4133  0095                     	;# 
  4134  0096                     	;# 
  4135  0098                     	;# 
  4136  0099                     	;# 
  4137  009A                     	;# 
  4138  009B                     	;# 
  4139  009B                     	;# 
  4140  009C                     	;# 
  4141  009D                     	;# 
  4142  009E                     	;# 
  4143  009F                     	;# 
  4144  010C                     	;# 
  4145  010D                     	;# 
  4146  010E                     	;# 
  4147  0111                     	;# 
  4148  0112                     	;# 
  4149  0113                     	;# 
  4150  0114                     	;# 
  4151  0115                     	;# 
  4152  0116                     	;# 
  4153  0117                     	;# 
  4154  0118                     	;# 
  4155  0119                     	;# 
  4156  011C                     	;# 
  4157  018C                     	;# 
  4158  018D                     	;# 
  4159  018E                     	;# 
  4160  0191                     	;# 
  4161  0191                     	;# 
  4162  0192                     	;# 
  4163  0193                     	;# 
  4164  0193                     	;# 
  4165  0194                     	;# 
  4166  0195                     	;# 
  4167  0196                     	;# 
  4168  0197                     	;# 
  4169  0199                     	;# 
  4170  0199                     	;# 
  4171  0199                     	;# 
  4172  019A                     	;# 
  4173  019A                     	;# 
  4174  019A                     	;# 
  4175  019B                     	;# 
  4176  019B                     	;# 
  4177  019B                     	;# 
  4178  019B                     	;# 
  4179  019B                     	;# 
  4180  019C                     	;# 
  4181  019C                     	;# 
  4182  019C                     	;# 
  4183  019D                     	;# 
  4184  019D                     	;# 
  4185  019D                     	;# 
  4186  019E                     	;# 
  4187  019E                     	;# 
  4188  019E                     	;# 
  4189  019F                     	;# 
  4190  019F                     	;# 
  4191  019F                     	;# 
  4192  019F                     	;# 
  4193  019F                     	;# 
  4194  020C                     	;# 
  4195  020D                     	;# 
  4196  020E                     	;# 
  4197  0211                     	;# 
  4198  0211                     	;# 
  4199  0212                     	;# 
  4200  0212                     	;# 
  4201  0213                     	;# 
  4202  0213                     	;# 
  4203  0214                     	;# 
  4204  0214                     	;# 
  4205  0215                     	;# 
  4206  0215                     	;# 
  4207  0215                     	;# 
  4208  0215                     	;# 
  4209  0216                     	;# 
  4210  0216                     	;# 
  4211  0217                     	;# 
  4212  0217                     	;# 
  4213  028C                     	;# 
  4214  028D                     	;# 
  4215  028E                     	;# 
  4216  0291                     	;# 
  4217  0291                     	;# 
  4218  0292                     	;# 
  4219  0293                     	;# 
  4220  0294                     	;# 
  4221  0298                     	;# 
  4222  0298                     	;# 
  4223  0299                     	;# 
  4224  029A                     	;# 
  4225  029B                     	;# 
  4226  029E                     	;# 
  4227  030C                     	;# 
  4228  030D                     	;# 
  4229  030E                     	;# 
  4230  038C                     	;# 
  4231  038D                     	;# 
  4232  038E                     	;# 
  4233  0391                     	;# 
  4234  0392                     	;# 
  4235  0393                     	;# 
  4236  0394                     	;# 
  4237  0395                     	;# 
  4238  0396                     	;# 
  4239  0397                     	;# 
  4240  0398                     	;# 
  4241  0399                     	;# 
  4242  040E                     	;# 
  4243  0413                     	;# 
  4244  0413                     	;# 
  4245  0414                     	;# 
  4246  0414                     	;# 
  4247  0415                     	;# 
  4248  0416                     	;# 
  4249  0417                     	;# 
  4250  0418                     	;# 
  4251  041A                     	;# 
  4252  041A                     	;# 
  4253  041B                     	;# 
  4254  041B                     	;# 
  4255  041C                     	;# 
  4256  041D                     	;# 
  4257  041E                     	;# 
  4258  041F                     	;# 
  4259  0493                     	;# 
  4260  0494                     	;# 
  4261  0495                     	;# 
  4262  0496                     	;# 
  4263  049A                     	;# 
  4264  049B                     	;# 
  4265  049C                     	;# 
  4266  049D                     	;# 
  4267  058C                     	;# 
  4268  058C                     	;# 
  4269  058D                     	;# 
  4270  058E                     	;# 
  4271  058E                     	;# 
  4272  058F                     	;# 
  4273  0590                     	;# 
  4274  0590                     	;# 
  4275  0591                     	;# 
  4276  0592                     	;# 
  4277  0592                     	;# 
  4278  0593                     	;# 
  4279  0594                     	;# 
  4280  0594                     	;# 
  4281  0595                     	;# 
  4282  0596                     	;# 
  4283  0596                     	;# 
  4284  0597                     	;# 
  4285  0598                     	;# 
  4286  0599                     	;# 
  4287  059A                     	;# 
  4288  059B                     	;# 
  4289  059B                     	;# 
  4290  059C                     	;# 
  4291  059D                     	;# 
  4292  060C                     	;# 
  4293  060C                     	;# 
  4294  060D                     	;# 
  4295  060E                     	;# 
  4296  060F                     	;# 
  4297  060F                     	;# 
  4298  0610                     	;# 
  4299  0611                     	;# 
  4300  0612                     	;# 
  4301  0613                     	;# 
  4302  0614                     	;# 
  4303  0617                     	;# 
  4304  0617                     	;# 
  4305  0618                     	;# 
  4306  0619                     	;# 
  4307  061A                     	;# 
  4308  061A                     	;# 
  4309  061B                     	;# 
  4310  061C                     	;# 
  4311  0691                     	;# 
  4312  0692                     	;# 
  4313  0693                     	;# 
  4314  0694                     	;# 
  4315  0695                     	;# 
  4316  0696                     	;# 
  4317  0697                     	;# 
  4318  0699                     	;# 
  4319  069A                     	;# 
  4320  0711                     	;# 
  4321  0712                     	;# 
  4322  0713                     	;# 
  4323  0714                     	;# 
  4324  0715                     	;# 
  4325  0718                     	;# 
  4326  0718                     	;# 
  4327  0719                     	;# 
  4328  071A                     	;# 
  4329  071A                     	;# 
  4330  071B                     	;# 
  4331  071C                     	;# 
  4332  071D                     	;# 
  4333  0791                     	;# 
  4334  0791                     	;# 
  4335  0792                     	;# 
  4336  0793                     	;# 
  4337  0793                     	;# 
  4338  0794                     	;# 
  4339  0795                     	;# 
  4340  0795                     	;# 
  4341  0796                     	;# 
  4342  0797                     	;# 
  4343  0797                     	;# 
  4344  0798                     	;# 
  4345  0799                     	;# 
  4346  079A                     	;# 
  4347  080C                     	;# 
  4348  080C                     	;# 
  4349  080D                     	;# 
  4350  080E                     	;# 
  4351  080E                     	;# 
  4352  080F                     	;# 
  4353  0810                     	;# 
  4354  0810                     	;# 
  4355  0811                     	;# 
  4356  0812                     	;# 
  4357  0812                     	;# 
  4358  0813                     	;# 
  4359  0814                     	;# 
  4360  0815                     	;# 
  4361  0816                     	;# 
  4362  0817                     	;# 
  4363  0818                     	;# 
  4364  0819                     	;# 
  4365  081A                     	;# 
  4366  081A                     	;# 
  4367  081B                     	;# 
  4368  081C                     	;# 
  4369  081C                     	;# 
  4370  081D                     	;# 
  4371  088C                     	;# 
  4372  088D                     	;# 
  4373  088E                     	;# 
  4374  088F                     	;# 
  4375  088F                     	;# 
  4376  0890                     	;# 
  4377  0891                     	;# 
  4378  0892                     	;# 
  4379  0893                     	;# 
  4380  0893                     	;# 
  4381  0894                     	;# 
  4382  0895                     	;# 
  4383  0896                     	;# 
  4384  0897                     	;# 
  4385  0897                     	;# 
  4386  0898                     	;# 
  4387  0899                     	;# 
  4388  0D8C                     	;# 
  4389  0D8C                     	;# 
  4390  0D8D                     	;# 
  4391  0D8E                     	;# 
  4392  0D8F                     	;# 
  4393  0D8F                     	;# 
  4394  0D90                     	;# 
  4395  0D91                     	;# 
  4396  0D92                     	;# 
  4397  0D92                     	;# 
  4398  0D93                     	;# 
  4399  0D94                     	;# 
  4400  0D95                     	;# 
  4401  0D95                     	;# 
  4402  0D96                     	;# 
  4403  0D97                     	;# 
  4404  0D98                     	;# 
  4405  0D99                     	;# 
  4406  0D9A                     	;# 
  4407  0D9B                     	;# 
  4408  0D9C                     	;# 
  4409  0D9D                     	;# 
  4410  0D9E                     	;# 
  4411  0D9E                     	;# 
  4412  0D9F                     	;# 
  4413  0DA0                     	;# 
  4414  0DA1                     	;# 
  4415  0DA1                     	;# 
  4416  0DA2                     	;# 
  4417  0DA3                     	;# 
  4418  0DA4                     	;# 
  4419  0DA4                     	;# 
  4420  0DA5                     	;# 
  4421  0DA6                     	;# 
  4422  0DA7                     	;# 
  4423  0DA7                     	;# 
  4424  0DA8                     	;# 
  4425  0DA9                     	;# 
  4426  0DAA                     	;# 
  4427  0DAB                     	;# 
  4428  0DAC                     	;# 
  4429  0DAD                     	;# 
  4430  0DAE                     	;# 
  4431  0DAF                     	;# 
  4432  0E0F                     	;# 
  4433  0E10                     	;# 
  4434  0E11                     	;# 
  4435  0E12                     	;# 
  4436  0E13                     	;# 
  4437  0E14                     	;# 
  4438  0E15                     	;# 
  4439  0E16                     	;# 
  4440  0E17                     	;# 
  4441  0E18                     	;# 
  4442  0E19                     	;# 
  4443  0E1A                     	;# 
  4444  0E1B                     	;# 
  4445  0E1C                     	;# 
  4446  0E1D                     	;# 
  4447  0E1E                     	;# 
  4448  0E1F                     	;# 
  4449  0E20                     	;# 
  4450  0E21                     	;# 
  4451  0E22                     	;# 
  4452  0E23                     	;# 
  4453  0E24                     	;# 
  4454  0E25                     	;# 
  4455  0E26                     	;# 
  4456  0E27                     	;# 
  4457  0E28                     	;# 
  4458  0E29                     	;# 
  4459  0E2A                     	;# 
  4460  0E2B                     	;# 
  4461  0E2C                     	;# 
  4462  0E2D                     	;# 
  4463  0E2E                     	;# 
  4464  0E90                     	;# 
  4465  0E91                     	;# 
  4466  0E92                     	;# 
  4467  0E94                     	;# 
  4468  0E95                     	;# 
  4469  0E9C                     	;# 
  4470  0E9D                     	;# 
  4471  0E9E                     	;# 
  4472  0E9F                     	;# 
  4473  0EA0                     	;# 
  4474  0EA1                     	;# 
  4475  0EA2                     	;# 
  4476  0EA3                     	;# 
  4477  0EA4                     	;# 
  4478  0EA5                     	;# 
  4479  0EA6                     	;# 
  4480  0EA7                     	;# 
  4481  0F0F                     	;# 
  4482  0F10                     	;# 
  4483  0F11                     	;# 
  4484  0F12                     	;# 
  4485  0F13                     	;# 
  4486  0F14                     	;# 
  4487  0F15                     	;# 
  4488  0F16                     	;# 
  4489  0F17                     	;# 
  4490  0F18                     	;# 
  4491  0F19                     	;# 
  4492  0F1A                     	;# 
  4493  0F1B                     	;# 
  4494  0F1C                     	;# 
  4495  0F1D                     	;# 
  4496  0F1E                     	;# 
  4497  0F1F                     	;# 
  4498  0F20                     	;# 
  4499  0F21                     	;# 
  4500  0F22                     	;# 
  4501  0F23                     	;# 
  4502  0F24                     	;# 
  4503  0F25                     	;# 
  4504  0F26                     	;# 
  4505  0F27                     	;# 
  4506  0F28                     	;# 
  4507  0F29                     	;# 
  4508  0F2A                     	;# 
  4509  0F2B                     	;# 
  4510  0F2C                     	;# 
  4511  0F2D                     	;# 
  4512  0F2E                     	;# 
  4513  0F2F                     	;# 
  4514  0F30                     	;# 
  4515  0F31                     	;# 
  4516  0F32                     	;# 
  4517  0F33                     	;# 
  4518  0F34                     	;# 
  4519  0F35                     	;# 
  4520  0F36                     	;# 
  4521  0F37                     	;# 
  4522  0FE4                     	;# 
  4523  0FE5                     	;# 
  4524  0FE6                     	;# 
  4525  0FE7                     	;# 
  4526  0FE8                     	;# 
  4527  0FE9                     	;# 
  4528  0FEA                     	;# 
  4529  0FEB                     	;# 
  4530  0FED                     	;# 
  4531  0FEE                     	;# 
  4532  0FEF                     	;# 
  4533  0000                     	;# 
  4534  0001                     	;# 
  4535  0002                     	;# 
  4536  0003                     	;# 
  4537  0004                     	;# 
  4538  0005                     	;# 
  4539  0006                     	;# 
  4540  0007                     	;# 
  4541  0008                     	;# 
  4542  0009                     	;# 
  4543  000A                     	;# 
  4544  000B                     	;# 
  4545  000C                     	;# 
  4546  000D                     	;# 
  4547  000E                     	;# 
  4548  0010                     	;# 
  4549  0011                     	;# 
  4550  0012                     	;# 
  4551  0013                     	;# 
  4552  0014                     	;# 
  4553  0015                     	;# 
  4554  0016                     	;# 
  4555  0016                     	;# 
  4556  0017                     	;# 
  4557  0018                     	;# 
  4558  0019                     	;# 
  4559  001A                     	;# 
  4560  001A                     	;# 
  4561  001B                     	;# 
  4562  001B                     	;# 
  4563  001C                     	;# 
  4564  001D                     	;# 
  4565  001E                     	;# 
  4566  001F                     	;# 
  4567  008C                     	;# 
  4568  008D                     	;# 
  4569  008E                     	;# 
  4570  0090                     	;# 
  4571  0091                     	;# 
  4572  0092                     	;# 
  4573  0093                     	;# 
  4574  0094                     	;# 
  4575  0095                     	;# 
  4576  0096                     	;# 
  4577  0098                     	;# 
  4578  0099                     	;# 
  4579  009A                     	;# 
  4580  009B                     	;# 
  4581  009B                     	;# 
  4582  009C                     	;# 
  4583  009D                     	;# 
  4584  009E                     	;# 
  4585  009F                     	;# 
  4586  010C                     	;# 
  4587  010D                     	;# 
  4588  010E                     	;# 
  4589  0111                     	;# 
  4590  0112                     	;# 
  4591  0113                     	;# 
  4592  0114                     	;# 
  4593  0115                     	;# 
  4594  0116                     	;# 
  4595  0117                     	;# 
  4596  0118                     	;# 
  4597  0119                     	;# 
  4598  011C                     	;# 
  4599  018C                     	;# 
  4600  018D                     	;# 
  4601  018E                     	;# 
  4602  0191                     	;# 
  4603  0191                     	;# 
  4604  0192                     	;# 
  4605  0193                     	;# 
  4606  0193                     	;# 
  4607  0194                     	;# 
  4608  0195                     	;# 
  4609  0196                     	;# 
  4610  0197                     	;# 
  4611  0199                     	;# 
  4612  0199                     	;# 
  4613  0199                     	;# 
  4614  019A                     	;# 
  4615  019A                     	;# 
  4616  019A                     	;# 
  4617  019B                     	;# 
  4618  019B                     	;# 
  4619  019B                     	;# 
  4620  019B                     	;# 
  4621  019B                     	;# 
  4622  019C                     	;# 
  4623  019C                     	;# 
  4624  019C                     	;# 
  4625  019D                     	;# 
  4626  019D                     	;# 
  4627  019D                     	;# 
  4628  019E                     	;# 
  4629  019E                     	;# 
  4630  019E                     	;# 
  4631  019F                     	;# 
  4632  019F                     	;# 
  4633  019F                     	;# 
  4634  019F                     	;# 
  4635  019F                     	;# 
  4636  020C                     	;# 
  4637  020D                     	;# 
  4638  020E                     	;# 
  4639  0211                     	;# 
  4640  0211                     	;# 
  4641  0212                     	;# 
  4642  0212                     	;# 
  4643  0213                     	;# 
  4644  0213                     	;# 
  4645  0214                     	;# 
  4646  0214                     	;# 
  4647  0215                     	;# 
  4648  0215                     	;# 
  4649  0215                     	;# 
  4650  0215                     	;# 
  4651  0216                     	;# 
  4652  0216                     	;# 
  4653  0217                     	;# 
  4654  0217                     	;# 
  4655  028C                     	;# 
  4656  028D                     	;# 
  4657  028E                     	;# 
  4658  0291                     	;# 
  4659  0291                     	;# 
  4660  0292                     	;# 
  4661  0293                     	;# 
  4662  0294                     	;# 
  4663  0298                     	;# 
  4664  0298                     	;# 
  4665  0299                     	;# 
  4666  029A                     	;# 
  4667  029B                     	;# 
  4668  029E                     	;# 
  4669  030C                     	;# 
  4670  030D                     	;# 
  4671  030E                     	;# 
  4672  038C                     	;# 
  4673  038D                     	;# 
  4674  038E                     	;# 
  4675  0391                     	;# 
  4676  0392                     	;# 
  4677  0393                     	;# 
  4678  0394                     	;# 
  4679  0395                     	;# 
  4680  0396                     	;# 
  4681  0397                     	;# 
  4682  0398                     	;# 
  4683  0399                     	;# 
  4684  040E                     	;# 
  4685  0413                     	;# 
  4686  0413                     	;# 
  4687  0414                     	;# 
  4688  0414                     	;# 
  4689  0415                     	;# 
  4690  0416                     	;# 
  4691  0417                     	;# 
  4692  0418                     	;# 
  4693  041A                     	;# 
  4694  041A                     	;# 
  4695  041B                     	;# 
  4696  041B                     	;# 
  4697  041C                     	;# 
  4698  041D                     	;# 
  4699  041E                     	;# 
  4700  041F                     	;# 
  4701  0493                     	;# 
  4702  0494                     	;# 
  4703  0495                     	;# 
  4704  0496                     	;# 
  4705  049A                     	;# 
  4706  049B                     	;# 
  4707  049C                     	;# 
  4708  049D                     	;# 
  4709  058C                     	;# 
  4710  058C                     	;# 
  4711  058D                     	;# 
  4712  058E                     	;# 
  4713  058E                     	;# 
  4714  058F                     	;# 
  4715  0590                     	;# 
  4716  0590                     	;# 
  4717  0591                     	;# 
  4718  0592                     	;# 
  4719  0592                     	;# 
  4720  0593                     	;# 
  4721  0594                     	;# 
  4722  0594                     	;# 
  4723  0595                     	;# 
  4724  0596                     	;# 
  4725  0596                     	;# 
  4726  0597                     	;# 
  4727  0598                     	;# 
  4728  0599                     	;# 
  4729  059A                     	;# 
  4730  059B                     	;# 
  4731  059B                     	;# 
  4732  059C                     	;# 
  4733  059D                     	;# 
  4734  060C                     	;# 
  4735  060C                     	;# 
  4736  060D                     	;# 
  4737  060E                     	;# 
  4738  060F                     	;# 
  4739  060F                     	;# 
  4740  0610                     	;# 
  4741  0611                     	;# 
  4742  0612                     	;# 
  4743  0613                     	;# 
  4744  0614                     	;# 
  4745  0617                     	;# 
  4746  0617                     	;# 
  4747  0618                     	;# 
  4748  0619                     	;# 
  4749  061A                     	;# 
  4750  061A                     	;# 
  4751  061B                     	;# 
  4752  061C                     	;# 
  4753  0691                     	;# 
  4754  0692                     	;# 
  4755  0693                     	;# 
  4756  0694                     	;# 
  4757  0695                     	;# 
  4758  0696                     	;# 
  4759  0697                     	;# 
  4760  0699                     	;# 
  4761  069A                     	;# 
  4762  0711                     	;# 
  4763  0712                     	;# 
  4764  0713                     	;# 
  4765  0714                     	;# 
  4766  0715                     	;# 
  4767  0718                     	;# 
  4768  0718                     	;# 
  4769  0719                     	;# 
  4770  071A                     	;# 
  4771  071A                     	;# 
  4772  071B                     	;# 
  4773  071C                     	;# 
  4774  071D                     	;# 
  4775  0791                     	;# 
  4776  0791                     	;# 
  4777  0792                     	;# 
  4778  0793                     	;# 
  4779  0793                     	;# 
  4780  0794                     	;# 
  4781  0795                     	;# 
  4782  0795                     	;# 
  4783  0796                     	;# 
  4784  0797                     	;# 
  4785  0797                     	;# 
  4786  0798                     	;# 
  4787  0799                     	;# 
  4788  079A                     	;# 
  4789  080C                     	;# 
  4790  080C                     	;# 
  4791  080D                     	;# 
  4792  080E                     	;# 
  4793  080E                     	;# 
  4794  080F                     	;# 
  4795  0810                     	;# 
  4796  0810                     	;# 
  4797  0811                     	;# 
  4798  0812                     	;# 
  4799  0812                     	;# 
  4800  0813                     	;# 
  4801  0814                     	;# 
  4802  0815                     	;# 
  4803  0816                     	;# 
  4804  0817                     	;# 
  4805  0818                     	;# 
  4806  0819                     	;# 
  4807  081A                     	;# 
  4808  081A                     	;# 
  4809  081B                     	;# 
  4810  081C                     	;# 
  4811  081C                     	;# 
  4812  081D                     	;# 
  4813  088C                     	;# 
  4814  088D                     	;# 
  4815  088E                     	;# 
  4816  088F                     	;# 
  4817  088F                     	;# 
  4818  0890                     	;# 
  4819  0891                     	;# 
  4820  0892                     	;# 
  4821  0893                     	;# 
  4822  0893                     	;# 
  4823  0894                     	;# 
  4824  0895                     	;# 
  4825  0896                     	;# 
  4826  0897                     	;# 
  4827  0897                     	;# 
  4828  0898                     	;# 
  4829  0899                     	;# 
  4830  0D8C                     	;# 
  4831  0D8C                     	;# 
  4832  0D8D                     	;# 
  4833  0D8E                     	;# 
  4834  0D8F                     	;# 
  4835  0D8F                     	;# 
  4836  0D90                     	;# 
  4837  0D91                     	;# 
  4838  0D92                     	;# 
  4839  0D92                     	;# 
  4840  0D93                     	;# 
  4841  0D94                     	;# 
  4842  0D95                     	;# 
  4843  0D95                     	;# 
  4844  0D96                     	;# 
  4845  0D97                     	;# 
  4846  0D98                     	;# 
  4847  0D99                     	;# 
  4848  0D9A                     	;# 
  4849  0D9B                     	;# 
  4850  0D9C                     	;# 
  4851  0D9D                     	;# 
  4852  0D9E                     	;# 
  4853  0D9E                     	;# 
  4854  0D9F                     	;# 
  4855  0DA0                     	;# 
  4856  0DA1                     	;# 
  4857  0DA1                     	;# 
  4858  0DA2                     	;# 
  4859  0DA3                     	;# 
  4860  0DA4                     	;# 
  4861  0DA4                     	;# 
  4862  0DA5                     	;# 
  4863  0DA6                     	;# 
  4864  0DA7                     	;# 
  4865  0DA7                     	;# 
  4866  0DA8                     	;# 
  4867  0DA9                     	;# 
  4868  0DAA                     	;# 
  4869  0DAB                     	;# 
  4870  0DAC                     	;# 
  4871  0DAD                     	;# 
  4872  0DAE                     	;# 
  4873  0DAF                     	;# 
  4874  0E0F                     	;# 
  4875  0E10                     	;# 
  4876  0E11                     	;# 
  4877  0E12                     	;# 
  4878  0E13                     	;# 
  4879  0E14                     	;# 
  4880  0E15                     	;# 
  4881  0E16                     	;# 
  4882  0E17                     	;# 
  4883  0E18                     	;# 
  4884  0E19                     	;# 
  4885  0E1A                     	;# 
  4886  0E1B                     	;# 
  4887  0E1C                     	;# 
  4888  0E1D                     	;# 
  4889  0E1E                     	;# 
  4890  0E1F                     	;# 
  4891  0E20                     	;# 
  4892  0E21                     	;# 
  4893  0E22                     	;# 
  4894  0E23                     	;# 
  4895  0E24                     	;# 
  4896  0E25                     	;# 
  4897  0E26                     	;# 
  4898  0E27                     	;# 
  4899  0E28                     	;# 
  4900  0E29                     	;# 
  4901  0E2A                     	;# 
  4902  0E2B                     	;# 
  4903  0E2C                     	;# 
  4904  0E2D                     	;# 
  4905  0E2E                     	;# 
  4906  0E90                     	;# 
  4907  0E91                     	;# 
  4908  0E92                     	;# 
  4909  0E94                     	;# 
  4910  0E95                     	;# 
  4911  0E9C                     	;# 
  4912  0E9D                     	;# 
  4913  0E9E                     	;# 
  4914  0E9F                     	;# 
  4915  0EA0                     	;# 
  4916  0EA1                     	;# 
  4917  0EA2                     	;# 
  4918  0EA3                     	;# 
  4919  0EA4                     	;# 
  4920  0EA5                     	;# 
  4921  0EA6                     	;# 
  4922  0EA7                     	;# 
  4923  0F0F                     	;# 
  4924  0F10                     	;# 
  4925  0F11                     	;# 
  4926  0F12                     	;# 
  4927  0F13                     	;# 
  4928  0F14                     	;# 
  4929  0F15                     	;# 
  4930  0F16                     	;# 
  4931  0F17                     	;# 
  4932  0F18                     	;# 
  4933  0F19                     	;# 
  4934  0F1A                     	;# 
  4935  0F1B                     	;# 
  4936  0F1C                     	;# 
  4937  0F1D                     	;# 
  4938  0F1E                     	;# 
  4939  0F1F                     	;# 
  4940  0F20                     	;# 
  4941  0F21                     	;# 
  4942  0F22                     	;# 
  4943  0F23                     	;# 
  4944  0F24                     	;# 
  4945  0F25                     	;# 
  4946  0F26                     	;# 
  4947  0F27                     	;# 
  4948  0F28                     	;# 
  4949  0F29                     	;# 
  4950  0F2A                     	;# 
  4951  0F2B                     	;# 
  4952  0F2C                     	;# 
  4953  0F2D                     	;# 
  4954  0F2E                     	;# 
  4955  0F2F                     	;# 
  4956  0F30                     	;# 
  4957  0F31                     	;# 
  4958  0F32                     	;# 
  4959  0F33                     	;# 
  4960  0F34                     	;# 
  4961  0F35                     	;# 
  4962  0F36                     	;# 
  4963  0F37                     	;# 
  4964  0FE4                     	;# 
  4965  0FE5                     	;# 
  4966  0FE6                     	;# 
  4967  0FE7                     	;# 
  4968  0FE8                     	;# 
  4969  0FE9                     	;# 
  4970  0FEA                     	;# 
  4971  0FEB                     	;# 
  4972  0FED                     	;# 
  4973  0FEE                     	;# 
  4974  0FEF                     	;# 
  4975                           
  4976                           	psect	idataBANK1
  4977  165E                     __pidataBANK1:
  4978                           
  4979                           ;initializer for _text10
  4980  165E  3420               	retlw	32
  4981  165F  3420               	retlw	32
  4982  1660  3430               	retlw	48
  4983  1661  3430               	retlw	48
  4984  1662  3430               	retlw	48
  4985  1663  3430               	retlw	48
  4986  1664  3420               	retlw	32
  4987  1665  3420               	retlw	32
  4988  1666  3420               	retlw	32
  4989  1667  3430               	retlw	48
  4990  1668  3430               	retlw	48
  4991  1669  3430               	retlw	48
  4992  166A  3430               	retlw	48
  4993  166B  3420               	retlw	32
  4994  166C  3420               	retlw	32
  4995  166D  3420               	retlw	32
  4996  166E  3400               	retlw	0
  4997                           
  4998                           	psect	idataBANK2
  4999  08F8                     __pidataBANK2:
  5000                           
  5001                           ;initializer for _text11
  5002  08F8  3420               	retlw	32
  5003  08F9  3420               	retlw	32
  5004  08FA  3454               	retlw	84
  5005  08FB  3465               	retlw	101
  5006  08FC  346D               	retlw	109
  5007  08FD  3470               	retlw	112
  5008  08FE  3420               	retlw	32
  5009  08FF  3420               	retlw	32
  5010  0900  3443               	retlw	67
  5011  0901  3420               	retlw	32
  5012  0902  3420               	retlw	32
  5013  0903  3420               	retlw	32
  5014  0904  3420               	retlw	32
  5015  0905  3420               	retlw	32
  5016  0906  3420               	retlw	32
  5017  0907  3420               	retlw	32
  5018  0908  3400               	retlw	0
  5019                           
  5020                           ;initializer for _text9
  5021  0909  3420               	retlw	32
  5022  090A  3420               	retlw	32
  5023  090B  3450               	retlw	80
  5024  090C  346F               	retlw	111
  5025  090D  3474               	retlw	116
  5026  090E  3431               	retlw	49
  5027  090F  3420               	retlw	32
  5028  0910  3420               	retlw	32
  5029  0911  3420               	retlw	32
  5030  0912  3450               	retlw	80
  5031  0913  346F               	retlw	111
  5032  0914  3474               	retlw	116
  5033  0915  3432               	retlw	50
  5034  0916  3420               	retlw	32
  5035  0917  3420               	retlw	32
  5036  0918  3420               	retlw	32
  5037  0919  3400               	retlw	0
  5038                           
  5039                           ;initializer for _text6
  5040  091A  3420               	retlw	32
  5041  091B  3420               	retlw	32
  5042  091C  3420               	retlw	32
  5043  091D  3420               	retlw	32
  5044  091E  3420               	retlw	32
  5045  091F  3468               	retlw	104
  5046  0920  346F               	retlw	111
  5047  0921  3477               	retlw	119
  5048  0922  3464               	retlw	100
  5049  0923  3479               	retlw	121
  5050  0924  3420               	retlw	32
  5051  0925  3420               	retlw	32
  5052  0926  3420               	retlw	32
  5053  0927  3420               	retlw	32
  5054  0928  3420               	retlw	32
  5055  0929  3420               	retlw	32
  5056  092A  3400               	retlw	0
  5057                           
  5058                           ;initializer for _text5
  5059  092B  3420               	retlw	32
  5060  092C  3450               	retlw	80
  5061  092D  346F               	retlw	111
  5062  092E  3477               	retlw	119
  5063  092F  3465               	retlw	101
  5064  0930  3472               	retlw	114
  5065  0931  3469               	retlw	105
  5066  0932  346E               	retlw	110
  5067  0933  3467               	retlw	103
  5068  0934  3420               	retlw	32
  5069  0935  3455               	retlw	85
  5070  0936  3470               	retlw	112
  5071  0937  342E               	retlw	46
  5072  0938  342E               	retlw	46
  5073  0939  342E               	retlw	46
  5074  093A  3420               	retlw	32
  5075  093B  3400               	retlw	0
  5076                           
  5077                           	psect	idataBANK3
  5078  084E                     __pidataBANK3:
  5079                           
  5080                           ;initializer for reportfault@F10328
  5081  084E  3420               	retlw	32
  5082  084F  3454               	retlw	84
  5083  0850  3443               	retlw	67
  5084  0851  3420               	retlw	32
  5085  0852  3446               	retlw	70
  5086  0853  3461               	retlw	97
  5087  0854  3475               	retlw	117
  5088  0855  346C               	retlw	108
  5089  0856  3474               	retlw	116
  5090  0857  3420               	retlw	32
  5091  0858  343D               	retlw	61
  5092  0859  3420               	retlw	32
  5093  085A  3420               	retlw	32
  5094  085B  3420               	retlw	32
  5095  085C  3420               	retlw	32
  5096  085D  3420               	retlw	32
  5097  085E  3400               	retlw	0
  5098                           
  5099                           ;initializer for _text2
  5100  085F  3420               	retlw	32
  5101  0860  3420               	retlw	32
  5102  0861  3445               	retlw	69
  5103  0862  346E               	retlw	110
  5104  0863  3467               	retlw	103
  5105  0864  3469               	retlw	105
  5106  0865  346E               	retlw	110
  5107  0866  3465               	retlw	101
  5108  0867  3465               	retlw	101
  5109  0868  3472               	retlw	114
  5110  0869  3469               	retlw	105
  5111  086A  346E               	retlw	110
  5112  086B  3467               	retlw	103
  5113  086C  3420               	retlw	32
  5114  086D  3420               	retlw	32
  5115  086E  3420               	retlw	32
  5116  086F  3400               	retlw	0
  5117                           
  5118                           ;initializer for _text1
  5119  0870  3420               	retlw	32
  5120  0871  3420               	retlw	32
  5121  0872  3420               	retlw	32
  5122  0873  3420               	retlw	32
  5123  0874  346A               	retlw	106
  5124  0875  346F               	retlw	111
  5125  0876  3468               	retlw	104
  5126  0877  346E               	retlw	110
  5127  0878  3473               	retlw	115
  5128  0879  347A               	retlw	122
  5129  087A  3479               	retlw	121
  5130  087B  3420               	retlw	32
  5131  087C  3420               	retlw	32
  5132  087D  3420               	retlw	32
  5133  087E  3420               	retlw	32
  5134  087F  3420               	retlw	32
  5135  0880  3400               	retlw	0
  5136                           
  5137                           	psect	idataBANK4
  5138  1766                     __pidataBANK4:
  5139                           
  5140                           ;initializer for _text7
  5141  1766  3420               	retlw	32
  5142  1767  3420               	retlw	32
  5143  1768  3420               	retlw	32
  5144  1769  3420               	retlw	32
  5145  176A  3420               	retlw	32
  5146  176B  3420               	retlw	32
  5147  176C  3420               	retlw	32
  5148  176D  3420               	retlw	32
  5149  176E  3420               	retlw	32
  5150  176F  3420               	retlw	32
  5151  1770  3420               	retlw	32
  5152  1771  3420               	retlw	32
  5153  1772  3420               	retlw	32
  5154  1773  3420               	retlw	32
  5155  1774  3420               	retlw	32
  5156  1775  3420               	retlw	32
  5157  1776  3400               	retlw	0
  5158                           
  5159                           ;initializer for _text3
  5160  1777  3420               	retlw	32
  5161  1778  3420               	retlw	32
  5162  1779  3420               	retlw	32
  5163  177A  3457               	retlw	87
  5164  177B  3461               	retlw	97
  5165  177C  3472               	retlw	114
  5166  177D  346D               	retlw	109
  5167  177E  3469               	retlw	105
  5168  177F  346E               	retlw	110
  5169  1780  3467               	retlw	103
  5170  1781  3420               	retlw	32
  5171  1782  3420               	retlw	32
  5172  1783  3455               	retlw	85
  5173  1784  3470               	retlw	112
  5174  1785  3420               	retlw	32
  5175  1786  3420               	retlw	32
  5176  1787  3400               	retlw	0
  5177  000B                     _INTCONbits	set	11
  5178  0011                     _PIR2bits	set	17
  5179  001B                     _PR2	set	27
  5180  001A                     _TMR2	set	26
  5181  001C                     _T2CONbits	set	28
  5182  001F                     _T2RSTbits	set	31
  5183  001D                     _T2HLTbits	set	29
  5184  0010                     _PIR1bits	set	16
  5185  001A                     _T2TMR	set	26
  5186  001B                     _T2PR	set	27
  5187  001F                     _T2RST	set	31
  5188  001D                     _T2HLT	set	29
  5189  001E                     _T2CLKCON	set	30
  5190  001C                     _T2CON	set	28
  5191  005F                     _GIE	set	95
  5192  0091                     _PIE2bits	set	145
  5193  009D                     _ADCON0bits	set	157
  5194  009C                     _ADRESH	set	156
  5195  009B                     _ADRESL	set	155
  5196  009F                     _ADCON2	set	159
  5197  009E                     _ADCON1	set	158
  5198  009D                     _ADCON0	set	157
  5199  0095                     _OPTION_REGbits	set	149
  5200  008E                     _TRISC	set	142
  5201  008D                     _TRISB	set	141
  5202  008C                     _TRISA	set	140
  5203  0098                     _OSCTUNE	set	152
  5204  0099                     _OSCCON	set	153
  5205  010E                     _LATC	set	270
  5206  010D                     _LATB	set	269
  5207  010C                     _LATA	set	268
  5208  0876                     _LATC6	set	2166
  5209  0877                     _LATC7	set	2167
  5210  086F                     _LATB7	set	2159
  5211  018C                     _ANSELA	set	396
  5212  018D                     _ANSELB	set	397
  5213  018E                     _ANSELC	set	398
  5214  020E                     _WPUC	set	526
  5215  020C                     _WPUA	set	524
  5216  020D                     _WPUB	set	525
  5217  0211                     _SSPBUF	set	529
  5218  0214                     _SSP1STATbits	set	532
  5219  0211                     _SSP1BUF	set	529
  5220  0212                     _SSP1ADD	set	530
  5221  0215                     _SSP1CON1	set	533
  5222  0214                     _SSP1STAT	set	532
  5223  10A0                     _BF	set	4256
  5224  029E                     _CCPTMRSbits	set	670
  5225  028E                     _ODCONC	set	654
  5226  028D                     _ODCONB	set	653
  5227  028C                     _ODCONA	set	652
  5228  0414                     _PR4	set	1044
  5229  0413                     _TMR4	set	1043
  5230  0415                     _T4CONbits	set	1045
  5231  0418                     _T4RSTbits	set	1048
  5232  0416                     _T4HLTbits	set	1046
  5233  0413                     _T4TMR	set	1043
  5234  0414                     _T4PR	set	1044
  5235  0418                     _T4RST	set	1048
  5236  0416                     _T4HLT	set	1046
  5237  0417                     _T4CLKCON	set	1047
  5238  0415                     _T4CON	set	1045
  5239  061A                     _PWM4DCL	set	1562
  5240  061B                     _PWM4DCH	set	1563
  5241  061C                     _PWM4CON	set	1564
  5242  0617                     _PWM3DCL	set	1559
  5243  0618                     _PWM3DCH	set	1560
  5244  0619                     _PWM3CON	set	1561
  5245  0E1B                     _T4PPS	set	3611
  5246  0E20                     _SSPCLKPPS	set	3616
  5247  0E21                     _SSPDATPPS	set	3617
  5248  0E18                     _T2PPS	set	3608
  5249  0E0F                     _PPSLOCKbits	set	3599
  5250  0E0F                     _PPSLOCK	set	3599
  5251  0EA1                     _RC1PPS	set	3745
  5252  0E9D                     _RB5PPS	set	3741
  5253  0E9E                     _RB6PPS	set	3742
  5254  0EA0                     _RC0PPS	set	3744
  5255                           
  5256                           	psect	stringtext1
  5257  1800                     __pstringtext1:
  5258  1800                     STR_3:
  5259  1800  3420               	retlw	32	;' '
  5260  1801  3420               	retlw	32	;' '
  5261  1802  3425               	retlw	37	;'%'
  5262  1803  3464               	retlw	100	;'d'
  5263  1804  3420               	retlw	32	;' '
  5264  1805  3420               	retlw	32	;' '
  5265  1806  3420               	retlw	32	;' '
  5266  1807  3425               	retlw	37	;'%'
  5267  1808  3464               	retlw	100	;'d'
  5268  1809  3420               	retlw	32	;' '
  5269  180A  3420               	retlw	32	;' '
  5270  180B  3420               	retlw	32	;' '
  5271  180C  3425               	retlw	37	;'%'
  5272  180D  3464               	retlw	100	;'d'
  5273  180E  3420               	retlw	32	;' '
  5274  180F  3420               	retlw	32	;' '
  5275  1810  3420               	retlw	32	;' '
  5276  1811  3425               	retlw	37	;'%'
  5277  1812  3464               	retlw	100	;'d'
  5278  1813  3420               	retlw	32	;' '
  5279  1814  3420               	retlw	32	;' '
  5280  1815  3420               	retlw	32	;' '
  5281  1816  340A               	retlw	10
  5282  1817  3400               	retlw	0
  5283                           
  5284                           	psect	stringtext2
  5285  1818                     __pstringtext2:
  5286  1818                     STR_2:
  5287  1818  3464               	retlw	100	;'d'
  5288  1819  3469               	retlw	105	;'i'
  5289  181A  3467               	retlw	103	;'g'
  5290  181B  3431               	retlw	49	;'1'
  5291  181C  3420               	retlw	32	;' '
  5292  181D  3464               	retlw	100	;'d'
  5293  181E  3469               	retlw	105	;'i'
  5294  181F  3467               	retlw	103	;'g'
  5295  1820  3432               	retlw	50	;'2'
  5296  1821  3420               	retlw	32	;' '
  5297  1822  3464               	retlw	100	;'d'
  5298  1823  3469               	retlw	105	;'i'
  5299  1824  3467               	retlw	103	;'g'
  5300  1825  3433               	retlw	51	;'3'
  5301  1826  3420               	retlw	32	;' '
  5302  1827  3464               	retlw	100	;'d'
  5303  1828  3469               	retlw	105	;'i'
  5304  1829  3467               	retlw	103	;'g'
  5305  182A  3434               	retlw	52	;'4'
  5306  182B  340A               	retlw	10
  5307  182C  3400               	retlw	0
  5308                           
  5309                           	psect	stringtext3
  5310  182D                     __pstringtext3:
  5311  182D                     STR_1:
  5312  182D  346E               	retlw	110	;'n'
  5313  182E  3475               	retlw	117	;'u'
  5314  182F  346D               	retlw	109	;'m'
  5315  1830  343D               	retlw	61	;'='
  5316  1831  3420               	retlw	32	;' '
  5317  1832  3425               	retlw	37	;'%'
  5318  1833  3464               	retlw	100	;'d'
  5319  1834  340A               	retlw	10
  5320  1835  3400               	retlw	0
  5321                           
  5322                           	psect	stringtext4
  5323  0000                     __pstringtext4:
  5324                           
  5325                           	psect	cinit
  5326  001B                     start_initialization:	
  5327                           ; #config settings
  5328                           
  5329  001B                     __initialization:
  5330                           
  5331                           ; Initialize objects allocated to BANK1
  5332  001B  305E               	movlw	low __pidataBANK1
  5333  001C  0084               	movwf	4
  5334  001D  3096               	movlw	(high __pidataBANK1)| (0+128)
  5335  001E  0085               	movwf	5
  5336  001F  30D9               	movlw	low __pdataBANK1
  5337  0020  0086               	movwf	6
  5338  0021  3000               	movlw	high __pdataBANK1
  5339  0022  0087               	movwf	7
  5340  0023  3011               	movlw	17
  5341  0024  3196  2614  3180   	fcall	init_ram
  5342                           
  5343                           ; Initialize objects allocated to BANK2
  5344  0027  30F8               	movlw	low __pidataBANK2
  5345  0028  0084               	movwf	4
  5346  0029  3088               	movlw	(high __pidataBANK2)| (0+128)
  5347  002A  0085               	movwf	5
  5348  002B  3020               	movlw	low __pdataBANK2
  5349  002C  0086               	movwf	6
  5350  002D  3001               	movlw	high __pdataBANK2
  5351  002E  0087               	movwf	7
  5352  002F  3044               	movlw	68
  5353  0030  3196  2614  3180   	fcall	init_ram
  5354                           
  5355                           ; Initialize objects allocated to BANK3
  5356  0033  304E               	movlw	low __pidataBANK3
  5357  0034  0084               	movwf	4
  5358  0035  3088               	movlw	(high __pidataBANK3)| (0+128)
  5359  0036  0085               	movwf	5
  5360  0037  30A0               	movlw	low __pdataBANK3
  5361  0038  0086               	movwf	6
  5362  0039  3001               	movlw	high __pdataBANK3
  5363  003A  0087               	movwf	7
  5364  003B  3033               	movlw	51
  5365  003C  3196  2614  3180   	fcall	init_ram
  5366                           
  5367                           ; Initialize objects allocated to BANK4
  5368  003F  3066               	movlw	low __pidataBANK4
  5369  0040  0084               	movwf	4
  5370  0041  3097               	movlw	(high __pidataBANK4)| (0+128)
  5371  0042  0085               	movwf	5
  5372  0043  3020               	movlw	low __pdataBANK4
  5373  0044  0086               	movwf	6
  5374  0045  3002               	movlw	high __pdataBANK4
  5375  0046  0087               	movwf	7
  5376  0047  3022               	movlw	34
  5377  0048  3196  2614  3180   	fcall	init_ram
  5378                           
  5379                           ; Clear objects allocated to BANK1
  5380  004B  30C1               	movlw	low __pbssBANK1
  5381  004C  0084               	movwf	4
  5382  004D  3000               	movlw	high __pbssBANK1
  5383  004E  0085               	movwf	5
  5384  004F  3018               	movlw	24
  5385  0050  3196  260E  3180   	fcall	clear_ram0
  5386                           
  5387                           ; Clear objects allocated to BANK3
  5388  0053  30D3               	movlw	low __pbssBANK3
  5389  0054  0084               	movwf	4
  5390  0055  3001               	movlw	high __pbssBANK3
  5391  0056  0085               	movwf	5
  5392  0057  3010               	movlw	16
  5393  0058  3196  260E  3180   	fcall	clear_ram0
  5394                           
  5395                           ; Clear objects allocated to BANK4
  5396  005B  3042               	movlw	low __pbssBANK4
  5397  005C  0084               	movwf	4
  5398  005D  3002               	movlw	high __pbssBANK4
  5399  005E  0085               	movwf	5
  5400  005F  3020               	movlw	32
  5401  0060  3196  260E  3180   	fcall	clear_ram0
  5402  0063                     end_of_initialization:	
  5403                           ;End of C runtime variable initialization code
  5404                           
  5405  0063                     __end_of__initialization:
  5406  0063  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5407  0064  0020               	movlb	0
  5408  0065  3182  2ABE         	ljmp	_main	;jump to C main() function
  5409                           
  5410                           	psect	bssBANK1
  5411  00C1                     __pbssBANK1:
  5412  00C1                     _dieTemp:
  5413  00C1                     	ds	4
  5414  00C5                     _tcTemp:
  5415  00C5                     	ds	4
  5416  00C9                     _milliTime:
  5417  00C9                     	ds	4
  5418  00CD                     _nout:
  5419  00CD                     	ds	2
  5420  00CF                     _width:
  5421  00CF                     	ds	2
  5422  00D1                     _prec:
  5423  00D1                     	ds	2
  5424  00D3                     _flags:
  5425  00D3                     	ds	2
  5426  00D5                     _TMR4_InterruptHandler:
  5427  00D5                     	ds	2
  5428  00D7                     _faults:
  5429  00D7                     	ds	1
  5430  00D8                     _dummy:
  5431  00D8                     	ds	1
  5432                           
  5433                           	psect	dataBANK1
  5434  00D9                     __pdataBANK1:
  5435  00D9                     _text10:
  5436  00D9                     	ds	17
  5437                           
  5438                           	psect	dataBANK2
  5439  0120                     __pdataBANK2:
  5440  0120                     _text11:
  5441  0120                     	ds	17
  5442  0131                     _text9:
  5443  0131                     	ds	17
  5444  0142                     _text6:
  5445  0142                     	ds	17
  5446  0153                     _text5:
  5447  0153                     	ds	17
  5448                           
  5449                           	psect	bssBANK3
  5450  01D3                     __pbssBANK3:
  5451  01D3                     _text12:
  5452  01D3                     	ds	16
  5453                           
  5454                           	psect	dataBANK3
  5455  01A0                     __pdataBANK3:
  5456  01A0                     reportfault@F10328:
  5457  01A0                     	ds	17
  5458  01B1                     _text2:
  5459  01B1                     	ds	17
  5460  01C2                     _text1:
  5461  01C2                     	ds	17
  5462                           
  5463                           	psect	bssBANK4
  5464  0242                     __pbssBANK4:
  5465  0242                     _dbuf:
  5466  0242                     	ds	32
  5467                           
  5468                           	psect	dataBANK4
  5469  0220                     __pdataBANK4:
  5470  0220                     _text7:
  5471  0220                     	ds	17
  5472  0231                     _text3:
  5473  0231                     	ds	17
  5474                           
  5475                           	psect	inittext
  5476  1614                     init_ram:
  5477  1614  00FE               	movwf	btemp
  5478  1615                     initloop:
  5479  1615  0012               	moviw fsr0++
  5480  1616  001E               	movwi fsr1++
  5481  1617  0BFE               	decfsz	btemp,f
  5482  1618  2E15               	goto	initloop
  5483  1619  3400               	retlw	0
  5484                           
  5485                           	psect	clrtext
  5486  160E                     clear_ram0:	
  5487                           ;	Called with FSR0 containing the base address, and
  5488                           ;	WREG with the size to clear
  5489                           
  5490  160E  0064               	clrwdt	;clear the watchdog before getting into this loop
  5491  160F                     clrloop0:
  5492  160F  0180               	clrf	0	;clear RAM location pointed to by FSR
  5493  1610  3101               	addfsr 0,1
  5494  1611  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5495  1612  2E0F               	goto	clrloop0	;have we reached the end yet?
  5496  1613  3400               	retlw	0	;all done for this memory range, return
  5497                           
  5498                           	psect	cstackBANK1
  5499  00A0                     __pcstackBANK1:
  5500  00A0                     	ds	2
  5501  00A2                     printf@ap:
  5502                           
  5503                           ; 1 bytes @ 0x2
  5504  00A2                     	ds	1
  5505  00A3                     ?_stuffIntToCharsBuf:
  5506  00A3                     stuffIntToCharsBuf@num:	
  5507                           ; 1 bytes @ 0x3
  5508                           
  5509                           
  5510                           ; 2 bytes @ 0x3
  5511  00A3                     	ds	2
  5512  00A5                     stuffIntToCharsBuf@buf:
  5513                           
  5514                           ; 1 bytes @ 0x5
  5515  00A5                     	ds	1
  5516  00A6                     stuffIntToCharsBuf@pos:
  5517                           
  5518                           ; 2 bytes @ 0x6
  5519  00A6                     	ds	2
  5520  00A8                     ??_stuffIntToCharsBuf:
  5521                           
  5522                           ; 1 bytes @ 0x8
  5523  00A8                     	ds	3
  5524  00AB                     stuffIntToCharsBuf@dig4:
  5525                           
  5526                           ; 2 bytes @ 0xB
  5527  00AB                     	ds	2
  5528  00AD                     stuffIntToCharsBuf@dig1:
  5529                           
  5530                           ; 2 bytes @ 0xD
  5531  00AD                     	ds	2
  5532  00AF                     stuffIntToCharsBuf@dig2:
  5533                           
  5534                           ; 2 bytes @ 0xF
  5535  00AF                     	ds	2
  5536  00B1                     stuffIntToCharsBuf@dig3:
  5537                           
  5538                           ; 2 bytes @ 0x11
  5539  00B1                     	ds	2
  5540  00B3                     stuffIntToCharsBuf@neg:
  5541                           
  5542                           ; 2 bytes @ 0x13
  5543  00B3                     	ds	2
  5544  00B5                     ??_main:
  5545                           
  5546                           ; 1 bytes @ 0x15
  5547  00B5                     	ds	6
  5548  00BB                     main@adc_value0:
  5549                           
  5550                           ; 2 bytes @ 0x1B
  5551  00BB                     	ds	2
  5552  00BD                     main@adc_value1:
  5553                           
  5554                           ; 2 bytes @ 0x1D
  5555  00BD                     	ds	2
  5556  00BF                     main@i:
  5557                           
  5558                           ; 2 bytes @ 0x1F
  5559  00BF                     	ds	2
  5560                           
  5561                           	psect	cstackCOMMON
  5562  0070                     __pcstackCOMMON:
  5563  0070                     ?_PIN_MANAGER_Initialize:
  5564  0070                     ??_PIN_MANAGER_Initialize:	
  5565                           ; 1 bytes @ 0x0
  5566                           
  5567  0070                     ?_OSCILLATOR_Initialize:	
  5568                           ; 1 bytes @ 0x0
  5569                           
  5570  0070                     ??_OSCILLATOR_Initialize:	
  5571                           ; 1 bytes @ 0x0
  5572                           
  5573  0070                     ?_SPI_Initialize:	
  5574                           ; 1 bytes @ 0x0
  5575                           
  5576  0070                     ??_SPI_Initialize:	
  5577                           ; 1 bytes @ 0x0
  5578                           
  5579  0070                     ?_initDisplay:	
  5580                           ; 1 bytes @ 0x0
  5581                           
  5582  0070                     ?_ADC_Initialize:	
  5583                           ; 1 bytes @ 0x0
  5584                           
  5585  0070                     ??_ADC_Initialize:	
  5586                           ; 1 bytes @ 0x0
  5587                           
  5588  0070                     ?_PWM4_Initialize:	
  5589                           ; 1 bytes @ 0x0
  5590                           
  5591  0070                     ??_PWM4_Initialize:	
  5592                           ; 1 bytes @ 0x0
  5593                           
  5594  0070                     ?_TMR4_Initialize:	
  5595                           ; 1 bytes @ 0x0
  5596                           
  5597  0070                     ?_PWM3_Initialize:	
  5598                           ; 1 bytes @ 0x0
  5599                           
  5600  0070                     ??_PWM3_Initialize:	
  5601                           ; 1 bytes @ 0x0
  5602                           
  5603  0070                     ?_TMR2_Initialize:	
  5604                           ; 1 bytes @ 0x0
  5605                           
  5606  0070                     ??_TMR2_Initialize:	
  5607                           ; 1 bytes @ 0x0
  5608                           
  5609  0070                     ?_TMR2_Start:	
  5610                           ; 1 bytes @ 0x0
  5611                           
  5612  0070                     ??_TMR2_Start:	
  5613                           ; 1 bytes @ 0x0
  5614                           
  5615  0070                     ?_TMR4_SetInterruptHandler:	
  5616                           ; 1 bytes @ 0x0
  5617                           
  5618  0070                     ?_TMR4_DefaultInterruptHandler:	
  5619                           ; 1 bytes @ 0x0
  5620                           
  5621  0070                     ??_TMR4_DefaultInterruptHandler:	
  5622                           ; 1 bytes @ 0x0
  5623                           
  5624  0070                     ?_TMR4_Start:	
  5625                           ; 1 bytes @ 0x0
  5626                           
  5627  0070                     ??_TMR4_Start:	
  5628                           ; 1 bytes @ 0x0
  5629                           
  5630  0070                     ?_TMR4_CallBack:	
  5631                           ; 1 bytes @ 0x0
  5632                           
  5633  0070                     ??_TMR4_CallBack:	
  5634                           ; 1 bytes @ 0x0
  5635                           
  5636  0070                     ?_command:	
  5637                           ; 1 bytes @ 0x0
  5638                           
  5639  0070                     ?_dataCMD:	
  5640                           ; 1 bytes @ 0x0
  5641                           
  5642  0070                     ?_getFaultCodes:	
  5643                           ; 1 bytes @ 0x0
  5644                           
  5645  0070                     ?_reportfault:	
  5646                           ; 1 bytes @ 0x0
  5647                           
  5648  0070                     ?_initOLED:	
  5649                           ; 1 bytes @ 0x0
  5650                           
  5651  0070                     ?_putch:	
  5652                           ; 1 bytes @ 0x0
  5653                           
  5654  0070                     ??_putch:	
  5655                           ; 1 bytes @ 0x0
  5656                           
  5657  0070                     ?_SYSTEM_Initialize:	
  5658                           ; 1 bytes @ 0x0
  5659                           
  5660  0070                     ?_spi_transfer:	
  5661                           ; 1 bytes @ 0x0
  5662                           
  5663  0070                     ??_spi_transfer:	
  5664                           ; 1 bytes @ 0x0
  5665                           
  5666  0070                     ?_spi_write:	
  5667                           ; 1 bytes @ 0x0
  5668                           
  5669  0070                     ??_spi_write:	
  5670                           ; 1 bytes @ 0x0
  5671                           
  5672  0070                     ?_PWM3_LoadDutyValue:	
  5673                           ; 1 bytes @ 0x0
  5674                           
  5675  0070                     ?_PWM4_LoadDutyValue:	
  5676                           ; 1 bytes @ 0x0
  5677                           
  5678  0070                     ?_TMR4_ISR:	
  5679                           ; 1 bytes @ 0x0
  5680                           
  5681  0070                     ??_TMR4_ISR:	
  5682                           ; 1 bytes @ 0x0
  5683                           
  5684  0070                     ?_INTERRUPT_InterruptManager:	
  5685                           ; 1 bytes @ 0x0
  5686                           
  5687  0070                     ??_INTERRUPT_InterruptManager:	
  5688                           ; 1 bytes @ 0x0
  5689                           
  5690  0070                     ?_main:	
  5691                           ; 1 bytes @ 0x0
  5692                           
  5693  0070                     ??___aodiv:	
  5694                           ; 1 bytes @ 0x0
  5695                           
  5696  0070                     ??___aomod:	
  5697                           ; 1 bytes @ 0x0
  5698                           
  5699  0070                     ?__Umul8_16:	
  5700                           ; 1 bytes @ 0x0
  5701                           
  5702  0070                     ?_fputc:	
  5703                           ; 2 bytes @ 0x0
  5704                           
  5705  0070                     ?_strlen:	
  5706                           ; 2 bytes @ 0x0
  5707                           
  5708  0070                     ?_ADC_GetConversion:	
  5709                           ; 2 bytes @ 0x0
  5710                           
  5711  0070                     ?___wmul:	
  5712                           ; 2 bytes @ 0x0
  5713                           
  5714  0070                     ?___awdiv:	
  5715                           ; 2 bytes @ 0x0
  5716                           
  5717  0070                     ?___fltol:	
  5718                           ; 2 bytes @ 0x0
  5719                           
  5720  0070                     ?___xxtofl:	
  5721                           ; 4 bytes @ 0x0
  5722                           
  5723  0070                     spi_transfer@data:	
  5724                           ; 4 bytes @ 0x0
  5725                           
  5726  0070                     PIN_MANAGER_Initialize@state:	
  5727                           ; 1 bytes @ 0x0
  5728                           
  5729  0070                     __Umul8_16@multiplicand:	
  5730                           ; 1 bytes @ 0x0
  5731                           
  5732  0070                     putch@c:	
  5733                           ; 1 bytes @ 0x0
  5734                           
  5735  0070                     PWM3_LoadDutyValue@dutyValue:	
  5736                           ; 1 bytes @ 0x0
  5737                           
  5738  0070                     PWM4_LoadDutyValue@dutyValue:	
  5739                           ; 2 bytes @ 0x0
  5740                           
  5741  0070                     TMR4_SetInterruptHandler@InterruptHandler:	
  5742                           ; 2 bytes @ 0x0
  5743                           
  5744  0070                     ___wmul@multiplier:	
  5745                           ; 2 bytes @ 0x0
  5746                           
  5747  0070                     ___awdiv@divisor:	
  5748                           ; 2 bytes @ 0x0
  5749                           
  5750  0070                     fputc@c:	
  5751                           ; 2 bytes @ 0x0
  5752                           
  5753  0070                     ___fltol@f1:	
  5754                           ; 2 bytes @ 0x0
  5755                           
  5756  0070                     ___xxtofl@val:	
  5757                           ; 4 bytes @ 0x0
  5758                           
  5759                           
  5760                           ; 4 bytes @ 0x0
  5761  0070                     	ds	1
  5762  0071                     ?_readRawData:
  5763  0071                     spi_write@spiByte:	
  5764                           ; 4 bytes @ 0x1
  5765                           
  5766  0071                     ___aodiv@counter:	
  5767                           ; 1 bytes @ 0x1
  5768                           
  5769  0071                     ___aomod@counter:	
  5770                           ; 1 bytes @ 0x1
  5771                           
  5772                           
  5773                           ; 1 bytes @ 0x1
  5774  0071                     	ds	1
  5775  0072                     ??_TMR4_Initialize:
  5776  0072                     ??_TMR4_SetInterruptHandler:	
  5777                           ; 1 bytes @ 0x2
  5778                           
  5779  0072                     ??_command:	
  5780                           ; 1 bytes @ 0x2
  5781                           
  5782  0072                     ??_dataCMD:	
  5783                           ; 1 bytes @ 0x2
  5784                           
  5785  0072                     ??__Umul8_16:	
  5786                           ; 1 bytes @ 0x2
  5787                           
  5788  0072                     ??_strlen:	
  5789                           ; 1 bytes @ 0x2
  5790                           
  5791  0072                     ??_ADC_GetConversion:	
  5792                           ; 1 bytes @ 0x2
  5793                           
  5794  0072                     ??_PWM3_LoadDutyValue:	
  5795                           ; 1 bytes @ 0x2
  5796                           
  5797  0072                     ??_PWM4_LoadDutyValue:	
  5798                           ; 1 bytes @ 0x2
  5799                           
  5800  0072                     ___aodiv@sign:	
  5801                           ; 1 bytes @ 0x2
  5802                           
  5803  0072                     ___aomod@sign:	
  5804                           ; 1 bytes @ 0x2
  5805                           
  5806  0072                     fputc@fp:	
  5807                           ; 1 bytes @ 0x2
  5808                           
  5809  0072                     ___wmul@multiplicand:	
  5810                           ; 1 bytes @ 0x2
  5811                           
  5812  0072                     ___awdiv@dividend:	
  5813                           ; 2 bytes @ 0x2
  5814                           
  5815                           
  5816                           ; 2 bytes @ 0x2
  5817  0072                     	ds	1
  5818  0073                     ??_fputc:
  5819  0073                     ?_abs:	
  5820                           ; 1 bytes @ 0x3
  5821                           
  5822  0073                     ADC_GetConversion@channel:	
  5823                           ; 2 bytes @ 0x3
  5824                           
  5825  0073                     strlen@a:	
  5826                           ; 1 bytes @ 0x3
  5827                           
  5828  0073                     abs@a:	
  5829                           ; 1 bytes @ 0x3
  5830                           
  5831  0073                     ___aodiv@quotient:	
  5832                           ; 2 bytes @ 0x3
  5833                           
  5834                           
  5835                           ; 8 bytes @ 0x3
  5836  0073                     	ds	1
  5837  0074                     ?_setMotorSpeed:
  5838  0074                     ??___wmul:	
  5839                           ; 1 bytes @ 0x4
  5840                           
  5841  0074                     ??___awdiv:	
  5842                           ; 1 bytes @ 0x4
  5843                           
  5844  0074                     ??___fltol:	
  5845                           ; 1 bytes @ 0x4
  5846                           
  5847  0074                     ??___xxtofl:	
  5848                           ; 1 bytes @ 0x4
  5849                           
  5850  0074                     command@bit0:	
  5851                           ; 1 bytes @ 0x4
  5852                           
  5853  0074                     dataCMD@bit0:	
  5854                           ; 1 bytes @ 0x4
  5855                           
  5856  0074                     strlen@s:	
  5857                           ; 1 bytes @ 0x4
  5858                           
  5859  0074                     setMotorSpeed@num:	
  5860                           ; 1 bytes @ 0x4
  5861                           
  5862  0074                     ___wmul@product:	
  5863                           ; 2 bytes @ 0x4
  5864                           
  5865  0074                     __Umul8_16@product:	
  5866                           ; 2 bytes @ 0x4
  5867                           
  5868                           
  5869                           ; 2 bytes @ 0x4
  5870  0074                     	ds	1
  5871  0075                     ??_abs:
  5872  0075                     ??_readRawData:	
  5873                           ; 1 bytes @ 0x5
  5874                           
  5875  0075                     command@s:	
  5876                           ; 1 bytes @ 0x5
  5877                           
  5878  0075                     dataCMD@s:	
  5879                           ; 1 bytes @ 0x5
  5880                           
  5881  0075                     ___awdiv@counter:	
  5882                           ; 1 bytes @ 0x5
  5883                           
  5884                           
  5885                           ; 1 bytes @ 0x5
  5886  0075                     	ds	1
  5887  0076                     ___awdiv@sign:
  5888  0076                     setMotorSpeed@motorNum:	
  5889                           ; 1 bytes @ 0x6
  5890                           
  5891  0076                     command@i:	
  5892                           ; 2 bytes @ 0x6
  5893                           
  5894  0076                     dataCMD@i:	
  5895                           ; 2 bytes @ 0x6
  5896                           
  5897  0076                     __Umul8_16@word_mpld:	
  5898                           ; 2 bytes @ 0x6
  5899                           
  5900                           
  5901                           ; 2 bytes @ 0x6
  5902  0076                     	ds	1
  5903  0077                     ___awdiv@quotient:
  5904                           
  5905                           ; 2 bytes @ 0x7
  5906  0077                     	ds	1
  5907  0078                     ??_setMotorSpeed:
  5908  0078                     ?_fputs:	
  5909                           ; 1 bytes @ 0x8
  5910                           
  5911  0078                     command@sendByte:	
  5912                           ; 2 bytes @ 0x8
  5913                           
  5914  0078                     dataCMD@sendByte:	
  5915                           ; 1 bytes @ 0x8
  5916                           
  5917  0078                     __Umul8_16@multiplier:	
  5918                           ; 1 bytes @ 0x8
  5919                           
  5920  0078                     ___xxtofl@sign:	
  5921                           ; 1 bytes @ 0x8
  5922                           
  5923  0078                     fputs@fp:	
  5924                           ; 1 bytes @ 0x8
  5925                           
  5926                           
  5927                           ; 1 bytes @ 0x8
  5928  0078                     	ds	1
  5929  0079                     ??_reportfault:
  5930  0079                     ??_initOLED:	
  5931                           ; 1 bytes @ 0x9
  5932                           
  5933  0079                     ??_fputs:	
  5934                           ; 1 bytes @ 0x9
  5935                           
  5936  0079                     ___fltol@sign1:	
  5937                           ; 1 bytes @ 0x9
  5938                           
  5939  0079                     ___xxtofl@exp:	
  5940                           ; 1 bytes @ 0x9
  5941                           
  5942                           
  5943                           ; 1 bytes @ 0x9
  5944  0079                     	ds	1
  5945  007A                     ___fltol@exp1:
  5946  007A                     ___xxtofl@arg:	
  5947                           ; 1 bytes @ 0xA
  5948                           
  5949                           
  5950                           ; 4 bytes @ 0xA
  5951  007A                     	ds	1
  5952  007B                     ??_initDisplay:
  5953                           
  5954                           ; 1 bytes @ 0xB
  5955  007B                     	ds	1
  5956  007C                     ??_pad:
  5957  007C                     initDisplay@i:	
  5958                           ; 1 bytes @ 0xC
  5959                           
  5960                           
  5961                           ; 2 bytes @ 0xC
  5962  007C                     	ds	1
  5963  007D                     ??_getFaultCodes:
  5964  007D                     ??_printf:	
  5965                           ; 1 bytes @ 0xD
  5966                           
  5967                           
  5968                           ; 1 bytes @ 0xD
  5969  007D                     	ds	1
  5970  007E                     ??_SYSTEM_Initialize:
  5971                           
  5972                           	psect	cstackBANK0
  5973  0020                     __pcstackBANK0:	
  5974                           ; 1 bytes @ 0xE
  5975                           
  5976  0020                     ?___flmul:
  5977  0020                     ?___aodiv:	
  5978                           ; 4 bytes @ 0x0
  5979                           
  5980  0020                     ?___aomod:	
  5981                           ; 8 bytes @ 0x0
  5982                           
  5983  0020                     readRawData@byte:	
  5984                           ; 8 bytes @ 0x0
  5985                           
  5986  0020                     fputs@c:	
  5987                           ; 1 bytes @ 0x0
  5988                           
  5989  0020                     ___flmul@b:	
  5990                           ; 1 bytes @ 0x0
  5991                           
  5992  0020                     ___aodiv@divisor:	
  5993                           ; 4 bytes @ 0x0
  5994                           
  5995  0020                     ___aomod@divisor:	
  5996                           ; 8 bytes @ 0x0
  5997                           
  5998  0020                     reportfault@faultStr:	
  5999                           ; 8 bytes @ 0x0
  6000                           
  6001                           
  6002                           ; 17 bytes @ 0x0
  6003  0020                     	ds	1
  6004  0021                     fputs@i:
  6005  0021                     readRawData@result:	
  6006                           ; 2 bytes @ 0x1
  6007                           
  6008                           
  6009                           ; 4 bytes @ 0x1
  6010  0021                     	ds	2
  6011  0023                     fputs@s:
  6012                           
  6013                           ; 1 bytes @ 0x3
  6014  0023                     	ds	1
  6015  0024                     ?_pad:
  6016  0024                     pad@buf:	
  6017                           ; 2 bytes @ 0x4
  6018                           
  6019  0024                     ___flmul@a:	
  6020                           ; 1 bytes @ 0x4
  6021                           
  6022                           
  6023                           ; 4 bytes @ 0x4
  6024  0024                     	ds	1
  6025  0025                     readRawData@i:
  6026  0025                     pad@p:	
  6027                           ; 2 bytes @ 0x5
  6028                           
  6029                           
  6030                           ; 2 bytes @ 0x5
  6031  0025                     	ds	2
  6032  0027                     pad@i:
  6033  0027                     getFaultCodes@raw:	
  6034                           ; 2 bytes @ 0x7
  6035                           
  6036                           
  6037                           ; 4 bytes @ 0x7
  6038  0027                     	ds	1
  6039  0028                     ??___flmul:
  6040  0028                     ___aodiv@dividend:	
  6041                           ; 1 bytes @ 0x8
  6042                           
  6043  0028                     ___aomod@dividend:	
  6044                           ; 8 bytes @ 0x8
  6045                           
  6046                           
  6047                           ; 8 bytes @ 0x8
  6048  0028                     	ds	1
  6049  0029                     pad@w:
  6050                           
  6051                           ; 2 bytes @ 0x9
  6052  0029                     	ds	2
  6053  002B                     pad@fp:
  6054                           
  6055                           ; 1 bytes @ 0xB
  6056  002B                     	ds	2
  6057  002D                     ___flmul@sign:
  6058                           
  6059                           ; 1 bytes @ 0xD
  6060  002D                     	ds	1
  6061  002E                     ___flmul@grs:
  6062                           
  6063                           ; 4 bytes @ 0xE
  6064  002E                     	ds	2
  6065  0030                     ?_dtoa:
  6066  0030                     dtoa@d:	
  6067                           ; 2 bytes @ 0x10
  6068                           
  6069                           
  6070                           ; 8 bytes @ 0x10
  6071  0030                     	ds	1
  6072  0031                     reportfault@fault:
  6073                           
  6074                           ; 1 bytes @ 0x11
  6075  0031                     	ds	1
  6076  0032                     ___flmul@aexp:
  6077  0032                     reportfault@i:	
  6078                           ; 1 bytes @ 0x12
  6079                           
  6080                           
  6081                           ; 2 bytes @ 0x12
  6082  0032                     	ds	1
  6083  0033                     ___flmul@bexp:
  6084                           
  6085                           ; 1 bytes @ 0x13
  6086  0033                     	ds	1
  6087  0034                     ___flmul@prod:
  6088                           
  6089                           ; 4 bytes @ 0x14
  6090  0034                     	ds	4
  6091  0038                     ??_dtoa:
  6092  0038                     ___flmul@temp:	
  6093                           ; 1 bytes @ 0x18
  6094                           
  6095                           
  6096                           ; 2 bytes @ 0x18
  6097  0038                     	ds	2
  6098  003A                     ?_getTemp_TC:
  6099  003A                     ?_getDieTemp:	
  6100                           ; 4 bytes @ 0x1A
  6101                           
  6102                           
  6103                           ; 4 bytes @ 0x1A
  6104  003A                     	ds	1
  6105  003B                     _dtoa$1489:
  6106                           
  6107                           ; 2 bytes @ 0x1B
  6108  003B                     	ds	2
  6109  003D                     dtoa@p:
  6110                           
  6111                           ; 2 bytes @ 0x1D
  6112  003D                     	ds	1
  6113  003E                     ??_getTemp_TC:
  6114  003E                     ??_getDieTemp:	
  6115                           ; 1 bytes @ 0x1E
  6116                           
  6117                           
  6118                           ; 1 bytes @ 0x1E
  6119  003E                     	ds	1
  6120  003F                     dtoa@fp:
  6121                           
  6122                           ; 1 bytes @ 0x1F
  6123  003F                     	ds	1
  6124  0040                     dtoa@w:
  6125                           
  6126                           ; 2 bytes @ 0x20
  6127  0040                     	ds	2
  6128  0042                     dtoa@s:
  6129  0042                     getTemp_TC@raw:	
  6130                           ; 2 bytes @ 0x22
  6131                           
  6132  0042                     getDieTemp@raw:	
  6133                           ; 4 bytes @ 0x22
  6134                           
  6135                           
  6136                           ; 4 bytes @ 0x22
  6137  0042                     	ds	2
  6138  0044                     dtoa@n:
  6139                           
  6140                           ; 8 bytes @ 0x24
  6141  0044                     	ds	2
  6142  0046                     getTemp_TC@temp_tc:
  6143  0046                     getDieTemp@temp_die:	
  6144                           ; 2 bytes @ 0x26
  6145                           
  6146                           
  6147                           ; 2 bytes @ 0x26
  6148  0046                     	ds	6
  6149  004C                     dtoa@i:
  6150                           
  6151                           ; 2 bytes @ 0x2C
  6152  004C                     	ds	2
  6153  004E                     ?_vfpfcnvrt:
  6154  004E                     vfpfcnvrt@fmt:	
  6155                           ; 2 bytes @ 0x2E
  6156                           
  6157                           
  6158                           ; 1 bytes @ 0x2E
  6159  004E                     	ds	1
  6160  004F                     vfpfcnvrt@ap:
  6161                           
  6162                           ; 1 bytes @ 0x2F
  6163  004F                     	ds	1
  6164  0050                     ??_vfpfcnvrt:
  6165                           
  6166                           ; 1 bytes @ 0x30
  6167  0050                     	ds	5
  6168  0055                     vfpfcnvrt@ll:
  6169                           
  6170                           ; 8 bytes @ 0x35
  6171  0055                     	ds	8
  6172  005D                     vfpfcnvrt@fp:
  6173                           
  6174                           ; 1 bytes @ 0x3D
  6175  005D                     	ds	1
  6176  005E                     ?_vfprintf:
  6177  005E                     vfprintf@fmt:	
  6178                           ; 2 bytes @ 0x3E
  6179                           
  6180                           
  6181                           ; 2 bytes @ 0x3E
  6182  005E                     	ds	2
  6183  0060                     vfprintf@ap:
  6184                           
  6185                           ; 1 bytes @ 0x40
  6186  0060                     	ds	1
  6187  0061                     ??_vfprintf:
  6188                           
  6189                           ; 1 bytes @ 0x41
  6190  0061                     	ds	2
  6191  0063                     vfprintf@fp:
  6192                           
  6193                           ; 1 bytes @ 0x43
  6194  0063                     	ds	1
  6195  0064                     vfprintf@cfmt:
  6196                           
  6197                           ; 2 bytes @ 0x44
  6198  0064                     	ds	2
  6199  0066                     ?_printf:
  6200  0066                     printf@fmt:	
  6201                           ; 2 bytes @ 0x46
  6202                           
  6203                           
  6204                           ; 2 bytes @ 0x46
  6205  0066                     	ds	10
  6206                           
  6207                           	psect	maintext
  6208  02BE                     __pmaintext:	
  6209 ;;
  6210 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6211 ;;
  6212 ;; *************** function _main *****************
  6213 ;; Defined at:
  6214 ;;		line 119 in file "main.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;		None
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;  i               2   31[BANK1 ] int 
  6219 ;;  adc_value1      2   29[BANK1 ] unsigned short 
  6220 ;;  adc_value0      2   27[BANK1 ] unsigned short 
  6221 ;;  lower16         2    0        unsigned short 
  6222 ;;  upper16         2    0        unsigned short 
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  1    wreg      void 
  6225 ;; Registers used:
  6226 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6227 ;; Tracked objects:
  6228 ;;		On entry : B1F/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6233 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6234 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6235 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  6236 ;;Total ram usage:       12 bytes
  6237 ;; Hardware stack levels required when called:   13
  6238 ;; This function calls:
  6239 ;;		_ADC_GetConversion
  6240 ;;		_SYSTEM_Initialize
  6241 ;;		___fltol
  6242 ;;		_command
  6243 ;;		_dataCMD
  6244 ;;		_getDieTemp
  6245 ;;		_getFaultCodes
  6246 ;;		_getTemp_TC
  6247 ;;		_reportfault
  6248 ;;		_setMotorSpeed
  6249 ;;		_stuffIntToCharsBuf
  6250 ;; This function is called by:
  6251 ;;		Startup code after reset
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           
  6256                           ;psect for function _main
  6257  02BE                     _main:
  6258  02BE                     l3421:	
  6259                           ;incstack = 0
  6260                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6261                           
  6262                           
  6263                           ;main.c: 121:     _delay((unsigned long)((50)*(16000000/4000.0)));
  6264  02BE  3002               	movlw	2
  6265  02BF  0021               	movlb	1	; select bank1
  6266  02C0  00B6               	movwf	(??_main^(0+128)+1)
  6267  02C1  3004               	movlw	4
  6268  02C2  00B5               	movwf	??_main^(0+128)
  6269  02C3  30BA               	movlw	186
  6270  02C4                     u3387:
  6271  02C4  0B89               	decfsz	9,f
  6272  02C5  2AC4               	goto	u3387
  6273  02C6  0BB5               	decfsz	??_main^(0+128),f
  6274  02C7  2AC4               	goto	u3387
  6275  02C8  0BB6               	decfsz	(??_main^(0+128)+1),f
  6276  02C9  2AC4               	goto	u3387
  6277  02CA  0000               	nop
  6278  02CB                     l3423:
  6279                           
  6280                           ;main.c: 123:     SYSTEM_Initialize();
  6281  02CB  3197  272B  3182   	fcall	_SYSTEM_Initialize
  6282  02CE                     l3425:
  6283                           
  6284                           ;main.c: 135:      _delay((unsigned long)((500)*(16000000/4000.0)));
  6285  02CE  300B               	movlw	11
  6286  02CF  0021               	movlb	1	; select bank1
  6287  02D0  00B6               	movwf	(??_main^(0+128)+1)
  6288  02D1  3026               	movlw	38
  6289  02D2  00B5               	movwf	??_main^(0+128)
  6290  02D3  305D               	movlw	93
  6291  02D4                     u3397:
  6292  02D4  0B89               	decfsz	9,f
  6293  02D5  2AD4               	goto	u3397
  6294  02D6  0BB5               	decfsz	??_main^(0+128),f
  6295  02D7  2AD4               	goto	u3397
  6296  02D8  0BB6               	decfsz	(??_main^(0+128)+1),f
  6297  02D9  2AD4               	goto	u3397
  6298  02DA  3200               	nop2
  6299  02DB                     l3427:
  6300  02DB                     l3429:
  6301  02DB                     l3431:
  6302  02DB                     l3433:
  6303  02DB                     l3435:
  6304                           
  6305                           ;main.c: 157:     int i;;main.c: 158:     command(0x01);
  6306  02DB  3001               	movlw	1
  6307  02DC  318A  2285  3182   	fcall	_command
  6308  02DF                     l3437:
  6309                           
  6310                           ;main.c: 159:     _delay((unsigned long)((2)*(16000000/4000.0)));
  6311  02DF  300B               	movlw	11
  6312  02E0  0021               	movlb	1	; select bank1
  6313  02E1  00B5               	movwf	??_main^(0+128)
  6314  02E2  3062               	movlw	98
  6315  02E3                     u3407:
  6316  02E3  0B89               	decfsz	9,f
  6317  02E4  2AE3               	goto	u3407
  6318  02E5  0BB5               	decfsz	??_main^(0+128),f
  6319  02E6  2AE3               	goto	u3407
  6320  02E7  0000               	nop
  6321  02E8                     l3439:
  6322                           
  6323                           ;main.c: 160:     for(i=0;i<16;i++){
  6324  02E8  0021               	movlb	1	; select bank1
  6325  02E9  01BF               	clrf	main@i^(0+128)
  6326  02EA  01C0               	clrf	(main@i+1)^(0+128)
  6327  02EB                     l3445:
  6328                           
  6329                           ;main.c: 161:        dataCMD(text9[i]);
  6330  02EB  0021               	movlb	1	; select bank1
  6331  02EC  083F               	movf	main@i^(0+128),w
  6332  02ED  3E31               	addlw	(low (_text9| (0+256)))& (0+255)
  6333  02EE  0086               	movwf	6
  6334  02EF  3001               	movlw	1	; select bank2/3
  6335  02F0  0087               	movwf	7
  6336  02F1  0801               	movf	1,w
  6337  02F2  318A  22E0  3182   	fcall	_dataCMD
  6338  02F5                     l3447:
  6339                           
  6340                           ;main.c: 162:     }
  6341  02F5  3001               	movlw	1
  6342  02F6  0021               	movlb	1	; select bank1
  6343  02F7  07BF               	addwf	main@i^(0+128),f
  6344  02F8  3000               	movlw	0
  6345  02F9  3DC0               	addwfc	(main@i+1)^(0+128),f
  6346  02FA                     l3449:
  6347  02FA  0840               	movf	(main@i+1)^(0+128),w
  6348  02FB  3A80               	xorlw	128
  6349  02FC  00B5               	movwf	??_main^(0+128)
  6350  02FD  3080               	movlw	128
  6351  02FE  0235               	subwf	??_main^(0+128),w
  6352  02FF  1D03               	skipz
  6353  0300  2B03               	goto	u3255
  6354  0301  3010               	movlw	16
  6355  0302  023F               	subwf	main@i^(0+128),w
  6356  0303                     u3255:
  6357  0303  1C03               	skipc
  6358  0304  2B06               	goto	u3251
  6359  0305  2B07               	goto	u3250
  6360  0306                     u3251:
  6361  0306  2AEB               	goto	l3445
  6362  0307                     u3250:
  6363  0307                     l3451:
  6364                           
  6365                           ;main.c: 166:     {;main.c: 168:         adc_value0 = ADC_GetConversion(channel_AN2);
  6366  0307  3002               	movlw	2
  6367  0308  3197  2710  3182   	fcall	_ADC_GetConversion
  6368  030B  0871               	movf	?_ADC_GetConversion+1,w
  6369  030C  0021               	movlb	1	; select bank1
  6370  030D  00BC               	movwf	(main@adc_value0+1)^(0+128)
  6371  030E  0870               	movf	?_ADC_GetConversion,w
  6372  030F  00BB               	movwf	main@adc_value0^(0+128)
  6373  0310                     l3453:
  6374                           
  6375                           ;main.c: 169:         adc_value0 = adc_value0 >> 6;
  6376  0310  083C               	movf	(main@adc_value0+1)^(0+128),w
  6377  0311  00B6               	movwf	(??_main^(0+128)+1)
  6378  0312  083B               	movf	main@adc_value0^(0+128),w
  6379  0313  00B5               	movwf	??_main^(0+128)
  6380  0314  3006               	movlw	6
  6381  0315                     u3265:
  6382  0315  36B6               	lsrf	(??_main^(0+128)+1),f
  6383  0316  0CB5               	rrf	??_main^(0+128),f
  6384  0317  0B89               	decfsz	9,f
  6385  0318  2B15               	goto	u3265
  6386  0319  0835               	movf	??_main^(0+128),w
  6387  031A  00BB               	movwf	main@adc_value0^(0+128)
  6388  031B  0836               	movf	(??_main+1)^(0+128),w
  6389  031C  00BC               	movwf	(main@adc_value0+1)^(0+128)
  6390  031D                     l3455:
  6391                           
  6392                           ;main.c: 170:         adc_value1 = ADC_GetConversion(channel_AN3);
  6393  031D  3003               	movlw	3
  6394  031E  3197  2710  3182   	fcall	_ADC_GetConversion
  6395  0321  0871               	movf	?_ADC_GetConversion+1,w
  6396  0322  0021               	movlb	1	; select bank1
  6397  0323  00BE               	movwf	(main@adc_value1+1)^(0+128)
  6398  0324  0870               	movf	?_ADC_GetConversion,w
  6399  0325  00BD               	movwf	main@adc_value1^(0+128)
  6400                           
  6401                           ;main.c: 171:         adc_value1 = adc_value1 >> 6;
  6402  0326  083E               	movf	(main@adc_value1+1)^(0+128),w
  6403  0327  00B6               	movwf	(??_main^(0+128)+1)
  6404  0328  083D               	movf	main@adc_value1^(0+128),w
  6405  0329  00B5               	movwf	??_main^(0+128)
  6406  032A  3006               	movlw	6
  6407  032B                     u3275:
  6408  032B  36B6               	lsrf	(??_main^(0+128)+1),f
  6409  032C  0CB5               	rrf	??_main^(0+128),f
  6410  032D  0B89               	decfsz	9,f
  6411  032E  2B2B               	goto	u3275
  6412  032F  0835               	movf	??_main^(0+128),w
  6413  0330  00BD               	movwf	main@adc_value1^(0+128)
  6414  0331  0836               	movf	(??_main+1)^(0+128),w
  6415  0332  00BE               	movwf	(main@adc_value1+1)^(0+128)
  6416  0333                     l3457:
  6417                           
  6418                           ;main.c: 173:         if (adc_value0< 45)
  6419  0333  3000               	movlw	0
  6420  0334  023C               	subwf	(main@adc_value0+1)^(0+128),w
  6421  0335  302D               	movlw	45
  6422  0336  1903               	skipnz
  6423  0337  023B               	subwf	main@adc_value0^(0+128),w
  6424  0338  1803               	skipnc
  6425  0339  2B3B               	goto	u3281
  6426  033A  2B3C               	goto	u3280
  6427  033B                     u3281:
  6428  033B  2B3E               	goto	l3461
  6429  033C                     u3280:
  6430  033C                     l3459:
  6431                           
  6432                           ;main.c: 174:             adc_value0 = 0;
  6433  033C  01BB               	clrf	main@adc_value0^(0+128)
  6434  033D  01BC               	clrf	(main@adc_value0+1)^(0+128)
  6435  033E                     l3461:
  6436                           
  6437                           ;main.c: 175:         if (adc_value1< 45)
  6438  033E  3000               	movlw	0
  6439  033F  023E               	subwf	(main@adc_value1+1)^(0+128),w
  6440  0340  302D               	movlw	45
  6441  0341  1903               	skipnz
  6442  0342  023D               	subwf	main@adc_value1^(0+128),w
  6443  0343  1803               	skipnc
  6444  0344  2B46               	goto	u3291
  6445  0345  2B47               	goto	u3290
  6446  0346                     u3291:
  6447  0346  2B49               	goto	l3465
  6448  0347                     u3290:
  6449  0347                     l3463:
  6450                           
  6451                           ;main.c: 176:             adc_value1 = 0;
  6452  0347  01BD               	clrf	main@adc_value1^(0+128)
  6453  0348  01BE               	clrf	(main@adc_value1+1)^(0+128)
  6454  0349                     l3465:
  6455                           
  6456                           ;main.c: 178:         stuffIntToCharsBuf(adc_value0 , text10 , 2 );
  6457  0349  083C               	movf	(main@adc_value0+1)^(0+128),w
  6458  034A  00A4               	movwf	(stuffIntToCharsBuf@num+1)^(0+128)
  6459  034B  083B               	movf	main@adc_value0^(0+128),w
  6460  034C  00A3               	movwf	stuffIntToCharsBuf@num^(0+128)
  6461  034D  30D9               	movlw	(low (_text10| 0))& (0+255)
  6462  034E  00B5               	movwf	??_main^(0+128)
  6463  034F  0835               	movf	??_main^(0+128),w
  6464  0350  00A5               	movwf	stuffIntToCharsBuf@buf^(0+128)
  6465  0351  3002               	movlw	2
  6466  0352  00A6               	movwf	stuffIntToCharsBuf@pos^(0+128)
  6467  0353  3000               	movlw	0
  6468  0354  00A7               	movwf	(stuffIntToCharsBuf@pos^(0+128)+1)
  6469  0355  3186  264D  3182   	fcall	_stuffIntToCharsBuf
  6470  0358                     l3467:
  6471                           
  6472                           ;main.c: 179:         stuffIntToCharsBuf(adc_value1 , text10 , 9 );
  6473  0358  0021               	movlb	1	; select bank1
  6474  0359  083E               	movf	(main@adc_value1+1)^(0+128),w
  6475  035A  00A4               	movwf	(stuffIntToCharsBuf@num+1)^(0+128)
  6476  035B  083D               	movf	main@adc_value1^(0+128),w
  6477  035C  00A3               	movwf	stuffIntToCharsBuf@num^(0+128)
  6478  035D  30D9               	movlw	(low (_text10| 0))& (0+255)
  6479  035E  00B5               	movwf	??_main^(0+128)
  6480  035F  0835               	movf	??_main^(0+128),w
  6481  0360  00A5               	movwf	stuffIntToCharsBuf@buf^(0+128)
  6482  0361  3009               	movlw	9
  6483  0362  00A6               	movwf	stuffIntToCharsBuf@pos^(0+128)
  6484  0363  3000               	movlw	0
  6485  0364  00A7               	movwf	(stuffIntToCharsBuf@pos^(0+128)+1)
  6486  0365  3186  264D  3182   	fcall	_stuffIntToCharsBuf
  6487  0368                     l3469:
  6488                           
  6489                           ;main.c: 180:         command(0x01);
  6490  0368  3001               	movlw	1
  6491  0369  318A  2285  3182   	fcall	_command
  6492  036C                     l3471:
  6493                           
  6494                           ;main.c: 181:         _delay((unsigned long)((2)*(16000000/4000.0)));
  6495  036C  300B               	movlw	11
  6496  036D  0021               	movlb	1	; select bank1
  6497  036E  00B5               	movwf	??_main^(0+128)
  6498  036F  3062               	movlw	98
  6499  0370                     u3417:
  6500  0370  0B89               	decfsz	9,f
  6501  0371  2B70               	goto	u3417
  6502  0372  0BB5               	decfsz	??_main^(0+128),f
  6503  0373  2B70               	goto	u3417
  6504  0374  0000               	nop
  6505  0375                     l3473:
  6506                           
  6507                           ;main.c: 182:         for(i=0;i<16;i++){
  6508  0375  0021               	movlb	1	; select bank1
  6509  0376  01BF               	clrf	main@i^(0+128)
  6510  0377  01C0               	clrf	(main@i+1)^(0+128)
  6511  0378                     l3479:
  6512                           
  6513                           ;main.c: 183:           dataCMD(text9[i]);
  6514  0378  0021               	movlb	1	; select bank1
  6515  0379  083F               	movf	main@i^(0+128),w
  6516  037A  3E31               	addlw	(low (_text9| (0+256)))& (0+255)
  6517  037B  0086               	movwf	6
  6518  037C  3001               	movlw	1	; select bank2/3
  6519  037D  0087               	movwf	7
  6520  037E  0801               	movf	1,w
  6521  037F  318A  22E0  3182   	fcall	_dataCMD
  6522  0382                     l3481:
  6523                           
  6524                           ;main.c: 184:         }
  6525  0382  3001               	movlw	1
  6526  0383  0021               	movlb	1	; select bank1
  6527  0384  07BF               	addwf	main@i^(0+128),f
  6528  0385  3000               	movlw	0
  6529  0386  3DC0               	addwfc	(main@i+1)^(0+128),f
  6530  0387                     l3483:
  6531  0387  0840               	movf	(main@i+1)^(0+128),w
  6532  0388  3A80               	xorlw	128
  6533  0389  00B5               	movwf	??_main^(0+128)
  6534  038A  3080               	movlw	128
  6535  038B  0235               	subwf	??_main^(0+128),w
  6536  038C  1D03               	skipz
  6537  038D  2B90               	goto	u3305
  6538  038E  3010               	movlw	16
  6539  038F  023F               	subwf	main@i^(0+128),w
  6540  0390                     u3305:
  6541  0390  1C03               	skipc
  6542  0391  2B93               	goto	u3301
  6543  0392  2B94               	goto	u3300
  6544  0393                     u3301:
  6545  0393  2B78               	goto	l3479
  6546  0394                     u3300:
  6547  0394                     l3485:
  6548                           
  6549                           ;main.c: 185:         command(0xA0);
  6550  0394  30A0               	movlw	160
  6551  0395  318A  2285  3182   	fcall	_command
  6552  0398                     l3487:
  6553                           
  6554                           ;main.c: 186:         for(i=0;i<16;i++){
  6555  0398  0021               	movlb	1	; select bank1
  6556  0399  01BF               	clrf	main@i^(0+128)
  6557  039A  01C0               	clrf	(main@i+1)^(0+128)
  6558  039B                     l3493:
  6559                           
  6560                           ;main.c: 187:           dataCMD(text10[i]);
  6561  039B  0021               	movlb	1	; select bank1
  6562  039C  083F               	movf	main@i^(0+128),w
  6563  039D  3ED9               	addlw	(low (_text10| 0))& (0+255)
  6564  039E  0086               	movwf	6
  6565  039F  0187               	clrf	7
  6566  03A0  0801               	movf	1,w
  6567  03A1  318A  22E0  3182   	fcall	_dataCMD
  6568  03A4                     l3495:
  6569                           
  6570                           ;main.c: 188:         }
  6571  03A4  3001               	movlw	1
  6572  03A5  0021               	movlb	1	; select bank1
  6573  03A6  07BF               	addwf	main@i^(0+128),f
  6574  03A7  3000               	movlw	0
  6575  03A8  3DC0               	addwfc	(main@i+1)^(0+128),f
  6576  03A9                     l3497:
  6577  03A9  0840               	movf	(main@i+1)^(0+128),w
  6578  03AA  3A80               	xorlw	128
  6579  03AB  00B5               	movwf	??_main^(0+128)
  6580  03AC  3080               	movlw	128
  6581  03AD  0235               	subwf	??_main^(0+128),w
  6582  03AE  1D03               	skipz
  6583  03AF  2BB2               	goto	u3315
  6584  03B0  3010               	movlw	16
  6585  03B1  023F               	subwf	main@i^(0+128),w
  6586  03B2                     u3315:
  6587  03B2  1C03               	skipc
  6588  03B3  2BB5               	goto	u3311
  6589  03B4  2BB6               	goto	u3310
  6590  03B5                     u3311:
  6591  03B5  2B9B               	goto	l3493
  6592  03B6                     u3310:
  6593  03B6                     l3499:
  6594                           
  6595                           ;main.c: 189:         setMotorSpeed(adc_value0, 1 );
  6596  03B6  0021               	movlb	1	; select bank1
  6597  03B7  083C               	movf	(main@adc_value0+1)^(0+128),w
  6598  03B8  00F5               	movwf	setMotorSpeed@num+1
  6599  03B9  083B               	movf	main@adc_value0^(0+128),w
  6600  03BA  00F4               	movwf	setMotorSpeed@num
  6601  03BB  3001               	movlw	1
  6602  03BC  00F6               	movwf	setMotorSpeed@motorNum
  6603  03BD  3000               	movlw	0
  6604  03BE  00F7               	movwf	setMotorSpeed@motorNum+1
  6605  03BF  3188  2001  3182   	fcall	_setMotorSpeed
  6606                           
  6607                           ;main.c: 190:         setMotorSpeed(adc_value1, 2 );
  6608  03C2  0021               	movlb	1	; select bank1
  6609  03C3  083E               	movf	(main@adc_value1+1)^(0+128),w
  6610  03C4  00F5               	movwf	setMotorSpeed@num+1
  6611  03C5  083D               	movf	main@adc_value1^(0+128),w
  6612  03C6  00F4               	movwf	setMotorSpeed@num
  6613  03C7  3002               	movlw	2
  6614  03C8  00F6               	movwf	setMotorSpeed@motorNum
  6615  03C9  3000               	movlw	0
  6616  03CA  00F7               	movwf	setMotorSpeed@motorNum+1
  6617  03CB  3188  2001  3182   	fcall	_setMotorSpeed
  6618  03CE                     l3501:
  6619                           
  6620                           ;main.c: 191:         _delay((unsigned long)((2000)*(16000000/4000.0)));
  6621  03CE  3029               	movlw	41
  6622  03CF  0021               	movlb	1	; select bank1
  6623  03D0  00B6               	movwf	(??_main^(0+128)+1)
  6624  03D1  3096               	movlw	150
  6625  03D2  00B5               	movwf	??_main^(0+128)
  6626  03D3  307F               	movlw	127
  6627  03D4                     u3427:
  6628  03D4  0B89               	decfsz	9,f
  6629  03D5  2BD4               	goto	u3427
  6630  03D6  0BB5               	decfsz	??_main^(0+128),f
  6631  03D7  2BD4               	goto	u3427
  6632  03D8  0BB6               	decfsz	(??_main^(0+128)+1),f
  6633  03D9  2BD4               	goto	u3427
  6634  03DA                     l3503:
  6635                           
  6636                           ;main.c: 192:         command(0x01);
  6637  03DA  3001               	movlw	1
  6638  03DB  318A  2285  3182   	fcall	_command
  6639                           
  6640                           ;main.c: 193:         _delay((unsigned long)((2)*(16000000/4000.0)));
  6641  03DE  300B               	movlw	11
  6642  03DF  0021               	movlb	1	; select bank1
  6643  03E0  00B5               	movwf	??_main^(0+128)
  6644  03E1  3062               	movlw	98
  6645  03E2                     u3437:
  6646  03E2  0B89               	decfsz	9,f
  6647  03E3  2BE2               	goto	u3437
  6648  03E4  0BB5               	decfsz	??_main^(0+128),f
  6649  03E5  2BE2               	goto	u3437
  6650  03E6  0000               	nop
  6651  03E7                     l3505:
  6652                           
  6653                           ;main.c: 194:         for(i=0;i<16;i++){
  6654  03E7  0021               	movlb	1	; select bank1
  6655  03E8  01BF               	clrf	main@i^(0+128)
  6656  03E9  01C0               	clrf	(main@i+1)^(0+128)
  6657  03EA                     l3511:
  6658                           
  6659                           ;main.c: 195:           dataCMD(text11[i]);
  6660  03EA  0021               	movlb	1	; select bank1
  6661  03EB  083F               	movf	main@i^(0+128),w
  6662  03EC  3E20               	addlw	(low (_text11| (0+256)))& (0+255)
  6663  03ED  0086               	movwf	6
  6664  03EE  3001               	movlw	1	; select bank2/3
  6665  03EF  0087               	movwf	7
  6666  03F0  0801               	movf	1,w
  6667  03F1  318A  22E0  3182   	fcall	_dataCMD
  6668  03F4                     l3513:
  6669                           
  6670                           ;main.c: 196:         }
  6671  03F4  3001               	movlw	1
  6672  03F5  0021               	movlb	1	; select bank1
  6673  03F6  07BF               	addwf	main@i^(0+128),f
  6674  03F7  3000               	movlw	0
  6675  03F8  3DC0               	addwfc	(main@i+1)^(0+128),f
  6676  03F9                     l3515:
  6677  03F9  0840               	movf	(main@i+1)^(0+128),w
  6678  03FA  3A80               	xorlw	128
  6679  03FB  00B5               	movwf	??_main^(0+128)
  6680  03FC  3080               	movlw	128
  6681  03FD  0235               	subwf	??_main^(0+128),w
  6682  03FE  1D03               	skipz
  6683  03FF  2C02               	goto	u3325
  6684  0400  3010               	movlw	16
  6685  0401  023F               	subwf	main@i^(0+128),w
  6686  0402                     u3325:
  6687  0402  1C03               	skipc
  6688  0403  2C05               	goto	u3321
  6689  0404  2C06               	goto	u3320
  6690  0405                     u3321:
  6691  0405  2BEA               	goto	l3511
  6692  0406                     u3320:
  6693  0406                     l3517:
  6694                           
  6695                           ;main.c: 198:         tcTemp = getTemp_TC();
  6696  0406  3189  21D8  3182   	fcall	_getTemp_TC
  6697  0409  0020               	movlb	0	; select bank0
  6698  040A  083D               	movf	?_getTemp_TC+3,w
  6699  040B  0021               	movlb	1	; select bank1
  6700  040C  00C8               	movwf	(_tcTemp+3)^(0+128)
  6701  040D  0020               	movlb	0	; select bank0
  6702  040E  083C               	movf	?_getTemp_TC+2,w
  6703  040F  0021               	movlb	1	; select bank1
  6704  0410  00C7               	movwf	(_tcTemp+2)^(0+128)
  6705  0411  0020               	movlb	0	; select bank0
  6706  0412  083B               	movf	?_getTemp_TC+1,w
  6707  0413  0021               	movlb	1	; select bank1
  6708  0414  00C6               	movwf	(_tcTemp+1)^(0+128)
  6709  0415  0020               	movlb	0	; select bank0
  6710  0416  083A               	movf	?_getTemp_TC,w
  6711  0417  0021               	movlb	1	; select bank1
  6712  0418  00C5               	movwf	_tcTemp^(0+128)
  6713                           
  6714                           ;main.c: 199:         dieTemp = getDieTemp();
  6715  0419  3189  2184  3182   	fcall	_getDieTemp
  6716  041C  0020               	movlb	0	; select bank0
  6717  041D  083D               	movf	?_getDieTemp+3,w
  6718  041E  0021               	movlb	1	; select bank1
  6719  041F  00C4               	movwf	(_dieTemp+3)^(0+128)
  6720  0420  0020               	movlb	0	; select bank0
  6721  0421  083C               	movf	?_getDieTemp+2,w
  6722  0422  0021               	movlb	1	; select bank1
  6723  0423  00C3               	movwf	(_dieTemp+2)^(0+128)
  6724  0424  0020               	movlb	0	; select bank0
  6725  0425  083B               	movf	?_getDieTemp+1,w
  6726  0426  0021               	movlb	1	; select bank1
  6727  0427  00C2               	movwf	(_dieTemp+1)^(0+128)
  6728  0428  0020               	movlb	0	; select bank0
  6729  0429  083A               	movf	?_getDieTemp,w
  6730  042A  0021               	movlb	1	; select bank1
  6731  042B  00C1               	movwf	_dieTemp^(0+128)
  6732                           
  6733                           ;main.c: 201:         faults = getFaultCodes();
  6734  042C  3196  2682  3182   	fcall	_getFaultCodes
  6735  042F  0021               	movlb	1	; select bank1
  6736  0430  00B5               	movwf	??_main^(0+128)
  6737  0431  0835               	movf	??_main^(0+128),w
  6738  0432  00D7               	movwf	_faults^(0+128)
  6739  0433                     l3519:
  6740                           
  6741                           ;main.c: 202:         if (faults > 0){
  6742  0433  0857               	movf	_faults^(0+128),w
  6743  0434  1903               	btfsc	3,2
  6744  0435  2C37               	goto	u3331
  6745  0436  2C38               	goto	u3330
  6746  0437                     u3331:
  6747  0437  2C48               	goto	l3525
  6748  0438                     u3330:
  6749  0438                     l3521:
  6750                           
  6751                           ;main.c: 203:            reportfault( faults);
  6752  0438  0857               	movf	_faults^(0+128),w
  6753  0439  3188  2081  3182   	fcall	_reportfault
  6754  043C                     l3523:
  6755                           
  6756                           ;main.c: 204:            _delay((unsigned long)((2000)*(16000000/4000.0)));
  6757  043C  3029               	movlw	41
  6758  043D  0021               	movlb	1	; select bank1
  6759  043E  00B6               	movwf	(??_main^(0+128)+1)
  6760  043F  3096               	movlw	150
  6761  0440  00B5               	movwf	??_main^(0+128)
  6762  0441  307F               	movlw	127
  6763  0442                     u3447:
  6764  0442  0B89               	decfsz	9,f
  6765  0443  2C42               	goto	u3447
  6766  0444  0BB5               	decfsz	??_main^(0+128),f
  6767  0445  2C42               	goto	u3447
  6768  0446  0BB6               	decfsz	(??_main^(0+128)+1),f
  6769  0447  2C42               	goto	u3447
  6770  0448                     l3525:
  6771                           
  6772                           ;main.c: 207:         command(0x01);
  6773  0448  3001               	movlw	1
  6774  0449  318A  2285  3182   	fcall	_command
  6775  044C                     l3527:
  6776                           
  6777                           ;main.c: 208:         _delay((unsigned long)((2)*(16000000/4000.0)));
  6778  044C  300B               	movlw	11
  6779  044D  0021               	movlb	1	; select bank1
  6780  044E  00B5               	movwf	??_main^(0+128)
  6781  044F  3062               	movlw	98
  6782  0450                     u3457:
  6783  0450  0B89               	decfsz	9,f
  6784  0451  2C50               	goto	u3457
  6785  0452  0BB5               	decfsz	??_main^(0+128),f
  6786  0453  2C50               	goto	u3457
  6787  0454  0000               	nop
  6788  0455                     l3529:
  6789                           
  6790                           ;main.c: 210:         for(i=0;i<16;i++){
  6791  0455  0021               	movlb	1	; select bank1
  6792  0456  01BF               	clrf	main@i^(0+128)
  6793  0457  01C0               	clrf	(main@i+1)^(0+128)
  6794  0458                     l3535:
  6795                           
  6796                           ;main.c: 211:             dataCMD(text11[i]);
  6797  0458  0021               	movlb	1	; select bank1
  6798  0459  083F               	movf	main@i^(0+128),w
  6799  045A  3E20               	addlw	(low (_text11| (0+256)))& (0+255)
  6800  045B  0086               	movwf	6
  6801  045C  3001               	movlw	1	; select bank2/3
  6802  045D  0087               	movwf	7
  6803  045E  0801               	movf	1,w
  6804  045F  318A  22E0  3182   	fcall	_dataCMD
  6805  0462                     l3537:
  6806                           
  6807                           ;main.c: 212:         }
  6808  0462  3001               	movlw	1
  6809  0463  0021               	movlb	1	; select bank1
  6810  0464  07BF               	addwf	main@i^(0+128),f
  6811  0465  3000               	movlw	0
  6812  0466  3DC0               	addwfc	(main@i+1)^(0+128),f
  6813  0467                     l3539:
  6814  0467  0840               	movf	(main@i+1)^(0+128),w
  6815  0468  3A80               	xorlw	128
  6816  0469  00B5               	movwf	??_main^(0+128)
  6817  046A  3080               	movlw	128
  6818  046B  0235               	subwf	??_main^(0+128),w
  6819  046C  1D03               	skipz
  6820  046D  2C70               	goto	u3345
  6821  046E  3010               	movlw	16
  6822  046F  023F               	subwf	main@i^(0+128),w
  6823  0470                     u3345:
  6824  0470  1C03               	skipc
  6825  0471  2C73               	goto	u3341
  6826  0472  2C74               	goto	u3340
  6827  0473                     u3341:
  6828  0473  2C58               	goto	l3535
  6829  0474                     u3340:
  6830  0474                     l3541:
  6831                           
  6832                           ;main.c: 215:         stuffIntToCharsBuf( (int16_t)tcTemp , text10 , 2 );
  6833  0474  0021               	movlb	1	; select bank1
  6834  0475  0848               	movf	(_tcTemp+3)^(0+128),w
  6835  0476  00F3               	movwf	___fltol@f1+3
  6836  0477  0847               	movf	(_tcTemp+2)^(0+128),w
  6837  0478  00F2               	movwf	___fltol@f1+2
  6838  0479  0846               	movf	(_tcTemp+1)^(0+128),w
  6839  047A  00F1               	movwf	___fltol@f1+1
  6840  047B  0845               	movf	_tcTemp^(0+128),w
  6841  047C  00F0               	movwf	___fltol@f1
  6842  047D  3187  2783  3182   	fcall	___fltol
  6843  0480  0871               	movf	?___fltol+1,w
  6844  0481  0021               	movlb	1	; select bank1
  6845  0482  00A4               	movwf	(stuffIntToCharsBuf@num+1)^(0+128)
  6846  0483  0870               	movf	?___fltol,w
  6847  0484  00A3               	movwf	stuffIntToCharsBuf@num^(0+128)
  6848  0485  30D9               	movlw	(low (_text10| 0))& (0+255)
  6849  0486  00B5               	movwf	??_main^(0+128)
  6850  0487  0835               	movf	??_main^(0+128),w
  6851  0488  00A5               	movwf	stuffIntToCharsBuf@buf^(0+128)
  6852  0489  3002               	movlw	2
  6853  048A  00A6               	movwf	stuffIntToCharsBuf@pos^(0+128)
  6854  048B  3000               	movlw	0
  6855  048C  00A7               	movwf	(stuffIntToCharsBuf@pos^(0+128)+1)
  6856  048D  3186  264D  3182   	fcall	_stuffIntToCharsBuf
  6857                           
  6858                           ;main.c: 216:         stuffIntToCharsBuf( (int16_t)dieTemp , text10 , 9 );
  6859  0490  0021               	movlb	1	; select bank1
  6860  0491  0844               	movf	(_dieTemp+3)^(0+128),w
  6861  0492  00F3               	movwf	___fltol@f1+3
  6862  0493  0843               	movf	(_dieTemp+2)^(0+128),w
  6863  0494  00F2               	movwf	___fltol@f1+2
  6864  0495  0842               	movf	(_dieTemp+1)^(0+128),w
  6865  0496  00F1               	movwf	___fltol@f1+1
  6866  0497  0841               	movf	_dieTemp^(0+128),w
  6867  0498  00F0               	movwf	___fltol@f1
  6868  0499  3187  2783  3182   	fcall	___fltol
  6869  049C  0871               	movf	?___fltol+1,w
  6870  049D  0021               	movlb	1	; select bank1
  6871  049E  00A4               	movwf	(stuffIntToCharsBuf@num+1)^(0+128)
  6872  049F  0870               	movf	?___fltol,w
  6873  04A0  00A3               	movwf	stuffIntToCharsBuf@num^(0+128)
  6874  04A1  30D9               	movlw	(low (_text10| 0))& (0+255)
  6875  04A2  00B5               	movwf	??_main^(0+128)
  6876  04A3  0835               	movf	??_main^(0+128),w
  6877  04A4  00A5               	movwf	stuffIntToCharsBuf@buf^(0+128)
  6878  04A5  3009               	movlw	9
  6879  04A6  00A6               	movwf	stuffIntToCharsBuf@pos^(0+128)
  6880  04A7  3000               	movlw	0
  6881  04A8  00A7               	movwf	(stuffIntToCharsBuf@pos^(0+128)+1)
  6882  04A9  3186  264D  3182   	fcall	_stuffIntToCharsBuf
  6883  04AC                     l3543:
  6884                           
  6885                           ;main.c: 217:         command(0xA0);
  6886  04AC  30A0               	movlw	160
  6887  04AD  318A  2285  3182   	fcall	_command
  6888  04B0                     l3545:
  6889                           
  6890                           ;main.c: 218:         for(i=0;i<16;i++){
  6891  04B0  0021               	movlb	1	; select bank1
  6892  04B1  01BF               	clrf	main@i^(0+128)
  6893  04B2  01C0               	clrf	(main@i+1)^(0+128)
  6894  04B3                     l3551:
  6895                           
  6896                           ;main.c: 219:           dataCMD(text10[i]);
  6897  04B3  0021               	movlb	1	; select bank1
  6898  04B4  083F               	movf	main@i^(0+128),w
  6899  04B5  3ED9               	addlw	(low (_text10| 0))& (0+255)
  6900  04B6  0086               	movwf	6
  6901  04B7  0187               	clrf	7
  6902  04B8  0801               	movf	1,w
  6903  04B9  318A  22E0  3182   	fcall	_dataCMD
  6904  04BC                     l3553:
  6905                           
  6906                           ;main.c: 220:         }
  6907  04BC  3001               	movlw	1
  6908  04BD  0021               	movlb	1	; select bank1
  6909  04BE  07BF               	addwf	main@i^(0+128),f
  6910  04BF  3000               	movlw	0
  6911  04C0  3DC0               	addwfc	(main@i+1)^(0+128),f
  6912  04C1                     l3555:
  6913  04C1  0840               	movf	(main@i+1)^(0+128),w
  6914  04C2  3A80               	xorlw	128
  6915  04C3  00B5               	movwf	??_main^(0+128)
  6916  04C4  3080               	movlw	128
  6917  04C5  0235               	subwf	??_main^(0+128),w
  6918  04C6  1D03               	skipz
  6919  04C7  2CCA               	goto	u3355
  6920  04C8  3010               	movlw	16
  6921  04C9  023F               	subwf	main@i^(0+128),w
  6922  04CA                     u3355:
  6923  04CA  1C03               	skipc
  6924  04CB  2CCD               	goto	u3351
  6925  04CC  2CCE               	goto	u3350
  6926  04CD                     u3351:
  6927  04CD  2CB3               	goto	l3551
  6928  04CE                     u3350:
  6929  04CE                     l3557:
  6930                           
  6931                           ;main.c: 221:         _delay((unsigned long)((2000)*(16000000/4000.0)));
  6932  04CE  3029               	movlw	41
  6933  04CF  0021               	movlb	1	; select bank1
  6934  04D0  00B6               	movwf	(??_main^(0+128)+1)
  6935  04D1  3096               	movlw	150
  6936  04D2  00B5               	movwf	??_main^(0+128)
  6937  04D3  307F               	movlw	127
  6938  04D4                     u3467:
  6939  04D4  0B89               	decfsz	9,f
  6940  04D5  2CD4               	goto	u3467
  6941  04D6  0BB5               	decfsz	??_main^(0+128),f
  6942  04D7  2CD4               	goto	u3467
  6943  04D8  0BB6               	decfsz	(??_main^(0+128)+1),f
  6944  04D9  2CD4               	goto	u3467
  6945  04DA  2B07               	goto	l3451
  6946  04DB  3180  2819         	ljmp	start
  6947  04DD                     __end_of_main:
  6948                           
  6949                           	psect	text1
  6950  064D                     __ptext1:	
  6951 ;; *************** function _stuffIntToCharsBuf *****************
  6952 ;; Defined at:
  6953 ;;		line 341 in file "main.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;  num             2    3[BANK1 ] int 
  6956 ;;  buf             1    5[BANK1 ] PTR unsigned char 
  6957 ;;		 -> text10(17), 
  6958 ;;  pos             2    6[BANK1 ] int 
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;  neg             2   19[BANK1 ] int 
  6961 ;;  dig3            2   17[BANK1 ] int 
  6962 ;;  dig2            2   15[BANK1 ] int 
  6963 ;;  dig1            2   13[BANK1 ] int 
  6964 ;;  dig4            2   11[BANK1 ] int 
  6965 ;; Return value:  Size  Location     Type
  6966 ;;                  1    wreg      void 
  6967 ;; Registers used:
  6968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6969 ;; Tracked objects:
  6970 ;;		On entry : 0/0
  6971 ;;		On exit  : 0/0
  6972 ;;		Unchanged: 0/0
  6973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6974 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6975 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6976 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6977 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  6978 ;;Total ram usage:       18 bytes
  6979 ;; Hardware stack levels used:    1
  6980 ;; Hardware stack levels required when called:   12
  6981 ;; This function calls:
  6982 ;;		___awdiv
  6983 ;;		___wmul
  6984 ;;		_printf
  6985 ;; This function is called by:
  6986 ;;		_main
  6987 ;; This function uses a non-reentrant model
  6988 ;;
  6989                           
  6990                           
  6991                           ;psect for function _stuffIntToCharsBuf
  6992  064D                     _stuffIntToCharsBuf:
  6993  064D                     l3263:	
  6994                           ;incstack = 0
  6995                           ; Regs used in _stuffIntToCharsBuf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6996                           
  6997                           
  6998                           ;main.c: 343:   printf("num= %d\n", num);
  6999  064D  302D               	movlw	low (STR_1| (0+32768))
  7000  064E  0020               	movlb	0	; select bank0
  7001  064F  00E6               	movwf	printf@fmt
  7002  0650  3098               	movlw	high (STR_1| (0+32768))
  7003  0651  00E7               	movwf	printf@fmt+1
  7004  0652  0021               	movlb	1	; select bank1
  7005  0653  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  7006  0654  0020               	movlb	0	; select bank0
  7007  0655  00E9               	movwf	?_printf+3
  7008  0656  0021               	movlb	1	; select bank1
  7009  0657  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  7010  0658  0020               	movlb	0	; select bank0
  7011  0659  00E8               	movwf	?_printf+2
  7012  065A  3196  266F  3186   	fcall	_printf
  7013  065D                     l3265:
  7014                           
  7015                           ;main.c: 344:   int dig1, dig2, dig3, dig4, neg=0;
  7016  065D  0021               	movlb	1	; select bank1
  7017  065E  01B3               	clrf	stuffIntToCharsBuf@neg^(0+128)
  7018  065F  01B4               	clrf	(stuffIntToCharsBuf@neg+1)^(0+128)
  7019  0660                     l3267:
  7020                           
  7021                           ;main.c: 346:   if (num < 0) {
  7022  0660  1FA4               	btfss	(stuffIntToCharsBuf@num+1)^(0+128),7
  7023  0661  2E63               	goto	u2991
  7024  0662  2E64               	goto	u2990
  7025  0663                     u2991:
  7026  0663  2E77               	goto	l3275
  7027  0664                     u2990:
  7028  0664                     l3269:
  7029                           
  7030                           ;main.c: 347:     neg = 1;
  7031  0664  3001               	movlw	1
  7032  0665  00B3               	movwf	stuffIntToCharsBuf@neg^(0+128)
  7033  0666  3000               	movlw	0
  7034  0667  00B4               	movwf	(stuffIntToCharsBuf@neg^(0+128)+1)
  7035  0668                     l3271:
  7036                           
  7037                           ;main.c: 348:     buf[0+pos]= 45;
  7038  0668  302D               	movlw	45
  7039  0669  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  7040  066A  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  7041  066B  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  7042  066C  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  7043  066D  0829               	movf	(??_stuffIntToCharsBuf+1)^(0+128),w
  7044  066E  0086               	movwf	6
  7045  066F  0187               	clrf	7
  7046  0670  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  7047  0671  0081               	movwf	1
  7048  0672                     l3273:
  7049                           
  7050                           ;main.c: 349:     num= num*(-1);
  7051  0672  09A3               	comf	stuffIntToCharsBuf@num^(0+128),f
  7052  0673  09A4               	comf	(stuffIntToCharsBuf@num+1)^(0+128),f
  7053  0674  0AA3               	incf	stuffIntToCharsBuf@num^(0+128),f
  7054  0675  1903               	skipnz
  7055  0676  0AA4               	incf	(stuffIntToCharsBuf@num+1)^(0+128),f
  7056  0677                     l3275:
  7057                           
  7058                           ;main.c: 352:   dig1 = num/1000;
  7059  0677  30E8               	movlw	232
  7060  0678  00F0               	movwf	___awdiv@divisor
  7061  0679  3003               	movlw	3
  7062  067A  00F1               	movwf	___awdiv@divisor+1
  7063  067B  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  7064  067C  00F3               	movwf	___awdiv@dividend+1
  7065  067D  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  7066  067E  00F2               	movwf	___awdiv@dividend
  7067  067F  318B  2398  3186   	fcall	___awdiv
  7068  0682  0871               	movf	?___awdiv+1,w
  7069  0683  0021               	movlb	1	; select bank1
  7070  0684  00AE               	movwf	(stuffIntToCharsBuf@dig1+1)^(0+128)
  7071  0685  0870               	movf	?___awdiv,w
  7072  0686  00AD               	movwf	stuffIntToCharsBuf@dig1^(0+128)
  7073  0687                     l3277:
  7074                           
  7075                           ;main.c: 353:   num = num - dig1*1000;
  7076  0687  082E               	movf	(stuffIntToCharsBuf@dig1+1)^(0+128),w
  7077  0688  00F1               	movwf	___wmul@multiplier+1
  7078  0689  082D               	movf	stuffIntToCharsBuf@dig1^(0+128),w
  7079  068A  00F0               	movwf	___wmul@multiplier
  7080  068B  3018               	movlw	24
  7081  068C  00F2               	movwf	___wmul@multiplicand
  7082  068D  30FC               	movlw	252
  7083  068E  00F3               	movwf	___wmul@multiplicand+1
  7084  068F  3197  2747  3186   	fcall	___wmul
  7085  0692  0021               	movlb	1	; select bank1
  7086  0693  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  7087  0694  0770               	addwf	?___wmul,w
  7088  0695  00A3               	movwf	stuffIntToCharsBuf@num^(0+128)
  7089  0696  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  7090  0697  3D71               	addwfc	?___wmul+1,w
  7091  0698  00A4               	movwf	(stuffIntToCharsBuf@num+1)^(0+128)
  7092  0699                     l3279:
  7093                           
  7094                           ;main.c: 354:   dig2 = num /100;
  7095  0699  3064               	movlw	100
  7096  069A  00F0               	movwf	___awdiv@divisor
  7097  069B  3000               	movlw	0
  7098  069C  00F1               	movwf	___awdiv@divisor+1
  7099  069D  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  7100  069E  00F3               	movwf	___awdiv@dividend+1
  7101  069F  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  7102  06A0  00F2               	movwf	___awdiv@dividend
  7103  06A1  318B  2398  3186   	fcall	___awdiv
  7104  06A4  0871               	movf	?___awdiv+1,w
  7105  06A5  0021               	movlb	1	; select bank1
  7106  06A6  00B0               	movwf	(stuffIntToCharsBuf@dig2+1)^(0+128)
  7107  06A7  0870               	movf	?___awdiv,w
  7108  06A8  00AF               	movwf	stuffIntToCharsBuf@dig2^(0+128)
  7109  06A9                     l3281:
  7110                           
  7111                           ;main.c: 355:   num = num - dig2*100;
  7112  06A9  0830               	movf	(stuffIntToCharsBuf@dig2+1)^(0+128),w
  7113  06AA  00F1               	movwf	___wmul@multiplier+1
  7114  06AB  082F               	movf	stuffIntToCharsBuf@dig2^(0+128),w
  7115  06AC  00F0               	movwf	___wmul@multiplier
  7116  06AD  309C               	movlw	156
  7117  06AE  00F2               	movwf	___wmul@multiplicand
  7118  06AF  30FF               	movlw	255
  7119  06B0  00F3               	movwf	___wmul@multiplicand+1
  7120  06B1  3197  2747  3186   	fcall	___wmul
  7121  06B4  0021               	movlb	1	; select bank1
  7122  06B5  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  7123  06B6  0770               	addwf	?___wmul,w
  7124  06B7  00A3               	movwf	stuffIntToCharsBuf@num^(0+128)
  7125  06B8  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  7126  06B9  3D71               	addwfc	?___wmul+1,w
  7127  06BA  00A4               	movwf	(stuffIntToCharsBuf@num+1)^(0+128)
  7128  06BB                     l3283:
  7129                           
  7130                           ;main.c: 356:   dig3 = num / 10;
  7131  06BB  300A               	movlw	10
  7132  06BC  00F0               	movwf	___awdiv@divisor
  7133  06BD  3000               	movlw	0
  7134  06BE  00F1               	movwf	___awdiv@divisor+1
  7135  06BF  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  7136  06C0  00F3               	movwf	___awdiv@dividend+1
  7137  06C1  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  7138  06C2  00F2               	movwf	___awdiv@dividend
  7139  06C3  318B  2398  3186   	fcall	___awdiv
  7140  06C6  0871               	movf	?___awdiv+1,w
  7141  06C7  0021               	movlb	1	; select bank1
  7142  06C8  00B2               	movwf	(stuffIntToCharsBuf@dig3+1)^(0+128)
  7143  06C9  0870               	movf	?___awdiv,w
  7144  06CA  00B1               	movwf	stuffIntToCharsBuf@dig3^(0+128)
  7145  06CB                     l3285:
  7146                           
  7147                           ;main.c: 357:   dig4 = num - dig3*10;
  7148  06CB  0832               	movf	(stuffIntToCharsBuf@dig3+1)^(0+128),w
  7149  06CC  00F1               	movwf	___wmul@multiplier+1
  7150  06CD  0831               	movf	stuffIntToCharsBuf@dig3^(0+128),w
  7151  06CE  00F0               	movwf	___wmul@multiplier
  7152  06CF  30F6               	movlw	246
  7153  06D0  00F2               	movwf	___wmul@multiplicand
  7154  06D1  30FF               	movlw	255
  7155  06D2  00F3               	movwf	___wmul@multiplicand+1
  7156  06D3  3197  2747  3186   	fcall	___wmul
  7157  06D6  0021               	movlb	1	; select bank1
  7158  06D7  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  7159  06D8  0770               	addwf	?___wmul,w
  7160  06D9  00AB               	movwf	stuffIntToCharsBuf@dig4^(0+128)
  7161  06DA  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  7162  06DB  3D71               	addwfc	?___wmul+1,w
  7163  06DC  00AC               	movwf	(stuffIntToCharsBuf@dig4+1)^(0+128)
  7164  06DD                     l3287:
  7165                           
  7166                           ;main.c: 359:   printf("dig1 dig2 dig3 dig4\n");
  7167  06DD  3018               	movlw	low (STR_2| (0+32768))
  7168  06DE  0020               	movlb	0	; select bank0
  7169  06DF  00E6               	movwf	printf@fmt
  7170  06E0  3098               	movlw	high (STR_2| (0+32768))
  7171  06E1  00E7               	movwf	printf@fmt+1
  7172  06E2  3196  266F  3186   	fcall	_printf
  7173  06E5                     l3289:
  7174                           
  7175                           ;main.c: 360:   printf("  %d   %d   %d   %d   \n", dig1, dig2, dig3, dig4);
  7176  06E5  3000               	movlw	low (STR_3| (0+32768))
  7177  06E6  0020               	movlb	0	; select bank0
  7178  06E7  00E6               	movwf	printf@fmt
  7179  06E8  3098               	movlw	high (STR_3| (0+32768))
  7180  06E9  00E7               	movwf	printf@fmt+1
  7181  06EA  0021               	movlb	1	; select bank1
  7182  06EB  082E               	movf	(stuffIntToCharsBuf@dig1+1)^(0+128),w
  7183  06EC  0020               	movlb	0	; select bank0
  7184  06ED  00E9               	movwf	?_printf+3
  7185  06EE  0021               	movlb	1	; select bank1
  7186  06EF  082D               	movf	stuffIntToCharsBuf@dig1^(0+128),w
  7187  06F0  0020               	movlb	0	; select bank0
  7188  06F1  00E8               	movwf	?_printf+2
  7189  06F2  0021               	movlb	1	; select bank1
  7190  06F3  0830               	movf	(stuffIntToCharsBuf@dig2+1)^(0+128),w
  7191  06F4  0020               	movlb	0	; select bank0
  7192  06F5  00EB               	movwf	?_printf+5
  7193  06F6  0021               	movlb	1	; select bank1
  7194  06F7  082F               	movf	stuffIntToCharsBuf@dig2^(0+128),w
  7195  06F8  0020               	movlb	0	; select bank0
  7196  06F9  00EA               	movwf	?_printf+4
  7197  06FA  0021               	movlb	1	; select bank1
  7198  06FB  0832               	movf	(stuffIntToCharsBuf@dig3+1)^(0+128),w
  7199  06FC  0020               	movlb	0	; select bank0
  7200  06FD  00ED               	movwf	?_printf+7
  7201  06FE  0021               	movlb	1	; select bank1
  7202  06FF  0831               	movf	stuffIntToCharsBuf@dig3^(0+128),w
  7203  0700  0020               	movlb	0	; select bank0
  7204  0701  00EC               	movwf	?_printf+6
  7205  0702  0021               	movlb	1	; select bank1
  7206  0703  082C               	movf	(stuffIntToCharsBuf@dig4+1)^(0+128),w
  7207  0704  0020               	movlb	0	; select bank0
  7208  0705  00EF               	movwf	?_printf+9
  7209  0706  0021               	movlb	1	; select bank1
  7210  0707  082B               	movf	stuffIntToCharsBuf@dig4^(0+128),w
  7211  0708  0020               	movlb	0	; select bank0
  7212  0709  00EE               	movwf	?_printf+8
  7213  070A  3196  266F  3186   	fcall	_printf
  7214  070D                     l3291:
  7215                           
  7216                           ;main.c: 363:   buf[0+pos+neg] = dig1+48;
  7217  070D  0021               	movlb	1	; select bank1
  7218  070E  082D               	movf	stuffIntToCharsBuf@dig1^(0+128),w
  7219  070F  3E30               	addlw	48
  7220  0710  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  7221  0711  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  7222  0712  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  7223  0713  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  7224  0714  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  7225  0715  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  7226  0716  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  7227  0717  082A               	movf	(??_stuffIntToCharsBuf+2)^(0+128),w
  7228  0718  0086               	movwf	6
  7229  0719  0187               	clrf	7
  7230  071A  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  7231  071B  0081               	movwf	1
  7232  071C                     l3293:
  7233                           
  7234                           ;main.c: 364:   buf[1+pos+neg] = dig2+48;
  7235  071C  082F               	movf	stuffIntToCharsBuf@dig2^(0+128),w
  7236  071D  3E30               	addlw	48
  7237  071E  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  7238  071F  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  7239  0720  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  7240  0721  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  7241  0722  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  7242  0723  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  7243  0724  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  7244  0725  0A2A               	incf	(??_stuffIntToCharsBuf+2)^(0+128),w
  7245  0726  0086               	movwf	6
  7246  0727  0187               	clrf	7
  7247  0728  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  7248  0729  0081               	movwf	1
  7249  072A                     l3295:
  7250                           
  7251                           ;main.c: 365:   buf[2+pos+neg] = dig3+48;
  7252  072A  0831               	movf	stuffIntToCharsBuf@dig3^(0+128),w
  7253  072B  3E30               	addlw	48
  7254  072C  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  7255  072D  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  7256  072E  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  7257  072F  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  7258  0730  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  7259  0731  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  7260  0732  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  7261  0733  082A               	movf	(??_stuffIntToCharsBuf+2)^(0+128),w
  7262  0734  3E02               	addlw	2
  7263  0735  0086               	movwf	6
  7264  0736  0187               	clrf	7
  7265  0737  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  7266  0738  0081               	movwf	1
  7267  0739                     l3297:
  7268                           
  7269                           ;main.c: 366:   buf[3+pos+neg] = dig4+48;
  7270  0739  082B               	movf	stuffIntToCharsBuf@dig4^(0+128),w
  7271  073A  3E30               	addlw	48
  7272  073B  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  7273  073C  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  7274  073D  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  7275  073E  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  7276  073F  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  7277  0740  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  7278  0741  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  7279  0742  082A               	movf	(??_stuffIntToCharsBuf+2)^(0+128),w
  7280  0743  3E03               	addlw	3
  7281  0744  0086               	movwf	6
  7282  0745  0187               	clrf	7
  7283  0746  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  7284  0747  0081               	movwf	1
  7285  0748                     l3299:
  7286                           
  7287                           ;main.c: 368:   if (dig1 == 0){
  7288  0748  082D               	movf	stuffIntToCharsBuf@dig1^(0+128),w
  7289  0749  042E               	iorwf	(stuffIntToCharsBuf@dig1+1)^(0+128),w
  7290  074A  1D03               	btfss	3,2
  7291  074B  2F4D               	goto	u3001
  7292  074C  2F4E               	goto	u3000
  7293  074D                     u3001:
  7294  074D  2F82               	goto	l470
  7295  074E                     u3000:
  7296  074E                     l3301:
  7297                           
  7298                           ;main.c: 369:     buf[0+pos+neg] = ' ';
  7299  074E  3020               	movlw	32
  7300  074F  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  7301  0750  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  7302  0751  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  7303  0752  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  7304  0753  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  7305  0754  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  7306  0755  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  7307  0756  082A               	movf	(??_stuffIntToCharsBuf+2)^(0+128),w
  7308  0757  0086               	movwf	6
  7309  0758  0187               	clrf	7
  7310  0759  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  7311  075A  0081               	movwf	1
  7312  075B                     l3303:
  7313                           
  7314                           ;main.c: 370:     if (dig2 == 0){
  7315  075B  082F               	movf	stuffIntToCharsBuf@dig2^(0+128),w
  7316  075C  0430               	iorwf	(stuffIntToCharsBuf@dig2+1)^(0+128),w
  7317  075D  1D03               	btfss	3,2
  7318  075E  2F60               	goto	u3011
  7319  075F  2F61               	goto	u3010
  7320  0760                     u3011:
  7321  0760  2F82               	goto	l470
  7322  0761                     u3010:
  7323  0761                     l3305:
  7324                           
  7325                           ;main.c: 371:       buf[1+pos+neg] = ' ';
  7326  0761  3020               	movlw	32
  7327  0762  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  7328  0763  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  7329  0764  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  7330  0765  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  7331  0766  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  7332  0767  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  7333  0768  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  7334  0769  0A2A               	incf	(??_stuffIntToCharsBuf+2)^(0+128),w
  7335  076A  0086               	movwf	6
  7336  076B  0187               	clrf	7
  7337  076C  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  7338  076D  0081               	movwf	1
  7339  076E                     l3307:
  7340                           
  7341                           ;main.c: 372:       if (dig3 == 0 )
  7342  076E  0831               	movf	stuffIntToCharsBuf@dig3^(0+128),w
  7343  076F  0432               	iorwf	(stuffIntToCharsBuf@dig3+1)^(0+128),w
  7344  0770  1D03               	btfss	3,2
  7345  0771  2F73               	goto	u3021
  7346  0772  2F74               	goto	u3020
  7347  0773                     u3021:
  7348  0773  2F82               	goto	l470
  7349  0774                     u3020:
  7350  0774                     l3309:
  7351                           
  7352                           ;main.c: 373:         buf[2+pos+neg] = ' ';
  7353  0774  3020               	movlw	32
  7354  0775  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  7355  0776  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  7356  0777  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  7357  0778  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  7358  0779  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  7359  077A  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  7360  077B  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  7361  077C  082A               	movf	(??_stuffIntToCharsBuf+2)^(0+128),w
  7362  077D  3E02               	addlw	2
  7363  077E  0086               	movwf	6
  7364  077F  0187               	clrf	7
  7365  0780  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  7366  0781  0081               	movwf	1
  7367  0782                     l470:
  7368  0782  0008               	return
  7369  0783                     __end_of_stuffIntToCharsBuf:
  7370                           
  7371                           	psect	text2
  7372  166F                     __ptext2:	
  7373 ;; *************** function _printf *****************
  7374 ;; Defined at:
  7375 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  7378 ;;		 -> STR_3(24), STR_2(21), STR_1(9), 
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;  ret             2    0        int 
  7381 ;;  ap              1    2[BANK1 ] PTR void [1]
  7382 ;;		 -> ?_printf(2), 
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  2   70[BANK0 ] int 
  7385 ;; Registers used:
  7386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7392 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7394 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7395 ;;      Totals:         1      10       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7396 ;;Total ram usage:       14 bytes
  7397 ;; Hardware stack levels used:    1
  7398 ;; Hardware stack levels required when called:   11
  7399 ;; This function calls:
  7400 ;;		_vfprintf
  7401 ;; This function is called by:
  7402 ;;		_stuffIntToCharsBuf
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           
  7407                           ;psect for function _printf
  7408  166F                     _printf:
  7409  166F                     l2959:	
  7410                           ;incstack = 0
  7411                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7412                           
  7413  166F  3068               	movlw	(low ((?_printf| 0+2)))& (0+255)
  7414  1670  00FD               	movwf	??_printf
  7415  1671  087D               	movf	??_printf,w
  7416  1672  0021               	movlb	1	; select bank1
  7417  1673  00A2               	movwf	printf@ap^(0+128)
  7418  1674                     l2961:
  7419  1674  0020               	movlb	0	; select bank0
  7420  1675  0867               	movf	printf@fmt+1,w
  7421  1676  00DF               	movwf	vfprintf@fmt+1
  7422  1677  0866               	movf	printf@fmt,w
  7423  1678  00DE               	movwf	vfprintf@fmt
  7424  1679  30A2               	movlw	(low (printf@ap| 0))& (0+255)
  7425  167A  00FD               	movwf	??_printf
  7426  167B  087D               	movf	??_printf,w
  7427  167C  00E0               	movwf	vfprintf@ap
  7428  167D  3000               	movlw	0
  7429  167E  3188  201D  3196   	fcall	_vfprintf
  7430  1681                     l1063:
  7431  1681  0008               	return
  7432  1682                     __end_of_printf:
  7433                           
  7434                           	psect	text3
  7435  081D                     __ptext3:	
  7436 ;; *************** function _vfprintf *****************
  7437 ;; Defined at:
  7438 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  7439 ;; Parameters:    Size  Location     Type
  7440 ;;  fp              1    wreg     PTR struct _IO_FILE
  7441 ;;		 -> NULL(0), 
  7442 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  7443 ;;		 -> STR_3(24), STR_2(21), STR_1(9), 
  7444 ;;  ap              1   64[BANK0 ] PTR PTR void 
  7445 ;;		 -> printf@ap(1), 
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  7448 ;;		 -> NULL(0), 
  7449 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  7450 ;;		 -> STR_3(24), STR_2(21), STR_1(9), 
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  2   62[BANK0 ] int 
  7453 ;; Registers used:
  7454 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7460 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7461 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7462 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7463 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7464 ;;Total ram usage:        8 bytes
  7465 ;; Hardware stack levels used:    1
  7466 ;; Hardware stack levels required when called:   10
  7467 ;; This function calls:
  7468 ;;		_vfpfcnvrt
  7469 ;; This function is called by:
  7470 ;;		_printf
  7471 ;; This function uses a non-reentrant model
  7472 ;;
  7473                           
  7474                           
  7475                           ;psect for function _vfprintf
  7476  081D                     _vfprintf:
  7477                           
  7478                           ;incstack = 0
  7479                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7480                           ;vfprintf@fp stored from wreg
  7481  081D  0020               	movlb	0	; select bank0
  7482  081E  00E3               	movwf	vfprintf@fp
  7483  081F                     l2833:
  7484                           
  7485                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  7486  081F  085F               	movf	vfprintf@fmt+1,w
  7487  0820  00E5               	movwf	vfprintf@cfmt+1
  7488  0821  085E               	movf	vfprintf@fmt,w
  7489  0822  00E4               	movwf	vfprintf@cfmt
  7490  0823                     l2835:
  7491                           
  7492                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  7493  0823  0021               	movlb	1	; select bank1
  7494  0824  01CD               	clrf	_nout^(0+128)
  7495  0825  01CE               	clrf	(_nout+1)^(0+128)
  7496                           
  7497                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7498  0826  283B               	goto	l2839
  7499  0827                     l2837:
  7500                           
  7501                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  7502  0827  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  7503  0828  00E1               	movwf	??_vfprintf
  7504  0829  0861               	movf	??_vfprintf,w
  7505  082A  00CE               	movwf	vfpfcnvrt@fmt
  7506  082B  0860               	movf	vfprintf@ap,w
  7507  082C  00E2               	movwf	??_vfprintf+1
  7508  082D  0862               	movf	??_vfprintf+1,w
  7509  082E  00CF               	movwf	vfpfcnvrt@ap
  7510  082F  0863               	movf	vfprintf@fp,w
  7511  0830  318D  253A  3188   	fcall	_vfpfcnvrt
  7512  0833  0020               	movlb	0	; select bank0
  7513  0834  084E               	movf	?_vfpfcnvrt,w
  7514  0835  0021               	movlb	1	; select bank1
  7515  0836  07CD               	addwf	_nout^(0+128),f
  7516  0837  0020               	movlb	0	; select bank0
  7517  0838  084F               	movf	?_vfpfcnvrt+1,w
  7518  0839  0021               	movlb	1	; select bank1
  7519  083A  3DCE               	addwfc	(_nout+1)^(0+128),f
  7520  083B                     l2839:
  7521                           
  7522                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7523  083B  0020               	movlb	0	; select bank0
  7524  083C  0864               	movf	vfprintf@cfmt,w
  7525  083D  0084               	movwf	4
  7526  083E  0865               	movf	vfprintf@cfmt+1,w
  7527  083F  0085               	movwf	5
  7528  0840  0012               	moviw fsr0++
  7529  0841  1D03               	btfss	3,2
  7530  0842  2844               	goto	u2371
  7531  0843  2845               	goto	u2370
  7532  0844                     u2371:
  7533  0844  2827               	goto	l2837
  7534  0845                     u2370:
  7535  0845                     l2841:
  7536                           
  7537                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  7538  0845  0021               	movlb	1	; select bank1
  7539  0846  084E               	movf	(_nout+1)^(0+128),w
  7540  0847  0020               	movlb	0	; select bank0
  7541  0848  00DF               	movwf	?_vfprintf+1
  7542  0849  0021               	movlb	1	; select bank1
  7543  084A  084D               	movf	_nout^(0+128),w
  7544  084B  0020               	movlb	0	; select bank0
  7545  084C  00DE               	movwf	?_vfprintf
  7546  084D                     l1135:
  7547  084D  0008               	return
  7548  084E                     __end_of_vfprintf:
  7549                           
  7550                           	psect	text4
  7551  0D3A                     __ptext4:	
  7552 ;; *************** function _vfpfcnvrt *****************
  7553 ;; Defined at:
  7554 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  fp              1    wreg     PTR struct _IO_FILE
  7557 ;;		 -> NULL(0), 
  7558 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  7559 ;;		 -> vfprintf@cfmt(2), 
  7560 ;;  ap              1   47[BANK0 ] PTR PTR void 
  7561 ;;		 -> printf@ap(1), 
  7562 ;; Auto vars:     Size  Location     Type
  7563 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  7564 ;;		 -> NULL(0), 
  7565 ;;  ll              8   53[BANK0 ] long long 
  7566 ;;  llu             8    0        unsigned long long 
  7567 ;;  f               4    0        unsigned long long 
  7568 ;;  ct              3    0        unsigned char [3]
  7569 ;;  vp              2    0        PTR void 
  7570 ;;  i               2    0        int 
  7571 ;;  done            2    0        int 
  7572 ;;  cp              2    0        PTR unsigned char 
  7573 ;;  c               1    0        unsigned char 
  7574 ;; Return value:  Size  Location     Type
  7575 ;;                  2   46[BANK0 ] int 
  7576 ;; Registers used:
  7577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7578 ;; Tracked objects:
  7579 ;;		On entry : 0/0
  7580 ;;		On exit  : 0/0
  7581 ;;		Unchanged: 0/0
  7582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7583 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7584 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7585 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7586 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7587 ;;Total ram usage:       16 bytes
  7588 ;; Hardware stack levels used:    1
  7589 ;; Hardware stack levels required when called:    9
  7590 ;; This function calls:
  7591 ;;		_dtoa
  7592 ;;		_fputc
  7593 ;; This function is called by:
  7594 ;;		_vfprintf
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           
  7599                           ;psect for function _vfpfcnvrt
  7600  0D3A                     _vfpfcnvrt:
  7601                           
  7602                           ;incstack = 0
  7603                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7604                           ;vfpfcnvrt@fp stored from wreg
  7605  0D3A  0020               	movlb	0	; select bank0
  7606  0D3B  00DD               	movwf	vfpfcnvrt@fp
  7607  0D3C                     l2695:
  7608                           
  7609                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  7610  0D3C  084E               	movf	vfpfcnvrt@fmt,w
  7611  0D3D  0086               	movwf	6
  7612  0D3E  0187               	clrf	7
  7613  0D3F  3F40               	moviw [0]fsr1
  7614  0D40  00D0               	movwf	??_vfpfcnvrt
  7615  0D41  3F41               	moviw [1]fsr1
  7616  0D42  00D1               	movwf	??_vfpfcnvrt+1
  7617  0D43  0850               	movf	??_vfpfcnvrt,w
  7618  0D44  0084               	movwf	4
  7619  0D45  0851               	movf	??_vfpfcnvrt+1,w
  7620  0D46  0085               	movwf	5
  7621  0D47  0012               	moviw fsr0++
  7622  0D48  3A25               	xorlw	37
  7623  0D49  1D03               	btfss	3,2
  7624  0D4A  2D4C               	goto	u2291
  7625  0D4B  2D4D               	goto	u2290
  7626  0D4C                     u2291:
  7627  0D4C  2DF1               	goto	l2731
  7628  0D4D                     u2290:
  7629  0D4D                     l2697:
  7630                           
  7631                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  7632  0D4D  084E               	movf	vfpfcnvrt@fmt,w
  7633  0D4E  0086               	movwf	6
  7634  0D4F  0187               	clrf	7
  7635  0D50  3001               	movlw	1
  7636  0D51  0781               	addwf	1,f
  7637  0D52  3141               	addfsr 1,1
  7638  0D53  1803               	skipnc
  7639  0D54  0A81               	incf	1,f
  7640  0D55                     l2699:
  7641                           
  7642                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  7643  0D55  0021               	movlb	1	; select bank1
  7644  0D56  01CF               	clrf	_width^(0+128)
  7645  0D57  01D0               	clrf	(_width+1)^(0+128)
  7646  0D58  01D3               	clrf	_flags^(0+128)
  7647  0D59  01D4               	clrf	(_flags+1)^(0+128)
  7648  0D5A                     l2701:
  7649                           
  7650                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  7651  0D5A  30FF               	movlw	255
  7652  0D5B  00D1               	movwf	_prec^(0+128)
  7653  0D5C  30FF               	movlw	255
  7654  0D5D  00D2               	movwf	(_prec^(0+128)+1)
  7655  0D5E                     l2703:
  7656                           
  7657                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7658  0D5E  0020               	movlb	0	; select bank0
  7659  0D5F  084E               	movf	vfpfcnvrt@fmt,w
  7660  0D60  0086               	movwf	6
  7661  0D61  0187               	clrf	7
  7662  0D62  3F40               	moviw [0]fsr1
  7663  0D63  00D0               	movwf	??_vfpfcnvrt
  7664  0D64  3F41               	moviw [1]fsr1
  7665  0D65  00D1               	movwf	??_vfpfcnvrt+1
  7666  0D66  0850               	movf	??_vfpfcnvrt,w
  7667  0D67  0084               	movwf	4
  7668  0D68  0851               	movf	??_vfpfcnvrt+1,w
  7669  0D69  0085               	movwf	5
  7670  0D6A  0012               	moviw fsr0++
  7671  0D6B  3A64               	xorlw	100
  7672  0D6C  1903               	btfsc	3,2
  7673  0D6D  2D6F               	goto	u2301
  7674  0D6E  2D70               	goto	u2300
  7675  0D6F                     u2301:
  7676  0D6F  2D81               	goto	l2707
  7677  0D70                     u2300:
  7678  0D70                     l2705:
  7679  0D70  084E               	movf	vfpfcnvrt@fmt,w
  7680  0D71  0086               	movwf	6
  7681  0D72  0187               	clrf	7
  7682  0D73  3F40               	moviw [0]fsr1
  7683  0D74  00D0               	movwf	??_vfpfcnvrt
  7684  0D75  3F41               	moviw [1]fsr1
  7685  0D76  00D1               	movwf	??_vfpfcnvrt+1
  7686  0D77  0850               	movf	??_vfpfcnvrt,w
  7687  0D78  0084               	movwf	4
  7688  0D79  0851               	movf	??_vfpfcnvrt+1,w
  7689  0D7A  0085               	movwf	5
  7690  0D7B  0012               	moviw fsr0++
  7691  0D7C  3A69               	xorlw	105
  7692  0D7D  1D03               	btfss	3,2
  7693  0D7E  2D80               	goto	u2311
  7694  0D7F  2D81               	goto	u2310
  7695  0D80                     u2311:
  7696  0D80  2DBC               	goto	l2715
  7697  0D81                     u2310:
  7698  0D81                     l2707:
  7699                           
  7700                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7701  0D81  084E               	movf	vfpfcnvrt@fmt,w
  7702  0D82  0086               	movwf	6
  7703  0D83  0187               	clrf	7
  7704  0D84  3001               	movlw	1
  7705  0D85  0781               	addwf	1,f
  7706  0D86  3141               	addfsr 1,1
  7707  0D87  1803               	skipnc
  7708  0D88  0A81               	incf	1,f
  7709  0D89                     l2709:
  7710                           
  7711                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7712  0D89  084F               	movf	vfpfcnvrt@ap,w
  7713  0D8A  0086               	movwf	6
  7714  0D8B  0187               	clrf	7
  7715  0D8C  0801               	movf	1,w
  7716  0D8D  0084               	movwf	4
  7717  0D8E  0185               	clrf	5
  7718  0D8F  3002               	movlw	2
  7719  0D90  0781               	addwf	1,f
  7720  0D91  3F00               	moviw [0]fsr0
  7721  0D92  00D0               	movwf	??_vfpfcnvrt
  7722  0D93  3F01               	moviw [1]fsr0
  7723  0D94  00D1               	movwf	??_vfpfcnvrt+1
  7724  0D95  0850               	movf	??_vfpfcnvrt,w
  7725  0D96  00D5               	movwf	vfpfcnvrt@ll
  7726  0D97  0851               	movf	??_vfpfcnvrt+1,w
  7727  0D98  00D6               	movwf	vfpfcnvrt@ll+1
  7728  0D99  0D89               	rlf	9,f
  7729  0D9A  3B89               	subwfb	9,f
  7730  0D9B  0989               	comf	9,f
  7731  0D9C  00D7               	movwf	vfpfcnvrt@ll+2
  7732  0D9D  00D8               	movwf	vfpfcnvrt@ll+3
  7733  0D9E  00D9               	movwf	vfpfcnvrt@ll+4
  7734  0D9F  00DA               	movwf	vfpfcnvrt@ll+5
  7735  0DA0  00DB               	movwf	vfpfcnvrt@ll+6
  7736  0DA1  00DC               	movwf	vfpfcnvrt@ll+7
  7737  0DA2                     l2711:
  7738                           
  7739                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7740  0DA2  0855               	movf	vfpfcnvrt@ll,w
  7741  0DA3  00B0               	movwf	dtoa@d
  7742  0DA4  0856               	movf	vfpfcnvrt@ll+1,w
  7743  0DA5  00B1               	movwf	dtoa@d+1
  7744  0DA6  0857               	movf	vfpfcnvrt@ll+2,w
  7745  0DA7  00B2               	movwf	dtoa@d+2
  7746  0DA8  0858               	movf	vfpfcnvrt@ll+3,w
  7747  0DA9  00B3               	movwf	dtoa@d+3
  7748  0DAA  0859               	movf	vfpfcnvrt@ll+4,w
  7749  0DAB  00B4               	movwf	dtoa@d+4
  7750  0DAC  085A               	movf	vfpfcnvrt@ll+5,w
  7751  0DAD  00B5               	movwf	dtoa@d+5
  7752  0DAE  085B               	movf	vfpfcnvrt@ll+6,w
  7753  0DAF  00B6               	movwf	dtoa@d+6
  7754  0DB0  085C               	movf	vfpfcnvrt@ll+7,w
  7755  0DB1  00B7               	movwf	dtoa@d+7
  7756  0DB2  085D               	movf	vfpfcnvrt@fp,w
  7757  0DB3  3184  24DD  318D   	fcall	_dtoa
  7758  0DB6  0020               	movlb	0	; select bank0
  7759  0DB7  0831               	movf	?_dtoa+1,w
  7760  0DB8  00CF               	movwf	?_vfpfcnvrt+1
  7761  0DB9  0830               	movf	?_dtoa,w
  7762  0DBA  00CE               	movwf	?_vfpfcnvrt
  7763  0DBB  2E14               	goto	l1128
  7764  0DBC                     l2715:
  7765                           
  7766                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7767  0DBC  084E               	movf	vfpfcnvrt@fmt,w
  7768  0DBD  0086               	movwf	6
  7769  0DBE  0187               	clrf	7
  7770  0DBF  3F40               	moviw [0]fsr1
  7771  0DC0  00D0               	movwf	??_vfpfcnvrt
  7772  0DC1  3F41               	moviw [1]fsr1
  7773  0DC2  00D1               	movwf	??_vfpfcnvrt+1
  7774  0DC3  0850               	movf	??_vfpfcnvrt,w
  7775  0DC4  0084               	movwf	4
  7776  0DC5  0851               	movf	??_vfpfcnvrt+1,w
  7777  0DC6  0085               	movwf	5
  7778  0DC7  0012               	moviw fsr0++
  7779  0DC8  3A25               	xorlw	37
  7780  0DC9  1D03               	btfss	3,2
  7781  0DCA  2DCC               	goto	u2321
  7782  0DCB  2DCD               	goto	u2320
  7783  0DCC                     u2321:
  7784  0DCC  2DE6               	goto	l2725
  7785  0DCD                     u2320:
  7786  0DCD                     l2717:
  7787                           
  7788                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7789  0DCD  084E               	movf	vfpfcnvrt@fmt,w
  7790  0DCE  0086               	movwf	6
  7791  0DCF  0187               	clrf	7
  7792  0DD0  3001               	movlw	1
  7793  0DD1  0781               	addwf	1,f
  7794  0DD2  3141               	addfsr 1,1
  7795  0DD3  1803               	skipnc
  7796  0DD4  0A81               	incf	1,f
  7797  0DD5                     l2719:
  7798                           
  7799                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7800  0DD5  3025               	movlw	37
  7801  0DD6  00F0               	movwf	fputc@c
  7802  0DD7  3000               	movlw	0
  7803  0DD8  00F1               	movwf	fputc@c+1
  7804  0DD9  085D               	movf	vfpfcnvrt@fp,w
  7805  0DDA  00D0               	movwf	??_vfpfcnvrt
  7806  0DDB  0850               	movf	??_vfpfcnvrt,w
  7807  0DDC  00F2               	movwf	fputc@fp
  7808  0DDD  3188  20B9  318D   	fcall	_fputc
  7809  0DE0                     l2721:
  7810                           
  7811                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7812  0DE0  3001               	movlw	1
  7813  0DE1  0020               	movlb	0	; select bank0
  7814  0DE2  00CE               	movwf	?_vfpfcnvrt
  7815  0DE3  3000               	movlw	0
  7816  0DE4  00CF               	movwf	?_vfpfcnvrt+1
  7817  0DE5  2E14               	goto	l1128
  7818  0DE6                     l2725:
  7819                           
  7820                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7821  0DE6  084E               	movf	vfpfcnvrt@fmt,w
  7822  0DE7  0086               	movwf	6
  7823  0DE8  0187               	clrf	7
  7824  0DE9  3001               	movlw	1
  7825  0DEA  0781               	addwf	1,f
  7826  0DEB  3141               	addfsr 1,1
  7827  0DEC  1803               	skipnc
  7828  0DED  0A81               	incf	1,f
  7829  0DEE                     l2727:
  7830                           
  7831                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7832  0DEE  01CE               	clrf	?_vfpfcnvrt
  7833  0DEF  01CF               	clrf	?_vfpfcnvrt+1
  7834  0DF0  2E14               	goto	l1128
  7835  0DF1                     l2731:
  7836                           
  7837                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7838  0DF1  084E               	movf	vfpfcnvrt@fmt,w
  7839  0DF2  0086               	movwf	6
  7840  0DF3  0187               	clrf	7
  7841  0DF4  3F40               	moviw [0]fsr1
  7842  0DF5  00D0               	movwf	??_vfpfcnvrt
  7843  0DF6  3F41               	moviw [1]fsr1
  7844  0DF7  00D1               	movwf	??_vfpfcnvrt+1
  7845  0DF8  0850               	movf	??_vfpfcnvrt,w
  7846  0DF9  0084               	movwf	4
  7847  0DFA  0851               	movf	??_vfpfcnvrt+1,w
  7848  0DFB  0085               	movwf	5
  7849  0DFC  0800               	movf	0,w	;code access
  7850  0DFD  00D2               	movwf	??_vfpfcnvrt+2
  7851  0DFE  01D3               	clrf	??_vfpfcnvrt+3
  7852  0DFF  0852               	movf	??_vfpfcnvrt+2,w
  7853  0E00  00F0               	movwf	fputc@c
  7854  0E01  0853               	movf	??_vfpfcnvrt+3,w
  7855  0E02  00F1               	movwf	fputc@c+1
  7856  0E03  085D               	movf	vfpfcnvrt@fp,w
  7857  0E04  00D4               	movwf	??_vfpfcnvrt+4
  7858  0E05  0854               	movf	??_vfpfcnvrt+4,w
  7859  0E06  00F2               	movwf	fputc@fp
  7860  0E07  3188  20B9  318D   	fcall	_fputc
  7861  0E0A                     l2733:
  7862                           
  7863                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7864  0E0A  0020               	movlb	0	; select bank0
  7865  0E0B  084E               	movf	vfpfcnvrt@fmt,w
  7866  0E0C  0086               	movwf	6
  7867  0E0D  0187               	clrf	7
  7868  0E0E  3001               	movlw	1
  7869  0E0F  0781               	addwf	1,f
  7870  0E10  3141               	addfsr 1,1
  7871  0E11  1803               	skipnc
  7872  0E12  0A81               	incf	1,f
  7873  0E13  2DE0               	goto	l2721
  7874  0E14                     l1128:
  7875  0E14  0008               	return
  7876  0E15                     __end_of_vfpfcnvrt:
  7877                           
  7878                           	psect	text5
  7879  04DD                     __ptext5:	
  7880 ;; *************** function _dtoa *****************
  7881 ;; Defined at:
  7882 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;  fp              1    wreg     PTR struct _IO_FILE
  7885 ;;		 -> NULL(0), 
  7886 ;;  d               8   16[BANK0 ] long long 
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  7889 ;;		 -> NULL(0), 
  7890 ;;  n               8   36[BANK0 ] long long 
  7891 ;;  i               2   44[BANK0 ] int 
  7892 ;;  s               2   34[BANK0 ] int 
  7893 ;;  w               2   32[BANK0 ] int 
  7894 ;;  p               2   29[BANK0 ] int 
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  2   16[BANK0 ] int 
  7897 ;; Registers used:
  7898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7904 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7905 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7906 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7907 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7908 ;;Total ram usage:       30 bytes
  7909 ;; Hardware stack levels used:    1
  7910 ;; Hardware stack levels required when called:    8
  7911 ;; This function calls:
  7912 ;;		___aodiv
  7913 ;;		___aomod
  7914 ;;		_abs
  7915 ;;		_pad
  7916 ;; This function is called by:
  7917 ;;		_vfpfcnvrt
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921                           
  7922                           ;psect for function _dtoa
  7923  04DD                     _dtoa:
  7924                           
  7925                           ;incstack = 0
  7926                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7927                           ;dtoa@fp stored from wreg
  7928  04DD  0020               	movlb	0	; select bank0
  7929  04DE  00BF               	movwf	dtoa@fp
  7930  04DF                     l2553:
  7931                           
  7932                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7933  04DF  0830               	movf	dtoa@d,w
  7934  04E0  00C4               	movwf	dtoa@n
  7935  04E1  0831               	movf	dtoa@d+1,w
  7936  04E2  00C5               	movwf	dtoa@n+1
  7937  04E3  0832               	movf	dtoa@d+2,w
  7938  04E4  00C6               	movwf	dtoa@n+2
  7939  04E5  0833               	movf	dtoa@d+3,w
  7940  04E6  00C7               	movwf	dtoa@n+3
  7941  04E7  0834               	movf	dtoa@d+4,w
  7942  04E8  00C8               	movwf	dtoa@n+4
  7943  04E9  0835               	movf	dtoa@d+5,w
  7944  04EA  00C9               	movwf	dtoa@n+5
  7945  04EB  0836               	movf	dtoa@d+6,w
  7946  04EC  00CA               	movwf	dtoa@n+6
  7947  04ED  0837               	movf	dtoa@d+7,w
  7948  04EE  00CB               	movwf	dtoa@n+7
  7949  04EF                     l2555:
  7950                           
  7951                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7952  04EF  3044               	movlw	low dtoa@n
  7953  04F0  0086               	movwf	6
  7954  04F1  3000               	movlw	high dtoa@n
  7955  04F2  0087               	movwf	7
  7956  04F3  3F47               	moviw [7]fsr1
  7957  04F4  00B8               	movwf	??_dtoa
  7958  04F5  1BB8               	btfsc	??_dtoa,7
  7959  04F6  2CF8               	goto	u2031
  7960  04F7  2CFA               	goto	u2030
  7961  04F8                     u2031:
  7962  04F8  3001               	movlw	1
  7963  04F9  2CFB               	goto	u2040
  7964  04FA                     u2030:
  7965  04FA  3000               	movlw	0
  7966  04FB                     u2040:
  7967  04FB  0020               	movlb	0	; select bank0
  7968  04FC  00B9               	movwf	??_dtoa+1
  7969  04FD  01BA               	clrf	??_dtoa+2
  7970  04FE  0839               	movf	??_dtoa+1,w
  7971  04FF  00C2               	movwf	dtoa@s
  7972  0500  083A               	movf	??_dtoa+2,w
  7973  0501  00C3               	movwf	dtoa@s+1
  7974  0502                     l2557:
  7975                           
  7976                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7977  0502  0842               	movf	dtoa@s,w
  7978  0503  0443               	iorwf	dtoa@s+1,w
  7979  0504  1903               	btfsc	3,2
  7980  0505  2D07               	goto	u2051
  7981  0506  2D08               	goto	u2050
  7982  0507                     u2051:
  7983  0507  2D26               	goto	l1098
  7984  0508                     u2050:
  7985  0508                     l2559:
  7986                           
  7987                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7988  0508  09C4               	comf	dtoa@n,f
  7989  0509  09C5               	comf	dtoa@n+1,f
  7990  050A  09C6               	comf	dtoa@n+2,f
  7991  050B  09C7               	comf	dtoa@n+3,f
  7992  050C  09C8               	comf	dtoa@n+4,f
  7993  050D  09C9               	comf	dtoa@n+5,f
  7994  050E  09CA               	comf	dtoa@n+6,f
  7995  050F  09CB               	comf	dtoa@n+7,f
  7996  0510  0AC4               	incf	dtoa@n,f
  7997  0511  1D03               	skipz
  7998  0512  2D26               	goto	u206lld
  7999  0513  0AC5               	incf	dtoa@n+1,f
  8000  0514  1D03               	skipz
  8001  0515  2D26               	goto	u206lld
  8002  0516  0AC6               	incf	dtoa@n+2,f
  8003  0517  1D03               	skipz
  8004  0518  2D26               	goto	u206lld
  8005  0519  0AC7               	incf	dtoa@n+3,f
  8006  051A  1D03               	skipz
  8007  051B  2D26               	goto	u206lld
  8008  051C  0AC8               	incf	dtoa@n+4,f
  8009  051D  1D03               	skipz
  8010  051E  2D26               	goto	u206lld
  8011  051F  0AC9               	incf	dtoa@n+5,f
  8012  0520  1D03               	skipz
  8013  0521  2D26               	goto	u206lld
  8014  0522  0ACA               	incf	dtoa@n+6,f
  8015  0523  1D03               	skipz
  8016  0524  2D26               	goto	u206lld
  8017  0525  0ACB               	incf	dtoa@n+7,f
  8018  0526                     u206lld:
  8019  0526                     l1098:	
  8020                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 297:     }
  8021                           
  8022                           
  8023                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  8024  0526  0021               	movlb	1	; select bank1
  8025  0527  1BD2               	btfsc	(_prec+1)^(0+128),7
  8026  0528  2D2A               	goto	u2071
  8027  0529  2D2B               	goto	u2070
  8028  052A                     u2071:
  8029  052A  2D2F               	goto	l1099
  8030  052B                     u2070:
  8031  052B                     l2561:
  8032                           
  8033                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  8034  052B  30FD               	movlw	253
  8035  052C  05D3               	andwf	_flags^(0+128),f
  8036  052D  30FF               	movlw	255
  8037  052E  05D4               	andwf	(_flags+1)^(0+128),f
  8038  052F                     l1099:	
  8039                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 302:     }
  8040                           
  8041                           
  8042                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  8043  052F  0852               	movf	(_prec+1)^(0+128),w
  8044  0530  3A80               	xorlw	128
  8045  0531  0020               	movlb	0	; select bank0
  8046  0532  00B8               	movwf	??_dtoa
  8047  0533  3080               	movlw	128
  8048  0534  0238               	subwf	??_dtoa,w
  8049  0535  1D03               	skipz
  8050  0536  2D3A               	goto	u2085
  8051  0537  3001               	movlw	1
  8052  0538  0021               	movlb	1	; select bank1
  8053  0539  0251               	subwf	_prec^(0+128),w
  8054  053A                     u2085:
  8055  053A  1803               	skipnc
  8056  053B  2D3D               	goto	u2081
  8057  053C  2D3E               	goto	u2080
  8058  053D                     u2081:
  8059  053D  2D44               	goto	l2565
  8060  053E                     u2080:
  8061  053E                     l2563:
  8062  053E  3001               	movlw	1
  8063  053F  0020               	movlb	0	; select bank0
  8064  0540  00BD               	movwf	dtoa@p
  8065  0541  3000               	movlw	0
  8066  0542  00BE               	movwf	dtoa@p+1
  8067  0543  2D4C               	goto	l1103
  8068  0544                     l2565:
  8069  0544  0021               	movlb	1	; select bank1
  8070  0545  0852               	movf	(_prec+1)^(0+128),w
  8071  0546  0020               	movlb	0	; select bank0
  8072  0547  00BE               	movwf	dtoa@p+1
  8073  0548  0021               	movlb	1	; select bank1
  8074  0549  0851               	movf	_prec^(0+128),w
  8075  054A  0020               	movlb	0	; select bank0
  8076  054B  00BD               	movwf	dtoa@p
  8077  054C                     l1103:
  8078                           
  8079                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  8080  054C  0021               	movlb	1	; select bank1
  8081  054D  0850               	movf	(_width+1)^(0+128),w
  8082  054E  0020               	movlb	0	; select bank0
  8083  054F  00C1               	movwf	dtoa@w+1
  8084  0550  0021               	movlb	1	; select bank1
  8085  0551  084F               	movf	_width^(0+128),w
  8086  0552  0020               	movlb	0	; select bank0
  8087  0553  00C0               	movwf	dtoa@w
  8088  0554                     l2567:
  8089                           
  8090                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  8091  0554  0842               	movf	dtoa@s,w
  8092  0555  0443               	iorwf	dtoa@s+1,w
  8093  0556  1D03               	btfss	3,2
  8094  0557  2D59               	goto	u2091
  8095  0558  2D5A               	goto	u2090
  8096  0559                     u2091:
  8097  0559  2D5F               	goto	l2571
  8098  055A                     u2090:
  8099  055A                     l2569:
  8100  055A  0021               	movlb	1	; select bank1
  8101  055B  1D53               	btfss	_flags^(0+128),2
  8102  055C  2D5E               	goto	u2101
  8103  055D  2D5F               	goto	u2100
  8104  055E                     u2101:
  8105  055E  2D64               	goto	l1104
  8106  055F                     u2100:
  8107  055F                     l2571:
  8108                           
  8109                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  8110  055F  30FF               	movlw	255
  8111  0560  0020               	movlb	0	; select bank0
  8112  0561  07C0               	addwf	dtoa@w,f
  8113  0562  30FF               	movlw	255
  8114  0563  3DC1               	addwfc	dtoa@w+1,f
  8115  0564                     l1104:	
  8116                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 307:     }
  8117                           
  8118                           
  8119                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  8120  0564  301F               	movlw	31
  8121  0565  0020               	movlb	0	; select bank0
  8122  0566  00CC               	movwf	dtoa@i
  8123  0567  3000               	movlw	0
  8124  0568  00CD               	movwf	dtoa@i+1
  8125  0569                     l2573:
  8126                           
  8127                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  8128  0569  0024               	movlb	4	; select bank4
  8129  056A  01E1               	clrf	(_dbuf^(0+512)+31)
  8130                           
  8131                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8132  056B  2DD5               	goto	l1107
  8133  056C                     l2575:
  8134                           
  8135                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  8136  056C  30FF               	movlw	255
  8137  056D  0020               	movlb	0	; select bank0
  8138  056E  07CC               	addwf	dtoa@i,f
  8139  056F  30FF               	movlw	255
  8140  0570  3DCD               	addwfc	dtoa@i+1,f
  8141  0571                     l2577:
  8142                           
  8143                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8144  0571  300A               	movlw	10
  8145  0572  00A0               	movwf	___aomod@divisor
  8146  0573  01A1               	clrf	___aomod@divisor+1
  8147  0574  01A2               	clrf	___aomod@divisor+2
  8148  0575  01A3               	clrf	___aomod@divisor+3
  8149  0576  01A4               	clrf	___aomod@divisor+4
  8150  0577  01A5               	clrf	___aomod@divisor+5
  8151  0578  01A6               	clrf	___aomod@divisor+6
  8152  0579  01A7               	clrf	___aomod@divisor+7
  8153  057A  0844               	movf	dtoa@n,w
  8154  057B  00A8               	movwf	___aomod@dividend
  8155  057C  0845               	movf	dtoa@n+1,w
  8156  057D  00A9               	movwf	___aomod@dividend+1
  8157  057E  0846               	movf	dtoa@n+2,w
  8158  057F  00AA               	movwf	___aomod@dividend+2
  8159  0580  0847               	movf	dtoa@n+3,w
  8160  0581  00AB               	movwf	___aomod@dividend+3
  8161  0582  0848               	movf	dtoa@n+4,w
  8162  0583  00AC               	movwf	___aomod@dividend+4
  8163  0584  0849               	movf	dtoa@n+5,w
  8164  0585  00AD               	movwf	___aomod@dividend+5
  8165  0586  084A               	movf	dtoa@n+6,w
  8166  0587  00AE               	movwf	___aomod@dividend+6
  8167  0588  084B               	movf	dtoa@n+7,w
  8168  0589  00AF               	movwf	___aomod@dividend+7
  8169  058A  318E  2615  3184   	fcall	___aomod
  8170  058D  0020               	movlb	0	; select bank0
  8171  058E  0821               	movf	?___aomod+1,w
  8172  058F  00F4               	movwf	abs@a+1
  8173  0590  0820               	movf	?___aomod,w
  8174  0591  00F3               	movwf	abs@a
  8175  0592  3196  26DC  3184   	fcall	_abs
  8176  0595  0873               	movf	?_abs,w
  8177  0596  3E30               	addlw	48
  8178  0597  0020               	movlb	0	; select bank0
  8179  0598  00B8               	movwf	??_dtoa
  8180  0599  084C               	movf	dtoa@i,w
  8181  059A  3E42               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8182  059B  0086               	movwf	6
  8183  059C  3002               	movlw	2	; select bank4/5
  8184  059D  0087               	movwf	7
  8185  059E  0838               	movf	??_dtoa,w
  8186  059F  0081               	movwf	1
  8187  05A0                     l2579:
  8188                           
  8189                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  8190  05A0  30FF               	movlw	255
  8191  05A1  07BD               	addwf	dtoa@p,f
  8192  05A2  30FF               	movlw	255
  8193  05A3  3DBE               	addwfc	dtoa@p+1,f
  8194  05A4                     l2581:
  8195                           
  8196                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  8197  05A4  30FF               	movlw	255
  8198  05A5  07C0               	addwf	dtoa@w,f
  8199  05A6  30FF               	movlw	255
  8200  05A7  3DC1               	addwfc	dtoa@w+1,f
  8201  05A8                     l2583:
  8202                           
  8203                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8204  05A8  300A               	movlw	10
  8205  05A9  00A0               	movwf	___aodiv@divisor
  8206  05AA  01A1               	clrf	___aodiv@divisor+1
  8207  05AB  01A2               	clrf	___aodiv@divisor+2
  8208  05AC  01A3               	clrf	___aodiv@divisor+3
  8209  05AD  01A4               	clrf	___aodiv@divisor+4
  8210  05AE  01A5               	clrf	___aodiv@divisor+5
  8211  05AF  01A6               	clrf	___aodiv@divisor+6
  8212  05B0  01A7               	clrf	___aodiv@divisor+7
  8213  05B1  0844               	movf	dtoa@n,w
  8214  05B2  00A8               	movwf	___aodiv@dividend
  8215  05B3  0845               	movf	dtoa@n+1,w
  8216  05B4  00A9               	movwf	___aodiv@dividend+1
  8217  05B5  0846               	movf	dtoa@n+2,w
  8218  05B6  00AA               	movwf	___aodiv@dividend+2
  8219  05B7  0847               	movf	dtoa@n+3,w
  8220  05B8  00AB               	movwf	___aodiv@dividend+3
  8221  05B9  0848               	movf	dtoa@n+4,w
  8222  05BA  00AC               	movwf	___aodiv@dividend+4
  8223  05BB  0849               	movf	dtoa@n+5,w
  8224  05BC  00AD               	movwf	___aodiv@dividend+5
  8225  05BD  084A               	movf	dtoa@n+6,w
  8226  05BE  00AE               	movwf	___aodiv@dividend+6
  8227  05BF  084B               	movf	dtoa@n+7,w
  8228  05C0  00AF               	movwf	___aodiv@dividend+7
  8229  05C1  318E  26FF  3184   	fcall	___aodiv
  8230  05C4  0020               	movlb	0	; select bank0
  8231  05C5  0820               	movf	?___aodiv,w
  8232  05C6  00C4               	movwf	dtoa@n
  8233  05C7  0821               	movf	?___aodiv+1,w
  8234  05C8  00C5               	movwf	dtoa@n+1
  8235  05C9  0822               	movf	?___aodiv+2,w
  8236  05CA  00C6               	movwf	dtoa@n+2
  8237  05CB  0823               	movf	?___aodiv+3,w
  8238  05CC  00C7               	movwf	dtoa@n+3
  8239  05CD  0824               	movf	?___aodiv+4,w
  8240  05CE  00C8               	movwf	dtoa@n+4
  8241  05CF  0825               	movf	?___aodiv+5,w
  8242  05D0  00C9               	movwf	dtoa@n+5
  8243  05D1  0826               	movf	?___aodiv+6,w
  8244  05D2  00CA               	movwf	dtoa@n+6
  8245  05D3  0827               	movf	?___aodiv+7,w
  8246  05D4  00CB               	movwf	dtoa@n+7
  8247  05D5                     l1107:	
  8248                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 318:     }
  8249                           
  8250                           
  8251                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8252  05D5  0020               	movlb	0	; select bank0
  8253  05D6  084D               	movf	dtoa@i+1,w
  8254  05D7  3A80               	xorlw	128
  8255  05D8  00B8               	movwf	??_dtoa
  8256  05D9  3080               	movlw	128
  8257  05DA  0238               	subwf	??_dtoa,w
  8258  05DB  1D03               	skipz
  8259  05DC  2DDF               	goto	u2115
  8260  05DD  3001               	movlw	1
  8261  05DE  024C               	subwf	dtoa@i,w
  8262  05DF                     u2115:
  8263  05DF  1C03               	skipc
  8264  05E0  2DE2               	goto	u2111
  8265  05E1  2DE3               	goto	u2110
  8266  05E2                     u2111:
  8267  05E2  2E10               	goto	l2593
  8268  05E3                     u2110:
  8269  05E3                     l2585:
  8270  05E3  0020               	movlb	0	; select bank0
  8271  05E4  0844               	movf	dtoa@n,w
  8272  05E5  0445               	iorwf	dtoa@n+1,w
  8273  05E6  0446               	iorwf	dtoa@n+2,w
  8274  05E7  0447               	iorwf	dtoa@n+3,w
  8275  05E8  0448               	iorwf	dtoa@n+4,w
  8276  05E9  0449               	iorwf	dtoa@n+5,w
  8277  05EA  044A               	iorwf	dtoa@n+6,w
  8278  05EB  044B               	iorwf	dtoa@n+7,w
  8279  05EC  1D03               	skipz
  8280  05ED  2DEF               	goto	u2121
  8281  05EE  2DF0               	goto	u2120
  8282  05EF                     u2121:
  8283  05EF  2D6C               	goto	l2575
  8284  05F0                     u2120:
  8285  05F0                     l2587:
  8286  05F0  083E               	movf	dtoa@p+1,w
  8287  05F1  3A80               	xorlw	128
  8288  05F2  00B8               	movwf	??_dtoa
  8289  05F3  3080               	movlw	128
  8290  05F4  0238               	subwf	??_dtoa,w
  8291  05F5  1D03               	skipz
  8292  05F6  2DF9               	goto	u2135
  8293  05F7  3001               	movlw	1
  8294  05F8  023D               	subwf	dtoa@p,w
  8295  05F9                     u2135:
  8296  05F9  1803               	skipnc
  8297  05FA  2DFC               	goto	u2131
  8298  05FB  2DFD               	goto	u2130
  8299  05FC                     u2131:
  8300  05FC  2D6C               	goto	l2575
  8301  05FD                     u2130:
  8302  05FD                     l2589:
  8303  05FD  0020               	movlb	0	; select bank0
  8304  05FE  0841               	movf	dtoa@w+1,w
  8305  05FF  3A80               	xorlw	128
  8306  0600  00B8               	movwf	??_dtoa
  8307  0601  3080               	movlw	128
  8308  0602  0238               	subwf	??_dtoa,w
  8309  0603  1D03               	skipz
  8310  0604  2E07               	goto	u2145
  8311  0605  3001               	movlw	1
  8312  0606  0240               	subwf	dtoa@w,w
  8313  0607                     u2145:
  8314  0607  1C03               	skipc
  8315  0608  2E0A               	goto	u2141
  8316  0609  2E0B               	goto	u2140
  8317  060A                     u2141:
  8318  060A  2E10               	goto	l2593
  8319  060B                     u2140:
  8320  060B                     l2591:
  8321  060B  0021               	movlb	1	; select bank1
  8322  060C  18D3               	btfsc	_flags^(0+128),1
  8323  060D  2E0F               	goto	u2151
  8324  060E  2E10               	goto	u2150
  8325  060F                     u2151:
  8326  060F  2D6C               	goto	l2575
  8327  0610                     u2150:
  8328  0610                     l2593:
  8329                           
  8330                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8331  0610  0020               	movlb	0	; select bank0
  8332  0611  0842               	movf	dtoa@s,w
  8333  0612  0443               	iorwf	dtoa@s+1,w
  8334  0613  1D03               	btfss	3,2
  8335  0614  2E16               	goto	u2161
  8336  0615  2E17               	goto	u2160
  8337  0616                     u2161:
  8338  0616  2E1C               	goto	l2597
  8339  0617                     u2160:
  8340  0617                     l2595:
  8341  0617  0021               	movlb	1	; select bank1
  8342  0618  1D53               	btfss	_flags^(0+128),2
  8343  0619  2E1B               	goto	u2171
  8344  061A  2E1C               	goto	u2170
  8345  061B                     u2171:
  8346  061B  2E39               	goto	l2607
  8347  061C                     u2170:
  8348  061C                     l2597:
  8349                           
  8350                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  8351  061C  30FF               	movlw	255
  8352  061D  0020               	movlb	0	; select bank0
  8353  061E  07CC               	addwf	dtoa@i,f
  8354  061F  30FF               	movlw	255
  8355  0620  3DCD               	addwfc	dtoa@i+1,f
  8356  0621                     l2599:
  8357                           
  8358                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8359  0621  0842               	movf	dtoa@s,w
  8360  0622  0443               	iorwf	dtoa@s+1,w
  8361  0623  1D03               	btfss	3,2
  8362  0624  2E26               	goto	u2181
  8363  0625  2E27               	goto	u2180
  8364  0626                     u2181:
  8365  0626  2E2C               	goto	l2603
  8366  0627                     u2180:
  8367  0627                     l2601:
  8368  0627  302B               	movlw	43
  8369  0628  00BB               	movwf	_dtoa$1489
  8370  0629  3000               	movlw	0
  8371  062A  00BC               	movwf	_dtoa$1489+1
  8372  062B  2E30               	goto	l2605
  8373  062C                     l2603:
  8374  062C  302D               	movlw	45
  8375  062D  00BB               	movwf	_dtoa$1489
  8376  062E  3000               	movlw	0
  8377  062F  00BC               	movwf	_dtoa$1489+1
  8378  0630                     l2605:
  8379  0630  083B               	movf	_dtoa$1489,w
  8380  0631  00B8               	movwf	??_dtoa
  8381  0632  084C               	movf	dtoa@i,w
  8382  0633  3E42               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8383  0634  0086               	movwf	6
  8384  0635  3002               	movlw	2	; select bank4/5
  8385  0636  0087               	movwf	7
  8386  0637  0838               	movf	??_dtoa,w
  8387  0638  0081               	movwf	1
  8388  0639                     l2607:
  8389                           
  8390                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8391  0639  0020               	movlb	0	; select bank0
  8392  063A  084C               	movf	dtoa@i,w
  8393  063B  3E42               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8394  063C  00B8               	movwf	??_dtoa
  8395  063D  0838               	movf	??_dtoa,w
  8396  063E  00A4               	movwf	pad@buf
  8397  063F  0841               	movf	dtoa@w+1,w
  8398  0640  00A6               	movwf	pad@p+1
  8399  0641  0840               	movf	dtoa@w,w
  8400  0642  00A5               	movwf	pad@p
  8401  0643  083F               	movf	dtoa@fp,w
  8402  0644  318A  222C  3184   	fcall	_pad
  8403  0647  0020               	movlb	0	; select bank0
  8404  0648  0825               	movf	?_pad+1,w
  8405  0649  00B1               	movwf	?_dtoa+1
  8406  064A  0824               	movf	?_pad,w
  8407  064B  00B0               	movwf	?_dtoa
  8408  064C                     l1121:
  8409  064C  0008               	return
  8410  064D                     __end_of_dtoa:
  8411                           
  8412                           	psect	text6
  8413  0A2C                     __ptext6:	
  8414 ;; *************** function _pad *****************
  8415 ;; Defined at:
  8416 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  8417 ;; Parameters:    Size  Location     Type
  8418 ;;  fp              1    wreg     PTR struct _IO_FILE
  8419 ;;		 -> NULL(0), 
  8420 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  8421 ;;		 -> dbuf(32), 
  8422 ;;  p               2    5[BANK0 ] int 
  8423 ;; Auto vars:     Size  Location     Type
  8424 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  8425 ;;		 -> NULL(0), 
  8426 ;;  w               2    9[BANK0 ] int 
  8427 ;;  i               2    7[BANK0 ] int 
  8428 ;; Return value:  Size  Location     Type
  8429 ;;                  2    4[BANK0 ] int 
  8430 ;; Registers used:
  8431 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8432 ;; Tracked objects:
  8433 ;;		On entry : 0/0
  8434 ;;		On exit  : 0/0
  8435 ;;		Unchanged: 0/0
  8436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8437 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8438 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8440 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8441 ;;Total ram usage:        9 bytes
  8442 ;; Hardware stack levels used:    1
  8443 ;; Hardware stack levels required when called:    7
  8444 ;; This function calls:
  8445 ;;		_fputc
  8446 ;;		_fputs
  8447 ;;		_strlen
  8448 ;; This function is called by:
  8449 ;;		_dtoa
  8450 ;; This function uses a non-reentrant model
  8451 ;;
  8452                           
  8453                           
  8454                           ;psect for function _pad
  8455  0A2C                     _pad:
  8456                           
  8457                           ;incstack = 0
  8458                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8459                           ;pad@fp stored from wreg
  8460  0A2C  0020               	movlb	0	; select bank0
  8461  0A2D  00AB               	movwf	pad@fp
  8462  0A2E                     l2525:
  8463                           
  8464                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8465  0A2E  0021               	movlb	1	; select bank1
  8466  0A2F  1C53               	btfss	_flags^(0+128),0
  8467  0A30  2A32               	goto	u1971
  8468  0A31  2A33               	goto	u1970
  8469  0A32                     u1971:
  8470  0A32  2A3C               	goto	l2529
  8471  0A33                     u1970:
  8472  0A33                     l2527:
  8473                           
  8474                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8475  0A33  0020               	movlb	0	; select bank0
  8476  0A34  082B               	movf	pad@fp,w
  8477  0A35  00FC               	movwf	??_pad
  8478  0A36  087C               	movf	??_pad,w
  8479  0A37  00F8               	movwf	fputs@fp
  8480  0A38  0824               	movf	pad@buf,w
  8481  0A39  3197  27AB  318A   	fcall	_fputs
  8482  0A3C                     l2529:
  8483                           
  8484                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8485  0A3C  0020               	movlb	0	; select bank0
  8486  0A3D  1BA6               	btfsc	pad@p+1,7
  8487  0A3E  2A40               	goto	u1981
  8488  0A3F  2A41               	goto	u1980
  8489  0A40                     u1981:
  8490  0A40  2A46               	goto	l2533
  8491  0A41                     u1980:
  8492  0A41                     l2531:
  8493  0A41  0826               	movf	pad@p+1,w
  8494  0A42  00AA               	movwf	pad@w+1
  8495  0A43  0825               	movf	pad@p,w
  8496  0A44  00A9               	movwf	pad@w
  8497  0A45  2A48               	goto	l1090
  8498  0A46                     l2533:
  8499  0A46  01A9               	clrf	pad@w
  8500  0A47  01AA               	clrf	pad@w+1
  8501  0A48                     l1090:
  8502                           
  8503                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8504  0A48  01A7               	clrf	pad@i
  8505  0A49  01A8               	clrf	pad@i+1
  8506                           
  8507                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8508  0A4A  2A5C               	goto	l2539
  8509  0A4B                     l2535:
  8510                           
  8511                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8512  0A4B  3020               	movlw	32
  8513  0A4C  00F0               	movwf	fputc@c
  8514  0A4D  3000               	movlw	0
  8515  0A4E  00F1               	movwf	fputc@c+1
  8516  0A4F  0020               	movlb	0	; select bank0
  8517  0A50  082B               	movf	pad@fp,w
  8518  0A51  00FC               	movwf	??_pad
  8519  0A52  087C               	movf	??_pad,w
  8520  0A53  00F2               	movwf	fputc@fp
  8521  0A54  3188  20B9  318A   	fcall	_fputc
  8522  0A57                     l2537:
  8523                           
  8524                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8525  0A57  3001               	movlw	1
  8526  0A58  0020               	movlb	0	; select bank0
  8527  0A59  07A7               	addwf	pad@i,f
  8528  0A5A  3000               	movlw	0
  8529  0A5B  3DA8               	addwfc	pad@i+1,f
  8530  0A5C                     l2539:
  8531                           
  8532                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8533  0A5C  0828               	movf	pad@i+1,w
  8534  0A5D  3A80               	xorlw	128
  8535  0A5E  00FC               	movwf	??_pad
  8536  0A5F  082A               	movf	pad@w+1,w
  8537  0A60  3A80               	xorlw	128
  8538  0A61  027C               	subwf	??_pad,w
  8539  0A62  1D03               	skipz
  8540  0A63  2A66               	goto	u1995
  8541  0A64  0829               	movf	pad@w,w
  8542  0A65  0227               	subwf	pad@i,w
  8543  0A66                     u1995:
  8544  0A66  1C03               	skipc
  8545  0A67  2A69               	goto	u1991
  8546  0A68  2A6A               	goto	u1990
  8547  0A69                     u1991:
  8548  0A69  2A4B               	goto	l2535
  8549  0A6A                     u1990:
  8550  0A6A                     l1093:
  8551                           
  8552                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8553  0A6A  0021               	movlb	1	; select bank1
  8554  0A6B  1853               	btfsc	_flags^(0+128),0
  8555  0A6C  2A6E               	goto	u2001
  8556  0A6D  2A6F               	goto	u2000
  8557  0A6E                     u2001:
  8558  0A6E  2A78               	goto	l1094
  8559  0A6F                     u2000:
  8560  0A6F                     l2541:
  8561                           
  8562                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8563  0A6F  0020               	movlb	0	; select bank0
  8564  0A70  082B               	movf	pad@fp,w
  8565  0A71  00FC               	movwf	??_pad
  8566  0A72  087C               	movf	??_pad,w
  8567  0A73  00F8               	movwf	fputs@fp
  8568  0A74  0824               	movf	pad@buf,w
  8569  0A75  3197  27AB  318A   	fcall	_fputs
  8570  0A78                     l1094:	
  8571                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 92:     }
  8572                           
  8573                           
  8574                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8575  0A78  0020               	movlb	0	; select bank0
  8576  0A79  0824               	movf	pad@buf,w
  8577  0A7A  3196  26F6  318A   	fcall	_strlen
  8578  0A7D  0020               	movlb	0	; select bank0
  8579  0A7E  0829               	movf	pad@w,w
  8580  0A7F  0770               	addwf	?_strlen,w
  8581  0A80  00A4               	movwf	?_pad
  8582  0A81  082A               	movf	pad@w+1,w
  8583  0A82  3D71               	addwfc	?_strlen+1,w
  8584  0A83  00A5               	movwf	?_pad+1
  8585  0A84                     l1095:
  8586  0A84  0008               	return
  8587  0A85                     __end_of_pad:
  8588                           
  8589                           	psect	text7
  8590  16F6                     __ptext7:	
  8591 ;; *************** function _strlen *****************
  8592 ;; Defined at:
  8593 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;  s               1    wreg     PTR const unsigned char 
  8596 ;;		 -> dbuf(32), 
  8597 ;; Auto vars:     Size  Location     Type
  8598 ;;  s               1    4[COMMON] PTR const unsigned char 
  8599 ;;		 -> dbuf(32), 
  8600 ;;  a               1    3[COMMON] PTR const unsigned char 
  8601 ;;		 -> dbuf(32), 
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  2    0[COMMON] unsigned int 
  8604 ;; Registers used:
  8605 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8612 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8613 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8614 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8615 ;;Total ram usage:        5 bytes
  8616 ;; Hardware stack levels used:    1
  8617 ;; Hardware stack levels required when called:    4
  8618 ;; This function calls:
  8619 ;;		Nothing
  8620 ;; This function is called by:
  8621 ;;		_pad
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           
  8626                           ;psect for function _strlen
  8627  16F6                     _strlen:
  8628                           
  8629                           ;incstack = 0
  8630                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  8631                           ;strlen@s stored from wreg
  8632  16F6  00F4               	movwf	strlen@s
  8633  16F7                     l2447:
  8634  16F7  0874               	movf	strlen@s,w
  8635  16F8  00F2               	movwf	??_strlen
  8636  16F9  0872               	movf	??_strlen,w
  8637  16FA  00F3               	movwf	strlen@a
  8638  16FB  2F00               	goto	l2451
  8639  16FC                     l2449:
  8640  16FC  3001               	movlw	1
  8641  16FD  00F2               	movwf	??_strlen
  8642  16FE  0872               	movf	??_strlen,w
  8643  16FF  07F4               	addwf	strlen@s,f
  8644  1700                     l2451:
  8645  1700  0874               	movf	strlen@s,w
  8646  1701  0086               	movwf	6
  8647  1702  3002               	movlw	2	; select bank4/5
  8648  1703  0087               	movwf	7
  8649  1704  0801               	movf	1,w
  8650  1705  1D03               	btfss	3,2
  8651  1706  2F08               	goto	u1751
  8652  1707  2F09               	goto	u1750
  8653  1708                     u1751:
  8654  1708  2EFC               	goto	l2449
  8655  1709                     u1750:
  8656  1709                     l2453:
  8657  1709  0873               	movf	strlen@a,w
  8658  170A  0274               	subwf	strlen@s,w
  8659  170B  00F0               	movwf	?_strlen
  8660  170C  01F1               	clrf	?_strlen+1
  8661  170D  1BF0               	btfsc	?_strlen,7
  8662  170E  03F1               	decf	?_strlen+1,f
  8663  170F                     l1171:
  8664  170F  0008               	return
  8665  1710                     __end_of_strlen:
  8666                           
  8667                           	psect	text8
  8668  17AB                     __ptext8:	
  8669 ;; *************** function _fputs *****************
  8670 ;; Defined at:
  8671 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;  s               1    wreg     PTR const unsigned char 
  8674 ;;		 -> dbuf(32), 
  8675 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  8676 ;;		 -> NULL(0), 
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  8679 ;;		 -> dbuf(32), 
  8680 ;;  i               2    1[BANK0 ] int 
  8681 ;;  c               1    0[BANK0 ] unsigned char 
  8682 ;; Return value:  Size  Location     Type
  8683 ;;                  2    8[COMMON] int 
  8684 ;; Registers used:
  8685 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8686 ;; Tracked objects:
  8687 ;;		On entry : 0/0
  8688 ;;		On exit  : 0/0
  8689 ;;		Unchanged: 0/0
  8690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8691 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8692 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8693 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8694 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8695 ;;Total ram usage:        8 bytes
  8696 ;; Hardware stack levels used:    1
  8697 ;; Hardware stack levels required when called:    6
  8698 ;; This function calls:
  8699 ;;		_fputc
  8700 ;; This function is called by:
  8701 ;;		_pad
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705                           
  8706                           ;psect for function _fputs
  8707  17AB                     _fputs:
  8708                           
  8709                           ;incstack = 0
  8710                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8711                           ;fputs@s stored from wreg
  8712  17AB  0020               	movlb	0	; select bank0
  8713  17AC  00A3               	movwf	fputs@s
  8714  17AD                     l2439:
  8715  17AD  01A1               	clrf	fputs@i
  8716  17AE  01A2               	clrf	fputs@i+1
  8717  17AF  2FC3               	goto	l2445
  8718  17B0                     l2441:
  8719  17B0  0820               	movf	fputs@c,w
  8720  17B1  00F9               	movwf	??_fputs
  8721  17B2  01FA               	clrf	??_fputs+1
  8722  17B3  0879               	movf	??_fputs,w
  8723  17B4  00F0               	movwf	fputc@c
  8724  17B5  087A               	movf	??_fputs+1,w
  8725  17B6  00F1               	movwf	fputc@c+1
  8726  17B7  0878               	movf	fputs@fp,w
  8727  17B8  00FB               	movwf	??_fputs+2
  8728  17B9  087B               	movf	??_fputs+2,w
  8729  17BA  00F2               	movwf	fputc@fp
  8730  17BB  3188  20B9  3197   	fcall	_fputc
  8731  17BE                     l2443:
  8732  17BE  3001               	movlw	1
  8733  17BF  0020               	movlb	0	; select bank0
  8734  17C0  07A1               	addwf	fputs@i,f
  8735  17C1  3000               	movlw	0
  8736  17C2  3DA2               	addwfc	fputs@i+1,f
  8737  17C3                     l2445:
  8738  17C3  0821               	movf	fputs@i,w
  8739  17C4  0723               	addwf	fputs@s,w
  8740  17C5  00F9               	movwf	??_fputs
  8741  17C6  0879               	movf	??_fputs,w
  8742  17C7  0086               	movwf	6
  8743  17C8  3002               	movlw	2	; select bank4/5
  8744  17C9  0087               	movwf	7
  8745  17CA  0801               	movf	1,w
  8746  17CB  00FA               	movwf	??_fputs+1
  8747  17CC  087A               	movf	??_fputs+1,w
  8748  17CD  00A0               	movwf	fputs@c
  8749  17CE  0820               	movf	fputs@c,w
  8750  17CF  1D03               	btfss	3,2
  8751  17D0  2FD2               	goto	u1741
  8752  17D1  2FD3               	goto	u1740
  8753  17D2                     u1741:
  8754  17D2  2FB0               	goto	l2441
  8755  17D3                     u1740:
  8756  17D3                     l1162:
  8757  17D3  0008               	return
  8758  17D4                     __end_of_fputs:
  8759                           
  8760                           	psect	text9
  8761  08B9                     __ptext9:	
  8762 ;; *************** function _fputc *****************
  8763 ;; Defined at:
  8764 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;  c               2    0[COMMON] int 
  8767 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  8768 ;;		 -> NULL(0), 
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;		None
  8771 ;; Return value:  Size  Location     Type
  8772 ;;                  2    0[COMMON] int 
  8773 ;; Registers used:
  8774 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8780 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8782 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8783 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8784 ;;Total ram usage:        8 bytes
  8785 ;; Hardware stack levels used:    1
  8786 ;; Hardware stack levels required when called:    5
  8787 ;; This function calls:
  8788 ;;		_putch
  8789 ;; This function is called by:
  8790 ;;		_pad
  8791 ;;		_vfpfcnvrt
  8792 ;;		_fputs
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           
  8797                           ;psect for function _fputc
  8798  08B9                     _fputc:
  8799  08B9                     l2425:	
  8800                           ;incstack = 0
  8801                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8802                           
  8803  08B9  0872               	movf	fputc@fp,w
  8804  08BA  1903               	btfsc	3,2
  8805  08BB  28BD               	goto	u1701
  8806  08BC  28BE               	goto	u1700
  8807  08BD                     u1701:
  8808  08BD  28C3               	goto	l2429
  8809  08BE                     u1700:
  8810  08BE                     l2427:
  8811  08BE  0872               	movf	fputc@fp,w
  8812  08BF  1D03               	btfss	3,2
  8813  08C0  28C2               	goto	u1711
  8814  08C1  28C3               	goto	u1710
  8815  08C2                     u1711:
  8816  08C2  28C8               	goto	l2431
  8817  08C3                     u1710:
  8818  08C3                     l2429:
  8819  08C3  0870               	movf	fputc@c,w
  8820  08C4  3180  2003  3188   	fcall	_putch
  8821  08C7  28F7               	goto	l1154
  8822  08C8                     l2431:
  8823  08C8  0872               	movf	fputc@fp,w
  8824  08C9  3E03               	addlw	3
  8825  08CA  0086               	movwf	6
  8826  08CB  0187               	clrf	7
  8827  08CC  0016               	moviw fsr1++
  8828  08CD  0401               	iorwf	1,w
  8829  08CE  1903               	btfsc	3,2
  8830  08CF  28D1               	goto	u1721
  8831  08D0  28D2               	goto	u1720
  8832  08D1                     u1721:
  8833  08D1  28EF               	goto	l2435
  8834  08D2                     u1720:
  8835  08D2                     l2433:
  8836  08D2  0872               	movf	fputc@fp,w
  8837  08D3  3E03               	addlw	3
  8838  08D4  0086               	movwf	6
  8839  08D5  0187               	clrf	7
  8840  08D6  3F40               	moviw [0]fsr1
  8841  08D7  00F3               	movwf	??_fputc
  8842  08D8  3F41               	moviw [1]fsr1
  8843  08D9  00F4               	movwf	??_fputc+1
  8844  08DA  0A72               	incf	fputc@fp,w
  8845  08DB  0086               	movwf	6
  8846  08DC  0187               	clrf	7
  8847  08DD  3F40               	moviw [0]fsr1
  8848  08DE  00F5               	movwf	??_fputc+2
  8849  08DF  3F41               	moviw [1]fsr1
  8850  08E0  00F6               	movwf	??_fputc+3
  8851  08E1  0876               	movf	??_fputc+3,w
  8852  08E2  3A80               	xorlw	128
  8853  08E3  00F7               	movwf	??_fputc+4
  8854  08E4  0874               	movf	??_fputc+1,w
  8855  08E5  3A80               	xorlw	128
  8856  08E6  0277               	subwf	??_fputc+4,w
  8857  08E7  1D03               	skipz
  8858  08E8  28EB               	goto	u1735
  8859  08E9  0873               	movf	??_fputc,w
  8860  08EA  0275               	subwf	??_fputc+2,w
  8861  08EB                     u1735:
  8862  08EB  1803               	skipnc
  8863  08EC  28EE               	goto	u1731
  8864  08ED  28EF               	goto	u1730
  8865  08EE                     u1731:
  8866  08EE  28F7               	goto	l1154
  8867  08EF                     u1730:
  8868  08EF                     l2435:
  8869  08EF  0A72               	incf	fputc@fp,w
  8870  08F0  0086               	movwf	6
  8871  08F1  0187               	clrf	7
  8872  08F2  3001               	movlw	1
  8873  08F3  0781               	addwf	1,f
  8874  08F4  3141               	addfsr 1,1
  8875  08F5  1803               	skipnc
  8876  08F6  0A81               	incf	1,f
  8877  08F7                     l1154:
  8878  08F7  0008               	return
  8879  08F8                     __end_of_fputc:
  8880                           
  8881                           	psect	text10
  8882  0003                     __ptext10:	
  8883 ;; *************** function _putch *****************
  8884 ;; Defined at:
  8885 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\putch.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;  c               1    wreg     unsigned char 
  8888 ;; Auto vars:     Size  Location     Type
  8889 ;;  c               1    0[COMMON] unsigned char 
  8890 ;; Return value:  Size  Location     Type
  8891 ;;                  1    wreg      void 
  8892 ;; Registers used:
  8893 ;;		wreg
  8894 ;; Tracked objects:
  8895 ;;		On entry : 0/0
  8896 ;;		On exit  : 0/0
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8903 ;;Total ram usage:        0 bytes
  8904 ;; Hardware stack levels used:    1
  8905 ;; Hardware stack levels required when called:    4
  8906 ;; This function calls:
  8907 ;;		Nothing
  8908 ;; This function is called by:
  8909 ;;		_fputc
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           
  8914                           ;psect for function _putch
  8915  0003                     _putch:
  8916  0003                     l1165:	
  8917                           ;incstack = 0
  8918                           ; Regs used in _putch: [wreg]
  8919                           
  8920  0003  0008               	return
  8921  0004                     __end_of_putch:
  8922                           
  8923                           	psect	text11
  8924  16DC                     __ptext11:	
  8925 ;; *************** function _abs *****************
  8926 ;; Defined at:
  8927 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;  a               2    3[COMMON] int 
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;		None
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  2    3[COMMON] int 
  8934 ;; Registers used:
  8935 ;;		wreg, status,2, status,0
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8943 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8944 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8945 ;;Total ram usage:        4 bytes
  8946 ;; Hardware stack levels used:    1
  8947 ;; Hardware stack levels required when called:    4
  8948 ;; This function calls:
  8949 ;;		Nothing
  8950 ;; This function is called by:
  8951 ;;		_dtoa
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           
  8956                           ;psect for function _abs
  8957  16DC                     _abs:
  8958  16DC                     l2545:	
  8959                           ;incstack = 0
  8960                           ; Regs used in _abs: [wreg+status,2+status,0]
  8961                           
  8962  16DC  0874               	movf	abs@a+1,w
  8963  16DD  3A80               	xorlw	128
  8964  16DE  00F5               	movwf	??_abs
  8965  16DF  3080               	movlw	128
  8966  16E0  0275               	subwf	??_abs,w
  8967  16E1  1D03               	skipz
  8968  16E2  2EE5               	goto	u2015
  8969  16E3  3001               	movlw	1
  8970  16E4  0273               	subwf	abs@a,w
  8971  16E5                     u2015:
  8972  16E5  1803               	skipnc
  8973  16E6  2EE8               	goto	u2011
  8974  16E7  2EE9               	goto	u2010
  8975  16E8                     u2011:
  8976  16E8  2EF5               	goto	l1139
  8977  16E9                     u2010:
  8978  16E9                     l2547:
  8979  16E9  0973               	comf	abs@a,w
  8980  16EA  00F5               	movwf	??_abs
  8981  16EB  0974               	comf	abs@a+1,w
  8982  16EC  00F6               	movwf	??_abs+1
  8983  16ED  0AF5               	incf	??_abs,f
  8984  16EE  1903               	skipnz
  8985  16EF  0AF6               	incf	??_abs+1,f
  8986  16F0  0875               	movf	??_abs,w
  8987  16F1  00F3               	movwf	?_abs
  8988  16F2  0876               	movf	??_abs+1,w
  8989  16F3  00F4               	movwf	?_abs+1
  8990  16F4  2EF5               	goto	l1142
  8991  16F5                     l1139:
  8992  16F5                     l1142:
  8993  16F5  0008               	return
  8994  16F6                     __end_of_abs:
  8995                           
  8996                           	psect	text12
  8997  0E15                     __ptext12:	
  8998 ;; *************** function ___aomod *****************
  8999 ;; Defined at:
  9000 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  9001 ;; Parameters:    Size  Location     Type
  9002 ;;  divisor         8    0[BANK0 ] long long 
  9003 ;;  dividend        8    8[BANK0 ] long long 
  9004 ;; Auto vars:     Size  Location     Type
  9005 ;;  sign            1    2[COMMON] unsigned char 
  9006 ;;  counter         1    1[COMMON] unsigned char 
  9007 ;; Return value:  Size  Location     Type
  9008 ;;                  8    0[BANK0 ] long long 
  9009 ;; Registers used:
  9010 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9011 ;; Tracked objects:
  9012 ;;		On entry : 0/0
  9013 ;;		On exit  : 0/0
  9014 ;;		Unchanged: 0/0
  9015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9016 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9018 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9019 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9020 ;;Total ram usage:       19 bytes
  9021 ;; Hardware stack levels used:    1
  9022 ;; Hardware stack levels required when called:    4
  9023 ;; This function calls:
  9024 ;;		Nothing
  9025 ;; This function is called by:
  9026 ;;		_dtoa
  9027 ;; This function uses a non-reentrant model
  9028 ;;
  9029                           
  9030                           
  9031                           ;psect for function ___aomod
  9032  0E15                     ___aomod:
  9033  0E15                     l2495:	
  9034                           ;incstack = 0
  9035                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9036                           
  9037  0E15  01F2               	clrf	___aomod@sign
  9038  0E16                     l2497:
  9039  0E16  3028               	movlw	low ___aomod@dividend
  9040  0E17  0086               	movwf	6
  9041  0E18  3000               	movlw	high ___aomod@dividend
  9042  0E19  0087               	movwf	7
  9043  0E1A  3F47               	moviw [7]fsr1
  9044  0E1B  00F0               	movwf	??___aomod
  9045  0E1C  1FF0               	btfss	??___aomod,7
  9046  0E1D  2E1F               	goto	u1871
  9047  0E1E  2E20               	goto	u1870
  9048  0E1F                     u1871:
  9049  0E1F  2E41               	goto	l2501
  9050  0E20                     u1870:
  9051  0E20                     l2499:
  9052  0E20  0020               	movlb	0	; select bank0
  9053  0E21  09A8               	comf	___aomod@dividend,f
  9054  0E22  09A9               	comf	___aomod@dividend+1,f
  9055  0E23  09AA               	comf	___aomod@dividend+2,f
  9056  0E24  09AB               	comf	___aomod@dividend+3,f
  9057  0E25  09AC               	comf	___aomod@dividend+4,f
  9058  0E26  09AD               	comf	___aomod@dividend+5,f
  9059  0E27  09AE               	comf	___aomod@dividend+6,f
  9060  0E28  09AF               	comf	___aomod@dividend+7,f
  9061  0E29  0AA8               	incf	___aomod@dividend,f
  9062  0E2A  1D03               	skipz
  9063  0E2B  2E3F               	goto	u188lld
  9064  0E2C  0AA9               	incf	___aomod@dividend+1,f
  9065  0E2D  1D03               	skipz
  9066  0E2E  2E3F               	goto	u188lld
  9067  0E2F  0AAA               	incf	___aomod@dividend+2,f
  9068  0E30  1D03               	skipz
  9069  0E31  2E3F               	goto	u188lld
  9070  0E32  0AAB               	incf	___aomod@dividend+3,f
  9071  0E33  1D03               	skipz
  9072  0E34  2E3F               	goto	u188lld
  9073  0E35  0AAC               	incf	___aomod@dividend+4,f
  9074  0E36  1D03               	skipz
  9075  0E37  2E3F               	goto	u188lld
  9076  0E38  0AAD               	incf	___aomod@dividend+5,f
  9077  0E39  1D03               	skipz
  9078  0E3A  2E3F               	goto	u188lld
  9079  0E3B  0AAE               	incf	___aomod@dividend+6,f
  9080  0E3C  1D03               	skipz
  9081  0E3D  2E3F               	goto	u188lld
  9082  0E3E  0AAF               	incf	___aomod@dividend+7,f
  9083  0E3F                     u188lld:
  9084  0E3F  01F2               	clrf	___aomod@sign
  9085  0E40  0AF2               	incf	___aomod@sign,f
  9086  0E41                     l2501:
  9087  0E41  3020               	movlw	low ___aomod@divisor
  9088  0E42  0086               	movwf	6
  9089  0E43  3000               	movlw	high ___aomod@divisor
  9090  0E44  0087               	movwf	7
  9091  0E45  3F47               	moviw [7]fsr1
  9092  0E46  00F0               	movwf	??___aomod
  9093  0E47  1FF0               	btfss	??___aomod,7
  9094  0E48  2E4A               	goto	u1891
  9095  0E49  2E4B               	goto	u1890
  9096  0E4A                     u1891:
  9097  0E4A  2E6A               	goto	l2505
  9098  0E4B                     u1890:
  9099  0E4B                     l2503:
  9100  0E4B  0020               	movlb	0	; select bank0
  9101  0E4C  09A0               	comf	___aomod@divisor,f
  9102  0E4D  09A1               	comf	___aomod@divisor+1,f
  9103  0E4E  09A2               	comf	___aomod@divisor+2,f
  9104  0E4F  09A3               	comf	___aomod@divisor+3,f
  9105  0E50  09A4               	comf	___aomod@divisor+4,f
  9106  0E51  09A5               	comf	___aomod@divisor+5,f
  9107  0E52  09A6               	comf	___aomod@divisor+6,f
  9108  0E53  09A7               	comf	___aomod@divisor+7,f
  9109  0E54  0AA0               	incf	___aomod@divisor,f
  9110  0E55  1D03               	skipz
  9111  0E56  2E6A               	goto	u190lld
  9112  0E57  0AA1               	incf	___aomod@divisor+1,f
  9113  0E58  1D03               	skipz
  9114  0E59  2E6A               	goto	u190lld
  9115  0E5A  0AA2               	incf	___aomod@divisor+2,f
  9116  0E5B  1D03               	skipz
  9117  0E5C  2E6A               	goto	u190lld
  9118  0E5D  0AA3               	incf	___aomod@divisor+3,f
  9119  0E5E  1D03               	skipz
  9120  0E5F  2E6A               	goto	u190lld
  9121  0E60  0AA4               	incf	___aomod@divisor+4,f
  9122  0E61  1D03               	skipz
  9123  0E62  2E6A               	goto	u190lld
  9124  0E63  0AA5               	incf	___aomod@divisor+5,f
  9125  0E64  1D03               	skipz
  9126  0E65  2E6A               	goto	u190lld
  9127  0E66  0AA6               	incf	___aomod@divisor+6,f
  9128  0E67  1D03               	skipz
  9129  0E68  2E6A               	goto	u190lld
  9130  0E69  0AA7               	incf	___aomod@divisor+7,f
  9131  0E6A                     u190lld:
  9132  0E6A                     l2505:
  9133  0E6A  0020               	movlb	0	; select bank0
  9134  0E6B  0820               	movf	___aomod@divisor,w
  9135  0E6C  0421               	iorwf	___aomod@divisor+1,w
  9136  0E6D  0422               	iorwf	___aomod@divisor+2,w
  9137  0E6E  0423               	iorwf	___aomod@divisor+3,w
  9138  0E6F  0424               	iorwf	___aomod@divisor+4,w
  9139  0E70  0425               	iorwf	___aomod@divisor+5,w
  9140  0E71  0426               	iorwf	___aomod@divisor+6,w
  9141  0E72  0427               	iorwf	___aomod@divisor+7,w
  9142  0E73  1903               	skipnz
  9143  0E74  2E76               	goto	u1911
  9144  0E75  2E77               	goto	u1910
  9145  0E76                     u1911:
  9146  0E76  2ECA               	goto	l2521
  9147  0E77                     u1910:
  9148  0E77                     l2507:
  9149  0E77  01F1               	clrf	___aomod@counter
  9150  0E78  0AF1               	incf	___aomod@counter,f
  9151  0E79  2E86               	goto	l2513
  9152  0E7A                     l2509:
  9153  0E7A  35A0               	lslf	___aomod@divisor,f
  9154  0E7B  0DA1               	rlf	___aomod@divisor+1,f
  9155  0E7C  0DA2               	rlf	___aomod@divisor+2,f
  9156  0E7D  0DA3               	rlf	___aomod@divisor+3,f
  9157  0E7E  0DA4               	rlf	___aomod@divisor+4,f
  9158  0E7F  0DA5               	rlf	___aomod@divisor+5,f
  9159  0E80  0DA6               	rlf	___aomod@divisor+6,f
  9160  0E81  0DA7               	rlf	___aomod@divisor+7,f
  9161  0E82                     l2511:
  9162  0E82  3001               	movlw	1
  9163  0E83  00F0               	movwf	??___aomod
  9164  0E84  0870               	movf	??___aomod,w
  9165  0E85  07F1               	addwf	___aomod@counter,f
  9166  0E86                     l2513:
  9167  0E86  1FA7               	btfss	___aomod@divisor+7,7
  9168  0E87  2E89               	goto	u1921
  9169  0E88  2E8A               	goto	u1920
  9170  0E89                     u1921:
  9171  0E89  2E7A               	goto	l2509
  9172  0E8A                     u1920:
  9173  0E8A                     l2515:
  9174  0E8A  0827               	movf	___aomod@divisor+7,w
  9175  0E8B  022F               	subwf	___aomod@dividend+7,w
  9176  0E8C  1D03               	skipz
  9177  0E8D  2EA8               	goto	u1935
  9178  0E8E  0826               	movf	___aomod@divisor+6,w
  9179  0E8F  022E               	subwf	___aomod@dividend+6,w
  9180  0E90  1D03               	skipz
  9181  0E91  2EA8               	goto	u1935
  9182  0E92  0825               	movf	___aomod@divisor+5,w
  9183  0E93  022D               	subwf	___aomod@dividend+5,w
  9184  0E94  1D03               	skipz
  9185  0E95  2EA8               	goto	u1935
  9186  0E96  0824               	movf	___aomod@divisor+4,w
  9187  0E97  022C               	subwf	___aomod@dividend+4,w
  9188  0E98  1D03               	skipz
  9189  0E99  2EA8               	goto	u1935
  9190  0E9A  0823               	movf	___aomod@divisor+3,w
  9191  0E9B  022B               	subwf	___aomod@dividend+3,w
  9192  0E9C  1D03               	skipz
  9193  0E9D  2EA8               	goto	u1935
  9194  0E9E  0822               	movf	___aomod@divisor+2,w
  9195  0E9F  022A               	subwf	___aomod@dividend+2,w
  9196  0EA0  1D03               	skipz
  9197  0EA1  2EA8               	goto	u1935
  9198  0EA2  0821               	movf	___aomod@divisor+1,w
  9199  0EA3  0229               	subwf	___aomod@dividend+1,w
  9200  0EA4  1D03               	skipz
  9201  0EA5  2EA8               	goto	u1935
  9202  0EA6  0820               	movf	___aomod@divisor,w
  9203  0EA7  0228               	subwf	___aomod@dividend,w
  9204  0EA8                     u1935:
  9205  0EA8  1C03               	skipc
  9206  0EA9  2EAB               	goto	u1931
  9207  0EAA  2EAC               	goto	u1930
  9208  0EAB                     u1931:
  9209  0EAB  2EBC               	goto	l2519
  9210  0EAC                     u1930:
  9211  0EAC                     l2517:
  9212  0EAC  0820               	movf	___aomod@divisor,w
  9213  0EAD  02A8               	subwf	___aomod@dividend,f
  9214  0EAE  0821               	movf	___aomod@divisor+1,w
  9215  0EAF  3BA9               	subwfb	___aomod@dividend+1,f
  9216  0EB0  0822               	movf	___aomod@divisor+2,w
  9217  0EB1  3BAA               	subwfb	___aomod@dividend+2,f
  9218  0EB2  0823               	movf	___aomod@divisor+3,w
  9219  0EB3  3BAB               	subwfb	___aomod@dividend+3,f
  9220  0EB4  0824               	movf	___aomod@divisor+4,w
  9221  0EB5  3BAC               	subwfb	___aomod@dividend+4,f
  9222  0EB6  0825               	movf	___aomod@divisor+5,w
  9223  0EB7  3BAD               	subwfb	___aomod@dividend+5,f
  9224  0EB8  0826               	movf	___aomod@divisor+6,w
  9225  0EB9  3BAE               	subwfb	___aomod@dividend+6,f
  9226  0EBA  0827               	movf	___aomod@divisor+7,w
  9227  0EBB  3BAF               	subwfb	___aomod@dividend+7,f
  9228  0EBC                     l2519:
  9229  0EBC  36A7               	lsrf	___aomod@divisor+7,f
  9230  0EBD  0CA6               	rrf	___aomod@divisor+6,f
  9231  0EBE  0CA5               	rrf	___aomod@divisor+5,f
  9232  0EBF  0CA4               	rrf	___aomod@divisor+4,f
  9233  0EC0  0CA3               	rrf	___aomod@divisor+3,f
  9234  0EC1  0CA2               	rrf	___aomod@divisor+2,f
  9235  0EC2  0CA1               	rrf	___aomod@divisor+1,f
  9236  0EC3  0CA0               	rrf	___aomod@divisor,f
  9237  0EC4  3001               	movlw	1
  9238  0EC5  02F1               	subwf	___aomod@counter,f
  9239  0EC6  1D03               	btfss	3,2
  9240  0EC7  2EC9               	goto	u1941
  9241  0EC8  2ECA               	goto	u1940
  9242  0EC9                     u1941:
  9243  0EC9  2E8A               	goto	l2515
  9244  0ECA                     u1940:
  9245  0ECA                     l2521:
  9246  0ECA  0872               	movf	___aomod@sign,w
  9247  0ECB  1903               	btfsc	3,2
  9248  0ECC  2ECE               	goto	u1951
  9249  0ECD  2ECF               	goto	u1950
  9250  0ECE                     u1951:
  9251  0ECE  2EED               	goto	l713
  9252  0ECF                     u1950:
  9253  0ECF                     l2523:
  9254  0ECF  09A8               	comf	___aomod@dividend,f
  9255  0ED0  09A9               	comf	___aomod@dividend+1,f
  9256  0ED1  09AA               	comf	___aomod@dividend+2,f
  9257  0ED2  09AB               	comf	___aomod@dividend+3,f
  9258  0ED3  09AC               	comf	___aomod@dividend+4,f
  9259  0ED4  09AD               	comf	___aomod@dividend+5,f
  9260  0ED5  09AE               	comf	___aomod@dividend+6,f
  9261  0ED6  09AF               	comf	___aomod@dividend+7,f
  9262  0ED7  0AA8               	incf	___aomod@dividend,f
  9263  0ED8  1D03               	skipz
  9264  0ED9  2EED               	goto	u196lld
  9265  0EDA  0AA9               	incf	___aomod@dividend+1,f
  9266  0EDB  1D03               	skipz
  9267  0EDC  2EED               	goto	u196lld
  9268  0EDD  0AAA               	incf	___aomod@dividend+2,f
  9269  0EDE  1D03               	skipz
  9270  0EDF  2EED               	goto	u196lld
  9271  0EE0  0AAB               	incf	___aomod@dividend+3,f
  9272  0EE1  1D03               	skipz
  9273  0EE2  2EED               	goto	u196lld
  9274  0EE3  0AAC               	incf	___aomod@dividend+4,f
  9275  0EE4  1D03               	skipz
  9276  0EE5  2EED               	goto	u196lld
  9277  0EE6  0AAD               	incf	___aomod@dividend+5,f
  9278  0EE7  1D03               	skipz
  9279  0EE8  2EED               	goto	u196lld
  9280  0EE9  0AAE               	incf	___aomod@dividend+6,f
  9281  0EEA  1D03               	skipz
  9282  0EEB  2EED               	goto	u196lld
  9283  0EEC  0AAF               	incf	___aomod@dividend+7,f
  9284  0EED                     u196lld:
  9285  0EED                     l713:
  9286  0EED  0020               	movlb	0	; select bank0
  9287  0EEE  0828               	movf	___aomod@dividend,w
  9288  0EEF  00A0               	movwf	?___aomod
  9289  0EF0  0829               	movf	___aomod@dividend+1,w
  9290  0EF1  00A1               	movwf	?___aomod+1
  9291  0EF2  082A               	movf	___aomod@dividend+2,w
  9292  0EF3  00A2               	movwf	?___aomod+2
  9293  0EF4  082B               	movf	___aomod@dividend+3,w
  9294  0EF5  00A3               	movwf	?___aomod+3
  9295  0EF6  082C               	movf	___aomod@dividend+4,w
  9296  0EF7  00A4               	movwf	?___aomod+4
  9297  0EF8  082D               	movf	___aomod@dividend+5,w
  9298  0EF9  00A5               	movwf	?___aomod+5
  9299  0EFA  082E               	movf	___aomod@dividend+6,w
  9300  0EFB  00A6               	movwf	?___aomod+6
  9301  0EFC  082F               	movf	___aomod@dividend+7,w
  9302  0EFD  00A7               	movwf	?___aomod+7
  9303  0EFE                     l714:
  9304  0EFE  0008               	return
  9305  0EFF                     __end_of___aomod:
  9306                           
  9307                           	psect	text13
  9308  0EFF                     __ptext13:	
  9309 ;; *************** function ___aodiv *****************
  9310 ;; Defined at:
  9311 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;  divisor         8    0[BANK0 ] long long 
  9314 ;;  dividend        8    8[BANK0 ] long long 
  9315 ;; Auto vars:     Size  Location     Type
  9316 ;;  quotient        8    3[COMMON] long long 
  9317 ;;  sign            1    2[COMMON] unsigned char 
  9318 ;;  counter         1    1[COMMON] unsigned char 
  9319 ;; Return value:  Size  Location     Type
  9320 ;;                  8    0[BANK0 ] long long 
  9321 ;; Registers used:
  9322 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9323 ;; Tracked objects:
  9324 ;;		On entry : 0/0
  9325 ;;		On exit  : 0/0
  9326 ;;		Unchanged: 0/0
  9327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9328 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9329 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9330 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9331 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9332 ;;Total ram usage:       27 bytes
  9333 ;; Hardware stack levels used:    1
  9334 ;; Hardware stack levels required when called:    4
  9335 ;; This function calls:
  9336 ;;		Nothing
  9337 ;; This function is called by:
  9338 ;;		_dtoa
  9339 ;; This function uses a non-reentrant model
  9340 ;;
  9341                           
  9342                           
  9343                           ;psect for function ___aodiv
  9344  0EFF                     ___aodiv:
  9345  0EFF                     l2457:	
  9346                           ;incstack = 0
  9347                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9348                           
  9349  0EFF  01F2               	clrf	___aodiv@sign
  9350  0F00                     l2459:
  9351  0F00  3020               	movlw	low ___aodiv@divisor
  9352  0F01  0086               	movwf	6
  9353  0F02  3000               	movlw	high ___aodiv@divisor
  9354  0F03  0087               	movwf	7
  9355  0F04  3F47               	moviw [7]fsr1
  9356  0F05  00F0               	movwf	??___aodiv
  9357  0F06  1FF0               	btfss	??___aodiv,7
  9358  0F07  2F09               	goto	u1761
  9359  0F08  2F0A               	goto	u1760
  9360  0F09                     u1761:
  9361  0F09  2F2B               	goto	l2463
  9362  0F0A                     u1760:
  9363  0F0A                     l2461:
  9364  0F0A  0020               	movlb	0	; select bank0
  9365  0F0B  09A0               	comf	___aodiv@divisor,f
  9366  0F0C  09A1               	comf	___aodiv@divisor+1,f
  9367  0F0D  09A2               	comf	___aodiv@divisor+2,f
  9368  0F0E  09A3               	comf	___aodiv@divisor+3,f
  9369  0F0F  09A4               	comf	___aodiv@divisor+4,f
  9370  0F10  09A5               	comf	___aodiv@divisor+5,f
  9371  0F11  09A6               	comf	___aodiv@divisor+6,f
  9372  0F12  09A7               	comf	___aodiv@divisor+7,f
  9373  0F13  0AA0               	incf	___aodiv@divisor,f
  9374  0F14  1D03               	skipz
  9375  0F15  2F29               	goto	u177lld
  9376  0F16  0AA1               	incf	___aodiv@divisor+1,f
  9377  0F17  1D03               	skipz
  9378  0F18  2F29               	goto	u177lld
  9379  0F19  0AA2               	incf	___aodiv@divisor+2,f
  9380  0F1A  1D03               	skipz
  9381  0F1B  2F29               	goto	u177lld
  9382  0F1C  0AA3               	incf	___aodiv@divisor+3,f
  9383  0F1D  1D03               	skipz
  9384  0F1E  2F29               	goto	u177lld
  9385  0F1F  0AA4               	incf	___aodiv@divisor+4,f
  9386  0F20  1D03               	skipz
  9387  0F21  2F29               	goto	u177lld
  9388  0F22  0AA5               	incf	___aodiv@divisor+5,f
  9389  0F23  1D03               	skipz
  9390  0F24  2F29               	goto	u177lld
  9391  0F25  0AA6               	incf	___aodiv@divisor+6,f
  9392  0F26  1D03               	skipz
  9393  0F27  2F29               	goto	u177lld
  9394  0F28  0AA7               	incf	___aodiv@divisor+7,f
  9395  0F29                     u177lld:
  9396  0F29  01F2               	clrf	___aodiv@sign
  9397  0F2A  0AF2               	incf	___aodiv@sign,f
  9398  0F2B                     l2463:
  9399  0F2B  3028               	movlw	low ___aodiv@dividend
  9400  0F2C  0086               	movwf	6
  9401  0F2D  3000               	movlw	high ___aodiv@dividend
  9402  0F2E  0087               	movwf	7
  9403  0F2F  3F47               	moviw [7]fsr1
  9404  0F30  00F0               	movwf	??___aodiv
  9405  0F31  1FF0               	btfss	??___aodiv,7
  9406  0F32  2F34               	goto	u1781
  9407  0F33  2F35               	goto	u1780
  9408  0F34                     u1781:
  9409  0F34  2F58               	goto	l2469
  9410  0F35                     u1780:
  9411  0F35                     l2465:
  9412  0F35  0020               	movlb	0	; select bank0
  9413  0F36  09A8               	comf	___aodiv@dividend,f
  9414  0F37  09A9               	comf	___aodiv@dividend+1,f
  9415  0F38  09AA               	comf	___aodiv@dividend+2,f
  9416  0F39  09AB               	comf	___aodiv@dividend+3,f
  9417  0F3A  09AC               	comf	___aodiv@dividend+4,f
  9418  0F3B  09AD               	comf	___aodiv@dividend+5,f
  9419  0F3C  09AE               	comf	___aodiv@dividend+6,f
  9420  0F3D  09AF               	comf	___aodiv@dividend+7,f
  9421  0F3E  0AA8               	incf	___aodiv@dividend,f
  9422  0F3F  1D03               	skipz
  9423  0F40  2F54               	goto	u179lld
  9424  0F41  0AA9               	incf	___aodiv@dividend+1,f
  9425  0F42  1D03               	skipz
  9426  0F43  2F54               	goto	u179lld
  9427  0F44  0AAA               	incf	___aodiv@dividend+2,f
  9428  0F45  1D03               	skipz
  9429  0F46  2F54               	goto	u179lld
  9430  0F47  0AAB               	incf	___aodiv@dividend+3,f
  9431  0F48  1D03               	skipz
  9432  0F49  2F54               	goto	u179lld
  9433  0F4A  0AAC               	incf	___aodiv@dividend+4,f
  9434  0F4B  1D03               	skipz
  9435  0F4C  2F54               	goto	u179lld
  9436  0F4D  0AAD               	incf	___aodiv@dividend+5,f
  9437  0F4E  1D03               	skipz
  9438  0F4F  2F54               	goto	u179lld
  9439  0F50  0AAE               	incf	___aodiv@dividend+6,f
  9440  0F51  1D03               	skipz
  9441  0F52  2F54               	goto	u179lld
  9442  0F53  0AAF               	incf	___aodiv@dividend+7,f
  9443  0F54                     u179lld:
  9444  0F54                     l2467:
  9445  0F54  3001               	movlw	1
  9446  0F55  00F0               	movwf	??___aodiv
  9447  0F56  0870               	movf	??___aodiv,w
  9448  0F57  06F2               	xorwf	___aodiv@sign,f
  9449  0F58                     l2469:
  9450  0F58  3073               	movlw	low ___aodiv@quotient
  9451  0F59  0086               	movwf	6
  9452  0F5A  3000               	movlw	high ___aodiv@quotient
  9453  0F5B  0087               	movwf	7
  9454  0F5C  3008               	movlw	8
  9455  0F5D  00F0               	movwf	??___aodiv
  9456  0F5E  3000               	movlw	0
  9457  0F5F                     u1800:
  9458  0F5F  001E               	movwi fsr1++
  9459  0F60  0BF0               	decfsz	??___aodiv,f
  9460  0F61  2F5F               	goto	u1800
  9461  0F62                     l2471:
  9462  0F62  0020               	movlb	0	; select bank0
  9463  0F63  0820               	movf	___aodiv@divisor,w
  9464  0F64  0421               	iorwf	___aodiv@divisor+1,w
  9465  0F65  0422               	iorwf	___aodiv@divisor+2,w
  9466  0F66  0423               	iorwf	___aodiv@divisor+3,w
  9467  0F67  0424               	iorwf	___aodiv@divisor+4,w
  9468  0F68  0425               	iorwf	___aodiv@divisor+5,w
  9469  0F69  0426               	iorwf	___aodiv@divisor+6,w
  9470  0F6A  0427               	iorwf	___aodiv@divisor+7,w
  9471  0F6B  1903               	skipnz
  9472  0F6C  2F6E               	goto	u1811
  9473  0F6D  2F6F               	goto	u1810
  9474  0F6E                     u1811:
  9475  0F6E  2FCB               	goto	l2491
  9476  0F6F                     u1810:
  9477  0F6F                     l2473:
  9478  0F6F  01F1               	clrf	___aodiv@counter
  9479  0F70  0AF1               	incf	___aodiv@counter,f
  9480  0F71  2F7E               	goto	l2479
  9481  0F72                     l2475:
  9482  0F72  35A0               	lslf	___aodiv@divisor,f
  9483  0F73  0DA1               	rlf	___aodiv@divisor+1,f
  9484  0F74  0DA2               	rlf	___aodiv@divisor+2,f
  9485  0F75  0DA3               	rlf	___aodiv@divisor+3,f
  9486  0F76  0DA4               	rlf	___aodiv@divisor+4,f
  9487  0F77  0DA5               	rlf	___aodiv@divisor+5,f
  9488  0F78  0DA6               	rlf	___aodiv@divisor+6,f
  9489  0F79  0DA7               	rlf	___aodiv@divisor+7,f
  9490  0F7A                     l2477:
  9491  0F7A  3001               	movlw	1
  9492  0F7B  00F0               	movwf	??___aodiv
  9493  0F7C  0870               	movf	??___aodiv,w
  9494  0F7D  07F1               	addwf	___aodiv@counter,f
  9495  0F7E                     l2479:
  9496  0F7E  1FA7               	btfss	___aodiv@divisor+7,7
  9497  0F7F  2F81               	goto	u1821
  9498  0F80  2F82               	goto	u1820
  9499  0F81                     u1821:
  9500  0F81  2F72               	goto	l2475
  9501  0F82                     u1820:
  9502  0F82                     l2481:
  9503  0F82  35F3               	lslf	___aodiv@quotient,f
  9504  0F83  0DF4               	rlf	___aodiv@quotient+1,f
  9505  0F84  0DF5               	rlf	___aodiv@quotient+2,f
  9506  0F85  0DF6               	rlf	___aodiv@quotient+3,f
  9507  0F86  0DF7               	rlf	___aodiv@quotient+4,f
  9508  0F87  0DF8               	rlf	___aodiv@quotient+5,f
  9509  0F88  0DF9               	rlf	___aodiv@quotient+6,f
  9510  0F89  0DFA               	rlf	___aodiv@quotient+7,f
  9511  0F8A                     l2483:
  9512  0F8A  0827               	movf	___aodiv@divisor+7,w
  9513  0F8B  022F               	subwf	___aodiv@dividend+7,w
  9514  0F8C  1D03               	skipz
  9515  0F8D  2FA8               	goto	u1835
  9516  0F8E  0826               	movf	___aodiv@divisor+6,w
  9517  0F8F  022E               	subwf	___aodiv@dividend+6,w
  9518  0F90  1D03               	skipz
  9519  0F91  2FA8               	goto	u1835
  9520  0F92  0825               	movf	___aodiv@divisor+5,w
  9521  0F93  022D               	subwf	___aodiv@dividend+5,w
  9522  0F94  1D03               	skipz
  9523  0F95  2FA8               	goto	u1835
  9524  0F96  0824               	movf	___aodiv@divisor+4,w
  9525  0F97  022C               	subwf	___aodiv@dividend+4,w
  9526  0F98  1D03               	skipz
  9527  0F99  2FA8               	goto	u1835
  9528  0F9A  0823               	movf	___aodiv@divisor+3,w
  9529  0F9B  022B               	subwf	___aodiv@dividend+3,w
  9530  0F9C  1D03               	skipz
  9531  0F9D  2FA8               	goto	u1835
  9532  0F9E  0822               	movf	___aodiv@divisor+2,w
  9533  0F9F  022A               	subwf	___aodiv@dividend+2,w
  9534  0FA0  1D03               	skipz
  9535  0FA1  2FA8               	goto	u1835
  9536  0FA2  0821               	movf	___aodiv@divisor+1,w
  9537  0FA3  0229               	subwf	___aodiv@dividend+1,w
  9538  0FA4  1D03               	skipz
  9539  0FA5  2FA8               	goto	u1835
  9540  0FA6  0820               	movf	___aodiv@divisor,w
  9541  0FA7  0228               	subwf	___aodiv@dividend,w
  9542  0FA8                     u1835:
  9543  0FA8  1C03               	skipc
  9544  0FA9  2FAB               	goto	u1831
  9545  0FAA  2FAC               	goto	u1830
  9546  0FAB                     u1831:
  9547  0FAB  2FBD               	goto	l2489
  9548  0FAC                     u1830:
  9549  0FAC                     l2485:
  9550  0FAC  0820               	movf	___aodiv@divisor,w
  9551  0FAD  02A8               	subwf	___aodiv@dividend,f
  9552  0FAE  0821               	movf	___aodiv@divisor+1,w
  9553  0FAF  3BA9               	subwfb	___aodiv@dividend+1,f
  9554  0FB0  0822               	movf	___aodiv@divisor+2,w
  9555  0FB1  3BAA               	subwfb	___aodiv@dividend+2,f
  9556  0FB2  0823               	movf	___aodiv@divisor+3,w
  9557  0FB3  3BAB               	subwfb	___aodiv@dividend+3,f
  9558  0FB4  0824               	movf	___aodiv@divisor+4,w
  9559  0FB5  3BAC               	subwfb	___aodiv@dividend+4,f
  9560  0FB6  0825               	movf	___aodiv@divisor+5,w
  9561  0FB7  3BAD               	subwfb	___aodiv@dividend+5,f
  9562  0FB8  0826               	movf	___aodiv@divisor+6,w
  9563  0FB9  3BAE               	subwfb	___aodiv@dividend+6,f
  9564  0FBA  0827               	movf	___aodiv@divisor+7,w
  9565  0FBB  3BAF               	subwfb	___aodiv@dividend+7,f
  9566  0FBC                     l2487:
  9567  0FBC  1473               	bsf	___aodiv@quotient,0
  9568  0FBD                     l2489:
  9569  0FBD  36A7               	lsrf	___aodiv@divisor+7,f
  9570  0FBE  0CA6               	rrf	___aodiv@divisor+6,f
  9571  0FBF  0CA5               	rrf	___aodiv@divisor+5,f
  9572  0FC0  0CA4               	rrf	___aodiv@divisor+4,f
  9573  0FC1  0CA3               	rrf	___aodiv@divisor+3,f
  9574  0FC2  0CA2               	rrf	___aodiv@divisor+2,f
  9575  0FC3  0CA1               	rrf	___aodiv@divisor+1,f
  9576  0FC4  0CA0               	rrf	___aodiv@divisor,f
  9577  0FC5  3001               	movlw	1
  9578  0FC6  02F1               	subwf	___aodiv@counter,f
  9579  0FC7  1D03               	btfss	3,2
  9580  0FC8  2FCA               	goto	u1841
  9581  0FC9  2FCB               	goto	u1840
  9582  0FCA                     u1841:
  9583  0FCA  2F82               	goto	l2481
  9584  0FCB                     u1840:
  9585  0FCB                     l2491:
  9586  0FCB  0872               	movf	___aodiv@sign,w
  9587  0FCC  1903               	btfsc	3,2
  9588  0FCD  2FCF               	goto	u1851
  9589  0FCE  2FD0               	goto	u1850
  9590  0FCF                     u1851:
  9591  0FCF  2FEE               	goto	l700
  9592  0FD0                     u1850:
  9593  0FD0                     l2493:
  9594  0FD0  09F3               	comf	___aodiv@quotient,f
  9595  0FD1  09F4               	comf	___aodiv@quotient+1,f
  9596  0FD2  09F5               	comf	___aodiv@quotient+2,f
  9597  0FD3  09F6               	comf	___aodiv@quotient+3,f
  9598  0FD4  09F7               	comf	___aodiv@quotient+4,f
  9599  0FD5  09F8               	comf	___aodiv@quotient+5,f
  9600  0FD6  09F9               	comf	___aodiv@quotient+6,f
  9601  0FD7  09FA               	comf	___aodiv@quotient+7,f
  9602  0FD8  0AF3               	incf	___aodiv@quotient,f
  9603  0FD9  1D03               	skipz
  9604  0FDA  2FEE               	goto	u186lld
  9605  0FDB  0AF4               	incf	___aodiv@quotient+1,f
  9606  0FDC  1D03               	skipz
  9607  0FDD  2FEE               	goto	u186lld
  9608  0FDE  0AF5               	incf	___aodiv@quotient+2,f
  9609  0FDF  1D03               	skipz
  9610  0FE0  2FEE               	goto	u186lld
  9611  0FE1  0AF6               	incf	___aodiv@quotient+3,f
  9612  0FE2  1D03               	skipz
  9613  0FE3  2FEE               	goto	u186lld
  9614  0FE4  0AF7               	incf	___aodiv@quotient+4,f
  9615  0FE5  1D03               	skipz
  9616  0FE6  2FEE               	goto	u186lld
  9617  0FE7  0AF8               	incf	___aodiv@quotient+5,f
  9618  0FE8  1D03               	skipz
  9619  0FE9  2FEE               	goto	u186lld
  9620  0FEA  0AF9               	incf	___aodiv@quotient+6,f
  9621  0FEB  1D03               	skipz
  9622  0FEC  2FEE               	goto	u186lld
  9623  0FED  0AFA               	incf	___aodiv@quotient+7,f
  9624  0FEE                     u186lld:
  9625  0FEE                     l700:
  9626  0FEE  0873               	movf	___aodiv@quotient,w
  9627  0FEF  0020               	movlb	0	; select bank0
  9628  0FF0  00A0               	movwf	?___aodiv
  9629  0FF1  0874               	movf	___aodiv@quotient+1,w
  9630  0FF2  00A1               	movwf	?___aodiv+1
  9631  0FF3  0875               	movf	___aodiv@quotient+2,w
  9632  0FF4  00A2               	movwf	?___aodiv+2
  9633  0FF5  0876               	movf	___aodiv@quotient+3,w
  9634  0FF6  00A3               	movwf	?___aodiv+3
  9635  0FF7  0877               	movf	___aodiv@quotient+4,w
  9636  0FF8  00A4               	movwf	?___aodiv+4
  9637  0FF9  0878               	movf	___aodiv@quotient+5,w
  9638  0FFA  00A5               	movwf	?___aodiv+5
  9639  0FFB  0879               	movf	___aodiv@quotient+6,w
  9640  0FFC  00A6               	movwf	?___aodiv+6
  9641  0FFD  087A               	movf	___aodiv@quotient+7,w
  9642  0FFE  00A7               	movwf	?___aodiv+7
  9643  0FFF                     l701:
  9644  0FFF  0008               	return
  9645  1000                     __end_of___aodiv:
  9646                           
  9647                           	psect	text14
  9648  1747                     __ptext14:	
  9649 ;; *************** function ___wmul *****************
  9650 ;; Defined at:
  9651 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;  multiplier      2    0[COMMON] unsigned int 
  9654 ;;  multiplicand    2    2[COMMON] unsigned int 
  9655 ;; Auto vars:     Size  Location     Type
  9656 ;;  product         2    4[COMMON] unsigned int 
  9657 ;; Return value:  Size  Location     Type
  9658 ;;                  2    0[COMMON] unsigned int 
  9659 ;; Registers used:
  9660 ;;		wreg, status,2, status,0
  9661 ;; Tracked objects:
  9662 ;;		On entry : 0/0
  9663 ;;		On exit  : 0/0
  9664 ;;		Unchanged: 0/0
  9665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9666 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9667 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9669 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9670 ;;Total ram usage:        6 bytes
  9671 ;; Hardware stack levels used:    1
  9672 ;; Hardware stack levels required when called:    4
  9673 ;; This function calls:
  9674 ;;		Nothing
  9675 ;; This function is called by:
  9676 ;;		_stuffIntToCharsBuf
  9677 ;; This function uses a non-reentrant model
  9678 ;;
  9679                           
  9680                           
  9681                           ;psect for function ___wmul
  9682  1747                     ___wmul:
  9683  1747                     l2991:	
  9684                           ;incstack = 0
  9685                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9686                           
  9687  1747  01F4               	clrf	___wmul@product
  9688  1748  01F5               	clrf	___wmul@product+1
  9689  1749                     l2993:
  9690  1749  1C70               	btfss	___wmul@multiplier,0
  9691  174A  2F4C               	goto	u2441
  9692  174B  2F4D               	goto	u2440
  9693  174C                     u2441:
  9694  174C  2F51               	goto	l600
  9695  174D                     u2440:
  9696  174D                     l2995:
  9697  174D  0872               	movf	___wmul@multiplicand,w
  9698  174E  07F4               	addwf	___wmul@product,f
  9699  174F  0873               	movf	___wmul@multiplicand+1,w
  9700  1750  3DF5               	addwfc	___wmul@product+1,f
  9701  1751                     l600:
  9702  1751  3001               	movlw	1
  9703  1752                     u2455:
  9704  1752  35F2               	lslf	___wmul@multiplicand,f
  9705  1753  0DF3               	rlf	___wmul@multiplicand+1,f
  9706  1754  0B89               	decfsz	9,f
  9707  1755  2F52               	goto	u2455
  9708  1756                     l2997:
  9709  1756  3001               	movlw	1
  9710  1757                     u2465:
  9711  1757  36F1               	lsrf	___wmul@multiplier+1,f
  9712  1758  0CF0               	rrf	___wmul@multiplier,f
  9713  1759  0B89               	decfsz	9,f
  9714  175A  2F57               	goto	u2465
  9715  175B                     l2999:
  9716  175B  0870               	movf	___wmul@multiplier,w
  9717  175C  0471               	iorwf	___wmul@multiplier+1,w
  9718  175D  1D03               	btfss	3,2
  9719  175E  2F60               	goto	u2471
  9720  175F  2F61               	goto	u2470
  9721  1760                     u2471:
  9722  1760  2F49               	goto	l2993
  9723  1761                     u2470:
  9724  1761                     l3001:
  9725  1761  0875               	movf	___wmul@product+1,w
  9726  1762  00F1               	movwf	?___wmul+1
  9727  1763  0874               	movf	___wmul@product,w
  9728  1764  00F0               	movwf	?___wmul
  9729  1765                     l602:
  9730  1765  0008               	return
  9731  1766                     __end_of___wmul:
  9732                           
  9733                           	psect	text15
  9734  0B98                     __ptext15:	
  9735 ;; *************** function ___awdiv *****************
  9736 ;; Defined at:
  9737 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awdiv.c"
  9738 ;; Parameters:    Size  Location     Type
  9739 ;;  divisor         2    0[COMMON] int 
  9740 ;;  dividend        2    2[COMMON] int 
  9741 ;; Auto vars:     Size  Location     Type
  9742 ;;  quotient        2    7[COMMON] int 
  9743 ;;  sign            1    6[COMMON] unsigned char 
  9744 ;;  counter         1    5[COMMON] unsigned char 
  9745 ;; Return value:  Size  Location     Type
  9746 ;;                  2    0[COMMON] int 
  9747 ;; Registers used:
  9748 ;;		wreg, status,2, status,0
  9749 ;; Tracked objects:
  9750 ;;		On entry : 0/0
  9751 ;;		On exit  : 0/0
  9752 ;;		Unchanged: 0/0
  9753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9754 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9755 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9756 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9758 ;;Total ram usage:        9 bytes
  9759 ;; Hardware stack levels used:    1
  9760 ;; Hardware stack levels required when called:    4
  9761 ;; This function calls:
  9762 ;;		Nothing
  9763 ;; This function is called by:
  9764 ;;		_stuffIntToCharsBuf
  9765 ;; This function uses a non-reentrant model
  9766 ;;
  9767                           
  9768                           
  9769                           ;psect for function ___awdiv
  9770  0B98                     ___awdiv:
  9771  0B98                     l3005:	
  9772                           ;incstack = 0
  9773                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9774                           
  9775  0B98  01F6               	clrf	___awdiv@sign
  9776  0B99                     l3007:
  9777  0B99  1FF1               	btfss	___awdiv@divisor+1,7
  9778  0B9A  2B9C               	goto	u2481
  9779  0B9B  2B9D               	goto	u2480
  9780  0B9C                     u2481:
  9781  0B9C  2BA4               	goto	l3013
  9782  0B9D                     u2480:
  9783  0B9D                     l3009:
  9784  0B9D  09F0               	comf	___awdiv@divisor,f
  9785  0B9E  09F1               	comf	___awdiv@divisor+1,f
  9786  0B9F  0AF0               	incf	___awdiv@divisor,f
  9787  0BA0  1903               	skipnz
  9788  0BA1  0AF1               	incf	___awdiv@divisor+1,f
  9789  0BA2                     l3011:
  9790  0BA2  01F6               	clrf	___awdiv@sign
  9791  0BA3  0AF6               	incf	___awdiv@sign,f
  9792  0BA4                     l3013:
  9793  0BA4  1FF3               	btfss	___awdiv@dividend+1,7
  9794  0BA5  2BA7               	goto	u2491
  9795  0BA6  2BA8               	goto	u2490
  9796  0BA7                     u2491:
  9797  0BA7  2BB1               	goto	l3019
  9798  0BA8                     u2490:
  9799  0BA8                     l3015:
  9800  0BA8  09F2               	comf	___awdiv@dividend,f
  9801  0BA9  09F3               	comf	___awdiv@dividend+1,f
  9802  0BAA  0AF2               	incf	___awdiv@dividend,f
  9803  0BAB  1903               	skipnz
  9804  0BAC  0AF3               	incf	___awdiv@dividend+1,f
  9805  0BAD                     l3017:
  9806  0BAD  3001               	movlw	1
  9807  0BAE  00F4               	movwf	??___awdiv
  9808  0BAF  0874               	movf	??___awdiv,w
  9809  0BB0  06F6               	xorwf	___awdiv@sign,f
  9810  0BB1                     l3019:
  9811  0BB1  01F7               	clrf	___awdiv@quotient
  9812  0BB2  01F8               	clrf	___awdiv@quotient+1
  9813  0BB3                     l3021:
  9814  0BB3  0870               	movf	___awdiv@divisor,w
  9815  0BB4  0471               	iorwf	___awdiv@divisor+1,w
  9816  0BB5  1903               	btfsc	3,2
  9817  0BB6  2BB8               	goto	u2501
  9818  0BB7  2BB9               	goto	u2500
  9819  0BB8                     u2501:
  9820  0BB8  2BE8               	goto	l3041
  9821  0BB9                     u2500:
  9822  0BB9                     l3023:
  9823  0BB9  01F5               	clrf	___awdiv@counter
  9824  0BBA  0AF5               	incf	___awdiv@counter,f
  9825  0BBB  2BC5               	goto	l3029
  9826  0BBC                     l3025:
  9827  0BBC  3001               	movlw	1
  9828  0BBD                     u2515:
  9829  0BBD  35F0               	lslf	___awdiv@divisor,f
  9830  0BBE  0DF1               	rlf	___awdiv@divisor+1,f
  9831  0BBF  0B89               	decfsz	9,f
  9832  0BC0  2BBD               	goto	u2515
  9833  0BC1                     l3027:
  9834  0BC1  3001               	movlw	1
  9835  0BC2  00F4               	movwf	??___awdiv
  9836  0BC3  0874               	movf	??___awdiv,w
  9837  0BC4  07F5               	addwf	___awdiv@counter,f
  9838  0BC5                     l3029:
  9839  0BC5  1FF1               	btfss	___awdiv@divisor+1,7
  9840  0BC6  2BC8               	goto	u2521
  9841  0BC7  2BC9               	goto	u2520
  9842  0BC8                     u2521:
  9843  0BC8  2BBC               	goto	l3025
  9844  0BC9                     u2520:
  9845  0BC9                     l3031:
  9846  0BC9  3001               	movlw	1
  9847  0BCA                     u2535:
  9848  0BCA  35F7               	lslf	___awdiv@quotient,f
  9849  0BCB  0DF8               	rlf	___awdiv@quotient+1,f
  9850  0BCC  0B89               	decfsz	9,f
  9851  0BCD  2BCA               	goto	u2535
  9852  0BCE  0871               	movf	___awdiv@divisor+1,w
  9853  0BCF  0273               	subwf	___awdiv@dividend+1,w
  9854  0BD0  1D03               	skipz
  9855  0BD1  2BD4               	goto	u2545
  9856  0BD2  0870               	movf	___awdiv@divisor,w
  9857  0BD3  0272               	subwf	___awdiv@dividend,w
  9858  0BD4                     u2545:
  9859  0BD4  1C03               	skipc
  9860  0BD5  2BD7               	goto	u2541
  9861  0BD6  2BD8               	goto	u2540
  9862  0BD7                     u2541:
  9863  0BD7  2BDD               	goto	l3037
  9864  0BD8                     u2540:
  9865  0BD8                     l3033:
  9866  0BD8  0870               	movf	___awdiv@divisor,w
  9867  0BD9  02F2               	subwf	___awdiv@dividend,f
  9868  0BDA  0871               	movf	___awdiv@divisor+1,w
  9869  0BDB  3BF3               	subwfb	___awdiv@dividend+1,f
  9870  0BDC                     l3035:
  9871  0BDC  1477               	bsf	___awdiv@quotient,0
  9872  0BDD                     l3037:
  9873  0BDD  3001               	movlw	1
  9874  0BDE                     u2555:
  9875  0BDE  36F1               	lsrf	___awdiv@divisor+1,f
  9876  0BDF  0CF0               	rrf	___awdiv@divisor,f
  9877  0BE0  0B89               	decfsz	9,f
  9878  0BE1  2BDE               	goto	u2555
  9879  0BE2                     l3039:
  9880  0BE2  3001               	movlw	1
  9881  0BE3  02F5               	subwf	___awdiv@counter,f
  9882  0BE4  1D03               	btfss	3,2
  9883  0BE5  2BE7               	goto	u2561
  9884  0BE6  2BE8               	goto	u2560
  9885  0BE7                     u2561:
  9886  0BE7  2BC9               	goto	l3031
  9887  0BE8                     u2560:
  9888  0BE8                     l3041:
  9889  0BE8  0876               	movf	___awdiv@sign,w
  9890  0BE9  1903               	btfsc	3,2
  9891  0BEA  2BEC               	goto	u2571
  9892  0BEB  2BED               	goto	u2570
  9893  0BEC                     u2571:
  9894  0BEC  2BF2               	goto	l3045
  9895  0BED                     u2570:
  9896  0BED                     l3043:
  9897  0BED  09F7               	comf	___awdiv@quotient,f
  9898  0BEE  09F8               	comf	___awdiv@quotient+1,f
  9899  0BEF  0AF7               	incf	___awdiv@quotient,f
  9900  0BF0  1903               	skipnz
  9901  0BF1  0AF8               	incf	___awdiv@quotient+1,f
  9902  0BF2                     l3045:
  9903  0BF2  0878               	movf	___awdiv@quotient+1,w
  9904  0BF3  00F1               	movwf	?___awdiv+1
  9905  0BF4  0877               	movf	___awdiv@quotient,w
  9906  0BF5  00F0               	movwf	?___awdiv
  9907  0BF6                     l753:
  9908  0BF6  0008               	return
  9909  0BF7                     __end_of___awdiv:
  9910                           
  9911                           	psect	text16
  9912  0801                     __ptext16:	
  9913 ;; *************** function _setMotorSpeed *****************
  9914 ;; Defined at:
  9915 ;;		line 333 in file "main.c"
  9916 ;; Parameters:    Size  Location     Type
  9917 ;;  num             2    4[COMMON] unsigned short 
  9918 ;;  motorNum        2    6[COMMON] short 
  9919 ;; Auto vars:     Size  Location     Type
  9920 ;;		None
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  1    wreg      void 
  9923 ;; Registers used:
  9924 ;;		wreg, status,2, status,0, pclath, cstack
  9925 ;; Tracked objects:
  9926 ;;		On entry : 0/0
  9927 ;;		On exit  : 0/0
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9933 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9934 ;;Total ram usage:        4 bytes
  9935 ;; Hardware stack levels used:    1
  9936 ;; Hardware stack levels required when called:    5
  9937 ;; This function calls:
  9938 ;;		_PWM3_LoadDutyValue
  9939 ;;		_PWM4_LoadDutyValue
  9940 ;; This function is called by:
  9941 ;;		_main
  9942 ;; This function uses a non-reentrant model
  9943 ;;
  9944                           
  9945                           
  9946                           ;psect for function _setMotorSpeed
  9947  0801                     _setMotorSpeed:
  9948  0801                     l3311:	
  9949                           ;incstack = 0
  9950                           ; Regs used in _setMotorSpeed: [wreg+status,2+status,0+pclath+cstack]
  9951                           
  9952                           
  9953                           ;main.c: 334:     if (motorNum == 1)
  9954  0801  0376               	decf	setMotorSpeed@motorNum,w
  9955  0802  0477               	iorwf	setMotorSpeed@motorNum+1,w
  9956  0803  1D03               	btfss	3,2
  9957  0804  2806               	goto	u3031
  9958  0805  2807               	goto	u3030
  9959  0806                     u3031:
  9960  0806  280E               	goto	l3315
  9961  0807                     u3030:
  9962  0807                     l3313:
  9963                           
  9964                           ;main.c: 335:         PWM3_LoadDutyValue(num);
  9965  0807  0875               	movf	setMotorSpeed@num+1,w
  9966  0808  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  9967  0809  0874               	movf	setMotorSpeed@num,w
  9968  080A  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  9969  080B  3196  2697  3188   	fcall	_PWM3_LoadDutyValue
  9970  080E                     l3315:
  9971                           
  9972                           ;main.c: 336:     if (motorNum == 2)
  9973  080E  3002               	movlw	2
  9974  080F  0676               	xorwf	setMotorSpeed@motorNum,w
  9975  0810  0477               	iorwf	setMotorSpeed@motorNum+1,w
  9976  0811  1D03               	btfss	3,2
  9977  0812  2814               	goto	u3041
  9978  0813  2815               	goto	u3040
  9979  0814                     u3041:
  9980  0814  281C               	goto	l463
  9981  0815                     u3040:
  9982  0815                     l3317:
  9983                           
  9984                           ;main.c: 337:         PWM4_LoadDutyValue(num);
  9985  0815  0875               	movf	setMotorSpeed@num+1,w
  9986  0816  00F1               	movwf	PWM4_LoadDutyValue@dutyValue+1
  9987  0817  0874               	movf	setMotorSpeed@num,w
  9988  0818  00F0               	movwf	PWM4_LoadDutyValue@dutyValue
  9989  0819  3196  26AD  3188   	fcall	_PWM4_LoadDutyValue
  9990  081C                     l463:
  9991  081C  0008               	return
  9992  081D                     __end_of_setMotorSpeed:
  9993                           
  9994                           	psect	text17
  9995  16AD                     __ptext17:	
  9996 ;; *************** function _PWM4_LoadDutyValue *****************
  9997 ;; Defined at:
  9998 ;;		line 74 in file "mcc_generated_files/pwm4.c"
  9999 ;; Parameters:    Size  Location     Type
 10000 ;;  dutyValue       2    0[COMMON] unsigned short 
 10001 ;; Auto vars:     Size  Location     Type
 10002 ;;		None
 10003 ;; Return value:  Size  Location     Type
 10004 ;;                  1    wreg      void 
 10005 ;; Registers used:
 10006 ;;		wreg, status,2, status,0
 10007 ;; Tracked objects:
 10008 ;;		On entry : 0/0
 10009 ;;		On exit  : 0/0
 10010 ;;		Unchanged: 0/0
 10011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10012 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10014 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10015 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10016 ;;Total ram usage:        4 bytes
 10017 ;; Hardware stack levels used:    1
 10018 ;; Hardware stack levels required when called:    4
 10019 ;; This function calls:
 10020 ;;		Nothing
 10021 ;; This function is called by:
 10022 ;;		_setMotorSpeed
 10023 ;; This function uses a non-reentrant model
 10024 ;;
 10025                           
 10026                           
 10027                           ;psect for function _PWM4_LoadDutyValue
 10028  16AD                     _PWM4_LoadDutyValue:
 10029  16AD                     l2953:	
 10030                           ;incstack = 0
 10031                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2+status,0]
 10032                           
 10033                           
 10034                           ;mcc_generated_files/pwm4.c: 74:  void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm4.c: 75:  {;mcc_generated_files/pwm4.c: 77:      PWM4DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 10035  16AD  0871               	movf	PWM4_LoadDutyValue@dutyValue+1,w
 10036  16AE  00F3               	movwf	??_PWM4_LoadDutyValue+1
 10037  16AF  0870               	movf	PWM4_LoadDutyValue@dutyValue,w
 10038  16B0  00F2               	movwf	??_PWM4_LoadDutyValue
 10039  16B1  36F3               	lsrf	??_PWM4_LoadDutyValue+1,f
 10040  16B2  0CF2               	rrf	??_PWM4_LoadDutyValue,f
 10041  16B3  36F3               	lsrf	??_PWM4_LoadDutyValue+1,f
 10042  16B4  0CF2               	rrf	??_PWM4_LoadDutyValue,f
 10043  16B5  0872               	movf	??_PWM4_LoadDutyValue,w
 10044  16B6  002C               	movlb	12	; select bank12
 10045  16B7  009B               	movwf	27	;volatile
 10046                           
 10047                           ;mcc_generated_files/pwm4.c: 80:      PWM4DCL = (dutyValue & 0x0003)<<6;
 10048  16B8  0870               	movf	PWM4_LoadDutyValue@dutyValue,w
 10049  16B9  3903               	andlw	3
 10050  16BA  00F2               	movwf	??_PWM4_LoadDutyValue
 10051  16BB  3005               	movlw	5
 10052  16BC                     u2405:
 10053  16BC  35F2               	lslf	??_PWM4_LoadDutyValue,f
 10054  16BD  3EFF               	addlw	-1
 10055  16BE  1D03               	skipz
 10056  16BF  2EBC               	goto	u2405
 10057  16C0  3572               	lslf	??_PWM4_LoadDutyValue,w
 10058  16C1  009A               	movwf	26	;volatile
 10059  16C2                     l186:
 10060  16C2  0008               	return
 10061  16C3                     __end_of_PWM4_LoadDutyValue:
 10062                           
 10063                           	psect	text18
 10064  1697                     __ptext18:	
 10065 ;; *************** function _PWM3_LoadDutyValue *****************
 10066 ;; Defined at:
 10067 ;;		line 74 in file "mcc_generated_files/pwm3.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;  dutyValue       2    0[COMMON] unsigned short 
 10070 ;; Auto vars:     Size  Location     Type
 10071 ;;		None
 10072 ;; Return value:  Size  Location     Type
 10073 ;;                  1    wreg      void 
 10074 ;; Registers used:
 10075 ;;		wreg, status,2, status,0
 10076 ;; Tracked objects:
 10077 ;;		On entry : 0/0
 10078 ;;		On exit  : 0/0
 10079 ;;		Unchanged: 0/0
 10080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10083 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10084 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10085 ;;Total ram usage:        4 bytes
 10086 ;; Hardware stack levels used:    1
 10087 ;; Hardware stack levels required when called:    4
 10088 ;; This function calls:
 10089 ;;		Nothing
 10090 ;; This function is called by:
 10091 ;;		_setMotorSpeed
 10092 ;; This function uses a non-reentrant model
 10093 ;;
 10094                           
 10095                           
 10096                           ;psect for function _PWM3_LoadDutyValue
 10097  1697                     _PWM3_LoadDutyValue:
 10098  1697                     l2951:	
 10099                           ;incstack = 0
 10100                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
 10101                           
 10102                           
 10103                           ;mcc_generated_files/pwm3.c: 74:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 75:  {;mcc_generated_files/pwm3.c: 77:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 10104  1697  0871               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 10105  1698  00F3               	movwf	??_PWM3_LoadDutyValue+1
 10106  1699  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
 10107  169A  00F2               	movwf	??_PWM3_LoadDutyValue
 10108  169B  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
 10109  169C  0CF2               	rrf	??_PWM3_LoadDutyValue,f
 10110  169D  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
 10111  169E  0CF2               	rrf	??_PWM3_LoadDutyValue,f
 10112  169F  0872               	movf	??_PWM3_LoadDutyValue,w
 10113  16A0  002C               	movlb	12	; select bank12
 10114  16A1  0098               	movwf	24	;volatile
 10115                           
 10116                           ;mcc_generated_files/pwm3.c: 80:      PWM3DCL = (dutyValue & 0x0003)<<6;
 10117  16A2  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
 10118  16A3  3903               	andlw	3
 10119  16A4  00F2               	movwf	??_PWM3_LoadDutyValue
 10120  16A5  3005               	movlw	5
 10121  16A6                     u2395:
 10122  16A6  35F2               	lslf	??_PWM3_LoadDutyValue,f
 10123  16A7  3EFF               	addlw	-1
 10124  16A8  1D03               	skipz
 10125  16A9  2EA6               	goto	u2395
 10126  16AA  3572               	lslf	??_PWM3_LoadDutyValue,w
 10127  16AB  0097               	movwf	23	;volatile
 10128  16AC                     l172:
 10129  16AC  0008               	return
 10130  16AD                     __end_of_PWM3_LoadDutyValue:
 10131                           
 10132                           	psect	text19
 10133  0881                     __ptext19:	
 10134 ;; *************** function _reportfault *****************
 10135 ;; Defined at:
 10136 ;;		line 323 in file "main.c"
 10137 ;; Parameters:    Size  Location     Type
 10138 ;;  fault           1    wreg     unsigned char 
 10139 ;; Auto vars:     Size  Location     Type
 10140 ;;  fault           1   17[BANK0 ] unsigned char 
 10141 ;;  faultStr       17    0[BANK0 ] unsigned char [17]
 10142 ;;  i               2   18[BANK0 ] int 
 10143 ;; Return value:  Size  Location     Type
 10144 ;;                  1    wreg      void 
 10145 ;; Registers used:
 10146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10147 ;; Tracked objects:
 10148 ;;		On entry : 0/0
 10149 ;;		On exit  : 0/0
 10150 ;;		Unchanged: 0/0
 10151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10153 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10154 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10155 ;;      Totals:         1      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10156 ;;Total ram usage:       21 bytes
 10157 ;; Hardware stack levels used:    1
 10158 ;; Hardware stack levels required when called:    6
 10159 ;; This function calls:
 10160 ;;		_command
 10161 ;;		_dataCMD
 10162 ;; This function is called by:
 10163 ;;		_main
 10164 ;; This function uses a non-reentrant model
 10165 ;;
 10166                           
 10167                           
 10168                           ;psect for function _reportfault
 10169  0881                     _reportfault:
 10170                           
 10171                           ;incstack = 0
 10172                           ; Regs used in _reportfault: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10173                           ;reportfault@fault stored from wreg
 10174  0881  0020               	movlb	0	; select bank0
 10175  0882  00B1               	movwf	reportfault@fault
 10176  0883                     l3355:
 10177                           
 10178                           ;main.c: 324:     unsigned char faultStr[] = {" TC Fault =     "};
 10179  0883  30A0               	movlw	low reportfault@F10328
 10180  0884  0086               	movwf	6
 10181  0885  3001               	movlw	high reportfault@F10328
 10182  0886  0087               	movwf	7
 10183  0887  3020               	movlw	low reportfault@faultStr
 10184  0888  0084               	movwf	4
 10185  0889  3000               	movlw	high reportfault@faultStr
 10186  088A  0085               	movwf	5
 10187  088B  3011               	movlw	17
 10188  088C  00F9               	movwf	??_reportfault
 10189  088D                     u3100:
 10190  088D  0016               	moviw fsr1++
 10191  088E  001A               	movwi fsr0++
 10192  088F  0BF9               	decfsz	??_reportfault,f
 10193  0890  288D               	goto	u3100
 10194  0891                     l3357:
 10195                           
 10196                           ;main.c: 325:     command(0x01);
 10197  0891  3001               	movlw	1
 10198  0892  318A  2285  3188   	fcall	_command
 10199  0895                     l3359:
 10200                           
 10201                           ;main.c: 326:     int i;;main.c: 327:     faultStr[11]= fault | '\x30';
 10202  0895  0020               	movlb	0	; select bank0
 10203  0896  0831               	movf	reportfault@fault,w
 10204  0897  3830               	iorlw	48
 10205  0898  00F9               	movwf	??_reportfault
 10206  0899  0879               	movf	??_reportfault,w
 10207  089A  00AB               	movwf	reportfault@faultStr+11
 10208  089B                     l3361:
 10209                           
 10210                           ;main.c: 328:     for( i=0;i<16;i++){
 10211  089B  01B2               	clrf	reportfault@i
 10212  089C  01B3               	clrf	reportfault@i+1
 10213  089D                     l3367:
 10214                           
 10215                           ;main.c: 329:       dataCMD(faultStr[i]);
 10216  089D  0020               	movlb	0	; select bank0
 10217  089E  0832               	movf	reportfault@i,w
 10218  089F  3E20               	addlw	(low (reportfault@faultStr| 0))& (0+255)
 10219  08A0  0086               	movwf	6
 10220  08A1  0187               	clrf	7
 10221  08A2  0801               	movf	1,w
 10222  08A3  318A  22E0  3188   	fcall	_dataCMD
 10223  08A6                     l3369:
 10224                           
 10225                           ;main.c: 330:     }
 10226  08A6  3001               	movlw	1
 10227  08A7  0020               	movlb	0	; select bank0
 10228  08A8  07B2               	addwf	reportfault@i,f
 10229  08A9  3000               	movlw	0
 10230  08AA  3DB3               	addwfc	reportfault@i+1,f
 10231  08AB                     l3371:
 10232  08AB  0833               	movf	reportfault@i+1,w
 10233  08AC  3A80               	xorlw	128
 10234  08AD  00F9               	movwf	??_reportfault
 10235  08AE  3080               	movlw	128
 10236  08AF  0279               	subwf	??_reportfault,w
 10237  08B0  1D03               	skipz
 10238  08B1  28B4               	goto	u3115
 10239  08B2  3010               	movlw	16
 10240  08B3  0232               	subwf	reportfault@i,w
 10241  08B4                     u3115:
 10242  08B4  1C03               	skipc
 10243  08B5  28B7               	goto	u3111
 10244  08B6  28B8               	goto	u3110
 10245  08B7                     u3111:
 10246  08B7  289D               	goto	l3367
 10247  08B8                     u3110:
 10248  08B8                     l458:
 10249  08B8  0008               	return
 10250  08B9                     __end_of_reportfault:
 10251                           
 10252                           	psect	text20
 10253  09D8                     __ptext20:	
 10254 ;; *************** function _getTemp_TC *****************
 10255 ;; Defined at:
 10256 ;;		line 36 in file "max31855.c"
 10257 ;; Parameters:    Size  Location     Type
 10258 ;;		None
 10259 ;; Auto vars:     Size  Location     Type
 10260 ;;  raw             4   34[BANK0 ] unsigned long 
 10261 ;;  temp_tc         2   38[BANK0 ] short 
 10262 ;; Return value:  Size  Location     Type
 10263 ;;                  4   26[BANK0 ] float 
 10264 ;; Registers used:
 10265 ;;		wreg, status,2, status,0, pclath, cstack
 10266 ;; Tracked objects:
 10267 ;;		On entry : 0/0
 10268 ;;		On exit  : 0/0
 10269 ;;		Unchanged: 0/0
 10270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10271 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10272 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10273 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10274 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10275 ;;Total ram usage:       14 bytes
 10276 ;; Hardware stack levels used:    1
 10277 ;; Hardware stack levels required when called:    6
 10278 ;; This function calls:
 10279 ;;		___flmul
 10280 ;;		___xxtofl
 10281 ;;		_readRawData
 10282 ;; This function is called by:
 10283 ;;		_main
 10284 ;; This function uses a non-reentrant model
 10285 ;;
 10286                           
 10287                           
 10288                           ;psect for function _getTemp_TC
 10289  09D8                     _getTemp_TC:
 10290  09D8                     l3319:	
 10291                           ;incstack = 0
 10292                           ; Regs used in _getTemp_TC: [wreg+status,2+status,0+pclath+cstack]
 10293                           
 10294                           
 10295                           ;max31855.c: 37:     uint32_t raw = readRawData();
 10296  09D8  318B  233B  3189   	fcall	_readRawData
 10297  09DB  0874               	movf	?_readRawData+3,w
 10298  09DC  0020               	movlb	0	; select bank0
 10299  09DD  00C5               	movwf	getTemp_TC@raw+3
 10300  09DE  0873               	movf	?_readRawData+2,w
 10301  09DF  00C4               	movwf	getTemp_TC@raw+2
 10302  09E0  0872               	movf	?_readRawData+1,w
 10303  09E1  00C3               	movwf	getTemp_TC@raw+1
 10304  09E2  0871               	movf	?_readRawData,w
 10305  09E3  00C2               	movwf	getTemp_TC@raw
 10306  09E4                     l3321:
 10307                           
 10308                           ;max31855.c: 40:     int16_t temp_tc = (raw >> 18) & 0x3FFF;
 10309  09E4  0842               	movf	getTemp_TC@raw,w
 10310  09E5  00BE               	movwf	??_getTemp_TC
 10311  09E6  0843               	movf	getTemp_TC@raw+1,w
 10312  09E7  00BF               	movwf	??_getTemp_TC+1
 10313  09E8  0844               	movf	getTemp_TC@raw+2,w
 10314  09E9  00C0               	movwf	??_getTemp_TC+2
 10315  09EA  0845               	movf	getTemp_TC@raw+3,w
 10316  09EB  00C1               	movwf	??_getTemp_TC+3
 10317  09EC  3012               	movlw	18
 10318  09ED                     u3055:
 10319  09ED  36C1               	lsrf	??_getTemp_TC+3,f
 10320  09EE  0CC0               	rrf	??_getTemp_TC+2,f
 10321  09EF  0CBF               	rrf	??_getTemp_TC+1,f
 10322  09F0  0CBE               	rrf	??_getTemp_TC,f
 10323  09F1                     u3050:
 10324  09F1  0B89               	decfsz	9,f
 10325  09F2  29ED               	goto	u3055
 10326  09F3  30FF               	movlw	255
 10327  09F4  053E               	andwf	??_getTemp_TC,w
 10328  09F5  00C6               	movwf	getTemp_TC@temp_tc
 10329  09F6  303F               	movlw	63
 10330  09F7  053F               	andwf	??_getTemp_TC+1,w
 10331  09F8  00C7               	movwf	getTemp_TC@temp_tc+1
 10332  09F9                     l3323:
 10333                           
 10334                           ;max31855.c: 41:     if (temp_tc & 0x2000) {
 10335  09F9  1EC7               	btfss	getTemp_TC@temp_tc+1,5
 10336  09FA  29FC               	goto	u3061
 10337  09FB  29FD               	goto	u3060
 10338  09FC                     u3061:
 10339  09FC  2A01               	goto	l3327
 10340  09FD                     u3060:
 10341  09FD                     l3325:
 10342                           
 10343                           ;max31855.c: 42:         temp_tc |= 0xC000;
 10344  09FD  3000               	movlw	0
 10345  09FE  04C6               	iorwf	getTemp_TC@temp_tc,f
 10346  09FF  30C0               	movlw	192
 10347  0A00  04C7               	iorwf	getTemp_TC@temp_tc+1,f
 10348  0A01                     l3327:
 10349                           
 10350                           ;max31855.c: 44:     return (float)temp_tc * 0.25f;
 10351  0A01  303E               	movlw	62
 10352  0A02  00A3               	movwf	___flmul@b+3
 10353  0A03  3080               	movlw	128
 10354  0A04  00A2               	movwf	___flmul@b+2
 10355  0A05  3000               	movlw	0
 10356  0A06  00A1               	movwf	___flmul@b+1
 10357  0A07  3000               	movlw	0
 10358  0A08  00A0               	movwf	___flmul@b
 10359  0A09  0846               	movf	getTemp_TC@temp_tc,w
 10360  0A0A  00F0               	movwf	___xxtofl@val
 10361  0A0B  0847               	movf	getTemp_TC@temp_tc+1,w
 10362  0A0C  00F1               	movwf	___xxtofl@val+1
 10363  0A0D  0D89               	rlf	9,f
 10364  0A0E  3B89               	subwfb	9,f
 10365  0A0F  0989               	comf	9,f
 10366  0A10  00F2               	movwf	___xxtofl@val+2
 10367  0A11  00F3               	movwf	___xxtofl@val+3
 10368  0A12  3001               	movlw	1
 10369  0A13  318C  248E  3189   	fcall	___xxtofl
 10370  0A16  0873               	movf	?___xxtofl+3,w
 10371  0A17  0020               	movlb	0	; select bank0
 10372  0A18  00A7               	movwf	___flmul@a+3
 10373  0A19  0872               	movf	?___xxtofl+2,w
 10374  0A1A  00A6               	movwf	___flmul@a+2
 10375  0A1B  0871               	movf	?___xxtofl+1,w
 10376  0A1C  00A5               	movwf	___flmul@a+1
 10377  0A1D  0870               	movf	?___xxtofl,w
 10378  0A1E  00A4               	movwf	___flmul@a
 10379  0A1F  3180  2067  3189   	fcall	___flmul
 10380  0A22  0020               	movlb	0	; select bank0
 10381  0A23  0823               	movf	?___flmul+3,w
 10382  0A24  00BD               	movwf	?_getTemp_TC+3
 10383  0A25  0822               	movf	?___flmul+2,w
 10384  0A26  00BC               	movwf	?_getTemp_TC+2
 10385  0A27  0821               	movf	?___flmul+1,w
 10386  0A28  00BB               	movwf	?_getTemp_TC+1
 10387  0A29  0820               	movf	?___flmul,w
 10388  0A2A  00BA               	movwf	?_getTemp_TC
 10389  0A2B                     l524:
 10390  0A2B  0008               	return
 10391  0A2C                     __end_of_getTemp_TC:
 10392                           
 10393                           	psect	text21
 10394  1682                     __ptext21:	
 10395 ;; *************** function _getFaultCodes *****************
 10396 ;; Defined at:
 10397 ;;		line 58 in file "max31855.c"
 10398 ;; Parameters:    Size  Location     Type
 10399 ;;		None
 10400 ;; Auto vars:     Size  Location     Type
 10401 ;;  raw             4    7[BANK0 ] unsigned long 
 10402 ;; Return value:  Size  Location     Type
 10403 ;;                  1    wreg      unsigned char 
 10404 ;; Registers used:
 10405 ;;		wreg, status,2, status,0, pclath, cstack
 10406 ;; Tracked objects:
 10407 ;;		On entry : 0/0
 10408 ;;		On exit  : 0/0
 10409 ;;		Unchanged: 0/0
 10410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10412 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10414 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10415 ;;Total ram usage:        4 bytes
 10416 ;; Hardware stack levels used:    1
 10417 ;; Hardware stack levels required when called:    6
 10418 ;; This function calls:
 10419 ;;		_readRawData
 10420 ;; This function is called by:
 10421 ;;		_main
 10422 ;; This function uses a non-reentrant model
 10423 ;;
 10424                           
 10425                           
 10426                           ;psect for function _getFaultCodes
 10427  1682                     _getFaultCodes:
 10428  1682                     l3343:	
 10429                           ;incstack = 0
 10430                           ; Regs used in _getFaultCodes: [wreg+status,2+status,0+pclath+cstack]
 10431                           
 10432                           
 10433                           ;max31855.c: 59:     uint32_t raw = readRawData();
 10434  1682  318B  233B  3196   	fcall	_readRawData
 10435  1685  0874               	movf	?_readRawData+3,w
 10436  1686  0020               	movlb	0	; select bank0
 10437  1687  00AA               	movwf	getFaultCodes@raw+3
 10438  1688  0873               	movf	?_readRawData+2,w
 10439  1689  00A9               	movwf	getFaultCodes@raw+2
 10440  168A  0872               	movf	?_readRawData+1,w
 10441  168B  00A8               	movwf	getFaultCodes@raw+1
 10442  168C  0871               	movf	?_readRawData,w
 10443  168D  00A7               	movwf	getFaultCodes@raw
 10444  168E                     l3345:
 10445                           
 10446                           ;max31855.c: 62:     if (raw & 0x00010000) {
 10447  168E  1C29               	btfss	getFaultCodes@raw+2,0
 10448  168F  2E91               	goto	u3091
 10449  1690  2E92               	goto	u3090
 10450  1691                     u3091:
 10451  1691  2E95               	goto	l3351
 10452  1692                     u3090:
 10453  1692                     l3347:
 10454                           
 10455                           ;max31855.c: 63:         return (uint8_t)(raw & 0x07);
 10456  1692  0827               	movf	getFaultCodes@raw,w
 10457  1693  3907               	andlw	7
 10458  1694  2E96               	goto	l532
 10459  1695                     l3351:
 10460                           
 10461                           ;max31855.c: 65:     return 0;
 10462  1695  3000               	movlw	0
 10463  1696                     l532:
 10464  1696  0008               	return
 10465  1697                     __end_of_getFaultCodes:
 10466                           
 10467                           	psect	text22
 10468  0984                     __ptext22:	
 10469 ;; *************** function _getDieTemp *****************
 10470 ;; Defined at:
 10471 ;;		line 47 in file "max31855.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;		None
 10474 ;; Auto vars:     Size  Location     Type
 10475 ;;  raw             4   34[BANK0 ] unsigned long 
 10476 ;;  temp_die        2   38[BANK0 ] short 
 10477 ;; Return value:  Size  Location     Type
 10478 ;;                  4   26[BANK0 ] float 
 10479 ;; Registers used:
 10480 ;;		wreg, status,2, status,0, pclath, cstack
 10481 ;; Tracked objects:
 10482 ;;		On entry : 0/0
 10483 ;;		On exit  : 0/0
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10486 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10487 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10488 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10489 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10490 ;;Total ram usage:       14 bytes
 10491 ;; Hardware stack levels used:    1
 10492 ;; Hardware stack levels required when called:    6
 10493 ;; This function calls:
 10494 ;;		___flmul
 10495 ;;		___xxtofl
 10496 ;;		_readRawData
 10497 ;; This function is called by:
 10498 ;;		_main
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           
 10502                           
 10503                           ;psect for function _getDieTemp
 10504  0984                     _getDieTemp:
 10505  0984                     l3331:	
 10506                           ;incstack = 0
 10507                           ; Regs used in _getDieTemp: [wreg+status,2+status,0+pclath+cstack]
 10508                           
 10509                           
 10510                           ;max31855.c: 48:     uint32_t raw = readRawData();
 10511  0984  318B  233B  3189   	fcall	_readRawData
 10512  0987  0874               	movf	?_readRawData+3,w
 10513  0988  0020               	movlb	0	; select bank0
 10514  0989  00C5               	movwf	getDieTemp@raw+3
 10515  098A  0873               	movf	?_readRawData+2,w
 10516  098B  00C4               	movwf	getDieTemp@raw+2
 10517  098C  0872               	movf	?_readRawData+1,w
 10518  098D  00C3               	movwf	getDieTemp@raw+1
 10519  098E  0871               	movf	?_readRawData,w
 10520  098F  00C2               	movwf	getDieTemp@raw
 10521  0990                     l3333:
 10522                           
 10523                           ;max31855.c: 51:     int16_t temp_die = (raw >> 4) & 0x0FFF;
 10524  0990  0842               	movf	getDieTemp@raw,w
 10525  0991  00BE               	movwf	??_getDieTemp
 10526  0992  0843               	movf	getDieTemp@raw+1,w
 10527  0993  00BF               	movwf	??_getDieTemp+1
 10528  0994  0844               	movf	getDieTemp@raw+2,w
 10529  0995  00C0               	movwf	??_getDieTemp+2
 10530  0996  0845               	movf	getDieTemp@raw+3,w
 10531  0997  00C1               	movwf	??_getDieTemp+3
 10532  0998  3004               	movlw	4
 10533  0999                     u3075:
 10534  0999  36C1               	lsrf	??_getDieTemp+3,f
 10535  099A  0CC0               	rrf	??_getDieTemp+2,f
 10536  099B  0CBF               	rrf	??_getDieTemp+1,f
 10537  099C  0CBE               	rrf	??_getDieTemp,f
 10538  099D                     u3070:
 10539  099D  0B89               	decfsz	9,f
 10540  099E  2999               	goto	u3075
 10541  099F  30FF               	movlw	255
 10542  09A0  053E               	andwf	??_getDieTemp,w
 10543  09A1  00C6               	movwf	getDieTemp@temp_die
 10544  09A2  300F               	movlw	15
 10545  09A3  053F               	andwf	??_getDieTemp+1,w
 10546  09A4  00C7               	movwf	getDieTemp@temp_die+1
 10547  09A5                     l3335:
 10548                           
 10549                           ;max31855.c: 52:     if (temp_die & 0x0800) {
 10550  09A5  1DC7               	btfss	getDieTemp@temp_die+1,3
 10551  09A6  29A8               	goto	u3081
 10552  09A7  29A9               	goto	u3080
 10553  09A8                     u3081:
 10554  09A8  29AD               	goto	l3339
 10555  09A9                     u3080:
 10556  09A9                     l3337:
 10557                           
 10558                           ;max31855.c: 53:         temp_die |= 0xF000;
 10559  09A9  3000               	movlw	0
 10560  09AA  04C6               	iorwf	getDieTemp@temp_die,f
 10561  09AB  30F0               	movlw	240
 10562  09AC  04C7               	iorwf	getDieTemp@temp_die+1,f
 10563  09AD                     l3339:
 10564                           
 10565                           ;max31855.c: 55:     return (float)temp_die * 0.0625f;
 10566  09AD  303D               	movlw	61
 10567  09AE  00A3               	movwf	___flmul@b+3
 10568  09AF  3080               	movlw	128
 10569  09B0  00A2               	movwf	___flmul@b+2
 10570  09B1  3000               	movlw	0
 10571  09B2  00A1               	movwf	___flmul@b+1
 10572  09B3  3000               	movlw	0
 10573  09B4  00A0               	movwf	___flmul@b
 10574  09B5  0846               	movf	getDieTemp@temp_die,w
 10575  09B6  00F0               	movwf	___xxtofl@val
 10576  09B7  0847               	movf	getDieTemp@temp_die+1,w
 10577  09B8  00F1               	movwf	___xxtofl@val+1
 10578  09B9  0D89               	rlf	9,f
 10579  09BA  3B89               	subwfb	9,f
 10580  09BB  0989               	comf	9,f
 10581  09BC  00F2               	movwf	___xxtofl@val+2
 10582  09BD  00F3               	movwf	___xxtofl@val+3
 10583  09BE  3001               	movlw	1
 10584  09BF  318C  248E  3189   	fcall	___xxtofl
 10585  09C2  0873               	movf	?___xxtofl+3,w
 10586  09C3  0020               	movlb	0	; select bank0
 10587  09C4  00A7               	movwf	___flmul@a+3
 10588  09C5  0872               	movf	?___xxtofl+2,w
 10589  09C6  00A6               	movwf	___flmul@a+2
 10590  09C7  0871               	movf	?___xxtofl+1,w
 10591  09C8  00A5               	movwf	___flmul@a+1
 10592  09C9  0870               	movf	?___xxtofl,w
 10593  09CA  00A4               	movwf	___flmul@a
 10594  09CB  3180  2067  3189   	fcall	___flmul
 10595  09CE  0020               	movlb	0	; select bank0
 10596  09CF  0823               	movf	?___flmul+3,w
 10597  09D0  00BD               	movwf	?_getDieTemp+3
 10598  09D1  0822               	movf	?___flmul+2,w
 10599  09D2  00BC               	movwf	?_getDieTemp+2
 10600  09D3  0821               	movf	?___flmul+1,w
 10601  09D4  00BB               	movwf	?_getDieTemp+1
 10602  09D5  0820               	movf	?___flmul,w
 10603  09D6  00BA               	movwf	?_getDieTemp
 10604  09D7                     l528:
 10605  09D7  0008               	return
 10606  09D8                     __end_of_getDieTemp:
 10607                           
 10608                           	psect	text23
 10609  0B3B                     __ptext23:	
 10610 ;; *************** function _readRawData *****************
 10611 ;; Defined at:
 10612 ;;		line 8 in file "max31855.c"
 10613 ;; Parameters:    Size  Location     Type
 10614 ;;		None
 10615 ;; Auto vars:     Size  Location     Type
 10616 ;;  i               2    5[BANK0 ] int 
 10617 ;;  result          4    1[BANK0 ] unsigned long 
 10618 ;;  byte            1    0[BANK0 ] unsigned char 
 10619 ;; Return value:  Size  Location     Type
 10620 ;;                  4    1[COMMON] unsigned long 
 10621 ;; Registers used:
 10622 ;;		wreg, status,2, status,0, pclath, cstack
 10623 ;; Tracked objects:
 10624 ;;		On entry : 0/0
 10625 ;;		On exit  : 0/0
 10626 ;;		Unchanged: 0/0
 10627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10628 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10629 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10630 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10631 ;;      Totals:        12       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10632 ;;Total ram usage:       19 bytes
 10633 ;; Hardware stack levels used:    1
 10634 ;; Hardware stack levels required when called:    5
 10635 ;; This function calls:
 10636 ;;		_spi_transfer
 10637 ;; This function is called by:
 10638 ;;		_getTemp_TC
 10639 ;;		_getDieTemp
 10640 ;;		_getFaultCodes
 10641 ;; This function uses a non-reentrant model
 10642 ;;
 10643                           
 10644                           
 10645                           ;psect for function _readRawData
 10646  0B3B                     _readRawData:
 10647  0B3B                     l2965:	
 10648                           ;incstack = 0
 10649                           ; Regs used in _readRawData: [wreg+status,2+status,0+pclath+cstack]
 10650                           
 10651                           
 10652                           ;max31855.c: 12:     uint32_t result = 0;
 10653  0B3B  3000               	movlw	0
 10654  0B3C  0020               	movlb	0	; select bank0
 10655  0B3D  00A4               	movwf	readRawData@result+3
 10656  0B3E  3000               	movlw	0
 10657  0B3F  00A3               	movwf	readRawData@result+2
 10658  0B40  3000               	movlw	0
 10659  0B41  00A2               	movwf	readRawData@result+1
 10660  0B42  3000               	movlw	0
 10661  0B43  00A1               	movwf	readRawData@result
 10662  0B44                     l2967:
 10663                           
 10664                           ;max31855.c: 13:     uint8_t byte;;max31855.c: 16:     LATC6 = 0;
 10665  0B44  0022               	movlb	2	; select bank2
 10666  0B45  130E               	bcf	14,6	;volatile
 10667  0B46                     l2969:
 10668                           
 10669                           ;max31855.c: 18:     for (int i = 0; i < 4; i++) {
 10670  0B46  0020               	movlb	0	; select bank0
 10671  0B47  01A5               	clrf	readRawData@i
 10672  0B48  01A6               	clrf	readRawData@i+1
 10673  0B49                     l2975:
 10674                           
 10675                           ;max31855.c: 19:         byte = spi_transfer(0x00);
 10676  0B49  3000               	movlw	0
 10677  0B4A  3196  262C  318B   	fcall	_spi_transfer
 10678  0B4D  00F5               	movwf	??_readRawData
 10679  0B4E  0875               	movf	??_readRawData,w
 10680  0B4F  0020               	movlb	0	; select bank0
 10681  0B50  00A0               	movwf	readRawData@byte
 10682  0B51                     l2977:
 10683                           
 10684                           ;max31855.c: 20:         LATC6 = 0;
 10685  0B51  0022               	movlb	2	; select bank2
 10686  0B52  130E               	bcf	14,6	;volatile
 10687  0B53                     l2979:
 10688                           
 10689                           ;max31855.c: 21:         result = (result << 8) | byte;
 10690  0B53  0020               	movlb	0	; select bank0
 10691  0B54  0820               	movf	readRawData@byte,w
 10692  0B55  00F5               	movwf	??_readRawData
 10693  0B56  01F6               	clrf	??_readRawData+1
 10694  0B57  01F7               	clrf	??_readRawData+2
 10695  0B58  01F8               	clrf	??_readRawData+3
 10696  0B59  0821               	movf	readRawData@result,w
 10697  0B5A  00F9               	movwf	??_readRawData+4
 10698  0B5B  0822               	movf	readRawData@result+1,w
 10699  0B5C  00FA               	movwf	??_readRawData+5
 10700  0B5D  0823               	movf	readRawData@result+2,w
 10701  0B5E  00FB               	movwf	??_readRawData+6
 10702  0B5F  0824               	movf	readRawData@result+3,w
 10703  0B60  00FC               	movwf	??_readRawData+7
 10704  0B61  3008               	movlw	8
 10705  0B62                     u2425:
 10706  0B62  35F9               	lslf	??_readRawData+4,f
 10707  0B63  0DFA               	rlf	??_readRawData+5,f
 10708  0B64  0DFB               	rlf	??_readRawData+6,f
 10709  0B65  0DFC               	rlf	??_readRawData+7,f
 10710  0B66                     u2420:
 10711  0B66  0B89               	decfsz	9,f
 10712  0B67  2B62               	goto	u2425
 10713  0B68  0879               	movf	??_readRawData+4,w
 10714  0B69  04F5               	iorwf	??_readRawData,f
 10715  0B6A  087A               	movf	??_readRawData+5,w
 10716  0B6B  04F6               	iorwf	??_readRawData+1,f
 10717  0B6C  087B               	movf	??_readRawData+6,w
 10718  0B6D  04F7               	iorwf	??_readRawData+2,f
 10719  0B6E  087C               	movf	??_readRawData+7,w
 10720  0B6F  04F8               	iorwf	??_readRawData+3,f
 10721  0B70  0878               	movf	??_readRawData+3,w
 10722  0B71  00A4               	movwf	readRawData@result+3
 10723  0B72  0877               	movf	??_readRawData+2,w
 10724  0B73  00A3               	movwf	readRawData@result+2
 10725  0B74  0876               	movf	??_readRawData+1,w
 10726  0B75  00A2               	movwf	readRawData@result+1
 10727  0B76  0875               	movf	??_readRawData,w
 10728  0B77  00A1               	movwf	readRawData@result
 10729  0B78                     l2981:
 10730                           
 10731                           ;max31855.c: 22:         LATC6 = 0;
 10732  0B78  0022               	movlb	2	; select bank2
 10733  0B79  130E               	bcf	14,6	;volatile
 10734  0B7A                     l2983:
 10735                           
 10736                           ;max31855.c: 23:     }
 10737  0B7A  3001               	movlw	1
 10738  0B7B  0020               	movlb	0	; select bank0
 10739  0B7C  07A5               	addwf	readRawData@i,f
 10740  0B7D  3000               	movlw	0
 10741  0B7E  3DA6               	addwfc	readRawData@i+1,f
 10742  0B7F                     l2985:
 10743  0B7F  0826               	movf	readRawData@i+1,w
 10744  0B80  3A80               	xorlw	128
 10745  0B81  00F5               	movwf	??_readRawData
 10746  0B82  3080               	movlw	128
 10747  0B83  0275               	subwf	??_readRawData,w
 10748  0B84  1D03               	skipz
 10749  0B85  2B88               	goto	u2435
 10750  0B86  3004               	movlw	4
 10751  0B87  0225               	subwf	readRawData@i,w
 10752  0B88                     u2435:
 10753  0B88  1C03               	skipc
 10754  0B89  2B8B               	goto	u2431
 10755  0B8A  2B8C               	goto	u2430
 10756  0B8B                     u2431:
 10757  0B8B  2B49               	goto	l2975
 10758  0B8C                     u2430:
 10759  0B8C                     l516:
 10760                           
 10761                           ;max31855.c: 26:     LATC6 = 1;
 10762  0B8C  0022               	movlb	2	; select bank2
 10763  0B8D  170E               	bsf	14,6	;volatile
 10764  0B8E                     l2987:
 10765                           
 10766                           ;max31855.c: 28:     return result;
 10767  0B8E  0020               	movlb	0	; select bank0
 10768  0B8F  0824               	movf	readRawData@result+3,w
 10769  0B90  00F4               	movwf	?_readRawData+3
 10770  0B91  0823               	movf	readRawData@result+2,w
 10771  0B92  00F3               	movwf	?_readRawData+2
 10772  0B93  0822               	movf	readRawData@result+1,w
 10773  0B94  00F2               	movwf	?_readRawData+1
 10774  0B95  0821               	movf	readRawData@result,w
 10775  0B96  00F1               	movwf	?_readRawData
 10776  0B97                     l517:
 10777  0B97  0008               	return
 10778  0B98                     __end_of_readRawData:
 10779                           
 10780                           	psect	text24
 10781  162C                     __ptext24:	
 10782 ;; *************** function _spi_transfer *****************
 10783 ;; Defined at:
 10784 ;;		line 77 in file "mcc_generated_files/spi.c"
 10785 ;; Parameters:    Size  Location     Type
 10786 ;;  data            1    wreg     unsigned char 
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;  data            1    0[COMMON] unsigned char 
 10789 ;; Return value:  Size  Location     Type
 10790 ;;                  1    wreg      unsigned char 
 10791 ;; Registers used:
 10792 ;;		wreg
 10793 ;; Tracked objects:
 10794 ;;		On entry : 0/0
 10795 ;;		On exit  : 0/0
 10796 ;;		Unchanged: 0/0
 10797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10799 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10801 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10802 ;;Total ram usage:        1 bytes
 10803 ;; Hardware stack levels used:    1
 10804 ;; Hardware stack levels required when called:    4
 10805 ;; This function calls:
 10806 ;;		Nothing
 10807 ;; This function is called by:
 10808 ;;		_readRawData
 10809 ;; This function uses a non-reentrant model
 10810 ;;
 10811                           
 10812                           
 10813                           ;psect for function _spi_transfer
 10814  162C                     _spi_transfer:
 10815                           
 10816                           ;incstack = 0
 10817                           ; Regs used in _spi_transfer: [wreg]
 10818                           ;spi_transfer@data stored from wreg
 10819  162C  00F0               	movwf	spi_transfer@data
 10820  162D                     l2739:
 10821                           
 10822                           ;mcc_generated_files/spi.c: 78:     SSP1BUF = data;
 10823  162D  0870               	movf	spi_transfer@data,w
 10824  162E  0024               	movlb	4	; select bank4
 10825  162F  0091               	movwf	17	;volatile
 10826  1630                     l52:	
 10827                           ;mcc_generated_files/spi.c: 79:     while(!SSP1STATbits.BF);
 10828                           
 10829  1630  1C14               	btfss	20,0	;volatile
 10830  1631  2E33               	goto	u2331
 10831  1632  2E34               	goto	u2330
 10832  1633                     u2331:
 10833  1633  2E30               	goto	l52
 10834  1634                     u2330:
 10835  1634                     l2741:
 10836                           
 10837                           ;mcc_generated_files/spi.c: 80:     return SSP1BUF;
 10838  1634  0811               	movf	17,w	;volatile
 10839  1635                     l55:
 10840  1635  0008               	return
 10841  1636                     __end_of_spi_transfer:
 10842                           
 10843                           	psect	text25
 10844  0C8E                     __ptext25:	
 10845 ;; *************** function ___xxtofl *****************
 10846 ;; Defined at:
 10847 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\xxtofl.c"
 10848 ;; Parameters:    Size  Location     Type
 10849 ;;  sign            1    wreg     unsigned char 
 10850 ;;  val             4    0[COMMON] long 
 10851 ;; Auto vars:     Size  Location     Type
 10852 ;;  sign            1    8[COMMON] unsigned char 
 10853 ;;  arg             4   10[COMMON] unsigned long 
 10854 ;;  exp             1    9[COMMON] unsigned char 
 10855 ;; Return value:  Size  Location     Type
 10856 ;;                  4    0[COMMON] unsigned char 
 10857 ;; Registers used:
 10858 ;;		wreg, status,2, status,0
 10859 ;; Tracked objects:
 10860 ;;		On entry : 0/0
 10861 ;;		On exit  : 0/0
 10862 ;;		Unchanged: 0/0
 10863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10864 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10865 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10866 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10867 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10868 ;;Total ram usage:       14 bytes
 10869 ;; Hardware stack levels used:    1
 10870 ;; Hardware stack levels required when called:    4
 10871 ;; This function calls:
 10872 ;;		Nothing
 10873 ;; This function is called by:
 10874 ;;		_getTemp_TC
 10875 ;;		_getDieTemp
 10876 ;; This function uses a non-reentrant model
 10877 ;;
 10878                           
 10879                           
 10880                           ;psect for function ___xxtofl
 10881  0C8E                     ___xxtofl:
 10882                           
 10883                           ;incstack = 0
 10884                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10885                           ;___xxtofl@sign stored from wreg
 10886  0C8E  00F8               	movwf	___xxtofl@sign
 10887  0C8F                     l3189:
 10888  0C8F  0878               	movf	___xxtofl@sign,w
 10889  0C90  1903               	btfsc	3,2
 10890  0C91  2C93               	goto	u2841
 10891  0C92  2C94               	goto	u2840
 10892  0C93                     u2841:
 10893  0C93  2CA8               	goto	l3195
 10894  0C94                     u2840:
 10895  0C94                     l3191:
 10896  0C94  1FF3               	btfss	___xxtofl@val+3,7
 10897  0C95  2C97               	goto	u2851
 10898  0C96  2C98               	goto	u2850
 10899  0C97                     u2851:
 10900  0C97  2CA8               	goto	l3195
 10901  0C98                     u2850:
 10902  0C98                     l3193:
 10903  0C98  0970               	comf	___xxtofl@val,w
 10904  0C99  00FA               	movwf	___xxtofl@arg
 10905  0C9A  0971               	comf	___xxtofl@val+1,w
 10906  0C9B  00FB               	movwf	___xxtofl@arg+1
 10907  0C9C  0972               	comf	___xxtofl@val+2,w
 10908  0C9D  00FC               	movwf	___xxtofl@arg+2
 10909  0C9E  0973               	comf	___xxtofl@val+3,w
 10910  0C9F  00FD               	movwf	___xxtofl@arg+3
 10911  0CA0  0AFA               	incf	___xxtofl@arg,f
 10912  0CA1  1903               	skipnz
 10913  0CA2  0AFB               	incf	___xxtofl@arg+1,f
 10914  0CA3  1903               	skipnz
 10915  0CA4  0AFC               	incf	___xxtofl@arg+2,f
 10916  0CA5  1903               	skipnz
 10917  0CA6  0AFD               	incf	___xxtofl@arg+3,f
 10918  0CA7  2CB0               	goto	l1041
 10919  0CA8                     l3195:
 10920  0CA8  0873               	movf	___xxtofl@val+3,w
 10921  0CA9  00FD               	movwf	___xxtofl@arg+3
 10922  0CAA  0872               	movf	___xxtofl@val+2,w
 10923  0CAB  00FC               	movwf	___xxtofl@arg+2
 10924  0CAC  0871               	movf	___xxtofl@val+1,w
 10925  0CAD  00FB               	movwf	___xxtofl@arg+1
 10926  0CAE  0870               	movf	___xxtofl@val,w
 10927  0CAF  00FA               	movwf	___xxtofl@arg
 10928  0CB0                     l1041:
 10929  0CB0  0873               	movf	___xxtofl@val+3,w
 10930  0CB1  0472               	iorwf	___xxtofl@val+2,w
 10931  0CB2  0471               	iorwf	___xxtofl@val+1,w
 10932  0CB3  0470               	iorwf	___xxtofl@val,w
 10933  0CB4  1D03               	skipz
 10934  0CB5  2CB7               	goto	u2861
 10935  0CB6  2CB8               	goto	u2860
 10936  0CB7                     u2861:
 10937  0CB7  2CC1               	goto	l3201
 10938  0CB8                     u2860:
 10939  0CB8                     l3197:
 10940  0CB8  3000               	movlw	0
 10941  0CB9  00F3               	movwf	?___xxtofl+3
 10942  0CBA  3000               	movlw	0
 10943  0CBB  00F2               	movwf	?___xxtofl+2
 10944  0CBC  3000               	movlw	0
 10945  0CBD  00F1               	movwf	?___xxtofl+1
 10946  0CBE  3000               	movlw	0
 10947  0CBF  00F0               	movwf	?___xxtofl
 10948  0CC0  2D39               	goto	l1043
 10949  0CC1                     l3201:
 10950  0CC1  3096               	movlw	150
 10951  0CC2  00F4               	movwf	??___xxtofl
 10952  0CC3  0874               	movf	??___xxtofl,w
 10953  0CC4  00F9               	movwf	___xxtofl@exp
 10954  0CC5  2CD1               	goto	l3205
 10955  0CC6                     l3203:
 10956  0CC6  3001               	movlw	1
 10957  0CC7  00F4               	movwf	??___xxtofl
 10958  0CC8  0874               	movf	??___xxtofl,w
 10959  0CC9  07F9               	addwf	___xxtofl@exp,f
 10960  0CCA  3001               	movlw	1
 10961  0CCB                     u2875:
 10962  0CCB  36FD               	lsrf	___xxtofl@arg+3,f
 10963  0CCC  0CFC               	rrf	___xxtofl@arg+2,f
 10964  0CCD  0CFB               	rrf	___xxtofl@arg+1,f
 10965  0CCE  0CFA               	rrf	___xxtofl@arg,f
 10966  0CCF  0B89               	decfsz	9,f
 10967  0CD0  2CCB               	goto	u2875
 10968  0CD1                     l3205:
 10969  0CD1  30FE               	movlw	254
 10970  0CD2  057D               	andwf	___xxtofl@arg+3,w
 10971  0CD3  1D03               	btfss	3,2
 10972  0CD4  2CD6               	goto	u2881
 10973  0CD5  2CD7               	goto	u2880
 10974  0CD6                     u2881:
 10975  0CD6  2CC6               	goto	l3203
 10976  0CD7                     u2880:
 10977  0CD7  2CEB               	goto	l1047
 10978  0CD8                     l3207:
 10979  0CD8  3001               	movlw	1
 10980  0CD9  00F4               	movwf	??___xxtofl
 10981  0CDA  0874               	movf	??___xxtofl,w
 10982  0CDB  07F9               	addwf	___xxtofl@exp,f
 10983  0CDC                     l3209:
 10984  0CDC  3001               	movlw	1
 10985  0CDD  07FA               	addwf	___xxtofl@arg,f
 10986  0CDE  3000               	movlw	0
 10987  0CDF  3DFB               	addwfc	___xxtofl@arg+1,f
 10988  0CE0  3000               	movlw	0
 10989  0CE1  3DFC               	addwfc	___xxtofl@arg+2,f
 10990  0CE2  3000               	movlw	0
 10991  0CE3  3DFD               	addwfc	___xxtofl@arg+3,f
 10992  0CE4                     l3211:
 10993  0CE4  3001               	movlw	1
 10994  0CE5                     u2895:
 10995  0CE5  36FD               	lsrf	___xxtofl@arg+3,f
 10996  0CE6  0CFC               	rrf	___xxtofl@arg+2,f
 10997  0CE7  0CFB               	rrf	___xxtofl@arg+1,f
 10998  0CE8  0CFA               	rrf	___xxtofl@arg,f
 10999  0CE9  0B89               	decfsz	9,f
 11000  0CEA  2CE5               	goto	u2895
 11001  0CEB                     l1047:
 11002  0CEB  30FF               	movlw	255
 11003  0CEC  057D               	andwf	___xxtofl@arg+3,w
 11004  0CED  1D03               	btfss	3,2
 11005  0CEE  2CF0               	goto	u2901
 11006  0CEF  2CF1               	goto	u2900
 11007  0CF0                     u2901:
 11008  0CF0  2CD8               	goto	l3207
 11009  0CF1                     u2900:
 11010  0CF1  2CFB               	goto	l3215
 11011  0CF2                     l3213:
 11012  0CF2  3001               	movlw	1
 11013  0CF3  02F9               	subwf	___xxtofl@exp,f
 11014  0CF4  3001               	movlw	1
 11015  0CF5                     u2915:
 11016  0CF5  35FA               	lslf	___xxtofl@arg,f
 11017  0CF6  0DFB               	rlf	___xxtofl@arg+1,f
 11018  0CF7  0DFC               	rlf	___xxtofl@arg+2,f
 11019  0CF8  0DFD               	rlf	___xxtofl@arg+3,f
 11020  0CF9  0B89               	decfsz	9,f
 11021  0CFA  2CF5               	goto	u2915
 11022  0CFB                     l3215:
 11023  0CFB  1BFC               	btfsc	___xxtofl@arg+2,7
 11024  0CFC  2CFE               	goto	u2921
 11025  0CFD  2CFF               	goto	u2920
 11026  0CFE                     u2921:
 11027  0CFE  2D05               	goto	l1054
 11028  0CFF                     u2920:
 11029  0CFF                     l3217:
 11030  0CFF  3002               	movlw	2
 11031  0D00  0279               	subwf	___xxtofl@exp,w
 11032  0D01  1803               	skipnc
 11033  0D02  2D04               	goto	u2931
 11034  0D03  2D05               	goto	u2930
 11035  0D04                     u2931:
 11036  0D04  2CF2               	goto	l3213
 11037  0D05                     u2930:
 11038  0D05                     l1054:
 11039  0D05  1879               	btfsc	___xxtofl@exp,0
 11040  0D06  2D08               	goto	u2941
 11041  0D07  2D09               	goto	u2940
 11042  0D08                     u2941:
 11043  0D08  2D11               	goto	l1055
 11044  0D09                     u2940:
 11045  0D09                     l3219:
 11046  0D09  30FF               	movlw	255
 11047  0D0A  05FA               	andwf	___xxtofl@arg,f
 11048  0D0B  30FF               	movlw	255
 11049  0D0C  05FB               	andwf	___xxtofl@arg+1,f
 11050  0D0D  307F               	movlw	127
 11051  0D0E  05FC               	andwf	___xxtofl@arg+2,f
 11052  0D0F  30FF               	movlw	255
 11053  0D10  05FD               	andwf	___xxtofl@arg+3,f
 11054  0D11                     l1055:
 11055  0D11  1003               	clrc
 11056  0D12  0CF9               	rrf	___xxtofl@exp,f
 11057  0D13                     l3221:
 11058  0D13  0879               	movf	___xxtofl@exp,w
 11059  0D14  00F4               	movwf	??___xxtofl
 11060  0D15  01F5               	clrf	??___xxtofl+1
 11061  0D16  01F6               	clrf	??___xxtofl+2
 11062  0D17  01F7               	clrf	??___xxtofl+3
 11063  0D18  3018               	movlw	24
 11064  0D19                     u2955:
 11065  0D19  35F4               	lslf	??___xxtofl,f
 11066  0D1A  0DF5               	rlf	??___xxtofl+1,f
 11067  0D1B  0DF6               	rlf	??___xxtofl+2,f
 11068  0D1C  0DF7               	rlf	??___xxtofl+3,f
 11069  0D1D                     u2950:
 11070  0D1D  0B89               	decfsz	9,f
 11071  0D1E  2D19               	goto	u2955
 11072  0D1F  0874               	movf	??___xxtofl,w
 11073  0D20  04FA               	iorwf	___xxtofl@arg,f
 11074  0D21  0875               	movf	??___xxtofl+1,w
 11075  0D22  04FB               	iorwf	___xxtofl@arg+1,f
 11076  0D23  0876               	movf	??___xxtofl+2,w
 11077  0D24  04FC               	iorwf	___xxtofl@arg+2,f
 11078  0D25  0877               	movf	??___xxtofl+3,w
 11079  0D26  04FD               	iorwf	___xxtofl@arg+3,f
 11080  0D27                     l3223:
 11081  0D27  0878               	movf	___xxtofl@sign,w
 11082  0D28  1903               	btfsc	3,2
 11083  0D29  2D2B               	goto	u2961
 11084  0D2A  2D2C               	goto	u2960
 11085  0D2B                     u2961:
 11086  0D2B  2D31               	goto	l3229
 11087  0D2C                     u2960:
 11088  0D2C                     l3225:
 11089  0D2C  1FF3               	btfss	___xxtofl@val+3,7
 11090  0D2D  2D2F               	goto	u2971
 11091  0D2E  2D30               	goto	u2970
 11092  0D2F                     u2971:
 11093  0D2F  2D31               	goto	l3229
 11094  0D30                     u2970:
 11095  0D30                     l3227:
 11096  0D30  17FD               	bsf	___xxtofl@arg+3,7
 11097  0D31                     l3229:
 11098  0D31  087D               	movf	___xxtofl@arg+3,w
 11099  0D32  00F3               	movwf	?___xxtofl+3
 11100  0D33  087C               	movf	___xxtofl@arg+2,w
 11101  0D34  00F2               	movwf	?___xxtofl+2
 11102  0D35  087B               	movf	___xxtofl@arg+1,w
 11103  0D36  00F1               	movwf	?___xxtofl+1
 11104  0D37  087A               	movf	___xxtofl@arg,w
 11105  0D38  00F0               	movwf	?___xxtofl
 11106  0D39                     l1043:
 11107  0D39  0008               	return
 11108  0D3A                     __end_of___xxtofl:
 11109                           
 11110                           	psect	text26
 11111  0067                     __ptext26:	
 11112 ;; *************** function ___flmul *****************
 11113 ;; Defined at:
 11114 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcmul.c"
 11115 ;; Parameters:    Size  Location     Type
 11116 ;;  b               4    0[BANK0 ] unsigned char 
 11117 ;;  a               4    4[BANK0 ] unsigned char 
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;  prod            4   20[BANK0 ] struct .
 11120 ;;  grs             4   14[BANK0 ] unsigned long 
 11121 ;;  temp            2   24[BANK0 ] struct .
 11122 ;;  bexp            1   19[BANK0 ] unsigned char 
 11123 ;;  aexp            1   18[BANK0 ] unsigned char 
 11124 ;;  sign            1   13[BANK0 ] unsigned char 
 11125 ;; Return value:  Size  Location     Type
 11126 ;;                  4    0[BANK0 ] unsigned char 
 11127 ;; Registers used:
 11128 ;;		wreg, status,2, status,0, pclath, cstack
 11129 ;; Tracked objects:
 11130 ;;		On entry : 0/0
 11131 ;;		On exit  : 0/0
 11132 ;;		Unchanged: 0/0
 11133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11134 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11135 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11136 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11137 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11138 ;;Total ram usage:       26 bytes
 11139 ;; Hardware stack levels used:    1
 11140 ;; Hardware stack levels required when called:    5
 11141 ;; This function calls:
 11142 ;;		__Umul8_16
 11143 ;; This function is called by:
 11144 ;;		_getTemp_TC
 11145 ;;		_getDieTemp
 11146 ;; This function uses a non-reentrant model
 11147 ;;
 11148                           
 11149                           
 11150                           ;psect for function ___flmul
 11151  0067                     ___flmul:
 11152  0067                     l3049:	
 11153                           ;incstack = 0
 11154                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 11155                           
 11156  0067  0020               	movlb	0	; select bank0
 11157  0068  0823               	movf	___flmul@b+3,w
 11158  0069  3980               	andlw	128
 11159  006A  00A8               	movwf	??___flmul
 11160  006B  0828               	movf	??___flmul,w
 11161  006C  00AD               	movwf	___flmul@sign
 11162  006D                     l3051:
 11163  006D  3523               	lslf	___flmul@b+3,w
 11164  006E  00A8               	movwf	??___flmul
 11165  006F  0828               	movf	??___flmul,w
 11166  0070  00B3               	movwf	___flmul@bexp
 11167  0071                     l3053:
 11168  0071  1FA2               	btfss	___flmul@b+2,7
 11169  0072  2874               	goto	u2581
 11170  0073  2875               	goto	u2580
 11171  0074                     u2581:
 11172  0074  2876               	goto	l3057
 11173  0075                     u2580:
 11174  0075                     l3055:
 11175  0075  1433               	bsf	___flmul@bexp,0
 11176  0076                     l3057:
 11177  0076  0833               	movf	___flmul@bexp,w
 11178  0077  1903               	btfsc	3,2
 11179  0078  287A               	goto	u2591
 11180  0079  287B               	goto	u2590
 11181  007A                     u2591:
 11182  007A  288A               	goto	l3065
 11183  007B                     u2590:
 11184  007B                     l3059:
 11185  007B  0A33               	incf	___flmul@bexp,w
 11186  007C  1D03               	btfss	3,2
 11187  007D  287F               	goto	u2601
 11188  007E  2880               	goto	u2600
 11189  007F                     u2601:
 11190  007F  2888               	goto	l3063
 11191  0080                     u2600:
 11192  0080                     l3061:
 11193  0080  3000               	movlw	0
 11194  0081  00A3               	movwf	___flmul@b+3
 11195  0082  3000               	movlw	0
 11196  0083  00A2               	movwf	___flmul@b+2
 11197  0084  3000               	movlw	0
 11198  0085  00A1               	movwf	___flmul@b+1
 11199  0086  3000               	movlw	0
 11200  0087  00A0               	movwf	___flmul@b
 11201  0088                     l3063:
 11202  0088  17A2               	bsf	___flmul@b+2,7
 11203  0089  2892               	goto	l3067
 11204  008A                     l3065:
 11205  008A  3000               	movlw	0
 11206  008B  00A3               	movwf	___flmul@b+3
 11207  008C  3000               	movlw	0
 11208  008D  00A2               	movwf	___flmul@b+2
 11209  008E  3000               	movlw	0
 11210  008F  00A1               	movwf	___flmul@b+1
 11211  0090  3000               	movlw	0
 11212  0091  00A0               	movwf	___flmul@b
 11213  0092                     l3067:
 11214  0092  0827               	movf	___flmul@a+3,w
 11215  0093  3980               	andlw	128
 11216  0094  00A8               	movwf	??___flmul
 11217  0095  0828               	movf	??___flmul,w
 11218  0096  06AD               	xorwf	___flmul@sign,f
 11219  0097                     l3069:
 11220  0097  3527               	lslf	___flmul@a+3,w
 11221  0098  00A8               	movwf	??___flmul
 11222  0099  0828               	movf	??___flmul,w
 11223  009A  00B2               	movwf	___flmul@aexp
 11224  009B                     l3071:
 11225  009B  1FA6               	btfss	___flmul@a+2,7
 11226  009C  289E               	goto	u2611
 11227  009D  289F               	goto	u2610
 11228  009E                     u2611:
 11229  009E  28A0               	goto	l3075
 11230  009F                     u2610:
 11231  009F                     l3073:
 11232  009F  1432               	bsf	___flmul@aexp,0
 11233  00A0                     l3075:
 11234  00A0  0832               	movf	___flmul@aexp,w
 11235  00A1  1903               	btfsc	3,2
 11236  00A2  28A4               	goto	u2621
 11237  00A3  28A5               	goto	u2620
 11238  00A4                     u2621:
 11239  00A4  28B4               	goto	l3083
 11240  00A5                     u2620:
 11241  00A5                     l3077:
 11242  00A5  0A32               	incf	___flmul@aexp,w
 11243  00A6  1D03               	btfss	3,2
 11244  00A7  28A9               	goto	u2631
 11245  00A8  28AA               	goto	u2630
 11246  00A9                     u2631:
 11247  00A9  28B2               	goto	l3081
 11248  00AA                     u2630:
 11249  00AA                     l3079:
 11250  00AA  3000               	movlw	0
 11251  00AB  00A7               	movwf	___flmul@a+3
 11252  00AC  3000               	movlw	0
 11253  00AD  00A6               	movwf	___flmul@a+2
 11254  00AE  3000               	movlw	0
 11255  00AF  00A5               	movwf	___flmul@a+1
 11256  00B0  3000               	movlw	0
 11257  00B1  00A4               	movwf	___flmul@a
 11258  00B2                     l3081:
 11259  00B2  17A6               	bsf	___flmul@a+2,7
 11260  00B3  28BC               	goto	l3085
 11261  00B4                     l3083:
 11262  00B4  3000               	movlw	0
 11263  00B5  00A7               	movwf	___flmul@a+3
 11264  00B6  3000               	movlw	0
 11265  00B7  00A6               	movwf	___flmul@a+2
 11266  00B8  3000               	movlw	0
 11267  00B9  00A5               	movwf	___flmul@a+1
 11268  00BA  3000               	movlw	0
 11269  00BB  00A4               	movwf	___flmul@a
 11270  00BC                     l3085:
 11271  00BC  0832               	movf	___flmul@aexp,w
 11272  00BD  1903               	btfsc	3,2
 11273  00BE  28C0               	goto	u2641
 11274  00BF  28C1               	goto	u2640
 11275  00C0                     u2641:
 11276  00C0  28C6               	goto	l3089
 11277  00C1                     u2640:
 11278  00C1                     l3087:
 11279  00C1  0833               	movf	___flmul@bexp,w
 11280  00C2  1D03               	btfss	3,2
 11281  00C3  28C5               	goto	u2651
 11282  00C4  28C6               	goto	u2650
 11283  00C5                     u2651:
 11284  00C5  28CF               	goto	l3093
 11285  00C6                     u2650:
 11286  00C6                     l3089:
 11287  00C6  3000               	movlw	0
 11288  00C7  00A3               	movwf	?___flmul+3
 11289  00C8  3000               	movlw	0
 11290  00C9  00A2               	movwf	?___flmul+2
 11291  00CA  3000               	movlw	0
 11292  00CB  00A1               	movwf	?___flmul+1
 11293  00CC  3000               	movlw	0
 11294  00CD  00A0               	movwf	?___flmul
 11295  00CE  2ABD               	goto	l997
 11296  00CF                     l3093:
 11297  00CF  0820               	movf	___flmul@b,w
 11298  00D0  00A8               	movwf	??___flmul
 11299  00D1  0828               	movf	??___flmul,w
 11300  00D2  00F0               	movwf	__Umul8_16@multiplicand
 11301  00D3  0826               	movf	___flmul@a+2,w
 11302  00D4  3197  2788  3180   	fcall	__Umul8_16
 11303  00D7  0871               	movf	?__Umul8_16+1,w
 11304  00D8  0020               	movlb	0	; select bank0
 11305  00D9  00B9               	movwf	___flmul@temp+1
 11306  00DA  0870               	movf	?__Umul8_16,w
 11307  00DB  00B8               	movwf	___flmul@temp
 11308  00DC                     l3095:
 11309  00DC  0838               	movf	___flmul@temp,w
 11310  00DD  00A8               	movwf	??___flmul
 11311  00DE  01A9               	clrf	??___flmul+1
 11312  00DF  01AA               	clrf	??___flmul+2
 11313  00E0  01AB               	clrf	??___flmul+3
 11314  00E1  082B               	movf	??___flmul+3,w
 11315  00E2  00B1               	movwf	___flmul@grs+3
 11316  00E3  082A               	movf	??___flmul+2,w
 11317  00E4  00B0               	movwf	___flmul@grs+2
 11318  00E5  0829               	movf	??___flmul+1,w
 11319  00E6  00AF               	movwf	___flmul@grs+1
 11320  00E7  0828               	movf	??___flmul,w
 11321  00E8  00AE               	movwf	___flmul@grs
 11322  00E9                     l3097:
 11323  00E9  0839               	movf	___flmul@temp+1,w
 11324  00EA  00A8               	movwf	??___flmul
 11325  00EB  01A9               	clrf	??___flmul+1
 11326  00EC  01AA               	clrf	??___flmul+2
 11327  00ED  01AB               	clrf	??___flmul+3
 11328  00EE  082B               	movf	??___flmul+3,w
 11329  00EF  00B7               	movwf	___flmul@prod+3
 11330  00F0  082A               	movf	??___flmul+2,w
 11331  00F1  00B6               	movwf	___flmul@prod+2
 11332  00F2  0829               	movf	??___flmul+1,w
 11333  00F3  00B5               	movwf	___flmul@prod+1
 11334  00F4  0828               	movf	??___flmul,w
 11335  00F5  00B4               	movwf	___flmul@prod
 11336  00F6  0821               	movf	___flmul@b+1,w
 11337  00F7  00A8               	movwf	??___flmul
 11338  00F8  0828               	movf	??___flmul,w
 11339  00F9  00F0               	movwf	__Umul8_16@multiplicand
 11340  00FA  0825               	movf	___flmul@a+1,w
 11341  00FB  3197  2788  3180   	fcall	__Umul8_16
 11342  00FE  0871               	movf	?__Umul8_16+1,w
 11343  00FF  0020               	movlb	0	; select bank0
 11344  0100  00B9               	movwf	___flmul@temp+1
 11345  0101  0870               	movf	?__Umul8_16,w
 11346  0102  00B8               	movwf	___flmul@temp
 11347  0103                     l3099:
 11348  0103  0838               	movf	___flmul@temp,w
 11349  0104  00A8               	movwf	??___flmul
 11350  0105  01A9               	clrf	??___flmul+1
 11351  0106  01AA               	clrf	??___flmul+2
 11352  0107  01AB               	clrf	??___flmul+3
 11353  0108  0828               	movf	??___flmul,w
 11354  0109  07AE               	addwf	___flmul@grs,f
 11355  010A  0829               	movf	??___flmul+1,w
 11356  010B  3DAF               	addwfc	___flmul@grs+1,f
 11357  010C  082A               	movf	??___flmul+2,w
 11358  010D  3DB0               	addwfc	___flmul@grs+2,f
 11359  010E  082B               	movf	??___flmul+3,w
 11360  010F  3DB1               	addwfc	___flmul@grs+3,f
 11361  0110                     l3101:
 11362  0110  0839               	movf	___flmul@temp+1,w
 11363  0111  00A8               	movwf	??___flmul
 11364  0112  01A9               	clrf	??___flmul+1
 11365  0113  01AA               	clrf	??___flmul+2
 11366  0114  01AB               	clrf	??___flmul+3
 11367  0115  0828               	movf	??___flmul,w
 11368  0116  07B4               	addwf	___flmul@prod,f
 11369  0117  0829               	movf	??___flmul+1,w
 11370  0118  3DB5               	addwfc	___flmul@prod+1,f
 11371  0119  082A               	movf	??___flmul+2,w
 11372  011A  3DB6               	addwfc	___flmul@prod+2,f
 11373  011B  082B               	movf	??___flmul+3,w
 11374  011C  3DB7               	addwfc	___flmul@prod+3,f
 11375  011D  0822               	movf	___flmul@b+2,w
 11376  011E  00A8               	movwf	??___flmul
 11377  011F  0828               	movf	??___flmul,w
 11378  0120  00F0               	movwf	__Umul8_16@multiplicand
 11379  0121  0824               	movf	___flmul@a,w
 11380  0122  3197  2788  3180   	fcall	__Umul8_16
 11381  0125  0871               	movf	?__Umul8_16+1,w
 11382  0126  0020               	movlb	0	; select bank0
 11383  0127  00B9               	movwf	___flmul@temp+1
 11384  0128  0870               	movf	?__Umul8_16,w
 11385  0129  00B8               	movwf	___flmul@temp
 11386  012A                     l3103:
 11387  012A  0838               	movf	___flmul@temp,w
 11388  012B  00A8               	movwf	??___flmul
 11389  012C  01A9               	clrf	??___flmul+1
 11390  012D  01AA               	clrf	??___flmul+2
 11391  012E  01AB               	clrf	??___flmul+3
 11392  012F  0828               	movf	??___flmul,w
 11393  0130  07AE               	addwf	___flmul@grs,f
 11394  0131  0829               	movf	??___flmul+1,w
 11395  0132  3DAF               	addwfc	___flmul@grs+1,f
 11396  0133  082A               	movf	??___flmul+2,w
 11397  0134  3DB0               	addwfc	___flmul@grs+2,f
 11398  0135  082B               	movf	??___flmul+3,w
 11399  0136  3DB1               	addwfc	___flmul@grs+3,f
 11400  0137                     l3105:
 11401  0137  0839               	movf	___flmul@temp+1,w
 11402  0138  00A8               	movwf	??___flmul
 11403  0139  01A9               	clrf	??___flmul+1
 11404  013A  01AA               	clrf	??___flmul+2
 11405  013B  01AB               	clrf	??___flmul+3
 11406  013C  0828               	movf	??___flmul,w
 11407  013D  07B4               	addwf	___flmul@prod,f
 11408  013E  0829               	movf	??___flmul+1,w
 11409  013F  3DB5               	addwfc	___flmul@prod+1,f
 11410  0140  082A               	movf	??___flmul+2,w
 11411  0141  3DB6               	addwfc	___flmul@prod+2,f
 11412  0142  082B               	movf	??___flmul+3,w
 11413  0143  3DB7               	addwfc	___flmul@prod+3,f
 11414  0144                     l3107:
 11415  0144  3008               	movlw	8
 11416  0145                     u2665:
 11417  0145  35AE               	lslf	___flmul@grs,f
 11418  0146  0DAF               	rlf	___flmul@grs+1,f
 11419  0147  0DB0               	rlf	___flmul@grs+2,f
 11420  0148  0DB1               	rlf	___flmul@grs+3,f
 11421  0149  0B89               	decfsz	9,f
 11422  014A  2945               	goto	u2665
 11423  014B                     l3109:
 11424  014B  0821               	movf	___flmul@b+1,w
 11425  014C  00A8               	movwf	??___flmul
 11426  014D  0828               	movf	??___flmul,w
 11427  014E  00F0               	movwf	__Umul8_16@multiplicand
 11428  014F  0824               	movf	___flmul@a,w
 11429  0150  3197  2788  3180   	fcall	__Umul8_16
 11430  0153  0871               	movf	?__Umul8_16+1,w
 11431  0154  0020               	movlb	0	; select bank0
 11432  0155  00B9               	movwf	___flmul@temp+1
 11433  0156  0870               	movf	?__Umul8_16,w
 11434  0157  00B8               	movwf	___flmul@temp
 11435  0158                     l3111:
 11436  0158  0838               	movf	___flmul@temp,w
 11437  0159  07AE               	addwf	___flmul@grs,f
 11438  015A  0839               	movf	___flmul@temp+1,w
 11439  015B  3DAF               	addwfc	___flmul@grs+1,f
 11440  015C  3000               	movlw	0
 11441  015D  3DB0               	addwfc	___flmul@grs+2,f
 11442  015E  3DB1               	addwfc	___flmul@grs+3,f
 11443  015F                     l3113:
 11444  015F  0820               	movf	___flmul@b,w
 11445  0160  00A8               	movwf	??___flmul
 11446  0161  0828               	movf	??___flmul,w
 11447  0162  00F0               	movwf	__Umul8_16@multiplicand
 11448  0163  0825               	movf	___flmul@a+1,w
 11449  0164  3197  2788  3180   	fcall	__Umul8_16
 11450  0167  0871               	movf	?__Umul8_16+1,w
 11451  0168  0020               	movlb	0	; select bank0
 11452  0169  00B9               	movwf	___flmul@temp+1
 11453  016A  0870               	movf	?__Umul8_16,w
 11454  016B  00B8               	movwf	___flmul@temp
 11455  016C                     l3115:
 11456  016C  0838               	movf	___flmul@temp,w
 11457  016D  07AE               	addwf	___flmul@grs,f
 11458  016E  0839               	movf	___flmul@temp+1,w
 11459  016F  3DAF               	addwfc	___flmul@grs+1,f
 11460  0170  3000               	movlw	0
 11461  0171  3DB0               	addwfc	___flmul@grs+2,f
 11462  0172  3DB1               	addwfc	___flmul@grs+3,f
 11463  0173                     l3117:
 11464  0173  3008               	movlw	8
 11465  0174                     u2675:
 11466  0174  35AE               	lslf	___flmul@grs,f
 11467  0175  0DAF               	rlf	___flmul@grs+1,f
 11468  0176  0DB0               	rlf	___flmul@grs+2,f
 11469  0177  0DB1               	rlf	___flmul@grs+3,f
 11470  0178  0B89               	decfsz	9,f
 11471  0179  2974               	goto	u2675
 11472  017A  0820               	movf	___flmul@b,w
 11473  017B  00A8               	movwf	??___flmul
 11474  017C  0828               	movf	??___flmul,w
 11475  017D  00F0               	movwf	__Umul8_16@multiplicand
 11476  017E  0824               	movf	___flmul@a,w
 11477  017F  3197  2788  3180   	fcall	__Umul8_16
 11478  0182  0871               	movf	?__Umul8_16+1,w
 11479  0183  0020               	movlb	0	; select bank0
 11480  0184  00B9               	movwf	___flmul@temp+1
 11481  0185  0870               	movf	?__Umul8_16,w
 11482  0186  00B8               	movwf	___flmul@temp
 11483  0187                     l3119:
 11484  0187  0838               	movf	___flmul@temp,w
 11485  0188  07AE               	addwf	___flmul@grs,f
 11486  0189  0839               	movf	___flmul@temp+1,w
 11487  018A  3DAF               	addwfc	___flmul@grs+1,f
 11488  018B  3000               	movlw	0
 11489  018C  3DB0               	addwfc	___flmul@grs+2,f
 11490  018D  3DB1               	addwfc	___flmul@grs+3,f
 11491  018E                     l3121:
 11492  018E  0821               	movf	___flmul@b+1,w
 11493  018F  00A8               	movwf	??___flmul
 11494  0190  0828               	movf	??___flmul,w
 11495  0191  00F0               	movwf	__Umul8_16@multiplicand
 11496  0192  0826               	movf	___flmul@a+2,w
 11497  0193  3197  2788  3180   	fcall	__Umul8_16
 11498  0196  0871               	movf	?__Umul8_16+1,w
 11499  0197  0020               	movlb	0	; select bank0
 11500  0198  00B9               	movwf	___flmul@temp+1
 11501  0199  0870               	movf	?__Umul8_16,w
 11502  019A  00B8               	movwf	___flmul@temp
 11503  019B  0838               	movf	___flmul@temp,w
 11504  019C  07B4               	addwf	___flmul@prod,f
 11505  019D  0839               	movf	___flmul@temp+1,w
 11506  019E  3DB5               	addwfc	___flmul@prod+1,f
 11507  019F  3000               	movlw	0
 11508  01A0  3DB6               	addwfc	___flmul@prod+2,f
 11509  01A1  3DB7               	addwfc	___flmul@prod+3,f
 11510  01A2                     l3123:
 11511  01A2  0822               	movf	___flmul@b+2,w
 11512  01A3  00A8               	movwf	??___flmul
 11513  01A4  0828               	movf	??___flmul,w
 11514  01A5  00F0               	movwf	__Umul8_16@multiplicand
 11515  01A6  0825               	movf	___flmul@a+1,w
 11516  01A7  3197  2788  3180   	fcall	__Umul8_16
 11517  01AA  0871               	movf	?__Umul8_16+1,w
 11518  01AB  0020               	movlb	0	; select bank0
 11519  01AC  00B9               	movwf	___flmul@temp+1
 11520  01AD  0870               	movf	?__Umul8_16,w
 11521  01AE  00B8               	movwf	___flmul@temp
 11522  01AF                     l3125:
 11523  01AF  0838               	movf	___flmul@temp,w
 11524  01B0  07B4               	addwf	___flmul@prod,f
 11525  01B1  0839               	movf	___flmul@temp+1,w
 11526  01B2  3DB5               	addwfc	___flmul@prod+1,f
 11527  01B3  3000               	movlw	0
 11528  01B4  3DB6               	addwfc	___flmul@prod+2,f
 11529  01B5  3DB7               	addwfc	___flmul@prod+3,f
 11530  01B6  0822               	movf	___flmul@b+2,w
 11531  01B7  00A8               	movwf	??___flmul
 11532  01B8  0828               	movf	??___flmul,w
 11533  01B9  00F0               	movwf	__Umul8_16@multiplicand
 11534  01BA  0826               	movf	___flmul@a+2,w
 11535  01BB  3197  2788  3180   	fcall	__Umul8_16
 11536  01BE  0871               	movf	?__Umul8_16+1,w
 11537  01BF  0020               	movlb	0	; select bank0
 11538  01C0  00B9               	movwf	___flmul@temp+1
 11539  01C1  0870               	movf	?__Umul8_16,w
 11540  01C2  00B8               	movwf	___flmul@temp
 11541  01C3                     l3127:
 11542  01C3  0838               	movf	___flmul@temp,w
 11543  01C4  00A8               	movwf	??___flmul
 11544  01C5  0839               	movf	___flmul@temp+1,w
 11545  01C6  00A9               	movwf	??___flmul+1
 11546  01C7  01AA               	clrf	??___flmul+2
 11547  01C8  01AB               	clrf	??___flmul+3
 11548  01C9  3008               	movlw	8
 11549  01CA                     u2685:
 11550  01CA  35A8               	lslf	??___flmul,f
 11551  01CB  0DA9               	rlf	??___flmul+1,f
 11552  01CC  0DAA               	rlf	??___flmul+2,f
 11553  01CD  0DAB               	rlf	??___flmul+3,f
 11554  01CE                     u2680:
 11555  01CE  0B89               	decfsz	9,f
 11556  01CF  29CA               	goto	u2685
 11557  01D0  0828               	movf	??___flmul,w
 11558  01D1  07B4               	addwf	___flmul@prod,f
 11559  01D2  0829               	movf	??___flmul+1,w
 11560  01D3  3DB5               	addwfc	___flmul@prod+1,f
 11561  01D4  082A               	movf	??___flmul+2,w
 11562  01D5  3DB6               	addwfc	___flmul@prod+2,f
 11563  01D6  082B               	movf	??___flmul+3,w
 11564  01D7  3DB7               	addwfc	___flmul@prod+3,f
 11565  01D8                     l3129:
 11566  01D8  082E               	movf	___flmul@grs,w
 11567  01D9  00A8               	movwf	??___flmul
 11568  01DA  082F               	movf	___flmul@grs+1,w
 11569  01DB  00A9               	movwf	??___flmul+1
 11570  01DC  0830               	movf	___flmul@grs+2,w
 11571  01DD  00AA               	movwf	??___flmul+2
 11572  01DE  0831               	movf	___flmul@grs+3,w
 11573  01DF  00AB               	movwf	??___flmul+3
 11574  01E0  3018               	movlw	24
 11575  01E1                     u2695:
 11576  01E1  36AB               	lsrf	??___flmul+3,f
 11577  01E2  0CAA               	rrf	??___flmul+2,f
 11578  01E3  0CA9               	rrf	??___flmul+1,f
 11579  01E4  0CA8               	rrf	??___flmul,f
 11580  01E5                     u2690:
 11581  01E5  0B89               	decfsz	9,f
 11582  01E6  29E1               	goto	u2695
 11583  01E7  0828               	movf	??___flmul,w
 11584  01E8  07B4               	addwf	___flmul@prod,f
 11585  01E9  0829               	movf	??___flmul+1,w
 11586  01EA  3DB5               	addwfc	___flmul@prod+1,f
 11587  01EB  082A               	movf	??___flmul+2,w
 11588  01EC  3DB6               	addwfc	___flmul@prod+2,f
 11589  01ED  082B               	movf	??___flmul+3,w
 11590  01EE  3DB7               	addwfc	___flmul@prod+3,f
 11591  01EF                     l3131:
 11592  01EF  3008               	movlw	8
 11593  01F0                     u2705:
 11594  01F0  35AE               	lslf	___flmul@grs,f
 11595  01F1  0DAF               	rlf	___flmul@grs+1,f
 11596  01F2  0DB0               	rlf	___flmul@grs+2,f
 11597  01F3  0DB1               	rlf	___flmul@grs+3,f
 11598  01F4  0B89               	decfsz	9,f
 11599  01F5  29F0               	goto	u2705
 11600  01F6                     l3133:
 11601  01F6  0833               	movf	___flmul@bexp,w
 11602  01F7  0732               	addwf	___flmul@aexp,w
 11603  01F8  00A8               	movwf	??___flmul
 11604  01F9  01A9               	clrf	??___flmul+1
 11605  01FA  0DA9               	rlf	??___flmul+1,f
 11606  01FB  0828               	movf	??___flmul,w
 11607  01FC  3E82               	addlw	130
 11608  01FD  00B8               	movwf	___flmul@temp
 11609  01FE  30FF               	movlw	255
 11610  01FF  3D29               	addwfc	??___flmul+1,w
 11611  0200  00B9               	movwf	___flmul@temp+1
 11612  0201  2A19               	goto	l3145
 11613  0202                     l3135:
 11614  0202  3001               	movlw	1
 11615  0203                     u2715:
 11616  0203  35B4               	lslf	___flmul@prod,f
 11617  0204  0DB5               	rlf	___flmul@prod+1,f
 11618  0205  0DB6               	rlf	___flmul@prod+2,f
 11619  0206  0DB7               	rlf	___flmul@prod+3,f
 11620  0207  0B89               	decfsz	9,f
 11621  0208  2A03               	goto	u2715
 11622  0209                     l3137:
 11623  0209  1FB1               	btfss	___flmul@grs+3,7
 11624  020A  2A0C               	goto	u2721
 11625  020B  2A0D               	goto	u2720
 11626  020C                     u2721:
 11627  020C  2A0E               	goto	l3141
 11628  020D                     u2720:
 11629  020D                     l3139:
 11630  020D  1434               	bsf	___flmul@prod,0
 11631  020E                     l3141:
 11632  020E  3001               	movlw	1
 11633  020F                     u2735:
 11634  020F  35AE               	lslf	___flmul@grs,f
 11635  0210  0DAF               	rlf	___flmul@grs+1,f
 11636  0211  0DB0               	rlf	___flmul@grs+2,f
 11637  0212  0DB1               	rlf	___flmul@grs+3,f
 11638  0213  0B89               	decfsz	9,f
 11639  0214  2A0F               	goto	u2735
 11640  0215                     l3143:
 11641  0215  30FF               	movlw	255
 11642  0216  07B8               	addwf	___flmul@temp,f
 11643  0217  30FF               	movlw	255
 11644  0218  3DB9               	addwfc	___flmul@temp+1,f
 11645  0219                     l3145:
 11646  0219  1FB6               	btfss	___flmul@prod+2,7
 11647  021A  2A1C               	goto	u2741
 11648  021B  2A1D               	goto	u2740
 11649  021C                     u2741:
 11650  021C  2A02               	goto	l3135
 11651  021D                     u2740:
 11652  021D                     l3147:
 11653  021D  01B2               	clrf	___flmul@aexp
 11654  021E                     l3149:
 11655  021E  1FB1               	btfss	___flmul@grs+3,7
 11656  021F  2A21               	goto	u2751
 11657  0220  2A22               	goto	u2750
 11658  0221                     u2751:
 11659  0221  2A3E               	goto	l3157
 11660  0222                     u2750:
 11661  0222                     l3151:
 11662  0222  30FF               	movlw	255
 11663  0223  052E               	andwf	___flmul@grs,w
 11664  0224  00A8               	movwf	??___flmul
 11665  0225  30FF               	movlw	255
 11666  0226  052F               	andwf	___flmul@grs+1,w
 11667  0227  00A9               	movwf	??___flmul+1
 11668  0228  30FF               	movlw	255
 11669  0229  0530               	andwf	___flmul@grs+2,w
 11670  022A  00AA               	movwf	??___flmul+2
 11671  022B  307F               	movlw	127
 11672  022C  0531               	andwf	___flmul@grs+3,w
 11673  022D  00AB               	movwf	??___flmul+3
 11674  022E  082B               	movf	??___flmul+3,w
 11675  022F  042A               	iorwf	??___flmul+2,w
 11676  0230  0429               	iorwf	??___flmul+1,w
 11677  0231  0428               	iorwf	??___flmul,w
 11678  0232  1903               	skipnz
 11679  0233  2A35               	goto	u2761
 11680  0234  2A36               	goto	u2760
 11681  0235                     u2761:
 11682  0235  2A39               	goto	l1003
 11683  0236                     u2760:
 11684  0236                     l3153:
 11685  0236  01B2               	clrf	___flmul@aexp
 11686  0237  0AB2               	incf	___flmul@aexp,f
 11687  0238  2A3E               	goto	l3157
 11688  0239                     l1003:
 11689  0239  1C34               	btfss	___flmul@prod,0
 11690  023A  2A3C               	goto	u2771
 11691  023B  2A3D               	goto	u2770
 11692  023C                     u2771:
 11693  023C  2A3E               	goto	l3157
 11694  023D                     u2770:
 11695  023D  2A36               	goto	l3153
 11696  023E                     l3157:
 11697  023E  0832               	movf	___flmul@aexp,w
 11698  023F  1903               	btfsc	3,2
 11699  0240  2A42               	goto	u2781
 11700  0241  2A43               	goto	u2780
 11701  0242                     u2781:
 11702  0242  2A6B               	goto	l3167
 11703  0243                     u2780:
 11704  0243                     l3159:
 11705  0243  3001               	movlw	1
 11706  0244  07B4               	addwf	___flmul@prod,f
 11707  0245  3000               	movlw	0
 11708  0246  3DB5               	addwfc	___flmul@prod+1,f
 11709  0247  3000               	movlw	0
 11710  0248  3DB6               	addwfc	___flmul@prod+2,f
 11711  0249  3000               	movlw	0
 11712  024A  3DB7               	addwfc	___flmul@prod+3,f
 11713  024B                     l3161:
 11714  024B  1C37               	btfss	___flmul@prod+3,0
 11715  024C  2A4E               	goto	u2791
 11716  024D  2A4F               	goto	u2790
 11717  024E                     u2791:
 11718  024E  2A6B               	goto	l3167
 11719  024F                     u2790:
 11720  024F                     l3163:
 11721  024F  0834               	movf	___flmul@prod,w
 11722  0250  00A8               	movwf	??___flmul
 11723  0251  0835               	movf	___flmul@prod+1,w
 11724  0252  00A9               	movwf	??___flmul+1
 11725  0253  0836               	movf	___flmul@prod+2,w
 11726  0254  00AA               	movwf	??___flmul+2
 11727  0255  0837               	movf	___flmul@prod+3,w
 11728  0256  00AB               	movwf	??___flmul+3
 11729  0257  3001               	movlw	1
 11730  0258  00AC               	movwf	??___flmul+4
 11731  0259                     u2805:
 11732  0259  37AB               	asrf	??___flmul+3,f
 11733  025A  0CAA               	rrf	??___flmul+2,f
 11734  025B  0CA9               	rrf	??___flmul+1,f
 11735  025C  0CA8               	rrf	??___flmul,f
 11736  025D                     u2800:
 11737  025D  0BAC               	decfsz	??___flmul+4,f
 11738  025E  2A59               	goto	u2805
 11739  025F  082B               	movf	??___flmul+3,w
 11740  0260  00B7               	movwf	___flmul@prod+3
 11741  0261  082A               	movf	??___flmul+2,w
 11742  0262  00B6               	movwf	___flmul@prod+2
 11743  0263  0829               	movf	??___flmul+1,w
 11744  0264  00B5               	movwf	___flmul@prod+1
 11745  0265  0828               	movf	??___flmul,w
 11746  0266  00B4               	movwf	___flmul@prod
 11747  0267                     l3165:
 11748  0267  3001               	movlw	1
 11749  0268  07B8               	addwf	___flmul@temp,f
 11750  0269  3000               	movlw	0
 11751  026A  3DB9               	addwfc	___flmul@temp+1,f
 11752  026B                     l3167:
 11753  026B  0839               	movf	___flmul@temp+1,w
 11754  026C  3A80               	xorlw	128
 11755  026D  00A8               	movwf	??___flmul
 11756  026E  3080               	movlw	128
 11757  026F  0228               	subwf	??___flmul,w
 11758  0270  1D03               	skipz
 11759  0271  2A74               	goto	u2815
 11760  0272  30FF               	movlw	255
 11761  0273  0238               	subwf	___flmul@temp,w
 11762  0274                     u2815:
 11763  0274  1C03               	skipc
 11764  0275  2A77               	goto	u2811
 11765  0276  2A78               	goto	u2810
 11766  0277                     u2811:
 11767  0277  2A82               	goto	l3171
 11768  0278                     u2810:
 11769  0278                     l3169:
 11770  0278  307F               	movlw	127
 11771  0279  0020               	movlb	0	; select bank0
 11772  027A  00B7               	movwf	___flmul@prod+3
 11773  027B  3080               	movlw	128
 11774  027C  00B6               	movwf	___flmul@prod+2
 11775  027D  3000               	movlw	0
 11776  027E  00B5               	movwf	___flmul@prod+1
 11777  027F  3000               	movlw	0
 11778  0280  00B4               	movwf	___flmul@prod
 11779  0281  2AB1               	goto	l1009
 11780  0282                     l3171:
 11781  0282  0020               	movlb	0	; select bank0
 11782  0283  0839               	movf	___flmul@temp+1,w
 11783  0284  3A80               	xorlw	128
 11784  0285  00A8               	movwf	??___flmul
 11785  0286  3080               	movlw	128
 11786  0287  0228               	subwf	??___flmul,w
 11787  0288  1D03               	skipz
 11788  0289  2A8C               	goto	u2825
 11789  028A  3001               	movlw	1
 11790  028B  0238               	subwf	___flmul@temp,w
 11791  028C                     u2825:
 11792  028C  1803               	skipnc
 11793  028D  2A8F               	goto	u2821
 11794  028E  2A90               	goto	u2820
 11795  028F                     u2821:
 11796  028F  2A9B               	goto	l3177
 11797  0290                     u2820:
 11798  0290                     l3173:
 11799  0290  3000               	movlw	0
 11800  0291  0020               	movlb	0	; select bank0
 11801  0292  00B7               	movwf	___flmul@prod+3
 11802  0293  3000               	movlw	0
 11803  0294  00B6               	movwf	___flmul@prod+2
 11804  0295  3000               	movlw	0
 11805  0296  00B5               	movwf	___flmul@prod+1
 11806  0297  3000               	movlw	0
 11807  0298  00B4               	movwf	___flmul@prod
 11808  0299                     l3175:
 11809  0299  01AD               	clrf	___flmul@sign
 11810  029A  2AB1               	goto	l1009
 11811  029B                     l3177:
 11812  029B  0020               	movlb	0	; select bank0
 11813  029C  0838               	movf	___flmul@temp,w
 11814  029D  00A8               	movwf	??___flmul
 11815  029E  0828               	movf	??___flmul,w
 11816  029F  00B3               	movwf	___flmul@bexp
 11817  02A0  30FF               	movlw	255
 11818  02A1  05B4               	andwf	___flmul@prod,f
 11819  02A2  30FF               	movlw	255
 11820  02A3  05B5               	andwf	___flmul@prod+1,f
 11821  02A4  307F               	movlw	127
 11822  02A5  05B6               	andwf	___flmul@prod+2,f
 11823  02A6  3000               	movlw	0
 11824  02A7  05B7               	andwf	___flmul@prod+3,f
 11825  02A8                     l3179:
 11826  02A8  1C33               	btfss	___flmul@bexp,0
 11827  02A9  2AAB               	goto	u2831
 11828  02AA  2AAC               	goto	u2830
 11829  02AB                     u2831:
 11830  02AB  2AAD               	goto	l3183
 11831  02AC                     u2830:
 11832  02AC                     l3181:
 11833  02AC  17B6               	bsf	___flmul@prod+2,7
 11834  02AD                     l3183:
 11835  02AD  3633               	lsrf	___flmul@bexp,w
 11836  02AE  00A8               	movwf	??___flmul
 11837  02AF  0828               	movf	??___flmul,w
 11838  02B0  00B7               	movwf	___flmul@prod+3
 11839  02B1                     l1009:
 11840  02B1  082D               	movf	___flmul@sign,w
 11841  02B2  00A8               	movwf	??___flmul
 11842  02B3  0828               	movf	??___flmul,w
 11843  02B4  04B7               	iorwf	___flmul@prod+3,f
 11844  02B5                     l3185:
 11845  02B5  0837               	movf	___flmul@prod+3,w
 11846  02B6  00A3               	movwf	?___flmul+3
 11847  02B7  0836               	movf	___flmul@prod+2,w
 11848  02B8  00A2               	movwf	?___flmul+2
 11849  02B9  0835               	movf	___flmul@prod+1,w
 11850  02BA  00A1               	movwf	?___flmul+1
 11851  02BB  0834               	movf	___flmul@prod,w
 11852  02BC  00A0               	movwf	?___flmul
 11853  02BD                     l997:
 11854  02BD  0008               	return
 11855  02BE                     __end_of___flmul:
 11856                           
 11857                           	psect	text27
 11858  1788                     __ptext27:	
 11859 ;; *************** function __Umul8_16 *****************
 11860 ;; Defined at:
 11861 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul8_16.c"
 11862 ;; Parameters:    Size  Location     Type
 11863 ;;  multiplier      1    wreg     unsigned char 
 11864 ;;  multiplicand    1    0[COMMON] unsigned char 
 11865 ;; Auto vars:     Size  Location     Type
 11866 ;;  multiplier      1    8[COMMON] unsigned char 
 11867 ;;  word_mpld       2    6[COMMON] unsigned int 
 11868 ;;  product         2    4[COMMON] unsigned int 
 11869 ;; Return value:  Size  Location     Type
 11870 ;;                  2    0[COMMON] unsigned int 
 11871 ;; Registers used:
 11872 ;;		wreg, status,2, status,0
 11873 ;; Tracked objects:
 11874 ;;		On entry : 0/0
 11875 ;;		On exit  : 0/0
 11876 ;;		Unchanged: 0/0
 11877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11879 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11880 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11881 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11882 ;;Total ram usage:        9 bytes
 11883 ;; Hardware stack levels used:    1
 11884 ;; Hardware stack levels required when called:    4
 11885 ;; This function calls:
 11886 ;;		Nothing
 11887 ;; This function is called by:
 11888 ;;		___flmul
 11889 ;; This function uses a non-reentrant model
 11890 ;;
 11891                           
 11892                           
 11893                           ;psect for function __Umul8_16
 11894  1788                     __Umul8_16:
 11895                           
 11896                           ;incstack = 0
 11897                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11898                           ;__Umul8_16@multiplier stored from wreg
 11899  1788  00F8               	movwf	__Umul8_16@multiplier
 11900  1789                     l2819:
 11901  1789  01F4               	clrf	__Umul8_16@product
 11902  178A  01F5               	clrf	__Umul8_16@product+1
 11903  178B                     l2821:
 11904  178B  0870               	movf	__Umul8_16@multiplicand,w
 11905  178C  00F2               	movwf	??__Umul8_16
 11906  178D  01F3               	clrf	??__Umul8_16+1
 11907  178E  0872               	movf	??__Umul8_16,w
 11908  178F  00F6               	movwf	__Umul8_16@word_mpld
 11909  1790  0873               	movf	??__Umul8_16+1,w
 11910  1791  00F7               	movwf	__Umul8_16@word_mpld+1
 11911  1792                     l2823:
 11912  1792  1C78               	btfss	__Umul8_16@multiplier,0
 11913  1793  2F95               	goto	u2341
 11914  1794  2F96               	goto	u2340
 11915  1795                     u2341:
 11916  1795  2F9A               	goto	l1016
 11917  1796                     u2340:
 11918  1796                     l2825:
 11919  1796  0876               	movf	__Umul8_16@word_mpld,w
 11920  1797  07F4               	addwf	__Umul8_16@product,f
 11921  1798  0877               	movf	__Umul8_16@word_mpld+1,w
 11922  1799  3DF5               	addwfc	__Umul8_16@product+1,f
 11923  179A                     l1016:
 11924  179A  3001               	movlw	1
 11925  179B                     u2355:
 11926  179B  35F6               	lslf	__Umul8_16@word_mpld,f
 11927  179C  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 11928  179D  0B89               	decfsz	9,f
 11929  179E  2F9B               	goto	u2355
 11930  179F  1003               	clrc
 11931  17A0  0CF8               	rrf	__Umul8_16@multiplier,f
 11932  17A1                     l2827:
 11933  17A1  0878               	movf	__Umul8_16@multiplier,w
 11934  17A2  1D03               	btfss	3,2
 11935  17A3  2FA5               	goto	u2361
 11936  17A4  2FA6               	goto	u2360
 11937  17A5                     u2361:
 11938  17A5  2F92               	goto	l2823
 11939  17A6                     u2360:
 11940  17A6                     l2829:
 11941  17A6  0875               	movf	__Umul8_16@product+1,w
 11942  17A7  00F1               	movwf	?__Umul8_16+1
 11943  17A8  0874               	movf	__Umul8_16@product,w
 11944  17A9  00F0               	movwf	?__Umul8_16
 11945  17AA                     l1018:
 11946  17AA  0008               	return
 11947  17AB                     __end_of__Umul8_16:
 11948                           
 11949                           	psect	text28
 11950  0783                     __ptext28:	
 11951 ;; *************** function ___fltol *****************
 11952 ;; Defined at:
 11953 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fltol.c"
 11954 ;; Parameters:    Size  Location     Type
 11955 ;;  f1              4    0[COMMON] unsigned int 
 11956 ;; Auto vars:     Size  Location     Type
 11957 ;;  exp1            1   10[COMMON] unsigned char 
 11958 ;;  sign1           1    9[COMMON] unsigned char 
 11959 ;; Return value:  Size  Location     Type
 11960 ;;                  4    0[COMMON] long 
 11961 ;; Registers used:
 11962 ;;		wreg, status,2, status,0
 11963 ;; Tracked objects:
 11964 ;;		On entry : 0/0
 11965 ;;		On exit  : 0/0
 11966 ;;		Unchanged: 0/0
 11967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11968 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11969 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11970 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11971 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11972 ;;Total ram usage:       11 bytes
 11973 ;; Hardware stack levels used:    1
 11974 ;; Hardware stack levels required when called:    4
 11975 ;; This function calls:
 11976 ;;		Nothing
 11977 ;; This function is called by:
 11978 ;;		_main
 11979 ;; This function uses a non-reentrant model
 11980 ;;
 11981                           
 11982                           
 11983                           ;psect for function ___fltol
 11984  0783                     ___fltol:
 11985  0783                     l3373:	
 11986                           ;incstack = 0
 11987                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 11988                           
 11989  0783  1003               	clrc
 11990  0784  0D72               	rlf	___fltol@f1+2,w
 11991  0785  0D73               	rlf	___fltol@f1+3,w
 11992  0786  00F4               	movwf	??___fltol
 11993  0787  0874               	movf	??___fltol,w
 11994  0788  00FA               	movwf	___fltol@exp1
 11995  0789  087A               	movf	___fltol@exp1,w
 11996  078A  1D03               	btfss	3,2
 11997  078B  2F8D               	goto	u3121
 11998  078C  2F8E               	goto	u3120
 11999  078D                     u3121:
 12000  078D  2F97               	goto	l3379
 12001  078E                     u3120:
 12002  078E                     l3375:
 12003  078E  3000               	movlw	0
 12004  078F  00F3               	movwf	?___fltol+3
 12005  0790  3000               	movlw	0
 12006  0791  00F2               	movwf	?___fltol+2
 12007  0792  3000               	movlw	0
 12008  0793  00F1               	movwf	?___fltol+1
 12009  0794  3000               	movlw	0
 12010  0795  00F0               	movwf	?___fltol
 12011  0796  2FF6               	goto	l794
 12012  0797                     l3379:
 12013  0797  0870               	movf	___fltol@f1,w
 12014  0798  00F4               	movwf	??___fltol
 12015  0799  0871               	movf	___fltol@f1+1,w
 12016  079A  00F5               	movwf	??___fltol+1
 12017  079B  0872               	movf	___fltol@f1+2,w
 12018  079C  00F6               	movwf	??___fltol+2
 12019  079D  0873               	movf	___fltol@f1+3,w
 12020  079E  00F7               	movwf	??___fltol+3
 12021  079F  301F               	movlw	31
 12022  07A0                     u3135:
 12023  07A0  36F7               	lsrf	??___fltol+3,f
 12024  07A1  0CF6               	rrf	??___fltol+2,f
 12025  07A2  0CF5               	rrf	??___fltol+1,f
 12026  07A3  0CF4               	rrf	??___fltol,f
 12027  07A4                     u3130:
 12028  07A4  0B89               	decfsz	9,f
 12029  07A5  2FA0               	goto	u3135
 12030  07A6  0874               	movf	??___fltol,w
 12031  07A7  00F8               	movwf	??___fltol+4
 12032  07A8  0878               	movf	??___fltol+4,w
 12033  07A9  00F9               	movwf	___fltol@sign1
 12034  07AA                     l3381:
 12035  07AA  17F2               	bsf	___fltol@f1+2,7
 12036  07AB                     l3383:
 12037  07AB  30FF               	movlw	255
 12038  07AC  05F0               	andwf	___fltol@f1,f
 12039  07AD  30FF               	movlw	255
 12040  07AE  05F1               	andwf	___fltol@f1+1,f
 12041  07AF  30FF               	movlw	255
 12042  07B0  05F2               	andwf	___fltol@f1+2,f
 12043  07B1  3000               	movlw	0
 12044  07B2  05F3               	andwf	___fltol@f1+3,f
 12045  07B3                     l3385:
 12046  07B3  3096               	movlw	150
 12047  07B4  02FA               	subwf	___fltol@exp1,f
 12048  07B5                     l3387:
 12049  07B5  1FFA               	btfss	___fltol@exp1,7
 12050  07B6  2FB8               	goto	u3141
 12051  07B7  2FB9               	goto	u3140
 12052  07B8                     u3141:
 12053  07B8  2FD1               	goto	l3397
 12054  07B9                     u3140:
 12055  07B9                     l3389:
 12056  07B9  087A               	movf	___fltol@exp1,w
 12057  07BA  3A80               	xorlw	128
 12058  07BB  3E97               	addlw	151
 12059  07BC  1803               	skipnc
 12060  07BD  2FBF               	goto	u3151
 12061  07BE  2FC0               	goto	u3150
 12062  07BF                     u3151:
 12063  07BF  2FC1               	goto	l3395
 12064  07C0                     u3150:
 12065  07C0  2F8E               	goto	l3375
 12066  07C1                     l3395:
 12067  07C1  3001               	movlw	1
 12068  07C2                     u3165:
 12069  07C2  36F3               	lsrf	___fltol@f1+3,f
 12070  07C3  0CF2               	rrf	___fltol@f1+2,f
 12071  07C4  0CF1               	rrf	___fltol@f1+1,f
 12072  07C5  0CF0               	rrf	___fltol@f1,f
 12073  07C6  0B89               	decfsz	9,f
 12074  07C7  2FC2               	goto	u3165
 12075  07C8  3001               	movlw	1
 12076  07C9  00F4               	movwf	??___fltol
 12077  07CA  0874               	movf	??___fltol,w
 12078  07CB  07FA               	addwf	___fltol@exp1,f
 12079  07CC  1D03               	btfss	3,2
 12080  07CD  2FCF               	goto	u3171
 12081  07CE  2FD0               	goto	u3170
 12082  07CF                     u3171:
 12083  07CF  2FC1               	goto	l3395
 12084  07D0                     u3170:
 12085  07D0  2FE6               	goto	l3405
 12086  07D1                     l3397:
 12087  07D1  3020               	movlw	32
 12088  07D2  027A               	subwf	___fltol@exp1,w
 12089  07D3  1C03               	skipc
 12090  07D4  2FD6               	goto	u3181
 12091  07D5  2FD7               	goto	u3180
 12092  07D6                     u3181:
 12093  07D6  2FE1               	goto	l801
 12094  07D7                     u3180:
 12095  07D7  2F8E               	goto	l3375
 12096  07D8                     l3403:
 12097  07D8  3001               	movlw	1
 12098  07D9                     u3195:
 12099  07D9  35F0               	lslf	___fltol@f1,f
 12100  07DA  0DF1               	rlf	___fltol@f1+1,f
 12101  07DB  0DF2               	rlf	___fltol@f1+2,f
 12102  07DC  0DF3               	rlf	___fltol@f1+3,f
 12103  07DD  0B89               	decfsz	9,f
 12104  07DE  2FD9               	goto	u3195
 12105  07DF  3001               	movlw	1
 12106  07E0  02FA               	subwf	___fltol@exp1,f
 12107  07E1                     l801:
 12108  07E1  087A               	movf	___fltol@exp1,w
 12109  07E2  1D03               	btfss	3,2
 12110  07E3  2FE5               	goto	u3201
 12111  07E4  2FE6               	goto	u3200
 12112  07E5                     u3201:
 12113  07E5  2FD8               	goto	l3403
 12114  07E6                     u3200:
 12115  07E6                     l3405:
 12116  07E6  0879               	movf	___fltol@sign1,w
 12117  07E7  1903               	btfsc	3,2
 12118  07E8  2FEA               	goto	u3211
 12119  07E9  2FEB               	goto	u3210
 12120  07EA                     u3211:
 12121  07EA  2FF6               	goto	l804
 12122  07EB                     u3210:
 12123  07EB                     l3407:
 12124  07EB  09F0               	comf	___fltol@f1,f
 12125  07EC  09F1               	comf	___fltol@f1+1,f
 12126  07ED  09F2               	comf	___fltol@f1+2,f
 12127  07EE  09F3               	comf	___fltol@f1+3,f
 12128  07EF  0AF0               	incf	___fltol@f1,f
 12129  07F0  1903               	skipnz
 12130  07F1  0AF1               	incf	___fltol@f1+1,f
 12131  07F2  1903               	skipnz
 12132  07F3  0AF2               	incf	___fltol@f1+2,f
 12133  07F4  1903               	skipnz
 12134  07F5  0AF3               	incf	___fltol@f1+3,f
 12135  07F6                     l804:
 12136  07F6                     l794:
 12137  07F6  0008               	return
 12138  07F7                     __end_of___fltol:
 12139                           
 12140                           	psect	text29
 12141  172B                     __ptext29:	
 12142 ;; *************** function _SYSTEM_Initialize *****************
 12143 ;; Defined at:
 12144 ;;		line 76 in file "mcc_generated_files/mcc.c"
 12145 ;; Parameters:    Size  Location     Type
 12146 ;;		None
 12147 ;; Auto vars:     Size  Location     Type
 12148 ;;		None
 12149 ;; Return value:  Size  Location     Type
 12150 ;;                  1    wreg      void 
 12151 ;; Registers used:
 12152 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12153 ;; Tracked objects:
 12154 ;;		On entry : 0/0
 12155 ;;		On exit  : 0/0
 12156 ;;		Unchanged: 0/0
 12157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12162 ;;Total ram usage:        0 bytes
 12163 ;; Hardware stack levels used:    1
 12164 ;; Hardware stack levels required when called:    8
 12165 ;; This function calls:
 12166 ;;		_ADC_Initialize
 12167 ;;		_OSCILLATOR_Initialize
 12168 ;;		_PIN_MANAGER_Initialize
 12169 ;;		_PWM3_Initialize
 12170 ;;		_PWM4_Initialize
 12171 ;;		_SPI_Initialize
 12172 ;;		_TMR2_Initialize
 12173 ;;		_TMR4_Initialize
 12174 ;;		_initDisplay
 12175 ;; This function is called by:
 12176 ;;		_main
 12177 ;; This function uses a non-reentrant model
 12178 ;;
 12179                           
 12180                           
 12181                           ;psect for function _SYSTEM_Initialize
 12182  172B                     _SYSTEM_Initialize:
 12183  172B                     l3233:	
 12184                           ;incstack = 0
 12185                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12186                           
 12187                           
 12188                           ;mcc_generated_files/mcc.c: 79:     PIN_MANAGER_Initialize();
 12189  172B  3189  213C  3197   	fcall	_PIN_MANAGER_Initialize
 12190                           
 12191                           ;mcc_generated_files/mcc.c: 80:     OSCILLATOR_Initialize();
 12192  172E  3195  25F7  3197   	fcall	_OSCILLATOR_Initialize
 12193                           
 12194                           ;mcc_generated_files/mcc.c: 81:     SPI_Initialize();
 12195  1731  3196  2602  3197   	fcall	_SPI_Initialize
 12196  1734                     l3235:
 12197                           
 12198                           ;mcc_generated_files/mcc.c: 82:     initDisplay();
 12199  1734  3197  27D4  3197   	fcall	_initDisplay
 12200  1737                     l3237:
 12201                           
 12202                           ;mcc_generated_files/mcc.c: 83:     ADC_Initialize();
 12203  1737  3196  261A  3197   	fcall	_ADC_Initialize
 12204  173A                     l3239:
 12205                           
 12206                           ;mcc_generated_files/mcc.c: 84:     PWM4_Initialize();
 12207  173A  3187  27F7  3197   	fcall	_PWM4_Initialize
 12208  173D                     l3241:
 12209                           
 12210                           ;mcc_generated_files/mcc.c: 85:     TMR4_Initialize();
 12211  173D  3196  26C3  3197   	fcall	_TMR4_Initialize
 12212  1740                     l3243:
 12213                           
 12214                           ;mcc_generated_files/mcc.c: 86:     PWM3_Initialize();
 12215  1740  3196  2623  3197   	fcall	_PWM3_Initialize
 12216  1743                     l3245:
 12217                           
 12218                           ;mcc_generated_files/mcc.c: 87:     TMR2_Initialize();
 12219  1743  3196  2643  3197   	fcall	_TMR2_Initialize
 12220  1746                     l27:
 12221  1746  0008               	return
 12222  1747                     __end_of_SYSTEM_Initialize:
 12223                           
 12224                           	psect	text30
 12225  17D4                     __ptext30:	
 12226 ;; *************** function _initDisplay *****************
 12227 ;; Defined at:
 12228 ;;		line 466 in file "main.c"
 12229 ;; Parameters:    Size  Location     Type
 12230 ;;		None
 12231 ;; Auto vars:     Size  Location     Type
 12232 ;;  i               2   12[COMMON] int 
 12233 ;; Return value:  Size  Location     Type
 12234 ;;                  1    wreg      void 
 12235 ;; Registers used:
 12236 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12237 ;; Tracked objects:
 12238 ;;		On entry : 0/0
 12239 ;;		On exit  : 0/0
 12240 ;;		Unchanged: 0/0
 12241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12243 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12244 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12245 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12246 ;;Total ram usage:        3 bytes
 12247 ;; Hardware stack levels used:    1
 12248 ;; Hardware stack levels required when called:    7
 12249 ;; This function calls:
 12250 ;;		_command
 12251 ;;		_dataCMD
 12252 ;;		_initOLED
 12253 ;; This function is called by:
 12254 ;;		_SYSTEM_Initialize
 12255 ;; This function uses a non-reentrant model
 12256 ;;
 12257                           
 12258                           
 12259                           ;psect for function _initDisplay
 12260  17D4                     _initDisplay:
 12261  17D4                     l2885:	
 12262                           ;incstack = 0
 12263                           ; Regs used in _initDisplay: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12264                           
 12265                           
 12266                           ;main.c: 468:     int i;;main.c: 469:     initOLED();
 12267  17D4  318B  23F7  3197   	fcall	_initOLED
 12268                           
 12269                           ;main.c: 470:     command(0x01);
 12270  17D7  3001               	movlw	1
 12271  17D8  318A  2285  3197   	fcall	_command
 12272  17DB                     l2887:
 12273                           
 12274                           ;main.c: 471:     _delay((unsigned long)((2)*(16000000/4000.0)));
 12275  17DB  300B               	movlw	11
 12276  17DC  00FB               	movwf	??_initDisplay
 12277  17DD  3062               	movlw	98
 12278  17DE                     u3477:
 12279  17DE  0B89               	decfsz	9,f
 12280  17DF  2FDE               	goto	u3477
 12281  17E0  0BFB               	decfsz	??_initDisplay,f
 12282  17E1  2FDE               	goto	u3477
 12283  17E2  3200               	nop2
 12284  17E3                     l2889:
 12285                           
 12286                           ;main.c: 472:     for(i=0;i<16;i++){
 12287  17E3  01FC               	clrf	initDisplay@i
 12288  17E4  01FD               	clrf	initDisplay@i+1
 12289  17E5                     l2895:
 12290                           
 12291                           ;main.c: 473:        dataCMD(text5[i]);
 12292  17E5  087C               	movf	initDisplay@i,w
 12293  17E6  3E53               	addlw	(low (_text5| (0+256)))& (0+255)
 12294  17E7  0086               	movwf	6
 12295  17E8  3001               	movlw	1	; select bank2/3
 12296  17E9  0087               	movwf	7
 12297  17EA  0801               	movf	1,w
 12298  17EB  318A  22E0  3197   	fcall	_dataCMD
 12299  17EE                     l2897:
 12300                           
 12301                           ;main.c: 474:     }
 12302  17EE  3001               	movlw	1
 12303  17EF  07FC               	addwf	initDisplay@i,f
 12304  17F0  3000               	movlw	0
 12305  17F1  3DFD               	addwfc	initDisplay@i+1,f
 12306  17F2                     l2899:
 12307  17F2  087D               	movf	initDisplay@i+1,w
 12308  17F3  3A80               	xorlw	128
 12309  17F4  00FB               	movwf	??_initDisplay
 12310  17F5  3080               	movlw	128
 12311  17F6  027B               	subwf	??_initDisplay,w
 12312  17F7  1D03               	skipz
 12313  17F8  2FFB               	goto	u2385
 12314  17F9  3010               	movlw	16
 12315  17FA  027C               	subwf	initDisplay@i,w
 12316  17FB                     u2385:
 12317  17FB  1C03               	skipc
 12318  17FC  2FFE               	goto	u2381
 12319  17FD  2FFF               	goto	u2380
 12320  17FE                     u2381:
 12321  17FE  2FE5               	goto	l2895
 12322  17FF                     u2380:
 12323  17FF                     l496:
 12324  17FF  0008               	return
 12325  1800                     __end_of_initDisplay:
 12326                           
 12327                           	psect	text31
 12328  0BF7                     __ptext31:	
 12329 ;; *************** function _initOLED *****************
 12330 ;; Defined at:
 12331 ;;		line 509 in file "main.c"
 12332 ;; Parameters:    Size  Location     Type
 12333 ;;		None
 12334 ;; Auto vars:     Size  Location     Type
 12335 ;;		None
 12336 ;; Return value:  Size  Location     Type
 12337 ;;                  1    wreg      void 
 12338 ;; Registers used:
 12339 ;;		wreg, status,2, status,0, pclath, cstack
 12340 ;; Tracked objects:
 12341 ;;		On entry : 0/0
 12342 ;;		On exit  : 0/0
 12343 ;;		Unchanged: 0/0
 12344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12347 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12348 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12349 ;;Total ram usage:        2 bytes
 12350 ;; Hardware stack levels used:    1
 12351 ;; Hardware stack levels required when called:    6
 12352 ;; This function calls:
 12353 ;;		_command
 12354 ;;		_dataCMD
 12355 ;; This function is called by:
 12356 ;;		_initDisplay
 12357 ;; This function uses a non-reentrant model
 12358 ;;
 12359                           
 12360                           
 12361                           ;psect for function _initOLED
 12362  0BF7                     _initOLED:
 12363  0BF7                     l2751:	
 12364                           ;incstack = 0
 12365                           ; Regs used in _initOLED: [wreg+status,2+status,0+pclath+cstack]
 12366                           
 12367                           
 12368                           ;main.c: 513:      LATC7 = 1;
 12369  0BF7  0022               	movlb	2	; select bank2
 12370  0BF8  178E               	bsf	14,7	;volatile
 12371  0BF9                     l2753:
 12372                           
 12373                           ;main.c: 515:     _delay((unsigned long)((100)*(16000000/4000.0)));
 12374  0BF9  3003               	movlw	3
 12375  0BFA  00FA               	movwf	??_initOLED+1
 12376  0BFB  3008               	movlw	8
 12377  0BFC  00F9               	movwf	??_initOLED
 12378  0BFD  3077               	movlw	119
 12379  0BFE                     u3487:
 12380  0BFE  0B89               	decfsz	9,f
 12381  0BFF  2BFE               	goto	u3487
 12382  0C00  0BF9               	decfsz	??_initOLED,f
 12383  0C01  2BFE               	goto	u3487
 12384  0C02  0BFA               	decfsz	??_initOLED+1,f
 12385  0C03  2BFE               	goto	u3487
 12386  0C04  0000               	nop
 12387  0C05                     l2755:
 12388                           
 12389                           ;main.c: 517:     command(0x2A);
 12390  0C05  302A               	movlw	42
 12391  0C06  318A  2285  318B   	fcall	_command
 12392  0C09                     l2757:
 12393                           
 12394                           ;main.c: 518:  command(0x71);
 12395  0C09  3071               	movlw	113
 12396  0C0A  318A  2285  318B   	fcall	_command
 12397  0C0D                     l2759:
 12398                           
 12399                           ;main.c: 519:  dataCMD(0x00);
 12400  0C0D  3000               	movlw	0
 12401  0C0E  318A  22E0  318B   	fcall	_dataCMD
 12402  0C11                     l2761:
 12403                           
 12404                           ;main.c: 520:  command(0x28);
 12405  0C11  3028               	movlw	40
 12406  0C12  318A  2285  318B   	fcall	_command
 12407  0C15                     l2763:
 12408                           
 12409                           ;main.c: 521:  command(0x08);
 12410  0C15  3008               	movlw	8
 12411  0C16  318A  2285  318B   	fcall	_command
 12412  0C19                     l2765:
 12413                           
 12414                           ;main.c: 522:  command(0x2A);
 12415  0C19  302A               	movlw	42
 12416  0C1A  318A  2285  318B   	fcall	_command
 12417  0C1D                     l2767:
 12418                           
 12419                           ;main.c: 523:  command(0x79);
 12420  0C1D  3079               	movlw	121
 12421  0C1E  318A  2285  318B   	fcall	_command
 12422  0C21                     l2769:
 12423                           
 12424                           ;main.c: 524:  command(0xD5);
 12425  0C21  30D5               	movlw	213
 12426  0C22  318A  2285  318B   	fcall	_command
 12427  0C25                     l2771:
 12428                           
 12429                           ;main.c: 525:  command(0x70);
 12430  0C25  3070               	movlw	112
 12431  0C26  318A  2285  318B   	fcall	_command
 12432  0C29                     l2773:
 12433                           
 12434                           ;main.c: 526:  command(0x78);
 12435  0C29  3078               	movlw	120
 12436  0C2A  318A  2285  318B   	fcall	_command
 12437  0C2D                     l2775:
 12438                           
 12439                           ;main.c: 527:  command(0x09);
 12440  0C2D  3009               	movlw	9
 12441  0C2E  318A  2285  318B   	fcall	_command
 12442  0C31                     l2777:
 12443                           
 12444                           ;main.c: 528:     command(0x06);
 12445  0C31  3006               	movlw	6
 12446  0C32  318A  2285  318B   	fcall	_command
 12447  0C35                     l2779:
 12448                           
 12449                           ;main.c: 529:  command(0x72);
 12450  0C35  3072               	movlw	114
 12451  0C36  318A  2285  318B   	fcall	_command
 12452  0C39                     l2781:
 12453                           
 12454                           ;main.c: 530:  dataCMD(0x00);
 12455  0C39  3000               	movlw	0
 12456  0C3A  318A  22E0  318B   	fcall	_dataCMD
 12457  0C3D                     l2783:
 12458                           
 12459                           ;main.c: 531:  command(0x2A);
 12460  0C3D  302A               	movlw	42
 12461  0C3E  318A  2285  318B   	fcall	_command
 12462  0C41                     l2785:
 12463                           
 12464                           ;main.c: 532:  command(0x79);
 12465  0C41  3079               	movlw	121
 12466  0C42  318A  2285  318B   	fcall	_command
 12467  0C45                     l2787:
 12468                           
 12469                           ;main.c: 533:  command(0xDA);
 12470  0C45  30DA               	movlw	218
 12471  0C46  318A  2285  318B   	fcall	_command
 12472  0C49                     l2789:
 12473                           
 12474                           ;main.c: 535:  command(0x00);
 12475  0C49  3000               	movlw	0
 12476  0C4A  318A  2285  318B   	fcall	_command
 12477  0C4D                     l2791:
 12478                           
 12479                           ;main.c: 536:  command(0xDC);
 12480  0C4D  30DC               	movlw	220
 12481  0C4E  318A  2285  318B   	fcall	_command
 12482  0C51                     l2793:
 12483                           
 12484                           ;main.c: 537:  command(0x00);
 12485  0C51  3000               	movlw	0
 12486  0C52  318A  2285  318B   	fcall	_command
 12487  0C55                     l2795:
 12488                           
 12489                           ;main.c: 538:  command(0x81);
 12490  0C55  3081               	movlw	129
 12491  0C56  318A  2285  318B   	fcall	_command
 12492  0C59                     l2797:
 12493                           
 12494                           ;main.c: 539:  command(0x7F);
 12495  0C59  307F               	movlw	127
 12496  0C5A  318A  2285  318B   	fcall	_command
 12497  0C5D                     l2799:
 12498                           
 12499                           ;main.c: 540:  command(0xD9);
 12500  0C5D  30D9               	movlw	217
 12501  0C5E  318A  2285  318B   	fcall	_command
 12502  0C61                     l2801:
 12503                           
 12504                           ;main.c: 541:  command(0xF1);
 12505  0C61  30F1               	movlw	241
 12506  0C62  318A  2285  318B   	fcall	_command
 12507  0C65                     l2803:
 12508                           
 12509                           ;main.c: 542:  command(0xDB);
 12510  0C65  30DB               	movlw	219
 12511  0C66  318A  2285  318B   	fcall	_command
 12512  0C69                     l2805:
 12513                           
 12514                           ;main.c: 543:  command(0x40);
 12515  0C69  3040               	movlw	64
 12516  0C6A  318A  2285  318B   	fcall	_command
 12517  0C6D                     l2807:
 12518                           
 12519                           ;main.c: 544:  command(0x78);
 12520  0C6D  3078               	movlw	120
 12521  0C6E  318A  2285  318B   	fcall	_command
 12522  0C71                     l2809:
 12523                           
 12524                           ;main.c: 545:  command(0x28);
 12525  0C71  3028               	movlw	40
 12526  0C72  318A  2285  318B   	fcall	_command
 12527  0C75                     l2811:
 12528                           
 12529                           ;main.c: 546:  command(0x01);
 12530  0C75  3001               	movlw	1
 12531  0C76  318A  2285  318B   	fcall	_command
 12532  0C79                     l2813:
 12533                           
 12534                           ;main.c: 547:  command(0x80);
 12535  0C79  3080               	movlw	128
 12536  0C7A  318A  2285  318B   	fcall	_command
 12537  0C7D                     l2815:
 12538                           
 12539                           ;main.c: 548:  command(0x0C);
 12540  0C7D  300C               	movlw	12
 12541  0C7E  318A  2285  318B   	fcall	_command
 12542  0C81                     l2817:
 12543                           
 12544                           ;main.c: 550:     _delay((unsigned long)((100)*(16000000/4000.0)));
 12545  0C81  3003               	movlw	3
 12546  0C82  00FA               	movwf	??_initOLED+1
 12547  0C83  3008               	movlw	8
 12548  0C84  00F9               	movwf	??_initOLED
 12549  0C85  3077               	movlw	119
 12550  0C86                     u3497:
 12551  0C86  0B89               	decfsz	9,f
 12552  0C87  2C86               	goto	u3497
 12553  0C88  0BF9               	decfsz	??_initOLED,f
 12554  0C89  2C86               	goto	u3497
 12555  0C8A  0BFA               	decfsz	??_initOLED+1,f
 12556  0C8B  2C86               	goto	u3497
 12557  0C8C  0000               	nop
 12558  0C8D                     l506:
 12559  0C8D  0008               	return
 12560  0C8E                     __end_of_initOLED:
 12561                           
 12562                           	psect	text32
 12563  0AE0                     __ptext32:	
 12564 ;; *************** function _dataCMD *****************
 12565 ;; Defined at:
 12566 ;;		line 477 in file "main.c"
 12567 ;; Parameters:    Size  Location     Type
 12568 ;;  s               1    wreg     unsigned char 
 12569 ;; Auto vars:     Size  Location     Type
 12570 ;;  s               1    5[COMMON] unsigned char 
 12571 ;;  i               2    6[COMMON] int 
 12572 ;;  sendByte        1    8[COMMON] unsigned char 
 12573 ;;  bit0            1    4[COMMON] unsigned char 
 12574 ;; Return value:  Size  Location     Type
 12575 ;;                  1    wreg      void 
 12576 ;; Registers used:
 12577 ;;		wreg, status,2, status,0, pclath, cstack
 12578 ;; Tracked objects:
 12579 ;;		On entry : 0/0
 12580 ;;		On exit  : 0/0
 12581 ;;		Unchanged: 0/0
 12582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12584 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12585 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12586 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12587 ;;Total ram usage:        7 bytes
 12588 ;; Hardware stack levels used:    1
 12589 ;; Hardware stack levels required when called:    5
 12590 ;; This function calls:
 12591 ;;		_spi_write
 12592 ;; This function is called by:
 12593 ;;		_main
 12594 ;;		_reportfault
 12595 ;;		_initDisplay
 12596 ;;		_initOLED
 12597 ;;		_printADCValues
 12598 ;; This function uses a non-reentrant model
 12599 ;;
 12600                           
 12601                           
 12602                           ;psect for function _dataCMD
 12603  0AE0                     _dataCMD:
 12604                           
 12605                           ;incstack = 0
 12606                           ; Regs used in _dataCMD: [wreg+status,2+status,0+pclath+cstack]
 12607                           ;dataCMD@s stored from wreg
 12608  0AE0  00F5               	movwf	dataCMD@s
 12609  0AE1                     l2653:
 12610                           
 12611                           ;main.c: 477: void dataCMD(unsigned char s);main.c: 478: {;main.c: 480:     LATB7 =0;
 12612  0AE1  0022               	movlb	2	; select bank2
 12613  0AE2  138D               	bcf	13,7	;volatile
 12614  0AE3                     l2655:
 12615                           
 12616                           ;main.c: 481:     spi_write('\xFA');
 12617  0AE3  30FA               	movlw	250
 12618  0AE4  3196  2650  318A   	fcall	_spi_write
 12619  0AE7                     l2657:
 12620  0AE7                     l2659:
 12621                           
 12622                           ;main.c: 484:  unsigned char sendByte = '\x00';
 12623  0AE7  01F8               	clrf	dataCMD@sendByte
 12624  0AE8                     l2661:
 12625                           
 12626                           ;main.c: 486:  for(int i=0; i< 8; i++)
 12627  0AE8  01F6               	clrf	dataCMD@i
 12628  0AE9  01F7               	clrf	dataCMD@i+1
 12629  0AEA                     l2667:
 12630                           
 12631                           ;main.c: 487:  {;main.c: 488:   bit0 = s & 1;
 12632  0AEA  0875               	movf	dataCMD@s,w
 12633  0AEB  3901               	andlw	1
 12634  0AEC  00F2               	movwf	??_dataCMD
 12635  0AED  0872               	movf	??_dataCMD,w
 12636  0AEE  00F4               	movwf	dataCMD@bit0
 12637  0AEF                     l2669:
 12638                           
 12639                           ;main.c: 490:   s = s >>1;
 12640  0AEF  3675               	lsrf	dataCMD@s,w
 12641  0AF0  00F2               	movwf	??_dataCMD
 12642  0AF1  0872               	movf	??_dataCMD,w
 12643  0AF2  00F5               	movwf	dataCMD@s
 12644  0AF3                     l2671:
 12645                           
 12646                           ;main.c: 491:   sendByte = sendByte <<1;
 12647  0AF3  3578               	lslf	dataCMD@sendByte,w
 12648  0AF4  00F2               	movwf	??_dataCMD
 12649  0AF5  0872               	movf	??_dataCMD,w
 12650  0AF6  00F8               	movwf	dataCMD@sendByte
 12651  0AF7                     l2673:
 12652                           
 12653                           ;main.c: 492:   if (bit0 == 1){
 12654  0AF7  0374               	decf	dataCMD@bit0,w
 12655  0AF8  1D03               	btfss	3,2
 12656  0AF9  2AFB               	goto	u2241
 12657  0AFA  2AFC               	goto	u2240
 12658  0AFB                     u2241:
 12659  0AFB  2B01               	goto	l2677
 12660  0AFC                     u2240:
 12661  0AFC                     l2675:
 12662                           
 12663                           ;main.c: 494:    sendByte= sendByte | 1;}
 12664  0AFC  0878               	movf	dataCMD@sendByte,w
 12665  0AFD  3801               	iorlw	1
 12666  0AFE  00F2               	movwf	??_dataCMD
 12667  0AFF  0872               	movf	??_dataCMD,w
 12668  0B00  00F8               	movwf	dataCMD@sendByte
 12669  0B01                     l2677:
 12670                           
 12671                           ;main.c: 495:   if (i==3)
 12672  0B01  3003               	movlw	3
 12673  0B02  0676               	xorwf	dataCMD@i,w
 12674  0B03  0477               	iorwf	dataCMD@i+1,w
 12675  0B04  1D03               	btfss	3,2
 12676  0B05  2B07               	goto	u2251
 12677  0B06  2B08               	goto	u2250
 12678  0B07                     u2251:
 12679  0B07  2B18               	goto	l2685
 12680  0B08                     u2250:
 12681  0B08                     l2679:
 12682                           
 12683                           ;main.c: 496:   {;main.c: 497:     sendByte = sendByte << 4;
 12684  0B08  0878               	movf	dataCMD@sendByte,w
 12685  0B09  00F2               	movwf	??_dataCMD
 12686  0B0A  3003               	movlw	3
 12687  0B0B                     u2265:
 12688  0B0B  35F2               	lslf	??_dataCMD,f
 12689  0B0C  3EFF               	addlw	-1
 12690  0B0D  1D03               	skipz
 12691  0B0E  2B0B               	goto	u2265
 12692  0B0F  3572               	lslf	??_dataCMD,w
 12693  0B10  00F3               	movwf	??_dataCMD+1
 12694  0B11  0873               	movf	??_dataCMD+1,w
 12695  0B12  00F8               	movwf	dataCMD@sendByte
 12696  0B13                     l2681:
 12697                           
 12698                           ;main.c: 498:     spi_write(sendByte);
 12699  0B13  0878               	movf	dataCMD@sendByte,w
 12700  0B14  3196  2650  318A   	fcall	_spi_write
 12701  0B17                     l2683:
 12702                           
 12703                           ;main.c: 499:     sendByte = '\x00';
 12704  0B17  01F8               	clrf	dataCMD@sendByte
 12705  0B18                     l2685:
 12706                           
 12707                           ;main.c: 501:  }
 12708  0B18  3001               	movlw	1
 12709  0B19  07F6               	addwf	dataCMD@i,f
 12710  0B1A  3000               	movlw	0
 12711  0B1B  3DF7               	addwfc	dataCMD@i+1,f
 12712  0B1C                     l2687:
 12713  0B1C  0877               	movf	dataCMD@i+1,w
 12714  0B1D  3A80               	xorlw	128
 12715  0B1E  00F2               	movwf	??_dataCMD
 12716  0B1F  3080               	movlw	128
 12717  0B20  0272               	subwf	??_dataCMD,w
 12718  0B21  1D03               	skipz
 12719  0B22  2B25               	goto	u2275
 12720  0B23  3008               	movlw	8
 12721  0B24  0276               	subwf	dataCMD@i,w
 12722  0B25                     u2275:
 12723  0B25  1C03               	skipc
 12724  0B26  2B28               	goto	u2271
 12725  0B27  2B29               	goto	u2270
 12726  0B28                     u2271:
 12727  0B28  2AEA               	goto	l2667
 12728  0B29                     u2270:
 12729  0B29                     l2689:
 12730                           
 12731                           ;main.c: 502:       sendByte = sendByte << 4;
 12732  0B29  0878               	movf	dataCMD@sendByte,w
 12733  0B2A  00F2               	movwf	??_dataCMD
 12734  0B2B  3003               	movlw	3
 12735  0B2C                     u2285:
 12736  0B2C  35F2               	lslf	??_dataCMD,f
 12737  0B2D  3EFF               	addlw	-1
 12738  0B2E  1D03               	skipz
 12739  0B2F  2B2C               	goto	u2285
 12740  0B30  3572               	lslf	??_dataCMD,w
 12741  0B31  00F3               	movwf	??_dataCMD+1
 12742  0B32  0873               	movf	??_dataCMD+1,w
 12743  0B33  00F8               	movwf	dataCMD@sendByte
 12744  0B34                     l2691:
 12745                           
 12746                           ;main.c: 503:    spi_write(sendByte);
 12747  0B34  0878               	movf	dataCMD@sendByte,w
 12748  0B35  3196  2650  318A   	fcall	_spi_write
 12749  0B38                     l2693:
 12750                           
 12751                           ;main.c: 506:    LATB7=1;
 12752  0B38  0022               	movlb	2	; select bank2
 12753  0B39  178D               	bsf	13,7	;volatile
 12754  0B3A                     l503:
 12755  0B3A  0008               	return
 12756  0B3B                     __end_of_dataCMD:
 12757                           
 12758                           	psect	text33
 12759  0A85                     __ptext33:	
 12760 ;; *************** function _command *****************
 12761 ;; Defined at:
 12762 ;;		line 434 in file "main.c"
 12763 ;; Parameters:    Size  Location     Type
 12764 ;;  s               1    wreg     unsigned char 
 12765 ;; Auto vars:     Size  Location     Type
 12766 ;;  s               1    5[COMMON] unsigned char 
 12767 ;;  i               2    6[COMMON] int 
 12768 ;;  sendByte        1    8[COMMON] unsigned char 
 12769 ;;  bit0            1    4[COMMON] unsigned char 
 12770 ;; Return value:  Size  Location     Type
 12771 ;;                  1    wreg      void 
 12772 ;; Registers used:
 12773 ;;		wreg, status,2, status,0, pclath, cstack
 12774 ;; Tracked objects:
 12775 ;;		On entry : 0/0
 12776 ;;		On exit  : 0/0
 12777 ;;		Unchanged: 0/0
 12778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12780 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12781 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12782 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12783 ;;Total ram usage:        7 bytes
 12784 ;; Hardware stack levels used:    1
 12785 ;; Hardware stack levels required when called:    5
 12786 ;; This function calls:
 12787 ;;		_spi_write
 12788 ;; This function is called by:
 12789 ;;		_main
 12790 ;;		_reportfault
 12791 ;;		_initDisplay
 12792 ;;		_initOLED
 12793 ;;		_printADCValues
 12794 ;; This function uses a non-reentrant model
 12795 ;;
 12796                           
 12797                           
 12798                           ;psect for function _command
 12799  0A85                     _command:
 12800                           
 12801                           ;incstack = 0
 12802                           ; Regs used in _command: [wreg+status,2+status,0+pclath+cstack]
 12803                           ;command@s stored from wreg
 12804  0A85  00F5               	movwf	command@s
 12805  0A86                     l2611:
 12806                           
 12807                           ;main.c: 434: void command(unsigned char s);main.c: 435: {;main.c: 437:     LATB7=0;
 12808  0A86  0022               	movlb	2	; select bank2
 12809  0A87  138D               	bcf	13,7	;volatile
 12810  0A88                     l2613:
 12811                           
 12812                           ;main.c: 438:     spi_write('\xF8');
 12813  0A88  30F8               	movlw	248
 12814  0A89  3196  2650  318A   	fcall	_spi_write
 12815  0A8C                     l2615:
 12816  0A8C                     l2617:
 12817                           
 12818                           ;main.c: 441:  unsigned char sendByte = '\x00';
 12819  0A8C  01F8               	clrf	command@sendByte
 12820  0A8D                     l2619:
 12821                           
 12822                           ;main.c: 443:  for(int i=0; i< 8; i++)
 12823  0A8D  01F6               	clrf	command@i
 12824  0A8E  01F7               	clrf	command@i+1
 12825  0A8F                     l2625:
 12826                           
 12827                           ;main.c: 444:  {;main.c: 445:   bit0 = s & 1;
 12828  0A8F  0875               	movf	command@s,w
 12829  0A90  3901               	andlw	1
 12830  0A91  00F2               	movwf	??_command
 12831  0A92  0872               	movf	??_command,w
 12832  0A93  00F4               	movwf	command@bit0
 12833  0A94                     l2627:
 12834                           
 12835                           ;main.c: 447:   s = s >> 1;
 12836  0A94  3675               	lsrf	command@s,w
 12837  0A95  00F2               	movwf	??_command
 12838  0A96  0872               	movf	??_command,w
 12839  0A97  00F5               	movwf	command@s
 12840  0A98                     l2629:
 12841                           
 12842                           ;main.c: 448:   sendByte = sendByte << 1;
 12843  0A98  3578               	lslf	command@sendByte,w
 12844  0A99  00F2               	movwf	??_command
 12845  0A9A  0872               	movf	??_command,w
 12846  0A9B  00F8               	movwf	command@sendByte
 12847  0A9C                     l2631:
 12848                           
 12849                           ;main.c: 449:   if (bit0 == 1){
 12850  0A9C  0374               	decf	command@bit0,w
 12851  0A9D  1D03               	btfss	3,2
 12852  0A9E  2AA0               	goto	u2191
 12853  0A9F  2AA1               	goto	u2190
 12854  0AA0                     u2191:
 12855  0AA0  2AA6               	goto	l2635
 12856  0AA1                     u2190:
 12857  0AA1                     l2633:
 12858                           
 12859                           ;main.c: 451:    sendByte= sendByte | 1;}
 12860  0AA1  0878               	movf	command@sendByte,w
 12861  0AA2  3801               	iorlw	1
 12862  0AA3  00F2               	movwf	??_command
 12863  0AA4  0872               	movf	??_command,w
 12864  0AA5  00F8               	movwf	command@sendByte
 12865  0AA6                     l2635:
 12866                           
 12867                           ;main.c: 452:   if (i==3)
 12868  0AA6  3003               	movlw	3
 12869  0AA7  0676               	xorwf	command@i,w
 12870  0AA8  0477               	iorwf	command@i+1,w
 12871  0AA9  1D03               	btfss	3,2
 12872  0AAA  2AAC               	goto	u2201
 12873  0AAB  2AAD               	goto	u2200
 12874  0AAC                     u2201:
 12875  0AAC  2ABD               	goto	l2643
 12876  0AAD                     u2200:
 12877  0AAD                     l2637:
 12878                           
 12879                           ;main.c: 453:   {;main.c: 454:     sendByte = sendByte << 4;
 12880  0AAD  0878               	movf	command@sendByte,w
 12881  0AAE  00F2               	movwf	??_command
 12882  0AAF  3003               	movlw	3
 12883  0AB0                     u2215:
 12884  0AB0  35F2               	lslf	??_command,f
 12885  0AB1  3EFF               	addlw	-1
 12886  0AB2  1D03               	skipz
 12887  0AB3  2AB0               	goto	u2215
 12888  0AB4  3572               	lslf	??_command,w
 12889  0AB5  00F3               	movwf	??_command+1
 12890  0AB6  0873               	movf	??_command+1,w
 12891  0AB7  00F8               	movwf	command@sendByte
 12892  0AB8                     l2639:
 12893                           
 12894                           ;main.c: 455:     spi_write(sendByte);
 12895  0AB8  0878               	movf	command@sendByte,w
 12896  0AB9  3196  2650  318A   	fcall	_spi_write
 12897  0ABC                     l2641:
 12898                           
 12899                           ;main.c: 456:     sendByte = '\x00';
 12900  0ABC  01F8               	clrf	command@sendByte
 12901  0ABD                     l2643:
 12902                           
 12903                           ;main.c: 458:  }
 12904  0ABD  3001               	movlw	1
 12905  0ABE  07F6               	addwf	command@i,f
 12906  0ABF  3000               	movlw	0
 12907  0AC0  3DF7               	addwfc	command@i+1,f
 12908  0AC1                     l2645:
 12909  0AC1  0877               	movf	command@i+1,w
 12910  0AC2  3A80               	xorlw	128
 12911  0AC3  00F2               	movwf	??_command
 12912  0AC4  3080               	movlw	128
 12913  0AC5  0272               	subwf	??_command,w
 12914  0AC6  1D03               	skipz
 12915  0AC7  2ACA               	goto	u2225
 12916  0AC8  3008               	movlw	8
 12917  0AC9  0276               	subwf	command@i,w
 12918  0ACA                     u2225:
 12919  0ACA  1C03               	skipc
 12920  0ACB  2ACD               	goto	u2221
 12921  0ACC  2ACE               	goto	u2220
 12922  0ACD                     u2221:
 12923  0ACD  2A8F               	goto	l2625
 12924  0ACE                     u2220:
 12925  0ACE                     l2647:
 12926                           
 12927                           ;main.c: 459:       sendByte = sendByte << 4;
 12928  0ACE  0878               	movf	command@sendByte,w
 12929  0ACF  00F2               	movwf	??_command
 12930  0AD0  3003               	movlw	3
 12931  0AD1                     u2235:
 12932  0AD1  35F2               	lslf	??_command,f
 12933  0AD2  3EFF               	addlw	-1
 12934  0AD3  1D03               	skipz
 12935  0AD4  2AD1               	goto	u2235
 12936  0AD5  3572               	lslf	??_command,w
 12937  0AD6  00F3               	movwf	??_command+1
 12938  0AD7  0873               	movf	??_command+1,w
 12939  0AD8  00F8               	movwf	command@sendByte
 12940  0AD9                     l2649:
 12941                           
 12942                           ;main.c: 460:    spi_write(sendByte);
 12943  0AD9  0878               	movf	command@sendByte,w
 12944  0ADA  3196  2650  318A   	fcall	_spi_write
 12945  0ADD                     l2651:
 12946                           
 12947                           ;main.c: 463:    LATB7=1;
 12948  0ADD  0022               	movlb	2	; select bank2
 12949  0ADE  178D               	bsf	13,7	;volatile
 12950  0ADF                     l491:
 12951  0ADF  0008               	return
 12952  0AE0                     __end_of_command:
 12953                           
 12954                           	psect	text34
 12955  1650                     __ptext34:	
 12956 ;; *************** function _spi_write *****************
 12957 ;; Defined at:
 12958 ;;		line 83 in file "mcc_generated_files/spi.c"
 12959 ;; Parameters:    Size  Location     Type
 12960 ;;  spiByte         1    wreg     unsigned char 
 12961 ;; Auto vars:     Size  Location     Type
 12962 ;;  spiByte         1    1[COMMON] unsigned char 
 12963 ;; Return value:  Size  Location     Type
 12964 ;;                  1    wreg      void 
 12965 ;; Registers used:
 12966 ;;		wreg
 12967 ;; Tracked objects:
 12968 ;;		On entry : 0/0
 12969 ;;		On exit  : 0/0
 12970 ;;		Unchanged: 0/0
 12971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12974 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12975 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12976 ;;Total ram usage:        2 bytes
 12977 ;; Hardware stack levels used:    1
 12978 ;; Hardware stack levels required when called:    4
 12979 ;; This function calls:
 12980 ;;		Nothing
 12981 ;; This function is called by:
 12982 ;;		_command
 12983 ;;		_dataCMD
 12984 ;; This function uses a non-reentrant model
 12985 ;;
 12986                           
 12987                           
 12988                           ;psect for function _spi_write
 12989  1650                     _spi_write:
 12990                           
 12991                           ;incstack = 0
 12992                           ; Regs used in _spi_write: [wreg]
 12993                           ;spi_write@spiByte stored from wreg
 12994  1650  00F1               	movwf	spi_write@spiByte
 12995  1651                     l2549:
 12996                           
 12997                           ;mcc_generated_files/spi.c: 83: void spi_write(unsigned char spiByte);mcc_generated_file
      +                          s/spi.c: 84: {;mcc_generated_files/spi.c: 85:      SSPBUF=spiByte;
 12998  1651  0871               	movf	spi_write@spiByte,w
 12999  1652  0024               	movlb	4	; select bank4
 13000  1653  0091               	movwf	17	;volatile
 13001  1654                     l58:	
 13002                           ;mcc_generated_files/spi.c: 87:      while(!BF );
 13003                           
 13004  1654  1C14               	btfss	20,0	;volatile
 13005  1655  2E57               	goto	u2021
 13006  1656  2E58               	goto	u2020
 13007  1657                     u2021:
 13008  1657  2E54               	goto	l58
 13009  1658                     u2020:
 13010  1658                     l2551:
 13011                           
 13012                           ;mcc_generated_files/spi.c: 88:      dummy= SSPBUF;
 13013  1658  0811               	movf	17,w	;volatile
 13014  1659  00F0               	movwf	??_spi_write
 13015  165A  0870               	movf	??_spi_write,w
 13016  165B  0021               	movlb	1	; select bank1
 13017  165C  00D8               	movwf	_dummy^(0+128)
 13018  165D                     l61:
 13019  165D  0008               	return
 13020  165E                     __end_of_spi_write:
 13021                           
 13022                           	psect	text35
 13023  16C3                     __ptext35:	
 13024 ;; *************** function _TMR4_Initialize *****************
 13025 ;; Defined at:
 13026 ;;		line 63 in file "mcc_generated_files/tmr4.c"
 13027 ;; Parameters:    Size  Location     Type
 13028 ;;		None
 13029 ;; Auto vars:     Size  Location     Type
 13030 ;;		None
 13031 ;; Return value:  Size  Location     Type
 13032 ;;                  1    wreg      void 
 13033 ;; Registers used:
 13034 ;;		wreg, status,2, status,0, pclath, cstack
 13035 ;; Tracked objects:
 13036 ;;		On entry : 0/0
 13037 ;;		On exit  : 0/0
 13038 ;;		Unchanged: 0/0
 13039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13044 ;;Total ram usage:        0 bytes
 13045 ;; Hardware stack levels used:    1
 13046 ;; Hardware stack levels required when called:    5
 13047 ;; This function calls:
 13048 ;;		_TMR4_SetInterruptHandler
 13049 ;;		_TMR4_Start
 13050 ;; This function is called by:
 13051 ;;		_SYSTEM_Initialize
 13052 ;; This function uses a non-reentrant model
 13053 ;;
 13054                           
 13055                           
 13056                           ;psect for function _TMR4_Initialize
 13057  16C3                     _TMR4_Initialize:
 13058  16C3                     l2917:	
 13059                           ;incstack = 0
 13060                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13061                           
 13062                           
 13063                           ;mcc_generated_files/tmr4.c: 68:     T4CON = 0x79;
 13064  16C3  3079               	movlw	121
 13065  16C4  0028               	movlb	8	; select bank8
 13066  16C5  0095               	movwf	21	;volatile
 13067                           
 13068                           ;mcc_generated_files/tmr4.c: 71:     T4CLKCON = 0x03;
 13069  16C6  3003               	movlw	3
 13070  16C7  0097               	movwf	23	;volatile
 13071  16C8                     l2919:
 13072                           
 13073                           ;mcc_generated_files/tmr4.c: 74:     T4HLT = 0x00;
 13074  16C8  0196               	clrf	22	;volatile
 13075  16C9                     l2921:
 13076                           
 13077                           ;mcc_generated_files/tmr4.c: 77:     T4RST = 0x00;
 13078  16C9  0198               	clrf	24	;volatile
 13079                           
 13080                           ;mcc_generated_files/tmr4.c: 80:     T4PR = 0x17;
 13081  16CA  3017               	movlw	23
 13082  16CB  0094               	movwf	20	;volatile
 13083  16CC                     l2923:
 13084                           
 13085                           ;mcc_generated_files/tmr4.c: 83:     T4TMR = 0x00;
 13086  16CC  0193               	clrf	19	;volatile
 13087  16CD                     l2925:
 13088                           
 13089                           ;mcc_generated_files/tmr4.c: 86:     PIR2bits.TMR4IF = 0;
 13090  16CD  0020               	movlb	0	; select bank0
 13091  16CE  1091               	bcf	17,1	;volatile
 13092  16CF                     l2927:
 13093                           
 13094                           ;mcc_generated_files/tmr4.c: 89:     PIE2bits.TMR4IE = 1;
 13095  16CF  0021               	movlb	1	; select bank1
 13096  16D0  1491               	bsf	17,1	;volatile
 13097  16D1                     l2929:
 13098                           
 13099                           ;mcc_generated_files/tmr4.c: 92:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 13100  16D1  3002               	movlw	low _TMR4_DefaultInterruptHandler
 13101  16D2  00F0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
 13102  16D3  3000               	movlw	high _TMR4_DefaultInterruptHandler
 13103  16D4  00F1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
 13104  16D5  3196  2608  3196   	fcall	_TMR4_SetInterruptHandler
 13105  16D8                     l2931:
 13106                           
 13107                           ;mcc_generated_files/tmr4.c: 95:     TMR4_Start();
 13108  16D8  3195  25F4  3196   	fcall	_TMR4_Start
 13109  16DB                     l294:
 13110  16DB  0008               	return
 13111  16DC                     __end_of_TMR4_Initialize:
 13112                           
 13113                           	psect	text36
 13114  15F4                     __ptext36:	
 13115 ;; *************** function _TMR4_Start *****************
 13116 ;; Defined at:
 13117 ;;		line 110 in file "mcc_generated_files/tmr4.c"
 13118 ;; Parameters:    Size  Location     Type
 13119 ;;		None
 13120 ;; Auto vars:     Size  Location     Type
 13121 ;;		None
 13122 ;; Return value:  Size  Location     Type
 13123 ;;                  1    wreg      void 
 13124 ;; Registers used:
 13125 ;;		None
 13126 ;; Tracked objects:
 13127 ;;		On entry : 0/0
 13128 ;;		On exit  : 0/0
 13129 ;;		Unchanged: 0/0
 13130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13135 ;;Total ram usage:        0 bytes
 13136 ;; Hardware stack levels used:    1
 13137 ;; Hardware stack levels required when called:    4
 13138 ;; This function calls:
 13139 ;;		Nothing
 13140 ;; This function is called by:
 13141 ;;		_TMR4_Initialize
 13142 ;;		_TMR4_StartTimer
 13143 ;; This function uses a non-reentrant model
 13144 ;;
 13145                           
 13146                           
 13147                           ;psect for function _TMR4_Start
 13148  15F4                     _TMR4_Start:
 13149  15F4                     l2749:	
 13150                           ;incstack = 0
 13151                           ; Regs used in _TMR4_Start: []
 13152                           
 13153                           
 13154                           ;mcc_generated_files/tmr4.c: 113:     T4CONbits.TMR4ON = 1;
 13155  15F4  0028               	movlb	8	; select bank8
 13156  15F5  1795               	bsf	21,7	;volatile
 13157  15F6                     l303:
 13158  15F6  0008               	return
 13159  15F7                     __end_of_TMR4_Start:
 13160                           
 13161                           	psect	text37
 13162  1608                     __ptext37:	
 13163 ;; *************** function _TMR4_SetInterruptHandler *****************
 13164 ;; Defined at:
 13165 ;;		line 188 in file "mcc_generated_files/tmr4.c"
 13166 ;; Parameters:    Size  Location     Type
 13167 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 13168 ;;		 -> TMR4_DefaultInterruptHandler(1), 
 13169 ;; Auto vars:     Size  Location     Type
 13170 ;;		None
 13171 ;; Return value:  Size  Location     Type
 13172 ;;                  1    wreg      void 
 13173 ;; Registers used:
 13174 ;;		wreg
 13175 ;; Tracked objects:
 13176 ;;		On entry : 0/0
 13177 ;;		On exit  : 0/0
 13178 ;;		Unchanged: 0/0
 13179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13183 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13184 ;;Total ram usage:        2 bytes
 13185 ;; Hardware stack levels used:    1
 13186 ;; Hardware stack levels required when called:    4
 13187 ;; This function calls:
 13188 ;;		Nothing
 13189 ;; This function is called by:
 13190 ;;		_TMR4_Initialize
 13191 ;; This function uses a non-reentrant model
 13192 ;;
 13193                           
 13194                           
 13195                           ;psect for function _TMR4_SetInterruptHandler
 13196  1608                     _TMR4_SetInterruptHandler:
 13197  1608                     l2747:	
 13198                           ;incstack = 0
 13199                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
 13200                           
 13201                           
 13202                           ;mcc_generated_files/tmr4.c: 189:     TMR4_InterruptHandler = InterruptHandler;
 13203  1608  0871               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
 13204  1609  0021               	movlb	1	; select bank1
 13205  160A  00D6               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
 13206  160B  0870               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
 13207  160C  00D5               	movwf	_TMR4_InterruptHandler^(0+128)
 13208  160D                     l340:
 13209  160D  0008               	return
 13210  160E                     __end_of_TMR4_SetInterruptHandler:
 13211                           
 13212                           	psect	text38
 13213  1643                     __ptext38:	
 13214 ;; *************** function _TMR2_Initialize *****************
 13215 ;; Defined at:
 13216 ;;		line 61 in file "mcc_generated_files/tmr2.c"
 13217 ;; Parameters:    Size  Location     Type
 13218 ;;		None
 13219 ;; Auto vars:     Size  Location     Type
 13220 ;;		None
 13221 ;; Return value:  Size  Location     Type
 13222 ;;                  1    wreg      void 
 13223 ;; Registers used:
 13224 ;;		wreg, status,2, status,0, pclath, cstack
 13225 ;; Tracked objects:
 13226 ;;		On entry : 0/0
 13227 ;;		On exit  : 0/0
 13228 ;;		Unchanged: 0/0
 13229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13234 ;;Total ram usage:        0 bytes
 13235 ;; Hardware stack levels used:    1
 13236 ;; Hardware stack levels required when called:    5
 13237 ;; This function calls:
 13238 ;;		_TMR2_Start
 13239 ;; This function is called by:
 13240 ;;		_SYSTEM_Initialize
 13241 ;; This function uses a non-reentrant model
 13242 ;;
 13243                           
 13244                           
 13245                           ;psect for function _TMR2_Initialize
 13246  1643                     _TMR2_Initialize:
 13247  1643                     l2941:	
 13248                           ;incstack = 0
 13249                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13250                           
 13251                           
 13252                           ;mcc_generated_files/tmr2.c: 66:     T2CON = 0x00;
 13253  1643  0020               	movlb	0	; select bank0
 13254  1644  019C               	clrf	28	;volatile
 13255                           
 13256                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x00;
 13257  1645  019E               	clrf	30	;volatile
 13258                           
 13259                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
 13260  1646  019D               	clrf	29	;volatile
 13261                           
 13262                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 13263  1647  019F               	clrf	31	;volatile
 13264  1648                     l2943:
 13265                           
 13266                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0xDB;
 13267  1648  30DB               	movlw	219
 13268  1649  009B               	movwf	27	;volatile
 13269  164A                     l2945:
 13270                           
 13271                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 13272  164A  019A               	clrf	26	;volatile
 13273  164B                     l2947:
 13274                           
 13275                           ;mcc_generated_files/tmr2.c: 84:     PIR1bits.TMR2IF = 0;
 13276  164B  1090               	bcf	16,1	;volatile
 13277  164C                     l2949:
 13278                           
 13279                           ;mcc_generated_files/tmr2.c: 87:     TMR2_Start();
 13280  164C  3195  25F1  3196   	fcall	_TMR2_Start
 13281  164F                     l215:
 13282  164F  0008               	return
 13283  1650                     __end_of_TMR2_Initialize:
 13284                           
 13285                           	psect	text39
 13286  15F1                     __ptext39:	
 13287 ;; *************** function _TMR2_Start *****************
 13288 ;; Defined at:
 13289 ;;		line 102 in file "mcc_generated_files/tmr2.c"
 13290 ;; Parameters:    Size  Location     Type
 13291 ;;		None
 13292 ;; Auto vars:     Size  Location     Type
 13293 ;;		None
 13294 ;; Return value:  Size  Location     Type
 13295 ;;                  1    wreg      void 
 13296 ;; Registers used:
 13297 ;;		None
 13298 ;; Tracked objects:
 13299 ;;		On entry : 0/0
 13300 ;;		On exit  : 0/0
 13301 ;;		Unchanged: 0/0
 13302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13307 ;;Total ram usage:        0 bytes
 13308 ;; Hardware stack levels used:    1
 13309 ;; Hardware stack levels required when called:    4
 13310 ;; This function calls:
 13311 ;;		Nothing
 13312 ;; This function is called by:
 13313 ;;		_TMR2_Initialize
 13314 ;;		_TMR2_StartTimer
 13315 ;; This function uses a non-reentrant model
 13316 ;;
 13317                           
 13318                           
 13319                           ;psect for function _TMR2_Start
 13320  15F1                     _TMR2_Start:
 13321  15F1                     l2745:	
 13322                           ;incstack = 0
 13323                           ; Regs used in _TMR2_Start: []
 13324                           
 13325                           
 13326                           ;mcc_generated_files/tmr2.c: 105:     T2CONbits.TMR2ON = 1;
 13327  15F1  0020               	movlb	0	; select bank0
 13328  15F2  179C               	bsf	28,7	;volatile
 13329  15F3                     l224:
 13330  15F3  0008               	return
 13331  15F4                     __end_of_TMR2_Start:
 13332                           
 13333                           	psect	text40
 13334  1602                     __ptext40:	
 13335 ;; *************** function _SPI_Initialize *****************
 13336 ;; Defined at:
 13337 ;;		line 63 in file "mcc_generated_files/spi.c"
 13338 ;; Parameters:    Size  Location     Type
 13339 ;;		None
 13340 ;; Auto vars:     Size  Location     Type
 13341 ;;		None
 13342 ;; Return value:  Size  Location     Type
 13343 ;;                  1    wreg      void 
 13344 ;; Registers used:
 13345 ;;		wreg, status,2
 13346 ;; Tracked objects:
 13347 ;;		On entry : 0/0
 13348 ;;		On exit  : 0/0
 13349 ;;		Unchanged: 0/0
 13350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13355 ;;Total ram usage:        0 bytes
 13356 ;; Hardware stack levels used:    1
 13357 ;; Hardware stack levels required when called:    4
 13358 ;; This function calls:
 13359 ;;		Nothing
 13360 ;; This function is called by:
 13361 ;;		_SYSTEM_Initialize
 13362 ;; This function uses a non-reentrant model
 13363 ;;
 13364                           
 13365                           
 13366                           ;psect for function _SPI_Initialize
 13367  1602                     _SPI_Initialize:
 13368  1602                     l2879:	
 13369                           ;incstack = 0
 13370                           ; Regs used in _SPI_Initialize: [wreg+status,2]
 13371                           
 13372                           
 13373                           ;mcc_generated_files/spi.c: 68:     SSP1STAT = 0x00;
 13374  1602  0024               	movlb	4	; select bank4
 13375  1603  0194               	clrf	20	;volatile
 13376  1604                     l2881:
 13377                           
 13378                           ;mcc_generated_files/spi.c: 71:     SSP1CON1 = 0x32;
 13379  1604  3032               	movlw	50
 13380  1605  0095               	movwf	21	;volatile
 13381  1606                     l2883:
 13382                           
 13383                           ;mcc_generated_files/spi.c: 74:     SSP1ADD = 0x00;
 13384  1606  0192               	clrf	18	;volatile
 13385  1607                     l49:
 13386  1607  0008               	return
 13387  1608                     __end_of_SPI_Initialize:
 13388                           
 13389                           	psect	text41
 13390  07F7                     __ptext41:	
 13391 ;; *************** function _PWM4_Initialize *****************
 13392 ;; Defined at:
 13393 ;;		line 57 in file "mcc_generated_files/pwm4.c"
 13394 ;; Parameters:    Size  Location     Type
 13395 ;;		None
 13396 ;; Auto vars:     Size  Location     Type
 13397 ;;		None
 13398 ;; Return value:  Size  Location     Type
 13399 ;;                  1    wreg      void 
 13400 ;; Registers used:
 13401 ;;		wreg, status,2, status,0
 13402 ;; Tracked objects:
 13403 ;;		On entry : 0/0
 13404 ;;		On exit  : 0/0
 13405 ;;		Unchanged: 0/0
 13406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13411 ;;Total ram usage:        0 bytes
 13412 ;; Hardware stack levels used:    1
 13413 ;; Hardware stack levels required when called:    4
 13414 ;; This function calls:
 13415 ;;		Nothing
 13416 ;; This function is called by:
 13417 ;;		_SYSTEM_Initialize
 13418 ;; This function uses a non-reentrant model
 13419 ;;
 13420                           
 13421                           
 13422                           ;psect for function _PWM4_Initialize
 13423  07F7                     _PWM4_Initialize:
 13424  07F7                     l2909:	
 13425                           ;incstack = 0
 13426                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 13427                           
 13428                           
 13429                           ;mcc_generated_files/pwm4.c: 61:      PWM4CON = 0x80;
 13430  07F7  3080               	movlw	128
 13431  07F8  002C               	movlb	12	; select bank12
 13432  07F9  009C               	movwf	28	;volatile
 13433  07FA                     l2911:
 13434                           
 13435                           ;mcc_generated_files/pwm4.c: 64:      PWM4DCH = 0x00;
 13436  07FA  019B               	clrf	27	;volatile
 13437  07FB                     l2913:
 13438                           
 13439                           ;mcc_generated_files/pwm4.c: 67:      PWM4DCL = 0x00;
 13440  07FB  019A               	clrf	26	;volatile
 13441  07FC                     l2915:
 13442                           
 13443                           ;mcc_generated_files/pwm4.c: 71:      CCPTMRSbits.P4TSEL = 0x0;
 13444  07FC  303F               	movlw	-193
 13445  07FD  0025               	movlb	5	; select bank5
 13446  07FE  059E               	andwf	30,f	;volatile
 13447  07FF                     l183:
 13448  07FF  0008               	return
 13449  0800                     __end_of_PWM4_Initialize:
 13450                           
 13451                           	psect	text42
 13452  1623                     __ptext42:	
 13453 ;; *************** function _PWM3_Initialize *****************
 13454 ;; Defined at:
 13455 ;;		line 57 in file "mcc_generated_files/pwm3.c"
 13456 ;; Parameters:    Size  Location     Type
 13457 ;;		None
 13458 ;; Auto vars:     Size  Location     Type
 13459 ;;		None
 13460 ;; Return value:  Size  Location     Type
 13461 ;;                  1    wreg      void 
 13462 ;; Registers used:
 13463 ;;		wreg, status,2, status,0
 13464 ;; Tracked objects:
 13465 ;;		On entry : 0/0
 13466 ;;		On exit  : 0/0
 13467 ;;		Unchanged: 0/0
 13468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13473 ;;Total ram usage:        0 bytes
 13474 ;; Hardware stack levels used:    1
 13475 ;; Hardware stack levels required when called:    4
 13476 ;; This function calls:
 13477 ;;		Nothing
 13478 ;; This function is called by:
 13479 ;;		_SYSTEM_Initialize
 13480 ;; This function uses a non-reentrant model
 13481 ;;
 13482                           
 13483                           
 13484                           ;psect for function _PWM3_Initialize
 13485  1623                     _PWM3_Initialize:
 13486  1623                     l2933:	
 13487                           ;incstack = 0
 13488                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 13489                           
 13490                           
 13491                           ;mcc_generated_files/pwm3.c: 61:      PWM3CON = 0x80;
 13492  1623  3080               	movlw	128
 13493  1624  002C               	movlb	12	; select bank12
 13494  1625  0099               	movwf	25	;volatile
 13495  1626                     l2935:
 13496                           
 13497                           ;mcc_generated_files/pwm3.c: 64:      PWM3DCH = 0x00;
 13498  1626  0198               	clrf	24	;volatile
 13499  1627                     l2937:
 13500                           
 13501                           ;mcc_generated_files/pwm3.c: 67:      PWM3DCL = 0x00;
 13502  1627  0197               	clrf	23	;volatile
 13503  1628                     l2939:
 13504                           
 13505                           ;mcc_generated_files/pwm3.c: 71:      CCPTMRSbits.P3TSEL = 0x0;
 13506  1628  30CF               	movlw	-49
 13507  1629  0025               	movlb	5	; select bank5
 13508  162A  059E               	andwf	30,f	;volatile
 13509  162B                     l169:
 13510  162B  0008               	return
 13511  162C                     __end_of_PWM3_Initialize:
 13512                           
 13513                           	psect	text43
 13514  093C                     __ptext43:	
 13515 ;; *************** function _PIN_MANAGER_Initialize *****************
 13516 ;; Defined at:
 13517 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 13518 ;; Parameters:    Size  Location     Type
 13519 ;;		None
 13520 ;; Auto vars:     Size  Location     Type
 13521 ;;  state           1    0[COMMON] _Bool 
 13522 ;; Return value:  Size  Location     Type
 13523 ;;                  1    wreg      void 
 13524 ;; Registers used:
 13525 ;;		wreg, status,2, status,0
 13526 ;; Tracked objects:
 13527 ;;		On entry : 0/0
 13528 ;;		On exit  : 0/0
 13529 ;;		Unchanged: 0/0
 13530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13532 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13534 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13535 ;;Total ram usage:        1 bytes
 13536 ;; Hardware stack levels used:    1
 13537 ;; Hardware stack levels required when called:    4
 13538 ;; This function calls:
 13539 ;;		Nothing
 13540 ;; This function is called by:
 13541 ;;		_SYSTEM_Initialize
 13542 ;; This function uses a non-reentrant model
 13543 ;;
 13544                           
 13545                           
 13546                           ;psect for function _PIN_MANAGER_Initialize
 13547  093C                     _PIN_MANAGER_Initialize:
 13548  093C                     l2845:	
 13549                           ;incstack = 0
 13550                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 13551                           
 13552                           
 13553                           ;mcc_generated_files/pin_manager.c: 57:     LATA = 0x00;
 13554  093C  0022               	movlb	2	; select bank2
 13555  093D  018C               	clrf	12	;volatile
 13556                           
 13557                           ;mcc_generated_files/pin_manager.c: 58:     LATB = 0x00;
 13558  093E  018D               	clrf	13	;volatile
 13559                           
 13560                           ;mcc_generated_files/pin_manager.c: 59:     LATC = 0x00;
 13561  093F  018E               	clrf	14	;volatile
 13562  0940                     l2847:
 13563                           
 13564                           ;mcc_generated_files/pin_manager.c: 64:     TRISA = 0x37;
 13565  0940  3037               	movlw	55
 13566  0941  0021               	movlb	1	; select bank1
 13567  0942  008C               	movwf	12	;volatile
 13568  0943                     l2849:
 13569                           
 13570                           ;mcc_generated_files/pin_manager.c: 65:     TRISB = 0x10;
 13571  0943  3010               	movlw	16
 13572  0944  008D               	movwf	13	;volatile
 13573  0945                     l2851:
 13574                           
 13575                           ;mcc_generated_files/pin_manager.c: 66:     TRISC = 0x3C;
 13576  0945  303C               	movlw	60
 13577  0946  008E               	movwf	14	;volatile
 13578  0947                     l2853:
 13579                           
 13580                           ;mcc_generated_files/pin_manager.c: 71:     ANSELC = 0x0C;
 13581  0947  300C               	movlw	12
 13582  0948  0023               	movlb	3	; select bank3
 13583  0949  008E               	movwf	14	;volatile
 13584                           
 13585                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0x00;
 13586  094A  018D               	clrf	13	;volatile
 13587  094B                     l2855:
 13588                           
 13589                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x17;
 13590  094B  3017               	movlw	23
 13591  094C  008C               	movwf	12	;volatile
 13592  094D                     l2857:
 13593                           
 13594                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0xF0;
 13595  094D  30F0               	movlw	240
 13596  094E  0024               	movlb	4	; select bank4
 13597  094F  008D               	movwf	13	;volatile
 13598  0950                     l2859:
 13599                           
 13600                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x3F;
 13601  0950  303F               	movlw	63
 13602  0951  008C               	movwf	12	;volatile
 13603  0952                     l2861:
 13604                           
 13605                           ;mcc_generated_files/pin_manager.c: 80:     WPUC = 0xFC;
 13606  0952  30FC               	movlw	252
 13607  0953  008E               	movwf	14	;volatile
 13608  0954                     l2863:
 13609                           
 13610                           ;mcc_generated_files/pin_manager.c: 81:     OPTION_REGbits.nWPUEN = 0;
 13611  0954  0021               	movlb	1	; select bank1
 13612  0955  1395               	bcf	21,7	;volatile
 13613                           
 13614                           ;mcc_generated_files/pin_manager.c: 86:     ODCONA = 0x00;
 13615  0956  0025               	movlb	5	; select bank5
 13616  0957  018C               	clrf	12	;volatile
 13617                           
 13618                           ;mcc_generated_files/pin_manager.c: 87:     ODCONB = 0x00;
 13619  0958  018D               	clrf	13	;volatile
 13620                           
 13621                           ;mcc_generated_files/pin_manager.c: 88:     ODCONC = 0x00;
 13622  0959  018E               	clrf	14	;volatile
 13623  095A                     l2865:
 13624                           
 13625                           ;mcc_generated_files/pin_manager.c: 95:     _Bool state = (unsigned char)GIE;
 13626  095A  3000               	movlw	0
 13627  095B  1B8B               	btfsc	11,7	;volatile
 13628  095C  3001               	movlw	1
 13629  095D  00F0               	movwf	PIN_MANAGER_Initialize@state
 13630  095E                     l2867:
 13631                           
 13632                           ;mcc_generated_files/pin_manager.c: 96:     GIE = 0;
 13633  095E  138B               	bcf	11,7	;volatile
 13634                           
 13635                           ;mcc_generated_files/pin_manager.c: 97:     PPSLOCK = 0x55;
 13636  095F  3055               	movlw	85
 13637  0960  003C               	movlb	28	; select bank28
 13638  0961  008F               	movwf	15	;volsfr
 13639                           
 13640                           ;mcc_generated_files/pin_manager.c: 98:     PPSLOCK = 0xAA;
 13641  0962  30AA               	movlw	170
 13642  0963  008F               	movwf	15	;volsfr
 13643  0964                     l2869:
 13644                           
 13645                           ;mcc_generated_files/pin_manager.c: 99:     PPSLOCKbits.PPSLOCKED = 0x00;
 13646  0964  100F               	bcf	15,0	;volsfr
 13647                           
 13648                           ;mcc_generated_files/pin_manager.c: 101:     RC0PPS = 0x0E;
 13649  0965  300E               	movlw	14
 13650  0966  003D               	movlb	29	; select bank29
 13651  0967  00A0               	movwf	32	;volatile
 13652                           
 13653                           ;mcc_generated_files/pin_manager.c: 102:     T2PPS = 0x05;
 13654  0968  3005               	movlw	5
 13655  0969  003C               	movlb	28	; select bank28
 13656  096A  0098               	movwf	24	;volatile
 13657                           
 13658                           ;mcc_generated_files/pin_manager.c: 103:     SSPDATPPS = 0x0C;
 13659  096B  300C               	movlw	12
 13660  096C  00A1               	movwf	33	;volatile
 13661                           
 13662                           ;mcc_generated_files/pin_manager.c: 104:     RB6PPS = 0x10;
 13663  096D  3010               	movlw	16
 13664  096E  003D               	movlb	29	; select bank29
 13665  096F  009E               	movwf	30	;volatile
 13666                           
 13667                           ;mcc_generated_files/pin_manager.c: 105:     RB5PPS = 0x11;
 13668  0970  3011               	movlw	17
 13669  0971  009D               	movwf	29	;volatile
 13670                           
 13671                           ;mcc_generated_files/pin_manager.c: 106:     RC1PPS = 0x0F;
 13672  0972  300F               	movlw	15
 13673  0973  00A1               	movwf	33	;volatile
 13674                           
 13675                           ;mcc_generated_files/pin_manager.c: 107:     SSPCLKPPS = 0x0E;
 13676  0974  300E               	movlw	14
 13677  0975  003C               	movlb	28	; select bank28
 13678  0976  00A0               	movwf	32	;volatile
 13679                           
 13680                           ;mcc_generated_files/pin_manager.c: 108:     T4PPS = 0x11;
 13681  0977  3011               	movlw	17
 13682  0978  009B               	movwf	27	;volatile
 13683                           
 13684                           ;mcc_generated_files/pin_manager.c: 110:     PPSLOCK = 0x55;
 13685  0979  3055               	movlw	85
 13686  097A  008F               	movwf	15	;volsfr
 13687                           
 13688                           ;mcc_generated_files/pin_manager.c: 111:     PPSLOCK = 0xAA;
 13689  097B  30AA               	movlw	170
 13690  097C  008F               	movwf	15	;volsfr
 13691  097D                     l2871:
 13692                           
 13693                           ;mcc_generated_files/pin_manager.c: 112:     PPSLOCKbits.PPSLOCKED = 0x01;
 13694  097D  140F               	bsf	15,0	;volsfr
 13695  097E                     l2873:
 13696                           
 13697                           ;mcc_generated_files/pin_manager.c: 114:     GIE = state;
 13698  097E  0C70               	rrf	PIN_MANAGER_Initialize@state,w
 13699  097F  1C03               	skipc
 13700  0980  138B               	bcf	11,7	;volatile
 13701  0981  1803               	skipnc
 13702  0982  178B               	bsf	11,7	;volatile
 13703  0983                     l118:
 13704  0983  0008               	return
 13705  0984                     __end_of_PIN_MANAGER_Initialize:
 13706                           
 13707                           	psect	text44
 13708  15F7                     __ptext44:	
 13709 ;; *************** function _OSCILLATOR_Initialize *****************
 13710 ;; Defined at:
 13711 ;;		line 90 in file "mcc_generated_files/mcc.c"
 13712 ;; Parameters:    Size  Location     Type
 13713 ;;		None
 13714 ;; Auto vars:     Size  Location     Type
 13715 ;;		None
 13716 ;; Return value:  Size  Location     Type
 13717 ;;                  1    wreg      void 
 13718 ;; Registers used:
 13719 ;;		wreg, status,2
 13720 ;; Tracked objects:
 13721 ;;		On entry : 0/0
 13722 ;;		On exit  : 0/0
 13723 ;;		Unchanged: 0/0
 13724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13729 ;;Total ram usage:        0 bytes
 13730 ;; Hardware stack levels used:    1
 13731 ;; Hardware stack levels required when called:    4
 13732 ;; This function calls:
 13733 ;;		Nothing
 13734 ;; This function is called by:
 13735 ;;		_SYSTEM_Initialize
 13736 ;; This function uses a non-reentrant model
 13737 ;;
 13738                           
 13739                           
 13740                           ;psect for function _OSCILLATOR_Initialize
 13741  15F7                     _OSCILLATOR_Initialize:
 13742  15F7                     l2875:	
 13743                           ;incstack = 0
 13744                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13745                           
 13746                           
 13747                           ;mcc_generated_files/mcc.c: 93:     OSCCON = 0x78;
 13748  15F7  3078               	movlw	120
 13749  15F8  0021               	movlb	1	; select bank1
 13750  15F9  0099               	movwf	25	;volatile
 13751  15FA                     l2877:
 13752                           
 13753                           ;mcc_generated_files/mcc.c: 95:     OSCTUNE = 0x00;
 13754  15FA  0198               	clrf	24	;volatile
 13755  15FB                     l30:
 13756  15FB  0008               	return
 13757  15FC                     __end_of_OSCILLATOR_Initialize:
 13758                           
 13759                           	psect	text45
 13760  161A                     __ptext45:	
 13761 ;; *************** function _ADC_Initialize *****************
 13762 ;; Defined at:
 13763 ;;		line 64 in file "mcc_generated_files/adc.c"
 13764 ;; Parameters:    Size  Location     Type
 13765 ;;		None
 13766 ;; Auto vars:     Size  Location     Type
 13767 ;;		None
 13768 ;; Return value:  Size  Location     Type
 13769 ;;                  1    wreg      void 
 13770 ;; Registers used:
 13771 ;;		wreg, status,2
 13772 ;; Tracked objects:
 13773 ;;		On entry : 0/0
 13774 ;;		On exit  : 0/0
 13775 ;;		Unchanged: 0/0
 13776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13781 ;;Total ram usage:        0 bytes
 13782 ;; Hardware stack levels used:    1
 13783 ;; Hardware stack levels required when called:    4
 13784 ;; This function calls:
 13785 ;;		Nothing
 13786 ;; This function is called by:
 13787 ;;		_SYSTEM_Initialize
 13788 ;; This function uses a non-reentrant model
 13789 ;;
 13790                           
 13791                           
 13792                           ;psect for function _ADC_Initialize
 13793  161A                     _ADC_Initialize:
 13794  161A                     l2901:	
 13795                           ;incstack = 0
 13796                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 13797                           
 13798                           
 13799                           ;mcc_generated_files/adc.c: 69:     ADCON0 = 0x01;
 13800  161A  3001               	movlw	1
 13801  161B  0021               	movlb	1	; select bank1
 13802  161C  009D               	movwf	29	;volatile
 13803                           
 13804                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x60;
 13805  161D  3060               	movlw	96
 13806  161E  009E               	movwf	30	;volatile
 13807  161F                     l2903:
 13808                           
 13809                           ;mcc_generated_files/adc.c: 75:     ADCON2 = 0x00;
 13810  161F  019F               	clrf	31	;volatile
 13811  1620                     l2905:
 13812                           
 13813                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
 13814  1620  019B               	clrf	27	;volatile
 13815  1621                     l2907:
 13816                           
 13817                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
 13818  1621  019C               	clrf	28	;volatile
 13819  1622                     l140:
 13820  1622  0008               	return
 13821  1623                     __end_of_ADC_Initialize:
 13822                           
 13823                           	psect	text46
 13824  1710                     __ptext46:	
 13825 ;; *************** function _ADC_GetConversion *****************
 13826 ;; Defined at:
 13827 ;;		line 112 in file "mcc_generated_files/adc.c"
 13828 ;; Parameters:    Size  Location     Type
 13829 ;;  channel         1    wreg     enum E9639
 13830 ;; Auto vars:     Size  Location     Type
 13831 ;;  channel         1    3[COMMON] enum E9639
 13832 ;; Return value:  Size  Location     Type
 13833 ;;                  2    0[COMMON] unsigned short 
 13834 ;; Registers used:
 13835 ;;		wreg, status,2, status,0
 13836 ;; Tracked objects:
 13837 ;;		On entry : 0/0
 13838 ;;		On exit  : 0/0
 13839 ;;		Unchanged: 0/0
 13840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13841 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13844 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13845 ;;Total ram usage:        4 bytes
 13846 ;; Hardware stack levels used:    1
 13847 ;; Hardware stack levels required when called:    4
 13848 ;; This function calls:
 13849 ;;		Nothing
 13850 ;; This function is called by:
 13851 ;;		_main
 13852 ;;		_printADCValues
 13853 ;; This function uses a non-reentrant model
 13854 ;;
 13855                           
 13856                           
 13857                           ;psect for function _ADC_GetConversion
 13858  1710                     _ADC_GetConversion:
 13859                           
 13860                           ;incstack = 0
 13861                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 13862                           ;ADC_GetConversion@channel stored from wreg
 13863  1710  00F3               	movwf	ADC_GetConversion@channel
 13864  1711                     l3247:
 13865                           
 13866                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
 13867  1711  0873               	movf	ADC_GetConversion@channel,w
 13868  1712  00F2               	movwf	??_ADC_GetConversion
 13869  1713  0DF2               	rlf	??_ADC_GetConversion,f
 13870  1714  0DF2               	rlf	??_ADC_GetConversion,f
 13871  1715  0021               	movlb	1	; select bank1
 13872  1716  081D               	movf	29,w	;volatile
 13873  1717  0672               	xorwf	??_ADC_GetConversion,w
 13874  1718  3983               	andlw	-125
 13875  1719  0672               	xorwf	??_ADC_GetConversion,w
 13876  171A  009D               	movwf	29	;volatile
 13877  171B                     l3249:
 13878                           
 13879                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
 13880  171B  141D               	bsf	29,0	;volatile
 13881  171C                     l3251:
 13882                           
 13883                           ;mcc_generated_files/adc.c: 120:     _delay((unsigned long)((5)*(16000000/4000000.0)));
 13884  171C  3006               	movlw	6
 13885  171D                     u3507:
 13886  171D  0B89               	decfsz	9,f
 13887  171E  2F1D               	goto	u3507
 13888  171F  3200               	nop2
 13889  1720                     l3253:
 13890                           
 13891                           ;mcc_generated_files/adc.c: 123:     ADCON0bits.GO_nDONE = 1;
 13892  1720  0021               	movlb	1	; select bank1
 13893  1721  149D               	bsf	29,1	;volatile
 13894  1722                     l155:	
 13895                           ;mcc_generated_files/adc.c: 127:     {;mcc_generated_files/adc.c: 128:     }
 13896                           
 13897                           
 13898                           ;mcc_generated_files/adc.c: 126:     while (ADCON0bits.GO_nDONE)
 13899  1722  189D               	btfsc	29,1	;volatile
 13900  1723  2F25               	goto	u2981
 13901  1724  2F26               	goto	u2980
 13902  1725                     u2981:
 13903  1725  2F22               	goto	l155
 13904  1726                     u2980:
 13905  1726                     l3255:
 13906                           
 13907                           ;mcc_generated_files/adc.c: 131:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 13908  1726  081C               	movf	28,w	;volatile
 13909  1727  00F1               	movwf	?_ADC_GetConversion+1
 13910  1728  081B               	movf	27,w	;volatile
 13911  1729  00F0               	movwf	?_ADC_GetConversion
 13912  172A                     l158:
 13913  172A  0008               	return
 13914  172B                     __end_of_ADC_GetConversion:
 13915                           
 13916                           	psect	intentry
 13917  0004                     __pintentry:	
 13918 ;; *************** function _INTERRUPT_InterruptManager *****************
 13919 ;; Defined at:
 13920 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 13921 ;; Parameters:    Size  Location     Type
 13922 ;;		None
 13923 ;; Auto vars:     Size  Location     Type
 13924 ;;		None
 13925 ;; Return value:  Size  Location     Type
 13926 ;;                  1    wreg      void 
 13927 ;; Registers used:
 13928 ;;		wreg, status,2, status,0, pclath, cstack
 13929 ;; Tracked objects:
 13930 ;;		On entry : 0/0
 13931 ;;		On exit  : 0/0
 13932 ;;		Unchanged: 0/0
 13933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13938 ;;Total ram usage:        0 bytes
 13939 ;; Hardware stack levels used:    1
 13940 ;; Hardware stack levels required when called:    3
 13941 ;; This function calls:
 13942 ;;		_TMR4_ISR
 13943 ;; This function is called by:
 13944 ;;		Interrupt level 1
 13945 ;; This function uses a non-reentrant model
 13946 ;;
 13947                           
 13948  0004                     _INTERRUPT_InterruptManager:
 13949                           
 13950                           ;incstack = 0
 13951  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13952                           
 13953                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 13954  0005  3180               	pagesel	$
 13955  0006                     i1l3413:
 13956                           
 13957                           ;mcc_generated_files/interrupt_manager.c: 54:     if(INTCONbits.PEIE == 1 && PIE2bits.TM
      +                          R4IE == 1 && PIR2bits.TMR4IF == 1)
 13958  0006  1F0B               	btfss	11,6	;volatile
 13959  0007  2809               	goto	u322_21
 13960  0008  280A               	goto	u322_20
 13961  0009                     u322_21:
 13962  0009  2817               	goto	i1l360
 13963  000A                     u322_20:
 13964  000A                     i1l3415:
 13965  000A  0021               	movlb	1	; select bank1
 13966  000B  1C91               	btfss	17,1	;volatile
 13967  000C  280E               	goto	u323_21
 13968  000D  280F               	goto	u323_20
 13969  000E                     u323_21:
 13970  000E  2817               	goto	i1l360
 13971  000F                     u323_20:
 13972  000F                     i1l3417:
 13973  000F  0020               	movlb	0	; select bank0
 13974  0010  1C91               	btfss	17,1	;volatile
 13975  0011  2813               	goto	u324_21
 13976  0012  2814               	goto	u324_20
 13977  0013                     u324_21:
 13978  0013  2817               	goto	i1l360
 13979  0014                     u324_20:
 13980  0014                     i1l3419:
 13981                           
 13982                           ;mcc_generated_files/interrupt_manager.c: 55:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 56:         TMR4_ISR();
 13983  0014  3195  25FC  3180   	fcall	_TMR4_ISR
 13984  0017                     i1l360:	
 13985                           ;mcc_generated_files/interrupt_manager.c: 57:     }
 13986                           
 13987  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13988  0018  0009               	retfie
 13989  0019                     __end_of_INTERRUPT_InterruptManager:
 13990                           
 13991                           	psect	text48
 13992  15FC                     __ptext48:	
 13993 ;; *************** function _TMR4_ISR *****************
 13994 ;; Defined at:
 13995 ;;		line 167 in file "mcc_generated_files/tmr4.c"
 13996 ;; Parameters:    Size  Location     Type
 13997 ;;		None
 13998 ;; Auto vars:     Size  Location     Type
 13999 ;;		None
 14000 ;; Return value:  Size  Location     Type
 14001 ;;                  1    wreg      void 
 14002 ;; Registers used:
 14003 ;;		wreg, status,2, status,0, pclath, cstack
 14004 ;; Tracked objects:
 14005 ;;		On entry : 0/0
 14006 ;;		On exit  : 0/0
 14007 ;;		Unchanged: 0/0
 14008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14013 ;;Total ram usage:        0 bytes
 14014 ;; Hardware stack levels used:    1
 14015 ;; Hardware stack levels required when called:    2
 14016 ;; This function calls:
 14017 ;;		_TMR4_CallBack
 14018 ;; This function is called by:
 14019 ;;		_INTERRUPT_InterruptManager
 14020 ;; This function uses a non-reentrant model
 14021 ;;
 14022                           
 14023                           
 14024                           ;psect for function _TMR4_ISR
 14025  15FC                     _TMR4_ISR:
 14026  15FC                     i1l3259:	
 14027                           ;incstack = 0
 14028                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 14029                           
 14030                           
 14031                           ;mcc_generated_files/tmr4.c: 171:     PIR2bits.TMR4IF = 0;
 14032  15FC  0020               	movlb	0	; select bank0
 14033  15FD  1091               	bcf	17,1	;volatile
 14034  15FE                     i1l3261:
 14035                           
 14036                           ;mcc_generated_files/tmr4.c: 175:     TMR4_CallBack();
 14037  15FE  3196  2636  3195   	fcall	_TMR4_CallBack
 14038  1601                     i1l333:
 14039  1601  0008               	return
 14040  1602                     __end_of_TMR4_ISR:
 14041                           
 14042                           	psect	text49
 14043  1636                     __ptext49:	
 14044 ;; *************** function _TMR4_CallBack *****************
 14045 ;; Defined at:
 14046 ;;		line 178 in file "mcc_generated_files/tmr4.c"
 14047 ;; Parameters:    Size  Location     Type
 14048 ;;		None
 14049 ;; Auto vars:     Size  Location     Type
 14050 ;;		None
 14051 ;; Return value:  Size  Location     Type
 14052 ;;                  1    wreg      void 
 14053 ;; Registers used:
 14054 ;;		wreg, status,2, status,0, pclath, cstack
 14055 ;; Tracked objects:
 14056 ;;		On entry : 0/0
 14057 ;;		On exit  : 0/0
 14058 ;;		Unchanged: 0/0
 14059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14064 ;;Total ram usage:        0 bytes
 14065 ;; Hardware stack levels used:    1
 14066 ;; Hardware stack levels required when called:    1
 14067 ;; This function calls:
 14068 ;;		Absolute function
 14069 ;;		_TMR4_DefaultInterruptHandler
 14070 ;; This function is called by:
 14071 ;;		_TMR4_ISR
 14072 ;; This function uses a non-reentrant model
 14073 ;;
 14074                           
 14075                           
 14076                           ;psect for function _TMR4_CallBack
 14077  1636                     _TMR4_CallBack:
 14078  1636                     i1l2955:	
 14079                           ;incstack = 0
 14080                           ; Regs used in _TMR4_CallBack: [wreg+status,2+status,0+pclath+cstack]
 14081                           
 14082                           
 14083                           ;mcc_generated_files/tmr4.c: 182:     if(TMR4_InterruptHandler)
 14084  1636  0021               	movlb	1	; select bank1
 14085  1637  0855               	movf	_TMR4_InterruptHandler^(0+128),w
 14086  1638  0456               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
 14087  1639  1903               	btfsc	3,2
 14088  163A  2E3C               	goto	u241_21
 14089  163B  2E3D               	goto	u241_20
 14090  163C                     u241_21:
 14091  163C  2E42               	goto	i1l337
 14092  163D                     u241_20:
 14093  163D                     i1l2957:
 14094                           
 14095                           ;mcc_generated_files/tmr4.c: 183:     {;mcc_generated_files/tmr4.c: 184:         TMR4_In
      +                          terruptHandler();
 14096  163D  0856               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
 14097  163E  008A               	movwf	10
 14098  163F  0855               	movf	_TMR4_InterruptHandler^(0+128),w
 14099  1640  000A               	callw
 14100  1641  3196               	pagesel	$
 14101  1642                     i1l337:
 14102  1642  0008               	return
 14103  1643                     __end_of_TMR4_CallBack:
 14104                           
 14105                           	psect	text50
 14106  0002                     __ptext50:	
 14107 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 14108 ;; Defined at:
 14109 ;;		line 192 in file "mcc_generated_files/tmr4.c"
 14110 ;; Parameters:    Size  Location     Type
 14111 ;;		None
 14112 ;; Auto vars:     Size  Location     Type
 14113 ;;		None
 14114 ;; Return value:  Size  Location     Type
 14115 ;;                  1    wreg      void 
 14116 ;; Registers used:
 14117 ;;		None
 14118 ;; Tracked objects:
 14119 ;;		On entry : 0/0
 14120 ;;		On exit  : 0/0
 14121 ;;		Unchanged: 0/0
 14122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14127 ;;Total ram usage:        0 bytes
 14128 ;; Hardware stack levels used:    1
 14129 ;; This function calls:
 14130 ;;		Nothing
 14131 ;; This function is called by:
 14132 ;;		_TMR4_Initialize
 14133 ;;		_TMR4_CallBack
 14134 ;; This function uses a non-reentrant model
 14135 ;;
 14136                           
 14137                           
 14138                           ;psect for function _TMR4_DefaultInterruptHandler
 14139  0002                     _TMR4_DefaultInterruptHandler:
 14140  0002                     i1l343:	
 14141                           ;incstack = 0
 14142                           ; Regs used in _TMR4_DefaultInterruptHandler: []
 14143                           
 14144  0002  0008               	return
 14145  0003                     __end_of_TMR4_DefaultInterruptHandler:
 14146  007E                     btemp	set	126	;btemp
 14147  007E                     int$flags	set	126
 14148  007E                     wtemp0	set	126
 14149                           
 14150                           	psect	config
 14151                           
 14152                           ;Config register CONFIG1 @ 0x8007
 14153                           ;	Oscillator Selection Bits
 14154                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 14155                           ;	Power-up Timer Enable
 14156                           ;	PWRTE = OFF, PWRT disabled
 14157                           ;	MCLR Pin Function Select
 14158                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 14159                           ;	Flash Program Memory Code Protection
 14160                           ;	CP = OFF, Program memory code protection is disabled
 14161                           ;	Brown-out Reset Enable
 14162                           ;	BOREN = ON, Brown-out Reset enabled
 14163                           ;	Clock Out Enable
 14164                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 14165                           ;	Internal/External Switch Over
 14166                           ;	IESO = ON, Internal External Switch Over mode is enabled
 14167                           ;	Fail-Safe Clock Monitor Enable
 14168                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 14169  8007                     	org	32775
 14170  8007  3FFC               	dw	16380
 14171                           
 14172                           ;Config register CONFIG2 @ 0x8008
 14173                           ;	Flash Memory Self-Write Protection
 14174                           ;	WRT = OFF, Write protection off
 14175                           ;	Peripheral Pin Select one-way control
 14176                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 14177                           ;	Zero Cross Detect Disable Bit
 14178                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 14179                           ;	PLL Enable Bit
 14180                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
 14181                           ;	Stack Overflow/Underflow Reset Enable
 14182                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 14183                           ;	Brown-out Reset Voltage Selection
 14184                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 14185                           ;	Low-Power Brown Out Reset
 14186                           ;	LPBOR = OFF, Low-Power BOR is disabled
 14187                           ;	Low-Voltage Programming Enable
 14188                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 14189  8008                     	org	32776
 14190  8008  1EFF               	dw	7935
 14191                           
 14192                           ;Config register CONFIG3 @ 0x8009
 14193                           ;	WDT Period Select
 14194                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
 14195                           ;	Watchdog Timer Enable
 14196                           ;	WDTE = OFF, WDT disabled
 14197                           ;	WDT Window Select
 14198                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
 14199                           ;	WDT Input Clock Selector
 14200                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
 14201  8009                     	org	32777
 14202  8009  3F9F               	dw	16287

Data Sizes:
    Strings     54
    Constant    0
    Data        170
    BSS         72
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     33      74
    BANK2            80      0      68
    BANK3            80      0      67
    BANK4            80      0      66
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1425_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_3(CODE[24]), STR_2(CODE[21]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_3(CODE[24]), STR_2(CODE[21]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_3(CODE[24]), STR_2(CODE[21]), STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    stuffIntToCharsBuf@buf	PTR unsigned char  size(1) Largest target is 17
		 -> text10(BANK1[17]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR4_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _stuffIntToCharsBuf->_printf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _setMotorSpeed->_PWM3_LoadDutyValue
    _setMotorSpeed->_PWM4_LoadDutyValue
    _reportfault->_command
    _reportfault->_dataCMD
    _getTemp_TC->___xxtofl
    _getFaultCodes->_readRawData
    _getDieTemp->___xxtofl
    _readRawData->_spi_transfer
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_initDisplay
    _initDisplay->_initOLED
    _initOLED->_command
    _initOLED->_dataCMD
    _dataCMD->_spi_write
    _command->_spi_write
    _TMR4_Initialize->_TMR4_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _stuffIntToCharsBuf->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _getTemp_TC->___flmul
    _getFaultCodes->_readRawData
    _getDieTemp->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_stuffIntToCharsBuf
    _stuffIntToCharsBuf->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   20205
                                             21 BANK1     12    12      0
                  _ADC_GetConversion
                  _SYSTEM_Initialize
                            ___fltol
                            _command
                            _dataCMD
                         _getDieTemp
                      _getFaultCodes
                         _getTemp_TC
                        _reportfault
                      _setMotorSpeed
                 _stuffIntToCharsBuf
 ---------------------------------------------------------------------------------
 (1) _stuffIntToCharsBuf                                  18    13      5    9193
                                              3 BANK1     18    13      5
                            ___awdiv
                            ___fltol (ARG)
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10    5956
                                             13 COMMON     1     1      0
                                             70 BANK0     10     0     10
                                              0 BANK1      3     3      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3    5674
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2    5346
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    4045
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2422
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1083
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     768
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _setMotorSpeed                                        4     0      4     632
                                              4 COMMON     4     0      4
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM4_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _reportfault                                         21    21      0     732
                                              9 COMMON     1     1      0
                                              0 BANK0     20    20      0
                            _command
                            _dataCMD
 ---------------------------------------------------------------------------------
 (1) _getTemp_TC                                          14    10      4    3249
                                             26 BANK0     14    10      4
                            ___flmul
                           ___xxtofl
                        _readRawData
 ---------------------------------------------------------------------------------
 (1) _getFaultCodes                                        4     4      0     182
                                              7 BANK0      4     4      0
                        _readRawData
 ---------------------------------------------------------------------------------
 (1) _getDieTemp                                          14    10      4    3249
                                             26 BANK0     14    10      4
                            ___flmul
                           ___xxtofl
                        _readRawData
 ---------------------------------------------------------------------------------
 (2) _readRawData                                         19    15      4     137
                                              1 COMMON    12     8      4
                                              0 BANK0      7     7      0
                       _spi_transfer
 ---------------------------------------------------------------------------------
 (3) _spi_transfer                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2569
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1377
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                     _SPI_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                        _initDisplay
 ---------------------------------------------------------------------------------
 (2) _initDisplay                                          3     3      0    1256
                                             11 COMMON     3     3      0
                            _command
                            _dataCMD
                           _initOLED
 ---------------------------------------------------------------------------------
 (3) _initOLED                                             2     2      0     594
                                              9 COMMON     2     2      0
                            _command
                            _dataCMD
 ---------------------------------------------------------------------------------
 (2) _dataCMD                                              7     7      0     297
                                              2 COMMON     7     7      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (2) _command                                              7     7      0     297
                                              2 COMMON     7     7      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (3) _spi_write                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0      98
           _TMR4_SetInterruptHandler
                         _TMR4_Start
 ---------------------------------------------------------------------------------
 (3) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (3) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0       0
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR4_ISR                                            0     0      0       0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (12) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _SPI_Initialize
     _TMR2_Initialize
       _TMR2_Start
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
       _TMR4_Start
     _initDisplay
       _command
         _spi_write
       _dataCMD
         _spi_write
       _initOLED
         _command
           _spi_write
         _dataCMD
           _spi_write
   ___fltol
   _command
     _spi_write
   _dataCMD
     _spi_write
   _getDieTemp
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl
     _readRawData
       _spi_transfer
   _getFaultCodes
     _readRawData
       _spi_transfer
   _getTemp_TC
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl
     _readRawData
       _spi_transfer
   _reportfault
     _command
       _spi_write
     _dataCMD
       _spi_write
   _setMotorSpeed
     _PWM3_LoadDutyValue
     _PWM4_LoadDutyValue
   _stuffIntToCharsBuf
     ___awdiv
     ___fltol (ARG)
     ___wmul (ARG)
     _printf (ARG)
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch

 _INTERRUPT_InterruptManager (ROOT)
   _TMR4_ISR
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     21      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      44       9       85.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      43      11       83.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      42      13       82.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     171      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     171      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Aug 28 13:43:27 2025

                          _SPI_Initialize 1602                                        l30 15FB  
                                      _BF 10A0                                        l27 1746  
                                      l52 1630                                        l61 165D  
                                      l55 1635                                        l49 1607  
                                      l58 1654                              ___awdiv@sign 0076  
                     ___wmul@multiplicand 0072                       __Umul8_16@word_mpld 0076  
                                     l140 1622                                       l118 0983  
                                     l215 164F                                       l303 15F6  
                                     l224 15F3                                       l155 1722  
                                     l340 160D                                       l172 16AC  
                                     l158 172A                                       l183 07FF  
                                     l503 0B3A                                       l600 1751  
                                     l169 162B                                       l506 0C8D  
                                     l186 16C2                                       l602 1765  
                                     l516 0B8C                                       l532 1696  
                                     l524 0A2B                                       l700 0FEE  
                                     l517 0B97                                       l701 0FFF  
                                     l294 16DB                                       l470 0782  
                                     l463 081C                                       l528 09D7  
                                     l801 07E1                                       l713 0EED  
                                     l458 08B8                                       l714 0EFE  
                                     l491 0ADF                                       l804 07F6  
                                     l496 17FF                                       l753 0BF6  
                                     l794 07F6                                       _GIE 005F  
                                     l997 02BD                                       _PR2 001B  
                                     _PR4 0414                                       _abs 16DC  
                                     _pad 0A2C                           _TMR2_Initialize 1643  
                         _PWM4_Initialize 07F7                                       wreg 0009  
                        spi_write@spiByte 0071                               command@bit0 0074  
                            ___flmul@aexp 0032                              ___flmul@bexp 0033  
                            ___flmul@sign 002D                              ___flmul@temp 0038  
                            ___flmul@prod 0034                              ___fltol@exp1 007A  
                                    l1003 0239                                      l1103 054C  
                                    l1016 179A                                      l1104 0564  
                                    l1009 02B1                                      l1041 0CB0  
                                    l1121 064C                                      l1018 17AA  
                                    l1043 0D39                                      l1107 05D5  
                                    ?_abs 0073                                      l1054 0D05  
                                    l1142 16F5                                      l1055 0D11  
                                    l1047 0CEB                                      l1135 084D  
                                    l1063 1681                                      l1128 0E14  
                                    l3001 1761                                      l1154 08F7  
                                    l1162 17D3                                      l1090 0A48  
                                    l3011 0BA2                                      l1139 16F5  
                                    l1171 170F                                      l3101 0110  
                                    l3021 0BB3                                      l3013 0BA4  
                                    l3005 0B98                                      l1165 0003  
                                    l1093 0A6A                                      l1094 0A78  
                                    l3111 0158                                      l3103 012A  
                                    l3031 0BC9                                      l3023 0BB9  
                                    l3015 0BA8                                      l3007 0B99  
                                    l1095 0A84                                      l3121 018E  
                                    l3113 015F                                      l3105 0137  
                                    l3201 0CC1                                      l3033 0BD8  
                                    l3025 0BBC                                      l3041 0BE8  
                                    l3017 0BAD                                      l3009 0B9D  
                                    l1098 0526                                      l3131 01EF  
                                    l3123 01A2                                      l3115 016C  
                                    l3107 0144                                      l3051 006D  
                                    l3211 0CE4                                      l3203 0CC6  
                                    l3043 0BED                                      l3035 0BDC  
                                    l3027 0BC1                                      l3019 0BB1  
                                    l1099 052F                                      l3141 020E  
                                    l3133 01F6                                      l3125 01AF  
                                    l3117 0173                                      l3109 014B  
                                    l3061 0080                                      l3053 0071  
                                    l3221 0D13                                      l3213 0CF2  
                                    l3205 0CD1                                      l3045 0BF2  
                                    l3037 0BDD                                      l3029 0BC5  
                                    l2501 0E41                                      l3301 074E  
                                    l3151 0222                                      l3143 0215  
                                    l3135 0202                                      l3127 01C3  
                                    l3119 0187                                      l3071 009B  
                                    l3063 0088                                      l3055 0075  
                                    l3223 0D27                                      l3215 0CFB  
                                    l3207 0CD8                                      l3311 0801  
                                    l3039 0BE2                                      l2511 0E82  
                                    l2503 0E4B                                      l2431 08C8  
                                    l3303 075B                                      l3241 173D  
                                    l3233 172B                                      l3161 024B  
                                    l3153 0236                                      l3137 0209  
                                    l3145 0219                                      l3129 01D8  
                                    l3081 00B2                                      l3073 009F  
                                    l3065 008A                                      l3057 0076  
                                    l3049 0067                                      l3225 0D2C  
                                    l3217 0CFF                                      l3209 0CDC  
                                    l3321 09E4                                      l3313 0807  
                                    l2513 0E86                                      l2521 0ECA  
                                    l2505 0E6A                                      l2433 08D2  
                                    l2425 08B9                                      l2441 17B0  
                                    l2601 0627                                      l3305 0761  
                                    l3251 171C                                      l2611 0A86  
                                    l3243 1740                                      l3235 1734  
                                    l3403 07D8                                      l3171 0282  
                                    l3163 024F                                      l3147 021D  
                                    l3139 020D                                      l3083 00B4  
                                    l3075 00A0                                      l3067 0092  
                                    l3059 007B                                      l3227 0D30  
                                    l3219 0D09                                      l3331 0984  
                                    l3323 09F9                                      l3315 080E  
                                    l2523 0ECF                                      l2515 0E8A  
                                    l2507 0E77                                      l2435 08EF  
                                    l2427 08BE                                      l2443 17BE  
                                    l2451 1700                                      l2531 0A41  
                                    l2603 062C                                      l3307 076E  
                                    l3253 1720                                      l2613 0A88  
                                    l3245 1743                                      l3237 1737  
                                    l3405 07E6                                      l3181 02AC  
                                    l3173 0290                                      l3165 0267  
                                    l3157 023E                                      l3149 021E  
                                    l3093 00CF                                      l3085 00BC  
                                    l3077 00A5                                      l3069 0097  
                                    l3229 0D31                                      l3333 0990  
                                    l3325 09FD                                      l3317 0815  
                                    l2461 0F0A                                      l2517 0EAC  
                                    l2509 0E7A                                      l2429 08C3  
                                    l2445 17C3                                      l2453 1709  
                                    l2541 0A6F                                      l2533 0A46  
                                    l2525 0A2E                                      l2605 0630  
                                    l2701 0D5A                                      l3309 0774  
                                    l3501 03CE                                      l3421 02BE  
                                    l3255 1726                                      l3247 1711  
                                    l2551 1658                                      l2631 0A9C  
                                    l2615 0A8C                                      l3239 173A  
                                    l3407 07EB                                      l3183 02AD  
                                    l3175 0299                                      l3159 0243  
                                    l3167 026B                                      l3095 00DC  
                                    l3087 00C1                                      l3079 00AA  
                                    l3191 0C94                                      l3335 09A5  
                                    l3351 1695                                      l3343 1682  
                                    l3327 0A01                                      l3319 09D8  
                                    l2471 0F62                                      l2463 0F2B  
                                    l2519 0EBC                                      l2439 17AD  
                                    l2447 16F7                                      l2535 0A4B  
                                    l2527 0A33                                      l2607 0639  
                                    l2711 0DA2                                      l2703 0D5E  
                                    l3271 0668                                      l3263 064D  
                                    l3511 03EA                                      l3503 03DA  
                                    l3431 02DB                                      l3423 02CB  
                                    l3249 171B                                      l2641 0ABC  
                                    l2633 0AA1                                      l2625 0A8F  
                                    l2617 0A8C                                      l2801 0C61  
                                    l3185 02B5                                      l3177 029B  
                                    l3169 0278                                      l3097 00E9  
                                    l3089 00C6                                      l3193 0C98  
                                    l3337 09A9                                      l3345 168E  
                                    l3361 089B                                      l2481 0F82  
                                    l2473 0F6F                                      l2465 0F35  
                                    l2457 0EFF                                      l2545 16DC  
                                    l2449 16FC                                      l2537 0A57  
                                    l2529 0A3C                                      l2561 052B  
                                    l2553 04DF                                      l2721 0DE0  
                                    l2705 0D70                                      l3281 06A9  
                                    l3273 0672                                      l3265 065D  
                                    l3521 0438                                      l3513 03F4  
                                    l3505 03E7                                      l3433 02DB  
                                    l3425 02CE                                      l2651 0ADD  
                                    l2643 0ABD                                      l2635 0AA6  
                                    l2627 0A94                                      l2619 0A8D  
                                    l2811 0C75                                      l2803 0C65  
                                    l3179 02A8                                      l3099 0103  
                                    l3195 0CA8                                      l3339 09AD  
                                    l3347 1692                                      l3371 08AB  
                                    l3355 0883                                      l2483 0F8A  
                                    l2475 0F72                                      l2491 0FCB  
                                    l2467 0F54                                      l2459 0F00  
                                    l2547 16E9                                      l2539 0A5C  
                                    l2571 055F                                      l2563 053E  
                                    l2555 04EF                                      l2715 0DBC  
                                    l2707 0D81                                      l2731 0DF1  
                                    l3291 070D                                      l3283 06BB  
                                    l3275 0677                                      l3267 0660  
                                    l3523 043C                                      l3515 03F9  
                                    l3451 0307                                      l3435 02DB  
                                    l3427 02DB                                      l2901 161A  
                                    l2549 1651                                      l2645 0AC1  
                                    l2637 0AAD                                      l2629 0A98  
                                    l2661 0AE8                                      l2653 0AE1  
                                    l2813 0C79                                      l2805 0C69  
                                    l3381 07AA                                      l3373 0783  
                                    l2821 178B                                      l3197 0CB8  
                                    l3189 0C8F                                      l2741 1634  
                                    l3357 0891                                      l2493 0FD0  
                                    l2485 0FAC                                      l2477 0F7A  
                                    l2469 0F58                                      l2581 05A4  
                                    l2573 0569                                      l2565 0544  
                                    l2557 0502                                      l2733 0E0A  
                                    l2717 0DCD                                      l2725 0DE6  
                                    l2709 0D89                                      l3293 071C  
                                    l3285 06CB                                      l3277 0687  
                                    l3269 0664                                      l3541 0474  
                                    l3525 0448                                      l3517 0406  
                                    l3461 033E                                      l3453 0310  
                                    l3445 02EB                                      l3437 02DF  
                                    l3429 02DB                                      l2903 161F  
                                    l2911 07FA                                      l2647 0ACE  
                                    l2639 0AB8                                      l2671 0AF3  
                                    l2655 0AE3                                      l2815 0C7D  
                                    l2807 0C6D                                      l2751 0BF7  
                                    l3383 07AB                                      l3375 078E  
                                    l2823 1792                                      l3367 089D  
                                    l3359 0895                                      l2487 0FBC  
                                    l2479 0F7E                                      l2495 0E15  
                                    l2591 060B                                      l2583 05A8  
                                    l2575 056C                                      l2567 0554  
                                    l2559 0508                                      l2727 0DEE  
                                    l2719 0DD5                                      l3295 072A  
                                    l3287 06DD                                      l3279 0699  
                                    l3551 04B3                                      l3543 04AC  
                                    l3535 0458                                      l3527 044C  
                                    l3519 0433                                      l3471 036C  
                                    l3463 0347                                      l3455 031D  
                                    l3447 02F5                                      l3439 02E8  
                                    l2905 1620                                      l2913 07FB  
                                    l2745 15F1                                      l2921 16C9  
                                    l2649 0AD9                                      l2681 0B13  
                                    l2673 0AF7                                      l2657 0AE7  
                                    l2817 0C81                                      l2809 0C71  
                                    l2761 0C11                                      l2753 0BF9  
                                    l3385 07B3                                      l2825 1796  
                                    l3369 08A6                                      l2489 0FBD  
                                    l2497 0E16                                      l2585 05E3  
                                    l2593 0610                                      l2577 0571  
                                    l2569 055A                                      l2841 0845  
                                    l2833 081F                                      l3297 0739  
                                    l3289 06E5                                      l3553 04BC  
                                    l3545 04B0                                      l3537 0462  
                                    l3529 0455                                      l3481 0382  
                                    l3473 0375                                      l3465 0349  
                                    l3457 0333                                      l3449 02FA  
                                    l2907 1621                                      l2851 0945  
                                    l2915 07FC                                      l2747 1608  
                                    l2931 16D8                                      l2923 16CC  
                                    l2691 0B34                                      l2683 0B17  
                                    l2675 0AFC                                      l2667 0AEA  
                                    l2659 0AE7                                      l2771 0C25  
                                    l2763 0C15                                      l2755 0C05  
                                    l3395 07C1                                      l3387 07B5  
                                    l3379 0797                                      l2827 17A1  
                                    l2819 1789                                      l2739 162D  
                                    l2499 0E20                                      l2595 0617  
                                    l2587 05F0                                      l2579 05A0  
                                    l2835 0823                                      l3299 0748  
                                    l3555 04C1                                      l3539 0467  
                                    l3483 0387                                      l3467 0358  
                                    l3459 033C                                      l2861 0952  
                                    l2853 0947                                      l2845 093C  
                                    l2933 1623                                      l2909 07F7  
                                    l2941 1643                                      l2749 15F4  
                                    l2925 16CD                                      l2917 16C3  
                                    l2693 0B38                                      l2685 0B18  
                                    l2677 0B01                                      l2669 0AEF  
                                    l2781 0C39                                      l2773 0C29  
                                    l2765 0C19                                      l2757 0C09  
                                    l3389 07B9                                      l3397 07D1  
                                    l2829 17A6                                      l2597 061C  
                                    l2589 05FD                                      l2837 0827  
                                    l3557 04CE                                      l3493 039B  
                                    l3485 0394                                      l3469 0368  
                                    ?_pad 0024                                      l2871 097D  
                                    l2863 0954                                      l2855 094B  
                                    l2847 0940                                      l2935 1626  
                                    l2943 1648                                      l2927 16CF  
                                    l2919 16C8                                      l2687 0B1C  
                                    l2679 0B08                                      l2791 0C4D  
                                    l2783 0C3D                                      l2775 0C2D  
                                    l2767 0C1D                                      l2759 0C0D  
                                    l2951 1697                                      l2599 0621  
                                    l2695 0D3C                                      l2839 083B  
                                    l3495 03A4                                      l3487 0398  
                                    l3479 0378                                      l2873 097E  
                                    l2865 095A                                      l2857 094D  
                                    l2849 0943                                      l2937 1627  
                                    l2881 1604                                      l2945 164A  
                                    l2929 16D1                                      l2689 0B29  
                                    l2793 0C51                                      l2785 0C41  
                                    l2777 0C31                                      l2769 0C21  
                                    l2953 16AD                                      l2697 0D4D  
                                    l2961 1674                                      l3497 03A9  
                                    l2875 15F7                                      l2867 095E  
                                    l2859 0950                                      l2939 1628  
                                    l2883 1606                                      l2947 164B  
                                    l2795 0C55                                      l2787 0C45  
                                    l2779 0C35                                      l2699 0D55  
                                    l3499 03B6                                      l2877 15FA  
                                    l2869 0964                                      l2949 164C  
                                    l2797 0C59                                      l2789 0C49  
                                    l2885 17D4                                      l2981 0B78  
                                    l2965 0B3B                                      l2879 1602  
                                    l2799 0C5D                                      l2895 17E5  
                                    l2887 17DB                                      l2983 0B7A  
                                    l2975 0B49                                      l2967 0B44  
                                    l2991 1747                                      l2959 166F  
                                    l2897 17EE                                      l2889 17E3  
                                    l2985 0B7F                                      l2977 0B51  
                                    l2969 0B46                                      l2993 1749  
                                    l2899 17F2                                      l2987 0B8E  
                                    l2979 0B53                                      l2995 174D  
                                    l2997 1756                                      l2999 175B  
                                    STR_1 182D                                      STR_2 1818  
                                    STR_3 1800                                      u2000 0A6F  
                                    u2001 0A6E                                      u2010 16E9  
                                    u2011 16E8                                      u2020 1658  
                                    u2100 055F                                      u2021 1657  
                                    u2101 055E                                      u2110 05E3  
                                    u2030 04FA                                      u2015 16E5  
                                    u2111 05E2                                      u2031 04F8  
                                    u2200 0AAD                                      u2120 05F0  
                                    u2040 04FB                                      u3000 074E  
                                    u2201 0AAC                                      u2121 05EF  
                                    u3001 074D                                      u2130 05FD  
                                    u2050 0508                                      u3010 0761  
                                    u2131 05FC                                      u2115 05DF  
                                    u2051 0507                                      u3011 0760  
                                    u2220 0ACE                                      u3100 088D  
                                    u2140 060B                                      u2300 0D70  
                                    u3020 0774                                      u2221 0ACD  
                                    u2141 060A                                      u2301 0D6F  
                                    u3021 0773                                      _LATA 010C  
                                    u3110 08B8                                      u3030 0807  
                                    u2150 0610                                      u2070 052B  
                                    u2310 0D81                                      _LATB 010D  
                                    u2215 0AB0                                      u3111 08B7  
                                    u3031 0806                                      u2151 060F  
                                    u2135 05F9                                      u2071 052A  
                                    u2311 0D80                                      _LATC 010E  
                                    u2240 0AFC                                      u3200 07E6  
                                    u3120 078E                                      u3040 0815  
                                    u2160 0617                                      u2080 053E  
                                    u2320 0DCD                                      u2225 0ACA  
                                    u2241 0AFB                                      u3201 07E5  
                                    u3121 078D                                      u3041 0814  
                                    u2161 0616                                      u2145 0607  
                                    u2081 053D                                      u2321 0DCC  
                                    u2250 0B08                                      u3210 07EB  
                                    u3130 07A4                                      u2330 1634  
                                    u3050 09F1                                      u2170 061C  
                                    u2090 055A                                      u2235 0AD1  
                                    u2251 0B07                                      u3211 07EA  
                                    u2331 1633                                      u3115 08B4  
                                    u2171 061B                                      u2091 0559  
                                    u3140 07B9                                      u2340 1796  
                                    u2420 0B66                                      u3060 09FD  
                                    u2500 0BB9                                      u1700 08BE  
                                    u2180 0627                                      u3300 0394  
                                    u3141 07B8                                      u2341 1795  
                                    u3061 09FC                                      u2405 16BC  
                                    u2501 0BB8                                      u1701 08BD  
                                    u2181 0626                                      u2085 053A  
                                    u3301 0393                                      u2190 0AA1  
                                    u2270 0B29                                      u3150 07C0  
                                    u2430 0B8C                                      u3070 099D  
                                    u1710 08C3                                      u3310 03B6  
                                    u2191 0AA0                                      u2271 0B28  
                                    u3151 07BF                                      u3135 07A0  
                                    u2431 0B8B                                      u3055 09ED  
                                    u1711 08C2                                      u3311 03B5  
                                    u2360 17A6                                      u2600 0080  
                                    u3080 09A9                                      u2520 0BC9  
                                    u2440 174D                                      u1800 0F5F  
                                    u1720 08D2                                      u3320 0406  
                                    u2265 0B0B                                      u2361 17A5  
                                    u2601 007F                                      u2425 0B62  
                                    u3081 09A8                                      u2521 0BC8  
                                    u2441 174C                                      u1721 08D1  
                                    u3321 0405                                      u3305 0390  
                                    u3170 07D0                                      u2610 009F  
                                    u3090 1692                                      u1810 0F6F  
                                    u1730 08EF                                      u2290 0D4D  
                                    u2370 0845                                      u3330 0438  
                                    u3250 0307                                      _T2PR 001B  
                                    u2275 0B25                                      u3171 07CF  
                                    u2355 179B                                      u2611 009E  
                                    u2435 0B88                                      u3075 0999  
                                    u3091 1691                                      u2515 0BBD  
                                    u1811 0F6E                                      u1731 08EE  
                                    u2291 0D4C                                      u2371 0844  
                                    u3331 0437                                      u3315 03B2  
                                    u3251 0306                                      u2380 17FF  
                                    u3180 07D7                                      u2620 00A5  
                                    u2540 0BD8                                      u1820 0F82  
                                    u1740 17D3                                      u3340 0474  
                                    u2285 0B2C                                      u2381 17FE  
                                    u3181 07D6                                      u3165 07C2  
                                    u2621 00A4                                      u2541 0BD7  
                                    u1821 0F81                                      u1741 17D2  
                                    u3341 0473                                      u3325 0402  
                                    u2630 00AA                                      u2470 1761  
                                    u1830 0FAC                                      u1910 0E77  
                                    u1750 1709                                      u3350 04CE  
                                    u2631 00A9                                      u2535 0BCA  
                                    u2471 1760                                      u2455 1752  
                                    u1831 0FAB                                      u1911 0E76  
                                    u1735 08EB                                      u1751 1708  
                                    u3351 04CD                                      u3255 0303  
                                    u3407 02E3                                      u2800 025D  
                                    u2720 020D                                      u2640 00C1  
                                    u2560 0BE8                                      u2480 0B9D  
                                    u1840 0FCB                                      u1760 0F0A  
                                    u1920 0E8A                                      u3280 033C  
                                    u2385 17FB                                      u2721 020C  
                                    u2705 01F0                                      u2641 00C0  
                                    u2561 0BE7                                      u2545 0BD4  
                                    u2481 0B9C                                      u2465 1757  
                                    u1841 0FCA                                      u1761 0F09  
                                    u1921 0E89                                      u3345 0470  
                                    u3417 0370                                      u3281 033B  
                                    u3265 0315                                      u2810 0278  
                                    u2650 00C6                                      u2570 0BED  
                                    u2490 0BA8                                      u1850 0FD0  
                                    u1930 0EAC                                      u3290 0347  
                                    _T4PR 0414                                      u3507 171D  
                                    u3195 07D9                                      u2811 0277  
                                    u2715 0203                                      u2651 00C5  
                                    u2395 16A6                                      u2571 0BEC  
                                    u2555 0BDE                                      u2491 0BA7  
                                    u1851 0FCF                                      u1835 0FA8  
                                    u1931 0EAB                                      u3355 04CA  
                                    u3427 03D4                                      u3291 0346  
                                    u3275 032B                                      u2820 0290  
                                    u2740 021D                                      u2580 0075  
                                    u2900 0CF1                                      u1780 0F35  
                                    u1940 0ECA                                      u2821 028F  
                                    u2805 0259                                      u2741 021C  
                                    u2581 0074                                      u2901 0CF0  
                                    u1781 0F34                                      u1941 0EC9  
                                    u3437 03E2                                      u2830 02AC  
                                    u2750 0222                                      u2590 007B  
                                    u1950 0ECF                                      u1870 0E20  
                                    u2831 02AB                                      u2815 0274  
                                    u2751 0221                                      u2735 020F  
                                    u2591 007A                                      u1951 0ECE  
                                    u1935 0EA8                                      u1871 0E1F  
                                    u3447 0442                                      u2760 0236  
                                    u2680 01CE                                      u2920 0CFF  
                                    u2840 0C94                                      u2825 028C  
                                    u2761 0235                                      u2665 0145  
                                    u2921 0CFE                                      u2841 0C93  
                                    u3457 0450                                      u2770 023D  
                                    u2690 01E5                                      u2930 0D05  
                                    u2850 0C98                                      u1890 0E4B  
                                    u1970 0A33                                      u2771 023C  
                                    u2675 0174                                      u2931 0D04  
                                    u2915 0CF5                                      u2851 0C97  
                                    u1891 0E4A                                      u1971 0A32  
                                    u3467 04D4                                      u3387 02C4  
                                    u2780 0243                                      u2940 0D09  
                                    u2860 0CB8                                      u1980 0A41  
                                    u3477 17DE                                      u2781 0242  
                                    u2685 01CA                                      u2941 0D08  
                                    u2861 0CB7                                      u1981 0A40  
                                    u3397 02D4                                      u2790 024F  
                                    u2950 0D1D                                      u1990 0A6A  
                                    u3487 0BFE                                      u2791 024E  
                                    u2695 01E1                                      u1991 0A69  
                                    u2960 0D2C                                      u2880 0CD7  
                                    u3497 0C86                                      u2961 0D2B  
                                    u2881 0CD6                                      u2970 0D30  
                                    u2971 0D2F                                      u2955 0D19  
                                    u2875 0CCB                                      u1995 0A66  
                                    u2980 1726                                      u2981 1725  
                                    u2990 0664                                      u2895 0CE5  
                                    u2991 0663                                      _TMR2 001A  
                                    _TMR4 0413                                      _WPUA 020C  
                                    _WPUB 020D                                      _WPUC 020E  
                                    abs@a 0073                                      _dbuf 0242  
                                    _main 02BE                                      _dtoa 04DD  
                                    _prec 00D1                                      _nout 00CD  
                                    pad@i 0027                                      pad@p 0025  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    pad@w 0029                                      btemp 007E  
                                    start 0019                    __end_of_SPI_Initialize 1608  
                            ?_initDisplay 0070                ??_TMR4_SetInterruptHandler 0072  
                                   ??_abs 0075                                     ??_pad 007C  
                            ?_readRawData 0071            __size_of_OSCILLATOR_Initialize 0005  
           __end_of_OSCILLATOR_Initialize 15FC                             ___fltol@sign1 0079  
                         __end_of___aodiv 1000                                     ?_main 0070  
                                   ?_dtoa 0030                           __end_of___aomod 0EFF  
                         __end_of___awdiv 0BF7                           __end_of___flmul 02BE  
                         __end_of___fltol 07F7                           ___awdiv@divisor 0070  
                                   _T2CON 001C                                     _LATB7 086F  
                                   _LATC6 0876                                     _LATC7 0877  
                                   _T4CON 0415                                     _T2HLT 001D  
                                   _T4HLT 0416                                     _T2PPS 0E18  
                                   _T2TMR 001A                                     _T2RST 001F  
                                   _T4PPS 0E1B                                     i1l333 1601  
                                   i1l343 0002                                     i1l360 0017  
                                   i1l337 1642                                     _T4TMR 0413  
                                   _T4RST 0418                           ___awdiv@counter 0075  
                         __end_of_dataCMD 0B3B                              vfpfcnvrt@fmt 004E  
                      _PWM4_LoadDutyValue 16AD                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                         _TMR4_Initialize 16C3                           __end_of_command 0AE0  
                        __end_of_TMR4_ISR 1602                                     _flags 00D3  
                             ?_TMR2_Start 0070                                     _dummy 00D8  
                                   _fputc 08B9                                     _fputs 17AB  
                             ?_TMR4_Start 0070                       ?_PWM4_LoadDutyValue 0070  
                                   _text1 01C2                                     _text2 01B1  
                                   _text3 0231                                     _text5 0153  
                                   _text6 0142                                     _text7 0220  
                                   _text9 0131                                     pad@fp 002B  
                                   _width 00CF                                     _putch 0003  
                                   main@i 00BF                                     dtoa@d 0030  
                                   dtoa@i 004C                                     dtoa@n 0044  
                                   dtoa@p 003D                                     dtoa@s 0042  
                                   dtoa@w 0040                   __end_of_PWM3_Initialize 162C  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           ?_SPI_Initialize 0070  
                         __initialization 001B                              __end_of_main 04DD  
                            __end_of_dtoa 064D                      ??_PWM4_LoadDutyValue 0072  
                 __end_of_PWM4_Initialize 0800                   __end_of_TMR2_Initialize 1650  
             ?_INTERRUPT_InterruptManager 0070                           readRawData@byte 0020  
                                  ??_main 00B5                                    ??_dtoa 0038  
                   __end_of_setMotorSpeed 081D                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADCON2 009F  
                                  ?_fputc 0070                                    ?_fputs 0078  
                                  _ADRESH 009C                                    _ADRESL 009B  
                        ___awdiv@dividend 0072                                    _ANSELA 018C  
                                  ?_putch 0070                                    _ANSELB 018D  
                                  _ANSELC 018E                                    _RC0PPS 0EA0  
                                  _RC1PPS 0EA1                                    _RB5PPS 0E9D  
                                  _RB6PPS 0E9E                                    _ODCONA 028C  
                                  _ODCONB 028D                                    _ODCONC 028E  
                                  i1l3261 15FE                                    i1l3413 0006  
                                  i1l3415 000A                                    i1l3417 000F  
                                  i1l3259 15FC                                    i1l3419 0014  
                                  i1l2955 1636                                    i1l2957 163D  
                                  u241_20 163D                                    u241_21 163C  
                                  u322_20 000A                                    u322_21 0009  
                                  u323_20 000F                                    u323_21 000E  
                                  u324_20 0014                                    u324_21 0013  
                                  _OSCCON 0099                                    u206lld 0526  
                                  u190lld 0E6A                                    u177lld 0F29  
                                  u186lld 0FEE                                    u179lld 0F54  
                                  u196lld 0EED                                    u188lld 0E3F  
                                  _SSPBUF 0211                          __end_of___xxtofl 0D3A  
                            vfprintf@cfmt 0064               __size_of_PWM3_LoadDutyValue 0016  
                               ??___aodiv 0070                                 ??___aomod 0070  
                                  ___wmul 1747                                 ??___awdiv 0074  
                               ??___flmul 0028                          __end_of_initOLED 0C8E  
                               ??___fltol 0074                                    _faults 00D7  
                     __size_of_TMR2_Start 0003                                 ??_dataCMD 0072  
                            ?_reportfault 0070                       __size_of_TMR4_Start 0003  
                                  _tcTemp 00C5                   __end_of_TMR4_Initialize 16DC  
                        ___awdiv@quotient 0077                                    _text10 00D9  
                                  _text11 0120                                    _text12 01D3  
              __end_of_stuffIntToCharsBuf 0783                                    _printf 166F  
                                  pad@buf 0024                                    dtoa@fp 003F  
                               ??_command 0072                                    _strlen 16F6  
                   __end_of_getFaultCodes 1697      __end_of_TMR4_DefaultInterruptHandler 0003  
   __size_of_TMR4_DefaultInterruptHandler 0001              _TMR4_DefaultInterruptHandler 0002  
                                  fputc@c 0070                                    fputs@c 0020  
                                  fputs@i 0021                                    fputs@s 0023  
                        setMotorSpeed@num 0074                        __size_of__Umul8_16 0023  
                ADC_GetConversion@channel 0073                                    putch@c 0070  
                        __end_of_vfprintf 084E  TMR4_SetInterruptHandler@InterruptHandler 0070  
                          main@adc_value0 00BB                            main@adc_value1 00BD  
                        ?_PWM3_Initialize 0070                              ___xxtofl@arg 007A  
                            ___xxtofl@exp 0079                         _SYSTEM_Initialize 172B  
                            ___xxtofl@val 0070                   __end_of__initialization 0063  
                   setMotorSpeed@motorNum 0076                        ?_SYSTEM_Initialize 0070  
                              ___fltol@f1 0070                          getFaultCodes@raw 0027  
                          __pcstackCOMMON 0070                     __end_of_TMR4_CallBack 1643  
                            __pidataBANK1 165E                              __pidataBANK2 08F8  
                            __pidataBANK3 084E                              __pidataBANK4 1766  
                     ??_SYSTEM_Initialize 007E                                 ?_TMR4_ISR 0070  
                    __size_of_initDisplay 002C                             __end_of_fputc 08F8  
                           __end_of_fputs 17D4                             __end_of_putch 0004  
                        ?_TMR2_Initialize 0070                          ?_PWM4_Initialize 0070  
             PWM4_LoadDutyValue@dutyValue 0070                      __size_of_readRawData 005D  
                          _OPTION_REGbits 0095                     stuffIntToCharsBuf@buf 00A5  
                   stuffIntToCharsBuf@neg 00B3                     stuffIntToCharsBuf@num 00A3  
                   stuffIntToCharsBuf@pos 00A6             ?_TMR4_DefaultInterruptHandler 0070  
                                 ??_fputc 0073                 __end_of_SYSTEM_Initialize 1747  
                                 ??_fputs 0079                                   ??_putch 0070  
                              __pbssBANK1 00C1                                __pbssBANK3 01D3  
                              __pbssBANK4 0242                     _TMR4_InterruptHandler 00D5  
                       __end_of__Umul8_16 17AB                                _getDieTemp 0984  
                              __pmaintext 02BE                              initDisplay@i 007C  
                                 ?___wmul 0070                                ??_TMR4_ISR 0070  
                              __pintentry 0004                          ?_TMR4_Initialize 0070  
                              _getTemp_TC 09D8                                   ?_printf 0066  
                 __size_of_ADC_Initialize 0009                                   ?_strlen 0070  
                               ?___xxtofl 0070                        __size_of_vfpfcnvrt 00DB  
                                 _OSCTUNE 0098                                   _PWM3DCH 0618  
                                 _PWM3DCL 0617                                   _PWM4DCH 061B  
                      __size_of_spi_write 000E                                   _PWM4DCL 061A  
                                 _PWM3CON 0619                                   _PWM4CON 061C  
                                 _SSP1ADD 0212                                   _PPSLOCK 0E0F  
                                 _SSP1BUF 0211                         reportfault@F10328 01A0  
                            ??_TMR2_Start 0070                              ??_TMR4_Start 0070  
                               ?_initOLED 0070                          ??_SPI_Initialize 0070  
                            readRawData@i 0025                                   ___aodiv 0EFF  
                                 ___aomod 0E15                                   ___awdiv 0B98  
                                 ___flmul 0067                                   ___fltol 0783  
                         __size_of___wmul 001F                                 ?_vfprintf 005E  
                                 _dataCMD 0AE0                        __end_of_TMR2_Start 15F4  
                                 _dieTemp 00C1                        __end_of_TMR4_Start 15F7  
                                 __ptext1 064D                                   __ptext2 166F  
                                 __ptext3 081D                                   __ptext4 0D3A  
                                 __ptext5 04DD                                   __ptext6 0A2C  
                                 __ptext7 16F6                                   __ptext8 17AB  
                                 __ptext9 08B9                           __size_of_printf 0013  
                                 _command 0A85                      __size_of_reportfault 0038  
                         __size_of_strlen 001A                     _OSCILLATOR_Initialize 15F7  
                               _T2CONbits 001C                              __size_of_abs 001A  
                            __size_of_pad 0059                                ??___xxtofl 0074  
                               _T4CONbits 0415                  ??_PIN_MANAGER_Initialize 0070  
       __size_of_TMR4_SetInterruptHandler 0006                                 _T2HLTbits 001D  
               ?_TMR4_SetInterruptHandler 0070                                 _T4HLTbits 0416  
              __size_of_SYSTEM_Initialize 001C                                   clrloop0 160F  
                      getDieTemp@temp_die 0046                      end_of_initialization 0063  
                               _T2RSTbits 001F            ??_TMR4_DefaultInterruptHandler 0070  
                              ??_initOLED 0079                                 _T4RSTbits 0418  
                                 fputc@fp 0072                                   init_ram 1614  
                                 fputs@fp 0078                                   initloop 1615  
                             ?_getDieTemp 003A                         __end_of_vfpfcnvrt 0E15  
                       __end_of_spi_write 165E               __size_of_PWM4_LoadDutyValue 0016  
                              ??_vfprintf 0061                                   strlen@a 0073  
                                 strlen@s 0074                               ?_getTemp_TC 003A  
                               _SSPDATPPS 0E21                                 _SSPCLKPPS 0E20  
                           ___xxtofl@sign 0078                        _stuffIntToCharsBuf 064D  
                             ___flmul@grs 002E                             ?_spi_transfer 0070  
                     ?_stuffIntToCharsBuf 00A3                __end_of_PWM3_LoadDutyValue 16AD  
                  __size_of_setMotorSpeed 001C                               vfpfcnvrt@ap 004F  
                             vfpfcnvrt@fp 005D                               vfpfcnvrt@ll 0055  
                          __end_of___wmul 1766                         __size_of_TMR4_ISR 0006  
                          _ADC_Initialize 161A                           command@sendByte 0078  
                  ?_OSCILLATOR_Initialize 0070                      ??_stuffIntToCharsBuf 00A8  
                          __end_of_printf 1682                            __end_of_strlen 1710  
                     start_initialization 001B           __size_of_PIN_MANAGER_Initialize 0048  
                             __end_of_abs 16F6                               __end_of_pad 0A85  
                     __size_of_getDieTemp 0054                             getDieTemp@raw 0042  
                          ??_spi_transfer 0070                    stuffIntToCharsBuf@dig1 00AD  
                  stuffIntToCharsBuf@dig2 00AF                    stuffIntToCharsBuf@dig3 00B1  
                  stuffIntToCharsBuf@dig4 00AB                       __size_of_getTemp_TC 0054  
                         dataCMD@sendByte 0078                    __size_of_getFaultCodes 0015  
                           ??_initDisplay 007B                  __size_of_PWM3_Initialize 0009  
                             vfprintf@fmt 005E                                  ??___wmul 0074  
                             _CCPTMRSbits 029E                         readRawData@result 0021  
                  __end_of_ADC_Initialize 1623                                 __Umul8_16 1788  
                             __pdataBANK1 00D9                               __pdataBANK2 0120  
                             __pdataBANK3 01A0                               __pdataBANK4 0220  
                           ??_readRawData 0075                                  ??_printf 007D  
                                ??_strlen 0072                                 ___flmul@a 0024  
                               ___flmul@b 0020                             _setMotorSpeed 0801  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                          ___aodiv@dividend 0028  
                __size_of_PWM4_Initialize 0009                  __size_of_TMR2_Initialize 000D  
                       __size_of___xxtofl 00AC                    __size_of_TMR4_CallBack 000D  
                       __size_of_initOLED 0097                    _PIN_MANAGER_Initialize 093C  
                     reportfault@faultStr 0020                                 _dtoa$1489 003B  
                                ?___aodiv 0020                                  ?___aomod 0020  
        __end_of_TMR4_SetInterruptHandler 160E                                  ?___awdiv 0070  
                        ___aodiv@quotient 0073                                  ?___flmul 0020  
                                ?___fltol 0070                                ?__Umul8_16 0070  
                         ?_ADC_Initialize 0070                                  ?_dataCMD 0070  
                     __end_of_initDisplay 1800              ??_INTERRUPT_InterruptManager 0070  
                       __size_of_vfprintf 0031                                  ?_command 0070  
                          ?_setMotorSpeed 0074                             _getFaultCodes 1682  
                     __end_of_readRawData 0B98                  __size_of_TMR4_Initialize 0019  
                          __size_of_fputc 003F                                  _T2CLKCON 001E  
                        reportfault@fault 0031                            __size_of_fputs 0029  
                                _T4CLKCON 0417                            __size_of_putch 0001  
                               _milliTime 00C9                            ___wmul@product 0074  
                             dataCMD@bit0 0074                                 clear_ram0 160E  
                                _PIE2bits 0091                              ??_getDieTemp 003E  
     __size_of_INTERRUPT_InterruptManager 0015                                  _PIR1bits 0010  
                                _PIR2bits 0011                                  _SSP1CON1 0215  
                                _TMR4_ISR 15FC                             _TMR4_CallBack 1636  
                                _SSP1STAT 0214                             ??_reportfault 0079  
                               _vfpfcnvrt 0D3A                              ??_getTemp_TC 003E  
                               _spi_write 1650                         ??_PWM3_Initialize 0070  
                    __end_of_spi_transfer 1636                                _ADCON0bits 009D  
                       ___wmul@multiplier 0070                            ?_getFaultCodes 0070  
                        spi_transfer@data 0070                        __end_of_getDieTemp 09D8  
                       ??_TMR2_Initialize 0070                         ??_PWM4_Initialize 0070  
                      __end_of_getTemp_TC 0A2C                __end_of_PWM4_LoadDutyValue 16C3  
                              vfprintf@ap 0060                                vfprintf@fp 0063  
                             _initDisplay 17D4                         _ADC_GetConversion 1710  
                          ?_TMR4_CallBack 0070                   __size_of_SPI_Initialize 0006  
                 ??_OSCILLATOR_Initialize 0070                               ??__Umul8_16 0072  
                      ?_ADC_GetConversion 0070                          __size_of___aodiv 0101  
                        __size_of___aomod 00EA                          __size_of___awdiv 005F  
                        __size_of___flmul 0257                          __size_of___fltol 0074  
                              ?_vfpfcnvrt 004E                               _readRawData 0B3B  
                        __size_of_dataCMD 005B                                ?_spi_write 0070  
                         ___aodiv@divisor 0020                           ??_setMotorSpeed 0078  
                         ___aodiv@counter 0071                  _TMR4_SetInterruptHandler 1608  
                      _PWM3_LoadDutyValue 1697                       ??_ADC_GetConversion 0072  
                        __size_of_command 005B                                  ___xxtofl 0C8E  
                     __end_of_reportfault 08B9                                  __ptext10 0003  
                                __ptext11 16DC                                  __ptext20 09D8  
                                __ptext12 0E15                                  __ptext21 1682  
                                __ptext13 0EFF                                  __ptext30 17D4  
                                __ptext22 0984                                  __ptext14 1747  
                                __ptext31 0BF7                                  __ptext23 0B3B  
                                __ptext15 0B98                                  __ptext40 1602  
                                __ptext32 0AE0                                  __ptext24 162C  
                                __ptext16 0801                                  __ptext41 07F7  
                                __ptext33 0A85                                  __ptext25 0C8E  
                                __ptext17 16AD                                  __ptext50 0002  
                                __ptext42 1623                                  __ptext34 1650  
                                __ptext26 0067                                  __ptext18 1697  
                                __ptext43 093C                                  __ptext35 16C3  
                                __ptext27 1788                                  __ptext19 0881  
                                __ptext44 15F7                                  __ptext36 15F4  
                                __ptext28 0783                                  __ptext45 161A  
                                __ptext37 1608                                  __ptext29 172B  
                                __ptext46 1710                                  __ptext38 1643  
                                __ptext39 15F1                                  __ptext48 15FC  
                                __ptext49 1636                       ?_PWM3_LoadDutyValue 0070  
                                dataCMD@i 0076                                  dataCMD@s 0075  
                                _initOLED 0BF7                         ??_TMR4_Initialize 0072  
                           __size_of_main 021F                             __size_of_dtoa 0170  
               __end_of_ADC_GetConversion 172B                      ??_PWM3_LoadDutyValue 0072  
                                int$flags 007E                             getTemp_TC@raw 0042  
                                _vfprintf 081D        __end_of_INTERRUPT_InterruptManager 0019  
              _INTERRUPT_InterruptManager 0004                                  command@i 0076  
                                command@s 0075                                 printf@fmt 0066  
                            _SSP1STATbits 0214                           ??_getFaultCodes 007D  
             PIN_MANAGER_Initialize@state 0070                          ___aomod@dividend 0028  
             __size_of_stuffIntToCharsBuf 0136                                _INTCONbits 000B  
                                intlevel1 0000                              reportfault@i 0032  
                 ?_PIN_MANAGER_Initialize 0070                               _PPSLOCKbits 0E0F  
                        ??_ADC_Initialize 0070                           ??_TMR4_CallBack 0070  
                   __size_of_spi_transfer 000A                                  printf@ap 00A2  
             PWM3_LoadDutyValue@dutyValue 0070                           ___aomod@divisor 0020  
                             _reportfault 0881                               ??_vfpfcnvrt 0050  
                         ___aomod@counter 0071                               ??_spi_write 0070  
                           __pstringtext1 1800                             __pstringtext2 1818  
                           __pstringtext3 182D                             __pstringtext4 0000  
                  __Umul8_16@multiplicand 0070                                _TMR2_Start 15F1  
                              _TMR4_Start 15F4                              ___aodiv@sign 0072  
          __end_of_PIN_MANAGER_Initialize 0984                              _spi_transfer 162C  
                    __Umul8_16@multiplier 0078                __size_of_ADC_GetConversion 001B  
                            ___aomod@sign 0072                           _PWM3_Initialize 1623  
                       __Umul8_16@product 0074                         getTemp_TC@temp_tc 0046  
