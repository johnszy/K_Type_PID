

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Aug 27 11:04:10 2025

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	idataBANK4,global,class=CODE,delta=2,noexec
     8                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    18                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	intentry,global,class=CODE,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,delta=2
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 2.20
    78                           ; Generated 12/02/2020 GMT
    79                           ; 
    80                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F1619 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  0090                     	;# 
   149  0091                     	;# 
   150  0092                     	;# 
   151  0093                     	;# 
   152  0094                     	;# 
   153  0095                     	;# 
   154  0096                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009A                     	;# 
   158  009B                     	;# 
   159  009B                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  0111                     	;# 
   168  0112                     	;# 
   169  0113                     	;# 
   170  0114                     	;# 
   171  0115                     	;# 
   172  0116                     	;# 
   173  0117                     	;# 
   174  0118                     	;# 
   175  0119                     	;# 
   176  011C                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  018E                     	;# 
   180  0191                     	;# 
   181  0191                     	;# 
   182  0192                     	;# 
   183  0193                     	;# 
   184  0193                     	;# 
   185  0194                     	;# 
   186  0195                     	;# 
   187  0196                     	;# 
   188  0197                     	;# 
   189  0199                     	;# 
   190  0199                     	;# 
   191  0199                     	;# 
   192  019A                     	;# 
   193  019A                     	;# 
   194  019A                     	;# 
   195  019B                     	;# 
   196  019B                     	;# 
   197  019B                     	;# 
   198  019B                     	;# 
   199  019B                     	;# 
   200  019C                     	;# 
   201  019C                     	;# 
   202  019C                     	;# 
   203  019D                     	;# 
   204  019D                     	;# 
   205  019D                     	;# 
   206  019E                     	;# 
   207  019E                     	;# 
   208  019E                     	;# 
   209  019F                     	;# 
   210  019F                     	;# 
   211  019F                     	;# 
   212  019F                     	;# 
   213  019F                     	;# 
   214  020C                     	;# 
   215  020D                     	;# 
   216  020E                     	;# 
   217  0211                     	;# 
   218  0211                     	;# 
   219  0212                     	;# 
   220  0212                     	;# 
   221  0213                     	;# 
   222  0213                     	;# 
   223  0214                     	;# 
   224  0214                     	;# 
   225  0215                     	;# 
   226  0215                     	;# 
   227  0215                     	;# 
   228  0215                     	;# 
   229  0216                     	;# 
   230  0216                     	;# 
   231  0217                     	;# 
   232  0217                     	;# 
   233  028C                     	;# 
   234  028D                     	;# 
   235  028E                     	;# 
   236  0291                     	;# 
   237  0291                     	;# 
   238  0292                     	;# 
   239  0293                     	;# 
   240  0294                     	;# 
   241  0298                     	;# 
   242  0298                     	;# 
   243  0299                     	;# 
   244  029A                     	;# 
   245  029B                     	;# 
   246  029E                     	;# 
   247  030C                     	;# 
   248  030D                     	;# 
   249  030E                     	;# 
   250  038C                     	;# 
   251  038D                     	;# 
   252  038E                     	;# 
   253  0391                     	;# 
   254  0392                     	;# 
   255  0393                     	;# 
   256  0394                     	;# 
   257  0395                     	;# 
   258  0396                     	;# 
   259  0397                     	;# 
   260  0398                     	;# 
   261  0399                     	;# 
   262  040E                     	;# 
   263  0413                     	;# 
   264  0413                     	;# 
   265  0414                     	;# 
   266  0414                     	;# 
   267  0415                     	;# 
   268  0416                     	;# 
   269  0417                     	;# 
   270  0418                     	;# 
   271  041A                     	;# 
   272  041A                     	;# 
   273  041B                     	;# 
   274  041B                     	;# 
   275  041C                     	;# 
   276  041D                     	;# 
   277  041E                     	;# 
   278  041F                     	;# 
   279  0493                     	;# 
   280  0494                     	;# 
   281  0495                     	;# 
   282  0496                     	;# 
   283  049A                     	;# 
   284  049B                     	;# 
   285  049C                     	;# 
   286  049D                     	;# 
   287  058C                     	;# 
   288  058C                     	;# 
   289  058D                     	;# 
   290  058E                     	;# 
   291  058E                     	;# 
   292  058F                     	;# 
   293  0590                     	;# 
   294  0590                     	;# 
   295  0591                     	;# 
   296  0592                     	;# 
   297  0592                     	;# 
   298  0593                     	;# 
   299  0594                     	;# 
   300  0594                     	;# 
   301  0595                     	;# 
   302  0596                     	;# 
   303  0596                     	;# 
   304  0597                     	;# 
   305  0598                     	;# 
   306  0599                     	;# 
   307  059A                     	;# 
   308  059B                     	;# 
   309  059B                     	;# 
   310  059C                     	;# 
   311  059D                     	;# 
   312  060C                     	;# 
   313  060C                     	;# 
   314  060D                     	;# 
   315  060E                     	;# 
   316  060F                     	;# 
   317  060F                     	;# 
   318  0610                     	;# 
   319  0611                     	;# 
   320  0612                     	;# 
   321  0613                     	;# 
   322  0614                     	;# 
   323  0617                     	;# 
   324  0617                     	;# 
   325  0618                     	;# 
   326  0619                     	;# 
   327  061A                     	;# 
   328  061A                     	;# 
   329  061B                     	;# 
   330  061C                     	;# 
   331  0691                     	;# 
   332  0692                     	;# 
   333  0693                     	;# 
   334  0694                     	;# 
   335  0695                     	;# 
   336  0696                     	;# 
   337  0697                     	;# 
   338  0699                     	;# 
   339  069A                     	;# 
   340  0711                     	;# 
   341  0712                     	;# 
   342  0713                     	;# 
   343  0714                     	;# 
   344  0715                     	;# 
   345  0718                     	;# 
   346  0718                     	;# 
   347  0719                     	;# 
   348  071A                     	;# 
   349  071A                     	;# 
   350  071B                     	;# 
   351  071C                     	;# 
   352  071D                     	;# 
   353  0791                     	;# 
   354  0791                     	;# 
   355  0792                     	;# 
   356  0793                     	;# 
   357  0793                     	;# 
   358  0794                     	;# 
   359  0795                     	;# 
   360  0795                     	;# 
   361  0796                     	;# 
   362  0797                     	;# 
   363  0797                     	;# 
   364  0798                     	;# 
   365  0799                     	;# 
   366  079A                     	;# 
   367  080C                     	;# 
   368  080C                     	;# 
   369  080D                     	;# 
   370  080E                     	;# 
   371  080E                     	;# 
   372  080F                     	;# 
   373  0810                     	;# 
   374  0810                     	;# 
   375  0811                     	;# 
   376  0812                     	;# 
   377  0812                     	;# 
   378  0813                     	;# 
   379  0814                     	;# 
   380  0815                     	;# 
   381  0816                     	;# 
   382  0817                     	;# 
   383  0818                     	;# 
   384  0819                     	;# 
   385  081A                     	;# 
   386  081A                     	;# 
   387  081B                     	;# 
   388  081C                     	;# 
   389  081C                     	;# 
   390  081D                     	;# 
   391  088C                     	;# 
   392  088D                     	;# 
   393  088E                     	;# 
   394  088F                     	;# 
   395  088F                     	;# 
   396  0890                     	;# 
   397  0891                     	;# 
   398  0892                     	;# 
   399  0893                     	;# 
   400  0893                     	;# 
   401  0894                     	;# 
   402  0895                     	;# 
   403  0896                     	;# 
   404  0897                     	;# 
   405  0897                     	;# 
   406  0898                     	;# 
   407  0899                     	;# 
   408  0D8C                     	;# 
   409  0D8C                     	;# 
   410  0D8D                     	;# 
   411  0D8E                     	;# 
   412  0D8F                     	;# 
   413  0D8F                     	;# 
   414  0D90                     	;# 
   415  0D91                     	;# 
   416  0D92                     	;# 
   417  0D92                     	;# 
   418  0D93                     	;# 
   419  0D94                     	;# 
   420  0D95                     	;# 
   421  0D95                     	;# 
   422  0D96                     	;# 
   423  0D97                     	;# 
   424  0D98                     	;# 
   425  0D99                     	;# 
   426  0D9A                     	;# 
   427  0D9B                     	;# 
   428  0D9C                     	;# 
   429  0D9D                     	;# 
   430  0D9E                     	;# 
   431  0D9E                     	;# 
   432  0D9F                     	;# 
   433  0DA0                     	;# 
   434  0DA1                     	;# 
   435  0DA1                     	;# 
   436  0DA2                     	;# 
   437  0DA3                     	;# 
   438  0DA4                     	;# 
   439  0DA4                     	;# 
   440  0DA5                     	;# 
   441  0DA6                     	;# 
   442  0DA7                     	;# 
   443  0DA7                     	;# 
   444  0DA8                     	;# 
   445  0DA9                     	;# 
   446  0DAA                     	;# 
   447  0DAB                     	;# 
   448  0DAC                     	;# 
   449  0DAD                     	;# 
   450  0DAE                     	;# 
   451  0DAF                     	;# 
   452  0E0F                     	;# 
   453  0E10                     	;# 
   454  0E11                     	;# 
   455  0E12                     	;# 
   456  0E13                     	;# 
   457  0E14                     	;# 
   458  0E15                     	;# 
   459  0E16                     	;# 
   460  0E17                     	;# 
   461  0E18                     	;# 
   462  0E19                     	;# 
   463  0E1A                     	;# 
   464  0E1B                     	;# 
   465  0E1C                     	;# 
   466  0E1D                     	;# 
   467  0E1E                     	;# 
   468  0E1F                     	;# 
   469  0E20                     	;# 
   470  0E21                     	;# 
   471  0E22                     	;# 
   472  0E23                     	;# 
   473  0E24                     	;# 
   474  0E25                     	;# 
   475  0E26                     	;# 
   476  0E27                     	;# 
   477  0E28                     	;# 
   478  0E29                     	;# 
   479  0E2A                     	;# 
   480  0E2B                     	;# 
   481  0E2C                     	;# 
   482  0E2D                     	;# 
   483  0E2E                     	;# 
   484  0E90                     	;# 
   485  0E91                     	;# 
   486  0E92                     	;# 
   487  0E94                     	;# 
   488  0E95                     	;# 
   489  0E9C                     	;# 
   490  0E9D                     	;# 
   491  0E9E                     	;# 
   492  0E9F                     	;# 
   493  0EA0                     	;# 
   494  0EA1                     	;# 
   495  0EA2                     	;# 
   496  0EA3                     	;# 
   497  0EA4                     	;# 
   498  0EA5                     	;# 
   499  0EA6                     	;# 
   500  0EA7                     	;# 
   501  0F0F                     	;# 
   502  0F10                     	;# 
   503  0F11                     	;# 
   504  0F12                     	;# 
   505  0F13                     	;# 
   506  0F14                     	;# 
   507  0F15                     	;# 
   508  0F16                     	;# 
   509  0F17                     	;# 
   510  0F18                     	;# 
   511  0F19                     	;# 
   512  0F1A                     	;# 
   513  0F1B                     	;# 
   514  0F1C                     	;# 
   515  0F1D                     	;# 
   516  0F1E                     	;# 
   517  0F1F                     	;# 
   518  0F20                     	;# 
   519  0F21                     	;# 
   520  0F22                     	;# 
   521  0F23                     	;# 
   522  0F24                     	;# 
   523  0F25                     	;# 
   524  0F26                     	;# 
   525  0F27                     	;# 
   526  0F28                     	;# 
   527  0F29                     	;# 
   528  0F2A                     	;# 
   529  0F2B                     	;# 
   530  0F2C                     	;# 
   531  0F2D                     	;# 
   532  0F2E                     	;# 
   533  0F2F                     	;# 
   534  0F30                     	;# 
   535  0F31                     	;# 
   536  0F32                     	;# 
   537  0F33                     	;# 
   538  0F34                     	;# 
   539  0F35                     	;# 
   540  0F36                     	;# 
   541  0F37                     	;# 
   542  0FE4                     	;# 
   543  0FE5                     	;# 
   544  0FE6                     	;# 
   545  0FE7                     	;# 
   546  0FE8                     	;# 
   547  0FE9                     	;# 
   548  0FEA                     	;# 
   549  0FEB                     	;# 
   550  0FED                     	;# 
   551  0FEE                     	;# 
   552  0FEF                     	;# 
   553  0000                     	;# 
   554  0001                     	;# 
   555  0002                     	;# 
   556  0003                     	;# 
   557  0004                     	;# 
   558  0005                     	;# 
   559  0006                     	;# 
   560  0007                     	;# 
   561  0008                     	;# 
   562  0009                     	;# 
   563  000A                     	;# 
   564  000B                     	;# 
   565  000C                     	;# 
   566  000D                     	;# 
   567  000E                     	;# 
   568  0010                     	;# 
   569  0011                     	;# 
   570  0012                     	;# 
   571  0013                     	;# 
   572  0014                     	;# 
   573  0015                     	;# 
   574  0016                     	;# 
   575  0016                     	;# 
   576  0017                     	;# 
   577  0018                     	;# 
   578  0019                     	;# 
   579  001A                     	;# 
   580  001A                     	;# 
   581  001B                     	;# 
   582  001B                     	;# 
   583  001C                     	;# 
   584  001D                     	;# 
   585  001E                     	;# 
   586  001F                     	;# 
   587  008C                     	;# 
   588  008D                     	;# 
   589  008E                     	;# 
   590  0090                     	;# 
   591  0091                     	;# 
   592  0092                     	;# 
   593  0093                     	;# 
   594  0094                     	;# 
   595  0095                     	;# 
   596  0096                     	;# 
   597  0098                     	;# 
   598  0099                     	;# 
   599  009A                     	;# 
   600  009B                     	;# 
   601  009B                     	;# 
   602  009C                     	;# 
   603  009D                     	;# 
   604  009E                     	;# 
   605  009F                     	;# 
   606  010C                     	;# 
   607  010D                     	;# 
   608  010E                     	;# 
   609  0111                     	;# 
   610  0112                     	;# 
   611  0113                     	;# 
   612  0114                     	;# 
   613  0115                     	;# 
   614  0116                     	;# 
   615  0117                     	;# 
   616  0118                     	;# 
   617  0119                     	;# 
   618  011C                     	;# 
   619  018C                     	;# 
   620  018D                     	;# 
   621  018E                     	;# 
   622  0191                     	;# 
   623  0191                     	;# 
   624  0192                     	;# 
   625  0193                     	;# 
   626  0193                     	;# 
   627  0194                     	;# 
   628  0195                     	;# 
   629  0196                     	;# 
   630  0197                     	;# 
   631  0199                     	;# 
   632  0199                     	;# 
   633  0199                     	;# 
   634  019A                     	;# 
   635  019A                     	;# 
   636  019A                     	;# 
   637  019B                     	;# 
   638  019B                     	;# 
   639  019B                     	;# 
   640  019B                     	;# 
   641  019B                     	;# 
   642  019C                     	;# 
   643  019C                     	;# 
   644  019C                     	;# 
   645  019D                     	;# 
   646  019D                     	;# 
   647  019D                     	;# 
   648  019E                     	;# 
   649  019E                     	;# 
   650  019E                     	;# 
   651  019F                     	;# 
   652  019F                     	;# 
   653  019F                     	;# 
   654  019F                     	;# 
   655  019F                     	;# 
   656  020C                     	;# 
   657  020D                     	;# 
   658  020E                     	;# 
   659  0211                     	;# 
   660  0211                     	;# 
   661  0212                     	;# 
   662  0212                     	;# 
   663  0213                     	;# 
   664  0213                     	;# 
   665  0214                     	;# 
   666  0214                     	;# 
   667  0215                     	;# 
   668  0215                     	;# 
   669  0215                     	;# 
   670  0215                     	;# 
   671  0216                     	;# 
   672  0216                     	;# 
   673  0217                     	;# 
   674  0217                     	;# 
   675  028C                     	;# 
   676  028D                     	;# 
   677  028E                     	;# 
   678  0291                     	;# 
   679  0291                     	;# 
   680  0292                     	;# 
   681  0293                     	;# 
   682  0294                     	;# 
   683  0298                     	;# 
   684  0298                     	;# 
   685  0299                     	;# 
   686  029A                     	;# 
   687  029B                     	;# 
   688  029E                     	;# 
   689  030C                     	;# 
   690  030D                     	;# 
   691  030E                     	;# 
   692  038C                     	;# 
   693  038D                     	;# 
   694  038E                     	;# 
   695  0391                     	;# 
   696  0392                     	;# 
   697  0393                     	;# 
   698  0394                     	;# 
   699  0395                     	;# 
   700  0396                     	;# 
   701  0397                     	;# 
   702  0398                     	;# 
   703  0399                     	;# 
   704  040E                     	;# 
   705  0413                     	;# 
   706  0413                     	;# 
   707  0414                     	;# 
   708  0414                     	;# 
   709  0415                     	;# 
   710  0416                     	;# 
   711  0417                     	;# 
   712  0418                     	;# 
   713  041A                     	;# 
   714  041A                     	;# 
   715  041B                     	;# 
   716  041B                     	;# 
   717  041C                     	;# 
   718  041D                     	;# 
   719  041E                     	;# 
   720  041F                     	;# 
   721  0493                     	;# 
   722  0494                     	;# 
   723  0495                     	;# 
   724  0496                     	;# 
   725  049A                     	;# 
   726  049B                     	;# 
   727  049C                     	;# 
   728  049D                     	;# 
   729  058C                     	;# 
   730  058C                     	;# 
   731  058D                     	;# 
   732  058E                     	;# 
   733  058E                     	;# 
   734  058F                     	;# 
   735  0590                     	;# 
   736  0590                     	;# 
   737  0591                     	;# 
   738  0592                     	;# 
   739  0592                     	;# 
   740  0593                     	;# 
   741  0594                     	;# 
   742  0594                     	;# 
   743  0595                     	;# 
   744  0596                     	;# 
   745  0596                     	;# 
   746  0597                     	;# 
   747  0598                     	;# 
   748  0599                     	;# 
   749  059A                     	;# 
   750  059B                     	;# 
   751  059B                     	;# 
   752  059C                     	;# 
   753  059D                     	;# 
   754  060C                     	;# 
   755  060C                     	;# 
   756  060D                     	;# 
   757  060E                     	;# 
   758  060F                     	;# 
   759  060F                     	;# 
   760  0610                     	;# 
   761  0611                     	;# 
   762  0612                     	;# 
   763  0613                     	;# 
   764  0614                     	;# 
   765  0617                     	;# 
   766  0617                     	;# 
   767  0618                     	;# 
   768  0619                     	;# 
   769  061A                     	;# 
   770  061A                     	;# 
   771  061B                     	;# 
   772  061C                     	;# 
   773  0691                     	;# 
   774  0692                     	;# 
   775  0693                     	;# 
   776  0694                     	;# 
   777  0695                     	;# 
   778  0696                     	;# 
   779  0697                     	;# 
   780  0699                     	;# 
   781  069A                     	;# 
   782  0711                     	;# 
   783  0712                     	;# 
   784  0713                     	;# 
   785  0714                     	;# 
   786  0715                     	;# 
   787  0718                     	;# 
   788  0718                     	;# 
   789  0719                     	;# 
   790  071A                     	;# 
   791  071A                     	;# 
   792  071B                     	;# 
   793  071C                     	;# 
   794  071D                     	;# 
   795  0791                     	;# 
   796  0791                     	;# 
   797  0792                     	;# 
   798  0793                     	;# 
   799  0793                     	;# 
   800  0794                     	;# 
   801  0795                     	;# 
   802  0795                     	;# 
   803  0796                     	;# 
   804  0797                     	;# 
   805  0797                     	;# 
   806  0798                     	;# 
   807  0799                     	;# 
   808  079A                     	;# 
   809  080C                     	;# 
   810  080C                     	;# 
   811  080D                     	;# 
   812  080E                     	;# 
   813  080E                     	;# 
   814  080F                     	;# 
   815  0810                     	;# 
   816  0810                     	;# 
   817  0811                     	;# 
   818  0812                     	;# 
   819  0812                     	;# 
   820  0813                     	;# 
   821  0814                     	;# 
   822  0815                     	;# 
   823  0816                     	;# 
   824  0817                     	;# 
   825  0818                     	;# 
   826  0819                     	;# 
   827  081A                     	;# 
   828  081A                     	;# 
   829  081B                     	;# 
   830  081C                     	;# 
   831  081C                     	;# 
   832  081D                     	;# 
   833  088C                     	;# 
   834  088D                     	;# 
   835  088E                     	;# 
   836  088F                     	;# 
   837  088F                     	;# 
   838  0890                     	;# 
   839  0891                     	;# 
   840  0892                     	;# 
   841  0893                     	;# 
   842  0893                     	;# 
   843  0894                     	;# 
   844  0895                     	;# 
   845  0896                     	;# 
   846  0897                     	;# 
   847  0897                     	;# 
   848  0898                     	;# 
   849  0899                     	;# 
   850  0D8C                     	;# 
   851  0D8C                     	;# 
   852  0D8D                     	;# 
   853  0D8E                     	;# 
   854  0D8F                     	;# 
   855  0D8F                     	;# 
   856  0D90                     	;# 
   857  0D91                     	;# 
   858  0D92                     	;# 
   859  0D92                     	;# 
   860  0D93                     	;# 
   861  0D94                     	;# 
   862  0D95                     	;# 
   863  0D95                     	;# 
   864  0D96                     	;# 
   865  0D97                     	;# 
   866  0D98                     	;# 
   867  0D99                     	;# 
   868  0D9A                     	;# 
   869  0D9B                     	;# 
   870  0D9C                     	;# 
   871  0D9D                     	;# 
   872  0D9E                     	;# 
   873  0D9E                     	;# 
   874  0D9F                     	;# 
   875  0DA0                     	;# 
   876  0DA1                     	;# 
   877  0DA1                     	;# 
   878  0DA2                     	;# 
   879  0DA3                     	;# 
   880  0DA4                     	;# 
   881  0DA4                     	;# 
   882  0DA5                     	;# 
   883  0DA6                     	;# 
   884  0DA7                     	;# 
   885  0DA7                     	;# 
   886  0DA8                     	;# 
   887  0DA9                     	;# 
   888  0DAA                     	;# 
   889  0DAB                     	;# 
   890  0DAC                     	;# 
   891  0DAD                     	;# 
   892  0DAE                     	;# 
   893  0DAF                     	;# 
   894  0E0F                     	;# 
   895  0E10                     	;# 
   896  0E11                     	;# 
   897  0E12                     	;# 
   898  0E13                     	;# 
   899  0E14                     	;# 
   900  0E15                     	;# 
   901  0E16                     	;# 
   902  0E17                     	;# 
   903  0E18                     	;# 
   904  0E19                     	;# 
   905  0E1A                     	;# 
   906  0E1B                     	;# 
   907  0E1C                     	;# 
   908  0E1D                     	;# 
   909  0E1E                     	;# 
   910  0E1F                     	;# 
   911  0E20                     	;# 
   912  0E21                     	;# 
   913  0E22                     	;# 
   914  0E23                     	;# 
   915  0E24                     	;# 
   916  0E25                     	;# 
   917  0E26                     	;# 
   918  0E27                     	;# 
   919  0E28                     	;# 
   920  0E29                     	;# 
   921  0E2A                     	;# 
   922  0E2B                     	;# 
   923  0E2C                     	;# 
   924  0E2D                     	;# 
   925  0E2E                     	;# 
   926  0E90                     	;# 
   927  0E91                     	;# 
   928  0E92                     	;# 
   929  0E94                     	;# 
   930  0E95                     	;# 
   931  0E9C                     	;# 
   932  0E9D                     	;# 
   933  0E9E                     	;# 
   934  0E9F                     	;# 
   935  0EA0                     	;# 
   936  0EA1                     	;# 
   937  0EA2                     	;# 
   938  0EA3                     	;# 
   939  0EA4                     	;# 
   940  0EA5                     	;# 
   941  0EA6                     	;# 
   942  0EA7                     	;# 
   943  0F0F                     	;# 
   944  0F10                     	;# 
   945  0F11                     	;# 
   946  0F12                     	;# 
   947  0F13                     	;# 
   948  0F14                     	;# 
   949  0F15                     	;# 
   950  0F16                     	;# 
   951  0F17                     	;# 
   952  0F18                     	;# 
   953  0F19                     	;# 
   954  0F1A                     	;# 
   955  0F1B                     	;# 
   956  0F1C                     	;# 
   957  0F1D                     	;# 
   958  0F1E                     	;# 
   959  0F1F                     	;# 
   960  0F20                     	;# 
   961  0F21                     	;# 
   962  0F22                     	;# 
   963  0F23                     	;# 
   964  0F24                     	;# 
   965  0F25                     	;# 
   966  0F26                     	;# 
   967  0F27                     	;# 
   968  0F28                     	;# 
   969  0F29                     	;# 
   970  0F2A                     	;# 
   971  0F2B                     	;# 
   972  0F2C                     	;# 
   973  0F2D                     	;# 
   974  0F2E                     	;# 
   975  0F2F                     	;# 
   976  0F30                     	;# 
   977  0F31                     	;# 
   978  0F32                     	;# 
   979  0F33                     	;# 
   980  0F34                     	;# 
   981  0F35                     	;# 
   982  0F36                     	;# 
   983  0F37                     	;# 
   984  0FE4                     	;# 
   985  0FE5                     	;# 
   986  0FE6                     	;# 
   987  0FE7                     	;# 
   988  0FE8                     	;# 
   989  0FE9                     	;# 
   990  0FEA                     	;# 
   991  0FEB                     	;# 
   992  0FED                     	;# 
   993  0FEE                     	;# 
   994  0FEF                     	;# 
   995  0000                     	;# 
   996  0001                     	;# 
   997  0002                     	;# 
   998  0003                     	;# 
   999  0004                     	;# 
  1000  0005                     	;# 
  1001  0006                     	;# 
  1002  0007                     	;# 
  1003  0008                     	;# 
  1004  0009                     	;# 
  1005  000A                     	;# 
  1006  000B                     	;# 
  1007  000C                     	;# 
  1008  000D                     	;# 
  1009  000E                     	;# 
  1010  0010                     	;# 
  1011  0011                     	;# 
  1012  0012                     	;# 
  1013  0013                     	;# 
  1014  0014                     	;# 
  1015  0015                     	;# 
  1016  0016                     	;# 
  1017  0016                     	;# 
  1018  0017                     	;# 
  1019  0018                     	;# 
  1020  0019                     	;# 
  1021  001A                     	;# 
  1022  001A                     	;# 
  1023  001B                     	;# 
  1024  001B                     	;# 
  1025  001C                     	;# 
  1026  001D                     	;# 
  1027  001E                     	;# 
  1028  001F                     	;# 
  1029  008C                     	;# 
  1030  008D                     	;# 
  1031  008E                     	;# 
  1032  0090                     	;# 
  1033  0091                     	;# 
  1034  0092                     	;# 
  1035  0093                     	;# 
  1036  0094                     	;# 
  1037  0095                     	;# 
  1038  0096                     	;# 
  1039  0098                     	;# 
  1040  0099                     	;# 
  1041  009A                     	;# 
  1042  009B                     	;# 
  1043  009B                     	;# 
  1044  009C                     	;# 
  1045  009D                     	;# 
  1046  009E                     	;# 
  1047  009F                     	;# 
  1048  010C                     	;# 
  1049  010D                     	;# 
  1050  010E                     	;# 
  1051  0111                     	;# 
  1052  0112                     	;# 
  1053  0113                     	;# 
  1054  0114                     	;# 
  1055  0115                     	;# 
  1056  0116                     	;# 
  1057  0117                     	;# 
  1058  0118                     	;# 
  1059  0119                     	;# 
  1060  011C                     	;# 
  1061  018C                     	;# 
  1062  018D                     	;# 
  1063  018E                     	;# 
  1064  0191                     	;# 
  1065  0191                     	;# 
  1066  0192                     	;# 
  1067  0193                     	;# 
  1068  0193                     	;# 
  1069  0194                     	;# 
  1070  0195                     	;# 
  1071  0196                     	;# 
  1072  0197                     	;# 
  1073  0199                     	;# 
  1074  0199                     	;# 
  1075  0199                     	;# 
  1076  019A                     	;# 
  1077  019A                     	;# 
  1078  019A                     	;# 
  1079  019B                     	;# 
  1080  019B                     	;# 
  1081  019B                     	;# 
  1082  019B                     	;# 
  1083  019B                     	;# 
  1084  019C                     	;# 
  1085  019C                     	;# 
  1086  019C                     	;# 
  1087  019D                     	;# 
  1088  019D                     	;# 
  1089  019D                     	;# 
  1090  019E                     	;# 
  1091  019E                     	;# 
  1092  019E                     	;# 
  1093  019F                     	;# 
  1094  019F                     	;# 
  1095  019F                     	;# 
  1096  019F                     	;# 
  1097  019F                     	;# 
  1098  020C                     	;# 
  1099  020D                     	;# 
  1100  020E                     	;# 
  1101  0211                     	;# 
  1102  0211                     	;# 
  1103  0212                     	;# 
  1104  0212                     	;# 
  1105  0213                     	;# 
  1106  0213                     	;# 
  1107  0214                     	;# 
  1108  0214                     	;# 
  1109  0215                     	;# 
  1110  0215                     	;# 
  1111  0215                     	;# 
  1112  0215                     	;# 
  1113  0216                     	;# 
  1114  0216                     	;# 
  1115  0217                     	;# 
  1116  0217                     	;# 
  1117  028C                     	;# 
  1118  028D                     	;# 
  1119  028E                     	;# 
  1120  0291                     	;# 
  1121  0291                     	;# 
  1122  0292                     	;# 
  1123  0293                     	;# 
  1124  0294                     	;# 
  1125  0298                     	;# 
  1126  0298                     	;# 
  1127  0299                     	;# 
  1128  029A                     	;# 
  1129  029B                     	;# 
  1130  029E                     	;# 
  1131  030C                     	;# 
  1132  030D                     	;# 
  1133  030E                     	;# 
  1134  038C                     	;# 
  1135  038D                     	;# 
  1136  038E                     	;# 
  1137  0391                     	;# 
  1138  0392                     	;# 
  1139  0393                     	;# 
  1140  0394                     	;# 
  1141  0395                     	;# 
  1142  0396                     	;# 
  1143  0397                     	;# 
  1144  0398                     	;# 
  1145  0399                     	;# 
  1146  040E                     	;# 
  1147  0413                     	;# 
  1148  0413                     	;# 
  1149  0414                     	;# 
  1150  0414                     	;# 
  1151  0415                     	;# 
  1152  0416                     	;# 
  1153  0417                     	;# 
  1154  0418                     	;# 
  1155  041A                     	;# 
  1156  041A                     	;# 
  1157  041B                     	;# 
  1158  041B                     	;# 
  1159  041C                     	;# 
  1160  041D                     	;# 
  1161  041E                     	;# 
  1162  041F                     	;# 
  1163  0493                     	;# 
  1164  0494                     	;# 
  1165  0495                     	;# 
  1166  0496                     	;# 
  1167  049A                     	;# 
  1168  049B                     	;# 
  1169  049C                     	;# 
  1170  049D                     	;# 
  1171  058C                     	;# 
  1172  058C                     	;# 
  1173  058D                     	;# 
  1174  058E                     	;# 
  1175  058E                     	;# 
  1176  058F                     	;# 
  1177  0590                     	;# 
  1178  0590                     	;# 
  1179  0591                     	;# 
  1180  0592                     	;# 
  1181  0592                     	;# 
  1182  0593                     	;# 
  1183  0594                     	;# 
  1184  0594                     	;# 
  1185  0595                     	;# 
  1186  0596                     	;# 
  1187  0596                     	;# 
  1188  0597                     	;# 
  1189  0598                     	;# 
  1190  0599                     	;# 
  1191  059A                     	;# 
  1192  059B                     	;# 
  1193  059B                     	;# 
  1194  059C                     	;# 
  1195  059D                     	;# 
  1196  060C                     	;# 
  1197  060C                     	;# 
  1198  060D                     	;# 
  1199  060E                     	;# 
  1200  060F                     	;# 
  1201  060F                     	;# 
  1202  0610                     	;# 
  1203  0611                     	;# 
  1204  0612                     	;# 
  1205  0613                     	;# 
  1206  0614                     	;# 
  1207  0617                     	;# 
  1208  0617                     	;# 
  1209  0618                     	;# 
  1210  0619                     	;# 
  1211  061A                     	;# 
  1212  061A                     	;# 
  1213  061B                     	;# 
  1214  061C                     	;# 
  1215  0691                     	;# 
  1216  0692                     	;# 
  1217  0693                     	;# 
  1218  0694                     	;# 
  1219  0695                     	;# 
  1220  0696                     	;# 
  1221  0697                     	;# 
  1222  0699                     	;# 
  1223  069A                     	;# 
  1224  0711                     	;# 
  1225  0712                     	;# 
  1226  0713                     	;# 
  1227  0714                     	;# 
  1228  0715                     	;# 
  1229  0718                     	;# 
  1230  0718                     	;# 
  1231  0719                     	;# 
  1232  071A                     	;# 
  1233  071A                     	;# 
  1234  071B                     	;# 
  1235  071C                     	;# 
  1236  071D                     	;# 
  1237  0791                     	;# 
  1238  0791                     	;# 
  1239  0792                     	;# 
  1240  0793                     	;# 
  1241  0793                     	;# 
  1242  0794                     	;# 
  1243  0795                     	;# 
  1244  0795                     	;# 
  1245  0796                     	;# 
  1246  0797                     	;# 
  1247  0797                     	;# 
  1248  0798                     	;# 
  1249  0799                     	;# 
  1250  079A                     	;# 
  1251  080C                     	;# 
  1252  080C                     	;# 
  1253  080D                     	;# 
  1254  080E                     	;# 
  1255  080E                     	;# 
  1256  080F                     	;# 
  1257  0810                     	;# 
  1258  0810                     	;# 
  1259  0811                     	;# 
  1260  0812                     	;# 
  1261  0812                     	;# 
  1262  0813                     	;# 
  1263  0814                     	;# 
  1264  0815                     	;# 
  1265  0816                     	;# 
  1266  0817                     	;# 
  1267  0818                     	;# 
  1268  0819                     	;# 
  1269  081A                     	;# 
  1270  081A                     	;# 
  1271  081B                     	;# 
  1272  081C                     	;# 
  1273  081C                     	;# 
  1274  081D                     	;# 
  1275  088C                     	;# 
  1276  088D                     	;# 
  1277  088E                     	;# 
  1278  088F                     	;# 
  1279  088F                     	;# 
  1280  0890                     	;# 
  1281  0891                     	;# 
  1282  0892                     	;# 
  1283  0893                     	;# 
  1284  0893                     	;# 
  1285  0894                     	;# 
  1286  0895                     	;# 
  1287  0896                     	;# 
  1288  0897                     	;# 
  1289  0897                     	;# 
  1290  0898                     	;# 
  1291  0899                     	;# 
  1292  0D8C                     	;# 
  1293  0D8C                     	;# 
  1294  0D8D                     	;# 
  1295  0D8E                     	;# 
  1296  0D8F                     	;# 
  1297  0D8F                     	;# 
  1298  0D90                     	;# 
  1299  0D91                     	;# 
  1300  0D92                     	;# 
  1301  0D92                     	;# 
  1302  0D93                     	;# 
  1303  0D94                     	;# 
  1304  0D95                     	;# 
  1305  0D95                     	;# 
  1306  0D96                     	;# 
  1307  0D97                     	;# 
  1308  0D98                     	;# 
  1309  0D99                     	;# 
  1310  0D9A                     	;# 
  1311  0D9B                     	;# 
  1312  0D9C                     	;# 
  1313  0D9D                     	;# 
  1314  0D9E                     	;# 
  1315  0D9E                     	;# 
  1316  0D9F                     	;# 
  1317  0DA0                     	;# 
  1318  0DA1                     	;# 
  1319  0DA1                     	;# 
  1320  0DA2                     	;# 
  1321  0DA3                     	;# 
  1322  0DA4                     	;# 
  1323  0DA4                     	;# 
  1324  0DA5                     	;# 
  1325  0DA6                     	;# 
  1326  0DA7                     	;# 
  1327  0DA7                     	;# 
  1328  0DA8                     	;# 
  1329  0DA9                     	;# 
  1330  0DAA                     	;# 
  1331  0DAB                     	;# 
  1332  0DAC                     	;# 
  1333  0DAD                     	;# 
  1334  0DAE                     	;# 
  1335  0DAF                     	;# 
  1336  0E0F                     	;# 
  1337  0E10                     	;# 
  1338  0E11                     	;# 
  1339  0E12                     	;# 
  1340  0E13                     	;# 
  1341  0E14                     	;# 
  1342  0E15                     	;# 
  1343  0E16                     	;# 
  1344  0E17                     	;# 
  1345  0E18                     	;# 
  1346  0E19                     	;# 
  1347  0E1A                     	;# 
  1348  0E1B                     	;# 
  1349  0E1C                     	;# 
  1350  0E1D                     	;# 
  1351  0E1E                     	;# 
  1352  0E1F                     	;# 
  1353  0E20                     	;# 
  1354  0E21                     	;# 
  1355  0E22                     	;# 
  1356  0E23                     	;# 
  1357  0E24                     	;# 
  1358  0E25                     	;# 
  1359  0E26                     	;# 
  1360  0E27                     	;# 
  1361  0E28                     	;# 
  1362  0E29                     	;# 
  1363  0E2A                     	;# 
  1364  0E2B                     	;# 
  1365  0E2C                     	;# 
  1366  0E2D                     	;# 
  1367  0E2E                     	;# 
  1368  0E90                     	;# 
  1369  0E91                     	;# 
  1370  0E92                     	;# 
  1371  0E94                     	;# 
  1372  0E95                     	;# 
  1373  0E9C                     	;# 
  1374  0E9D                     	;# 
  1375  0E9E                     	;# 
  1376  0E9F                     	;# 
  1377  0EA0                     	;# 
  1378  0EA1                     	;# 
  1379  0EA2                     	;# 
  1380  0EA3                     	;# 
  1381  0EA4                     	;# 
  1382  0EA5                     	;# 
  1383  0EA6                     	;# 
  1384  0EA7                     	;# 
  1385  0F0F                     	;# 
  1386  0F10                     	;# 
  1387  0F11                     	;# 
  1388  0F12                     	;# 
  1389  0F13                     	;# 
  1390  0F14                     	;# 
  1391  0F15                     	;# 
  1392  0F16                     	;# 
  1393  0F17                     	;# 
  1394  0F18                     	;# 
  1395  0F19                     	;# 
  1396  0F1A                     	;# 
  1397  0F1B                     	;# 
  1398  0F1C                     	;# 
  1399  0F1D                     	;# 
  1400  0F1E                     	;# 
  1401  0F1F                     	;# 
  1402  0F20                     	;# 
  1403  0F21                     	;# 
  1404  0F22                     	;# 
  1405  0F23                     	;# 
  1406  0F24                     	;# 
  1407  0F25                     	;# 
  1408  0F26                     	;# 
  1409  0F27                     	;# 
  1410  0F28                     	;# 
  1411  0F29                     	;# 
  1412  0F2A                     	;# 
  1413  0F2B                     	;# 
  1414  0F2C                     	;# 
  1415  0F2D                     	;# 
  1416  0F2E                     	;# 
  1417  0F2F                     	;# 
  1418  0F30                     	;# 
  1419  0F31                     	;# 
  1420  0F32                     	;# 
  1421  0F33                     	;# 
  1422  0F34                     	;# 
  1423  0F35                     	;# 
  1424  0F36                     	;# 
  1425  0F37                     	;# 
  1426  0FE4                     	;# 
  1427  0FE5                     	;# 
  1428  0FE6                     	;# 
  1429  0FE7                     	;# 
  1430  0FE8                     	;# 
  1431  0FE9                     	;# 
  1432  0FEA                     	;# 
  1433  0FEB                     	;# 
  1434  0FED                     	;# 
  1435  0FEE                     	;# 
  1436  0FEF                     	;# 
  1437  0000                     	;# 
  1438  0001                     	;# 
  1439  0002                     	;# 
  1440  0003                     	;# 
  1441  0004                     	;# 
  1442  0005                     	;# 
  1443  0006                     	;# 
  1444  0007                     	;# 
  1445  0008                     	;# 
  1446  0009                     	;# 
  1447  000A                     	;# 
  1448  000B                     	;# 
  1449  000C                     	;# 
  1450  000D                     	;# 
  1451  000E                     	;# 
  1452  0010                     	;# 
  1453  0011                     	;# 
  1454  0012                     	;# 
  1455  0013                     	;# 
  1456  0014                     	;# 
  1457  0015                     	;# 
  1458  0016                     	;# 
  1459  0016                     	;# 
  1460  0017                     	;# 
  1461  0018                     	;# 
  1462  0019                     	;# 
  1463  001A                     	;# 
  1464  001A                     	;# 
  1465  001B                     	;# 
  1466  001B                     	;# 
  1467  001C                     	;# 
  1468  001D                     	;# 
  1469  001E                     	;# 
  1470  001F                     	;# 
  1471  008C                     	;# 
  1472  008D                     	;# 
  1473  008E                     	;# 
  1474  0090                     	;# 
  1475  0091                     	;# 
  1476  0092                     	;# 
  1477  0093                     	;# 
  1478  0094                     	;# 
  1479  0095                     	;# 
  1480  0096                     	;# 
  1481  0098                     	;# 
  1482  0099                     	;# 
  1483  009A                     	;# 
  1484  009B                     	;# 
  1485  009B                     	;# 
  1486  009C                     	;# 
  1487  009D                     	;# 
  1488  009E                     	;# 
  1489  009F                     	;# 
  1490  010C                     	;# 
  1491  010D                     	;# 
  1492  010E                     	;# 
  1493  0111                     	;# 
  1494  0112                     	;# 
  1495  0113                     	;# 
  1496  0114                     	;# 
  1497  0115                     	;# 
  1498  0116                     	;# 
  1499  0117                     	;# 
  1500  0118                     	;# 
  1501  0119                     	;# 
  1502  011C                     	;# 
  1503  018C                     	;# 
  1504  018D                     	;# 
  1505  018E                     	;# 
  1506  0191                     	;# 
  1507  0191                     	;# 
  1508  0192                     	;# 
  1509  0193                     	;# 
  1510  0193                     	;# 
  1511  0194                     	;# 
  1512  0195                     	;# 
  1513  0196                     	;# 
  1514  0197                     	;# 
  1515  0199                     	;# 
  1516  0199                     	;# 
  1517  0199                     	;# 
  1518  019A                     	;# 
  1519  019A                     	;# 
  1520  019A                     	;# 
  1521  019B                     	;# 
  1522  019B                     	;# 
  1523  019B                     	;# 
  1524  019B                     	;# 
  1525  019B                     	;# 
  1526  019C                     	;# 
  1527  019C                     	;# 
  1528  019C                     	;# 
  1529  019D                     	;# 
  1530  019D                     	;# 
  1531  019D                     	;# 
  1532  019E                     	;# 
  1533  019E                     	;# 
  1534  019E                     	;# 
  1535  019F                     	;# 
  1536  019F                     	;# 
  1537  019F                     	;# 
  1538  019F                     	;# 
  1539  019F                     	;# 
  1540  020C                     	;# 
  1541  020D                     	;# 
  1542  020E                     	;# 
  1543  0211                     	;# 
  1544  0211                     	;# 
  1545  0212                     	;# 
  1546  0212                     	;# 
  1547  0213                     	;# 
  1548  0213                     	;# 
  1549  0214                     	;# 
  1550  0214                     	;# 
  1551  0215                     	;# 
  1552  0215                     	;# 
  1553  0215                     	;# 
  1554  0215                     	;# 
  1555  0216                     	;# 
  1556  0216                     	;# 
  1557  0217                     	;# 
  1558  0217                     	;# 
  1559  028C                     	;# 
  1560  028D                     	;# 
  1561  028E                     	;# 
  1562  0291                     	;# 
  1563  0291                     	;# 
  1564  0292                     	;# 
  1565  0293                     	;# 
  1566  0294                     	;# 
  1567  0298                     	;# 
  1568  0298                     	;# 
  1569  0299                     	;# 
  1570  029A                     	;# 
  1571  029B                     	;# 
  1572  029E                     	;# 
  1573  030C                     	;# 
  1574  030D                     	;# 
  1575  030E                     	;# 
  1576  038C                     	;# 
  1577  038D                     	;# 
  1578  038E                     	;# 
  1579  0391                     	;# 
  1580  0392                     	;# 
  1581  0393                     	;# 
  1582  0394                     	;# 
  1583  0395                     	;# 
  1584  0396                     	;# 
  1585  0397                     	;# 
  1586  0398                     	;# 
  1587  0399                     	;# 
  1588  040E                     	;# 
  1589  0413                     	;# 
  1590  0413                     	;# 
  1591  0414                     	;# 
  1592  0414                     	;# 
  1593  0415                     	;# 
  1594  0416                     	;# 
  1595  0417                     	;# 
  1596  0418                     	;# 
  1597  041A                     	;# 
  1598  041A                     	;# 
  1599  041B                     	;# 
  1600  041B                     	;# 
  1601  041C                     	;# 
  1602  041D                     	;# 
  1603  041E                     	;# 
  1604  041F                     	;# 
  1605  0493                     	;# 
  1606  0494                     	;# 
  1607  0495                     	;# 
  1608  0496                     	;# 
  1609  049A                     	;# 
  1610  049B                     	;# 
  1611  049C                     	;# 
  1612  049D                     	;# 
  1613  058C                     	;# 
  1614  058C                     	;# 
  1615  058D                     	;# 
  1616  058E                     	;# 
  1617  058E                     	;# 
  1618  058F                     	;# 
  1619  0590                     	;# 
  1620  0590                     	;# 
  1621  0591                     	;# 
  1622  0592                     	;# 
  1623  0592                     	;# 
  1624  0593                     	;# 
  1625  0594                     	;# 
  1626  0594                     	;# 
  1627  0595                     	;# 
  1628  0596                     	;# 
  1629  0596                     	;# 
  1630  0597                     	;# 
  1631  0598                     	;# 
  1632  0599                     	;# 
  1633  059A                     	;# 
  1634  059B                     	;# 
  1635  059B                     	;# 
  1636  059C                     	;# 
  1637  059D                     	;# 
  1638  060C                     	;# 
  1639  060C                     	;# 
  1640  060D                     	;# 
  1641  060E                     	;# 
  1642  060F                     	;# 
  1643  060F                     	;# 
  1644  0610                     	;# 
  1645  0611                     	;# 
  1646  0612                     	;# 
  1647  0613                     	;# 
  1648  0614                     	;# 
  1649  0617                     	;# 
  1650  0617                     	;# 
  1651  0618                     	;# 
  1652  0619                     	;# 
  1653  061A                     	;# 
  1654  061A                     	;# 
  1655  061B                     	;# 
  1656  061C                     	;# 
  1657  0691                     	;# 
  1658  0692                     	;# 
  1659  0693                     	;# 
  1660  0694                     	;# 
  1661  0695                     	;# 
  1662  0696                     	;# 
  1663  0697                     	;# 
  1664  0699                     	;# 
  1665  069A                     	;# 
  1666  0711                     	;# 
  1667  0712                     	;# 
  1668  0713                     	;# 
  1669  0714                     	;# 
  1670  0715                     	;# 
  1671  0718                     	;# 
  1672  0718                     	;# 
  1673  0719                     	;# 
  1674  071A                     	;# 
  1675  071A                     	;# 
  1676  071B                     	;# 
  1677  071C                     	;# 
  1678  071D                     	;# 
  1679  0791                     	;# 
  1680  0791                     	;# 
  1681  0792                     	;# 
  1682  0793                     	;# 
  1683  0793                     	;# 
  1684  0794                     	;# 
  1685  0795                     	;# 
  1686  0795                     	;# 
  1687  0796                     	;# 
  1688  0797                     	;# 
  1689  0797                     	;# 
  1690  0798                     	;# 
  1691  0799                     	;# 
  1692  079A                     	;# 
  1693  080C                     	;# 
  1694  080C                     	;# 
  1695  080D                     	;# 
  1696  080E                     	;# 
  1697  080E                     	;# 
  1698  080F                     	;# 
  1699  0810                     	;# 
  1700  0810                     	;# 
  1701  0811                     	;# 
  1702  0812                     	;# 
  1703  0812                     	;# 
  1704  0813                     	;# 
  1705  0814                     	;# 
  1706  0815                     	;# 
  1707  0816                     	;# 
  1708  0817                     	;# 
  1709  0818                     	;# 
  1710  0819                     	;# 
  1711  081A                     	;# 
  1712  081A                     	;# 
  1713  081B                     	;# 
  1714  081C                     	;# 
  1715  081C                     	;# 
  1716  081D                     	;# 
  1717  088C                     	;# 
  1718  088D                     	;# 
  1719  088E                     	;# 
  1720  088F                     	;# 
  1721  088F                     	;# 
  1722  0890                     	;# 
  1723  0891                     	;# 
  1724  0892                     	;# 
  1725  0893                     	;# 
  1726  0893                     	;# 
  1727  0894                     	;# 
  1728  0895                     	;# 
  1729  0896                     	;# 
  1730  0897                     	;# 
  1731  0897                     	;# 
  1732  0898                     	;# 
  1733  0899                     	;# 
  1734  0D8C                     	;# 
  1735  0D8C                     	;# 
  1736  0D8D                     	;# 
  1737  0D8E                     	;# 
  1738  0D8F                     	;# 
  1739  0D8F                     	;# 
  1740  0D90                     	;# 
  1741  0D91                     	;# 
  1742  0D92                     	;# 
  1743  0D92                     	;# 
  1744  0D93                     	;# 
  1745  0D94                     	;# 
  1746  0D95                     	;# 
  1747  0D95                     	;# 
  1748  0D96                     	;# 
  1749  0D97                     	;# 
  1750  0D98                     	;# 
  1751  0D99                     	;# 
  1752  0D9A                     	;# 
  1753  0D9B                     	;# 
  1754  0D9C                     	;# 
  1755  0D9D                     	;# 
  1756  0D9E                     	;# 
  1757  0D9E                     	;# 
  1758  0D9F                     	;# 
  1759  0DA0                     	;# 
  1760  0DA1                     	;# 
  1761  0DA1                     	;# 
  1762  0DA2                     	;# 
  1763  0DA3                     	;# 
  1764  0DA4                     	;# 
  1765  0DA4                     	;# 
  1766  0DA5                     	;# 
  1767  0DA6                     	;# 
  1768  0DA7                     	;# 
  1769  0DA7                     	;# 
  1770  0DA8                     	;# 
  1771  0DA9                     	;# 
  1772  0DAA                     	;# 
  1773  0DAB                     	;# 
  1774  0DAC                     	;# 
  1775  0DAD                     	;# 
  1776  0DAE                     	;# 
  1777  0DAF                     	;# 
  1778  0E0F                     	;# 
  1779  0E10                     	;# 
  1780  0E11                     	;# 
  1781  0E12                     	;# 
  1782  0E13                     	;# 
  1783  0E14                     	;# 
  1784  0E15                     	;# 
  1785  0E16                     	;# 
  1786  0E17                     	;# 
  1787  0E18                     	;# 
  1788  0E19                     	;# 
  1789  0E1A                     	;# 
  1790  0E1B                     	;# 
  1791  0E1C                     	;# 
  1792  0E1D                     	;# 
  1793  0E1E                     	;# 
  1794  0E1F                     	;# 
  1795  0E20                     	;# 
  1796  0E21                     	;# 
  1797  0E22                     	;# 
  1798  0E23                     	;# 
  1799  0E24                     	;# 
  1800  0E25                     	;# 
  1801  0E26                     	;# 
  1802  0E27                     	;# 
  1803  0E28                     	;# 
  1804  0E29                     	;# 
  1805  0E2A                     	;# 
  1806  0E2B                     	;# 
  1807  0E2C                     	;# 
  1808  0E2D                     	;# 
  1809  0E2E                     	;# 
  1810  0E90                     	;# 
  1811  0E91                     	;# 
  1812  0E92                     	;# 
  1813  0E94                     	;# 
  1814  0E95                     	;# 
  1815  0E9C                     	;# 
  1816  0E9D                     	;# 
  1817  0E9E                     	;# 
  1818  0E9F                     	;# 
  1819  0EA0                     	;# 
  1820  0EA1                     	;# 
  1821  0EA2                     	;# 
  1822  0EA3                     	;# 
  1823  0EA4                     	;# 
  1824  0EA5                     	;# 
  1825  0EA6                     	;# 
  1826  0EA7                     	;# 
  1827  0F0F                     	;# 
  1828  0F10                     	;# 
  1829  0F11                     	;# 
  1830  0F12                     	;# 
  1831  0F13                     	;# 
  1832  0F14                     	;# 
  1833  0F15                     	;# 
  1834  0F16                     	;# 
  1835  0F17                     	;# 
  1836  0F18                     	;# 
  1837  0F19                     	;# 
  1838  0F1A                     	;# 
  1839  0F1B                     	;# 
  1840  0F1C                     	;# 
  1841  0F1D                     	;# 
  1842  0F1E                     	;# 
  1843  0F1F                     	;# 
  1844  0F20                     	;# 
  1845  0F21                     	;# 
  1846  0F22                     	;# 
  1847  0F23                     	;# 
  1848  0F24                     	;# 
  1849  0F25                     	;# 
  1850  0F26                     	;# 
  1851  0F27                     	;# 
  1852  0F28                     	;# 
  1853  0F29                     	;# 
  1854  0F2A                     	;# 
  1855  0F2B                     	;# 
  1856  0F2C                     	;# 
  1857  0F2D                     	;# 
  1858  0F2E                     	;# 
  1859  0F2F                     	;# 
  1860  0F30                     	;# 
  1861  0F31                     	;# 
  1862  0F32                     	;# 
  1863  0F33                     	;# 
  1864  0F34                     	;# 
  1865  0F35                     	;# 
  1866  0F36                     	;# 
  1867  0F37                     	;# 
  1868  0FE4                     	;# 
  1869  0FE5                     	;# 
  1870  0FE6                     	;# 
  1871  0FE7                     	;# 
  1872  0FE8                     	;# 
  1873  0FE9                     	;# 
  1874  0FEA                     	;# 
  1875  0FEB                     	;# 
  1876  0FED                     	;# 
  1877  0FEE                     	;# 
  1878  0FEF                     	;# 
  1879  0000                     	;# 
  1880  0001                     	;# 
  1881  0002                     	;# 
  1882  0003                     	;# 
  1883  0004                     	;# 
  1884  0005                     	;# 
  1885  0006                     	;# 
  1886  0007                     	;# 
  1887  0008                     	;# 
  1888  0009                     	;# 
  1889  000A                     	;# 
  1890  000B                     	;# 
  1891  000C                     	;# 
  1892  000D                     	;# 
  1893  000E                     	;# 
  1894  0010                     	;# 
  1895  0011                     	;# 
  1896  0012                     	;# 
  1897  0013                     	;# 
  1898  0014                     	;# 
  1899  0015                     	;# 
  1900  0016                     	;# 
  1901  0016                     	;# 
  1902  0017                     	;# 
  1903  0018                     	;# 
  1904  0019                     	;# 
  1905  001A                     	;# 
  1906  001A                     	;# 
  1907  001B                     	;# 
  1908  001B                     	;# 
  1909  001C                     	;# 
  1910  001D                     	;# 
  1911  001E                     	;# 
  1912  001F                     	;# 
  1913  008C                     	;# 
  1914  008D                     	;# 
  1915  008E                     	;# 
  1916  0090                     	;# 
  1917  0091                     	;# 
  1918  0092                     	;# 
  1919  0093                     	;# 
  1920  0094                     	;# 
  1921  0095                     	;# 
  1922  0096                     	;# 
  1923  0098                     	;# 
  1924  0099                     	;# 
  1925  009A                     	;# 
  1926  009B                     	;# 
  1927  009B                     	;# 
  1928  009C                     	;# 
  1929  009D                     	;# 
  1930  009E                     	;# 
  1931  009F                     	;# 
  1932  010C                     	;# 
  1933  010D                     	;# 
  1934  010E                     	;# 
  1935  0111                     	;# 
  1936  0112                     	;# 
  1937  0113                     	;# 
  1938  0114                     	;# 
  1939  0115                     	;# 
  1940  0116                     	;# 
  1941  0117                     	;# 
  1942  0118                     	;# 
  1943  0119                     	;# 
  1944  011C                     	;# 
  1945  018C                     	;# 
  1946  018D                     	;# 
  1947  018E                     	;# 
  1948  0191                     	;# 
  1949  0191                     	;# 
  1950  0192                     	;# 
  1951  0193                     	;# 
  1952  0193                     	;# 
  1953  0194                     	;# 
  1954  0195                     	;# 
  1955  0196                     	;# 
  1956  0197                     	;# 
  1957  0199                     	;# 
  1958  0199                     	;# 
  1959  0199                     	;# 
  1960  019A                     	;# 
  1961  019A                     	;# 
  1962  019A                     	;# 
  1963  019B                     	;# 
  1964  019B                     	;# 
  1965  019B                     	;# 
  1966  019B                     	;# 
  1967  019B                     	;# 
  1968  019C                     	;# 
  1969  019C                     	;# 
  1970  019C                     	;# 
  1971  019D                     	;# 
  1972  019D                     	;# 
  1973  019D                     	;# 
  1974  019E                     	;# 
  1975  019E                     	;# 
  1976  019E                     	;# 
  1977  019F                     	;# 
  1978  019F                     	;# 
  1979  019F                     	;# 
  1980  019F                     	;# 
  1981  019F                     	;# 
  1982  020C                     	;# 
  1983  020D                     	;# 
  1984  020E                     	;# 
  1985  0211                     	;# 
  1986  0211                     	;# 
  1987  0212                     	;# 
  1988  0212                     	;# 
  1989  0213                     	;# 
  1990  0213                     	;# 
  1991  0214                     	;# 
  1992  0214                     	;# 
  1993  0215                     	;# 
  1994  0215                     	;# 
  1995  0215                     	;# 
  1996  0215                     	;# 
  1997  0216                     	;# 
  1998  0216                     	;# 
  1999  0217                     	;# 
  2000  0217                     	;# 
  2001  028C                     	;# 
  2002  028D                     	;# 
  2003  028E                     	;# 
  2004  0291                     	;# 
  2005  0291                     	;# 
  2006  0292                     	;# 
  2007  0293                     	;# 
  2008  0294                     	;# 
  2009  0298                     	;# 
  2010  0298                     	;# 
  2011  0299                     	;# 
  2012  029A                     	;# 
  2013  029B                     	;# 
  2014  029E                     	;# 
  2015  030C                     	;# 
  2016  030D                     	;# 
  2017  030E                     	;# 
  2018  038C                     	;# 
  2019  038D                     	;# 
  2020  038E                     	;# 
  2021  0391                     	;# 
  2022  0392                     	;# 
  2023  0393                     	;# 
  2024  0394                     	;# 
  2025  0395                     	;# 
  2026  0396                     	;# 
  2027  0397                     	;# 
  2028  0398                     	;# 
  2029  0399                     	;# 
  2030  040E                     	;# 
  2031  0413                     	;# 
  2032  0413                     	;# 
  2033  0414                     	;# 
  2034  0414                     	;# 
  2035  0415                     	;# 
  2036  0416                     	;# 
  2037  0417                     	;# 
  2038  0418                     	;# 
  2039  041A                     	;# 
  2040  041A                     	;# 
  2041  041B                     	;# 
  2042  041B                     	;# 
  2043  041C                     	;# 
  2044  041D                     	;# 
  2045  041E                     	;# 
  2046  041F                     	;# 
  2047  0493                     	;# 
  2048  0494                     	;# 
  2049  0495                     	;# 
  2050  0496                     	;# 
  2051  049A                     	;# 
  2052  049B                     	;# 
  2053  049C                     	;# 
  2054  049D                     	;# 
  2055  058C                     	;# 
  2056  058C                     	;# 
  2057  058D                     	;# 
  2058  058E                     	;# 
  2059  058E                     	;# 
  2060  058F                     	;# 
  2061  0590                     	;# 
  2062  0590                     	;# 
  2063  0591                     	;# 
  2064  0592                     	;# 
  2065  0592                     	;# 
  2066  0593                     	;# 
  2067  0594                     	;# 
  2068  0594                     	;# 
  2069  0595                     	;# 
  2070  0596                     	;# 
  2071  0596                     	;# 
  2072  0597                     	;# 
  2073  0598                     	;# 
  2074  0599                     	;# 
  2075  059A                     	;# 
  2076  059B                     	;# 
  2077  059B                     	;# 
  2078  059C                     	;# 
  2079  059D                     	;# 
  2080  060C                     	;# 
  2081  060C                     	;# 
  2082  060D                     	;# 
  2083  060E                     	;# 
  2084  060F                     	;# 
  2085  060F                     	;# 
  2086  0610                     	;# 
  2087  0611                     	;# 
  2088  0612                     	;# 
  2089  0613                     	;# 
  2090  0614                     	;# 
  2091  0617                     	;# 
  2092  0617                     	;# 
  2093  0618                     	;# 
  2094  0619                     	;# 
  2095  061A                     	;# 
  2096  061A                     	;# 
  2097  061B                     	;# 
  2098  061C                     	;# 
  2099  0691                     	;# 
  2100  0692                     	;# 
  2101  0693                     	;# 
  2102  0694                     	;# 
  2103  0695                     	;# 
  2104  0696                     	;# 
  2105  0697                     	;# 
  2106  0699                     	;# 
  2107  069A                     	;# 
  2108  0711                     	;# 
  2109  0712                     	;# 
  2110  0713                     	;# 
  2111  0714                     	;# 
  2112  0715                     	;# 
  2113  0718                     	;# 
  2114  0718                     	;# 
  2115  0719                     	;# 
  2116  071A                     	;# 
  2117  071A                     	;# 
  2118  071B                     	;# 
  2119  071C                     	;# 
  2120  071D                     	;# 
  2121  0791                     	;# 
  2122  0791                     	;# 
  2123  0792                     	;# 
  2124  0793                     	;# 
  2125  0793                     	;# 
  2126  0794                     	;# 
  2127  0795                     	;# 
  2128  0795                     	;# 
  2129  0796                     	;# 
  2130  0797                     	;# 
  2131  0797                     	;# 
  2132  0798                     	;# 
  2133  0799                     	;# 
  2134  079A                     	;# 
  2135  080C                     	;# 
  2136  080C                     	;# 
  2137  080D                     	;# 
  2138  080E                     	;# 
  2139  080E                     	;# 
  2140  080F                     	;# 
  2141  0810                     	;# 
  2142  0810                     	;# 
  2143  0811                     	;# 
  2144  0812                     	;# 
  2145  0812                     	;# 
  2146  0813                     	;# 
  2147  0814                     	;# 
  2148  0815                     	;# 
  2149  0816                     	;# 
  2150  0817                     	;# 
  2151  0818                     	;# 
  2152  0819                     	;# 
  2153  081A                     	;# 
  2154  081A                     	;# 
  2155  081B                     	;# 
  2156  081C                     	;# 
  2157  081C                     	;# 
  2158  081D                     	;# 
  2159  088C                     	;# 
  2160  088D                     	;# 
  2161  088E                     	;# 
  2162  088F                     	;# 
  2163  088F                     	;# 
  2164  0890                     	;# 
  2165  0891                     	;# 
  2166  0892                     	;# 
  2167  0893                     	;# 
  2168  0893                     	;# 
  2169  0894                     	;# 
  2170  0895                     	;# 
  2171  0896                     	;# 
  2172  0897                     	;# 
  2173  0897                     	;# 
  2174  0898                     	;# 
  2175  0899                     	;# 
  2176  0D8C                     	;# 
  2177  0D8C                     	;# 
  2178  0D8D                     	;# 
  2179  0D8E                     	;# 
  2180  0D8F                     	;# 
  2181  0D8F                     	;# 
  2182  0D90                     	;# 
  2183  0D91                     	;# 
  2184  0D92                     	;# 
  2185  0D92                     	;# 
  2186  0D93                     	;# 
  2187  0D94                     	;# 
  2188  0D95                     	;# 
  2189  0D95                     	;# 
  2190  0D96                     	;# 
  2191  0D97                     	;# 
  2192  0D98                     	;# 
  2193  0D99                     	;# 
  2194  0D9A                     	;# 
  2195  0D9B                     	;# 
  2196  0D9C                     	;# 
  2197  0D9D                     	;# 
  2198  0D9E                     	;# 
  2199  0D9E                     	;# 
  2200  0D9F                     	;# 
  2201  0DA0                     	;# 
  2202  0DA1                     	;# 
  2203  0DA1                     	;# 
  2204  0DA2                     	;# 
  2205  0DA3                     	;# 
  2206  0DA4                     	;# 
  2207  0DA4                     	;# 
  2208  0DA5                     	;# 
  2209  0DA6                     	;# 
  2210  0DA7                     	;# 
  2211  0DA7                     	;# 
  2212  0DA8                     	;# 
  2213  0DA9                     	;# 
  2214  0DAA                     	;# 
  2215  0DAB                     	;# 
  2216  0DAC                     	;# 
  2217  0DAD                     	;# 
  2218  0DAE                     	;# 
  2219  0DAF                     	;# 
  2220  0E0F                     	;# 
  2221  0E10                     	;# 
  2222  0E11                     	;# 
  2223  0E12                     	;# 
  2224  0E13                     	;# 
  2225  0E14                     	;# 
  2226  0E15                     	;# 
  2227  0E16                     	;# 
  2228  0E17                     	;# 
  2229  0E18                     	;# 
  2230  0E19                     	;# 
  2231  0E1A                     	;# 
  2232  0E1B                     	;# 
  2233  0E1C                     	;# 
  2234  0E1D                     	;# 
  2235  0E1E                     	;# 
  2236  0E1F                     	;# 
  2237  0E20                     	;# 
  2238  0E21                     	;# 
  2239  0E22                     	;# 
  2240  0E23                     	;# 
  2241  0E24                     	;# 
  2242  0E25                     	;# 
  2243  0E26                     	;# 
  2244  0E27                     	;# 
  2245  0E28                     	;# 
  2246  0E29                     	;# 
  2247  0E2A                     	;# 
  2248  0E2B                     	;# 
  2249  0E2C                     	;# 
  2250  0E2D                     	;# 
  2251  0E2E                     	;# 
  2252  0E90                     	;# 
  2253  0E91                     	;# 
  2254  0E92                     	;# 
  2255  0E94                     	;# 
  2256  0E95                     	;# 
  2257  0E9C                     	;# 
  2258  0E9D                     	;# 
  2259  0E9E                     	;# 
  2260  0E9F                     	;# 
  2261  0EA0                     	;# 
  2262  0EA1                     	;# 
  2263  0EA2                     	;# 
  2264  0EA3                     	;# 
  2265  0EA4                     	;# 
  2266  0EA5                     	;# 
  2267  0EA6                     	;# 
  2268  0EA7                     	;# 
  2269  0F0F                     	;# 
  2270  0F10                     	;# 
  2271  0F11                     	;# 
  2272  0F12                     	;# 
  2273  0F13                     	;# 
  2274  0F14                     	;# 
  2275  0F15                     	;# 
  2276  0F16                     	;# 
  2277  0F17                     	;# 
  2278  0F18                     	;# 
  2279  0F19                     	;# 
  2280  0F1A                     	;# 
  2281  0F1B                     	;# 
  2282  0F1C                     	;# 
  2283  0F1D                     	;# 
  2284  0F1E                     	;# 
  2285  0F1F                     	;# 
  2286  0F20                     	;# 
  2287  0F21                     	;# 
  2288  0F22                     	;# 
  2289  0F23                     	;# 
  2290  0F24                     	;# 
  2291  0F25                     	;# 
  2292  0F26                     	;# 
  2293  0F27                     	;# 
  2294  0F28                     	;# 
  2295  0F29                     	;# 
  2296  0F2A                     	;# 
  2297  0F2B                     	;# 
  2298  0F2C                     	;# 
  2299  0F2D                     	;# 
  2300  0F2E                     	;# 
  2301  0F2F                     	;# 
  2302  0F30                     	;# 
  2303  0F31                     	;# 
  2304  0F32                     	;# 
  2305  0F33                     	;# 
  2306  0F34                     	;# 
  2307  0F35                     	;# 
  2308  0F36                     	;# 
  2309  0F37                     	;# 
  2310  0FE4                     	;# 
  2311  0FE5                     	;# 
  2312  0FE6                     	;# 
  2313  0FE7                     	;# 
  2314  0FE8                     	;# 
  2315  0FE9                     	;# 
  2316  0FEA                     	;# 
  2317  0FEB                     	;# 
  2318  0FED                     	;# 
  2319  0FEE                     	;# 
  2320  0FEF                     	;# 
  2321  0000                     	;# 
  2322  0001                     	;# 
  2323  0002                     	;# 
  2324  0003                     	;# 
  2325  0004                     	;# 
  2326  0005                     	;# 
  2327  0006                     	;# 
  2328  0007                     	;# 
  2329  0008                     	;# 
  2330  0009                     	;# 
  2331  000A                     	;# 
  2332  000B                     	;# 
  2333  000C                     	;# 
  2334  000D                     	;# 
  2335  000E                     	;# 
  2336  0010                     	;# 
  2337  0011                     	;# 
  2338  0012                     	;# 
  2339  0013                     	;# 
  2340  0014                     	;# 
  2341  0015                     	;# 
  2342  0016                     	;# 
  2343  0016                     	;# 
  2344  0017                     	;# 
  2345  0018                     	;# 
  2346  0019                     	;# 
  2347  001A                     	;# 
  2348  001A                     	;# 
  2349  001B                     	;# 
  2350  001B                     	;# 
  2351  001C                     	;# 
  2352  001D                     	;# 
  2353  001E                     	;# 
  2354  001F                     	;# 
  2355  008C                     	;# 
  2356  008D                     	;# 
  2357  008E                     	;# 
  2358  0090                     	;# 
  2359  0091                     	;# 
  2360  0092                     	;# 
  2361  0093                     	;# 
  2362  0094                     	;# 
  2363  0095                     	;# 
  2364  0096                     	;# 
  2365  0098                     	;# 
  2366  0099                     	;# 
  2367  009A                     	;# 
  2368  009B                     	;# 
  2369  009B                     	;# 
  2370  009C                     	;# 
  2371  009D                     	;# 
  2372  009E                     	;# 
  2373  009F                     	;# 
  2374  010C                     	;# 
  2375  010D                     	;# 
  2376  010E                     	;# 
  2377  0111                     	;# 
  2378  0112                     	;# 
  2379  0113                     	;# 
  2380  0114                     	;# 
  2381  0115                     	;# 
  2382  0116                     	;# 
  2383  0117                     	;# 
  2384  0118                     	;# 
  2385  0119                     	;# 
  2386  011C                     	;# 
  2387  018C                     	;# 
  2388  018D                     	;# 
  2389  018E                     	;# 
  2390  0191                     	;# 
  2391  0191                     	;# 
  2392  0192                     	;# 
  2393  0193                     	;# 
  2394  0193                     	;# 
  2395  0194                     	;# 
  2396  0195                     	;# 
  2397  0196                     	;# 
  2398  0197                     	;# 
  2399  0199                     	;# 
  2400  0199                     	;# 
  2401  0199                     	;# 
  2402  019A                     	;# 
  2403  019A                     	;# 
  2404  019A                     	;# 
  2405  019B                     	;# 
  2406  019B                     	;# 
  2407  019B                     	;# 
  2408  019B                     	;# 
  2409  019B                     	;# 
  2410  019C                     	;# 
  2411  019C                     	;# 
  2412  019C                     	;# 
  2413  019D                     	;# 
  2414  019D                     	;# 
  2415  019D                     	;# 
  2416  019E                     	;# 
  2417  019E                     	;# 
  2418  019E                     	;# 
  2419  019F                     	;# 
  2420  019F                     	;# 
  2421  019F                     	;# 
  2422  019F                     	;# 
  2423  019F                     	;# 
  2424  020C                     	;# 
  2425  020D                     	;# 
  2426  020E                     	;# 
  2427  0211                     	;# 
  2428  0211                     	;# 
  2429  0212                     	;# 
  2430  0212                     	;# 
  2431  0213                     	;# 
  2432  0213                     	;# 
  2433  0214                     	;# 
  2434  0214                     	;# 
  2435  0215                     	;# 
  2436  0215                     	;# 
  2437  0215                     	;# 
  2438  0215                     	;# 
  2439  0216                     	;# 
  2440  0216                     	;# 
  2441  0217                     	;# 
  2442  0217                     	;# 
  2443  028C                     	;# 
  2444  028D                     	;# 
  2445  028E                     	;# 
  2446  0291                     	;# 
  2447  0291                     	;# 
  2448  0292                     	;# 
  2449  0293                     	;# 
  2450  0294                     	;# 
  2451  0298                     	;# 
  2452  0298                     	;# 
  2453  0299                     	;# 
  2454  029A                     	;# 
  2455  029B                     	;# 
  2456  029E                     	;# 
  2457  030C                     	;# 
  2458  030D                     	;# 
  2459  030E                     	;# 
  2460  038C                     	;# 
  2461  038D                     	;# 
  2462  038E                     	;# 
  2463  0391                     	;# 
  2464  0392                     	;# 
  2465  0393                     	;# 
  2466  0394                     	;# 
  2467  0395                     	;# 
  2468  0396                     	;# 
  2469  0397                     	;# 
  2470  0398                     	;# 
  2471  0399                     	;# 
  2472  040E                     	;# 
  2473  0413                     	;# 
  2474  0413                     	;# 
  2475  0414                     	;# 
  2476  0414                     	;# 
  2477  0415                     	;# 
  2478  0416                     	;# 
  2479  0417                     	;# 
  2480  0418                     	;# 
  2481  041A                     	;# 
  2482  041A                     	;# 
  2483  041B                     	;# 
  2484  041B                     	;# 
  2485  041C                     	;# 
  2486  041D                     	;# 
  2487  041E                     	;# 
  2488  041F                     	;# 
  2489  0493                     	;# 
  2490  0494                     	;# 
  2491  0495                     	;# 
  2492  0496                     	;# 
  2493  049A                     	;# 
  2494  049B                     	;# 
  2495  049C                     	;# 
  2496  049D                     	;# 
  2497  058C                     	;# 
  2498  058C                     	;# 
  2499  058D                     	;# 
  2500  058E                     	;# 
  2501  058E                     	;# 
  2502  058F                     	;# 
  2503  0590                     	;# 
  2504  0590                     	;# 
  2505  0591                     	;# 
  2506  0592                     	;# 
  2507  0592                     	;# 
  2508  0593                     	;# 
  2509  0594                     	;# 
  2510  0594                     	;# 
  2511  0595                     	;# 
  2512  0596                     	;# 
  2513  0596                     	;# 
  2514  0597                     	;# 
  2515  0598                     	;# 
  2516  0599                     	;# 
  2517  059A                     	;# 
  2518  059B                     	;# 
  2519  059B                     	;# 
  2520  059C                     	;# 
  2521  059D                     	;# 
  2522  060C                     	;# 
  2523  060C                     	;# 
  2524  060D                     	;# 
  2525  060E                     	;# 
  2526  060F                     	;# 
  2527  060F                     	;# 
  2528  0610                     	;# 
  2529  0611                     	;# 
  2530  0612                     	;# 
  2531  0613                     	;# 
  2532  0614                     	;# 
  2533  0617                     	;# 
  2534  0617                     	;# 
  2535  0618                     	;# 
  2536  0619                     	;# 
  2537  061A                     	;# 
  2538  061A                     	;# 
  2539  061B                     	;# 
  2540  061C                     	;# 
  2541  0691                     	;# 
  2542  0692                     	;# 
  2543  0693                     	;# 
  2544  0694                     	;# 
  2545  0695                     	;# 
  2546  0696                     	;# 
  2547  0697                     	;# 
  2548  0699                     	;# 
  2549  069A                     	;# 
  2550  0711                     	;# 
  2551  0712                     	;# 
  2552  0713                     	;# 
  2553  0714                     	;# 
  2554  0715                     	;# 
  2555  0718                     	;# 
  2556  0718                     	;# 
  2557  0719                     	;# 
  2558  071A                     	;# 
  2559  071A                     	;# 
  2560  071B                     	;# 
  2561  071C                     	;# 
  2562  071D                     	;# 
  2563  0791                     	;# 
  2564  0791                     	;# 
  2565  0792                     	;# 
  2566  0793                     	;# 
  2567  0793                     	;# 
  2568  0794                     	;# 
  2569  0795                     	;# 
  2570  0795                     	;# 
  2571  0796                     	;# 
  2572  0797                     	;# 
  2573  0797                     	;# 
  2574  0798                     	;# 
  2575  0799                     	;# 
  2576  079A                     	;# 
  2577  080C                     	;# 
  2578  080C                     	;# 
  2579  080D                     	;# 
  2580  080E                     	;# 
  2581  080E                     	;# 
  2582  080F                     	;# 
  2583  0810                     	;# 
  2584  0810                     	;# 
  2585  0811                     	;# 
  2586  0812                     	;# 
  2587  0812                     	;# 
  2588  0813                     	;# 
  2589  0814                     	;# 
  2590  0815                     	;# 
  2591  0816                     	;# 
  2592  0817                     	;# 
  2593  0818                     	;# 
  2594  0819                     	;# 
  2595  081A                     	;# 
  2596  081A                     	;# 
  2597  081B                     	;# 
  2598  081C                     	;# 
  2599  081C                     	;# 
  2600  081D                     	;# 
  2601  088C                     	;# 
  2602  088D                     	;# 
  2603  088E                     	;# 
  2604  088F                     	;# 
  2605  088F                     	;# 
  2606  0890                     	;# 
  2607  0891                     	;# 
  2608  0892                     	;# 
  2609  0893                     	;# 
  2610  0893                     	;# 
  2611  0894                     	;# 
  2612  0895                     	;# 
  2613  0896                     	;# 
  2614  0897                     	;# 
  2615  0897                     	;# 
  2616  0898                     	;# 
  2617  0899                     	;# 
  2618  0D8C                     	;# 
  2619  0D8C                     	;# 
  2620  0D8D                     	;# 
  2621  0D8E                     	;# 
  2622  0D8F                     	;# 
  2623  0D8F                     	;# 
  2624  0D90                     	;# 
  2625  0D91                     	;# 
  2626  0D92                     	;# 
  2627  0D92                     	;# 
  2628  0D93                     	;# 
  2629  0D94                     	;# 
  2630  0D95                     	;# 
  2631  0D95                     	;# 
  2632  0D96                     	;# 
  2633  0D97                     	;# 
  2634  0D98                     	;# 
  2635  0D99                     	;# 
  2636  0D9A                     	;# 
  2637  0D9B                     	;# 
  2638  0D9C                     	;# 
  2639  0D9D                     	;# 
  2640  0D9E                     	;# 
  2641  0D9E                     	;# 
  2642  0D9F                     	;# 
  2643  0DA0                     	;# 
  2644  0DA1                     	;# 
  2645  0DA1                     	;# 
  2646  0DA2                     	;# 
  2647  0DA3                     	;# 
  2648  0DA4                     	;# 
  2649  0DA4                     	;# 
  2650  0DA5                     	;# 
  2651  0DA6                     	;# 
  2652  0DA7                     	;# 
  2653  0DA7                     	;# 
  2654  0DA8                     	;# 
  2655  0DA9                     	;# 
  2656  0DAA                     	;# 
  2657  0DAB                     	;# 
  2658  0DAC                     	;# 
  2659  0DAD                     	;# 
  2660  0DAE                     	;# 
  2661  0DAF                     	;# 
  2662  0E0F                     	;# 
  2663  0E10                     	;# 
  2664  0E11                     	;# 
  2665  0E12                     	;# 
  2666  0E13                     	;# 
  2667  0E14                     	;# 
  2668  0E15                     	;# 
  2669  0E16                     	;# 
  2670  0E17                     	;# 
  2671  0E18                     	;# 
  2672  0E19                     	;# 
  2673  0E1A                     	;# 
  2674  0E1B                     	;# 
  2675  0E1C                     	;# 
  2676  0E1D                     	;# 
  2677  0E1E                     	;# 
  2678  0E1F                     	;# 
  2679  0E20                     	;# 
  2680  0E21                     	;# 
  2681  0E22                     	;# 
  2682  0E23                     	;# 
  2683  0E24                     	;# 
  2684  0E25                     	;# 
  2685  0E26                     	;# 
  2686  0E27                     	;# 
  2687  0E28                     	;# 
  2688  0E29                     	;# 
  2689  0E2A                     	;# 
  2690  0E2B                     	;# 
  2691  0E2C                     	;# 
  2692  0E2D                     	;# 
  2693  0E2E                     	;# 
  2694  0E90                     	;# 
  2695  0E91                     	;# 
  2696  0E92                     	;# 
  2697  0E94                     	;# 
  2698  0E95                     	;# 
  2699  0E9C                     	;# 
  2700  0E9D                     	;# 
  2701  0E9E                     	;# 
  2702  0E9F                     	;# 
  2703  0EA0                     	;# 
  2704  0EA1                     	;# 
  2705  0EA2                     	;# 
  2706  0EA3                     	;# 
  2707  0EA4                     	;# 
  2708  0EA5                     	;# 
  2709  0EA6                     	;# 
  2710  0EA7                     	;# 
  2711  0F0F                     	;# 
  2712  0F10                     	;# 
  2713  0F11                     	;# 
  2714  0F12                     	;# 
  2715  0F13                     	;# 
  2716  0F14                     	;# 
  2717  0F15                     	;# 
  2718  0F16                     	;# 
  2719  0F17                     	;# 
  2720  0F18                     	;# 
  2721  0F19                     	;# 
  2722  0F1A                     	;# 
  2723  0F1B                     	;# 
  2724  0F1C                     	;# 
  2725  0F1D                     	;# 
  2726  0F1E                     	;# 
  2727  0F1F                     	;# 
  2728  0F20                     	;# 
  2729  0F21                     	;# 
  2730  0F22                     	;# 
  2731  0F23                     	;# 
  2732  0F24                     	;# 
  2733  0F25                     	;# 
  2734  0F26                     	;# 
  2735  0F27                     	;# 
  2736  0F28                     	;# 
  2737  0F29                     	;# 
  2738  0F2A                     	;# 
  2739  0F2B                     	;# 
  2740  0F2C                     	;# 
  2741  0F2D                     	;# 
  2742  0F2E                     	;# 
  2743  0F2F                     	;# 
  2744  0F30                     	;# 
  2745  0F31                     	;# 
  2746  0F32                     	;# 
  2747  0F33                     	;# 
  2748  0F34                     	;# 
  2749  0F35                     	;# 
  2750  0F36                     	;# 
  2751  0F37                     	;# 
  2752  0FE4                     	;# 
  2753  0FE5                     	;# 
  2754  0FE6                     	;# 
  2755  0FE7                     	;# 
  2756  0FE8                     	;# 
  2757  0FE9                     	;# 
  2758  0FEA                     	;# 
  2759  0FEB                     	;# 
  2760  0FED                     	;# 
  2761  0FEE                     	;# 
  2762  0FEF                     	;# 
  2763  0000                     	;# 
  2764  0001                     	;# 
  2765  0002                     	;# 
  2766  0003                     	;# 
  2767  0004                     	;# 
  2768  0005                     	;# 
  2769  0006                     	;# 
  2770  0007                     	;# 
  2771  0008                     	;# 
  2772  0009                     	;# 
  2773  000A                     	;# 
  2774  000B                     	;# 
  2775  000C                     	;# 
  2776  000D                     	;# 
  2777  000E                     	;# 
  2778  0010                     	;# 
  2779  0011                     	;# 
  2780  0012                     	;# 
  2781  0013                     	;# 
  2782  0014                     	;# 
  2783  0015                     	;# 
  2784  0016                     	;# 
  2785  0016                     	;# 
  2786  0017                     	;# 
  2787  0018                     	;# 
  2788  0019                     	;# 
  2789  001A                     	;# 
  2790  001A                     	;# 
  2791  001B                     	;# 
  2792  001B                     	;# 
  2793  001C                     	;# 
  2794  001D                     	;# 
  2795  001E                     	;# 
  2796  001F                     	;# 
  2797  008C                     	;# 
  2798  008D                     	;# 
  2799  008E                     	;# 
  2800  0090                     	;# 
  2801  0091                     	;# 
  2802  0092                     	;# 
  2803  0093                     	;# 
  2804  0094                     	;# 
  2805  0095                     	;# 
  2806  0096                     	;# 
  2807  0098                     	;# 
  2808  0099                     	;# 
  2809  009A                     	;# 
  2810  009B                     	;# 
  2811  009B                     	;# 
  2812  009C                     	;# 
  2813  009D                     	;# 
  2814  009E                     	;# 
  2815  009F                     	;# 
  2816  010C                     	;# 
  2817  010D                     	;# 
  2818  010E                     	;# 
  2819  0111                     	;# 
  2820  0112                     	;# 
  2821  0113                     	;# 
  2822  0114                     	;# 
  2823  0115                     	;# 
  2824  0116                     	;# 
  2825  0117                     	;# 
  2826  0118                     	;# 
  2827  0119                     	;# 
  2828  011C                     	;# 
  2829  018C                     	;# 
  2830  018D                     	;# 
  2831  018E                     	;# 
  2832  0191                     	;# 
  2833  0191                     	;# 
  2834  0192                     	;# 
  2835  0193                     	;# 
  2836  0193                     	;# 
  2837  0194                     	;# 
  2838  0195                     	;# 
  2839  0196                     	;# 
  2840  0197                     	;# 
  2841  0199                     	;# 
  2842  0199                     	;# 
  2843  0199                     	;# 
  2844  019A                     	;# 
  2845  019A                     	;# 
  2846  019A                     	;# 
  2847  019B                     	;# 
  2848  019B                     	;# 
  2849  019B                     	;# 
  2850  019B                     	;# 
  2851  019B                     	;# 
  2852  019C                     	;# 
  2853  019C                     	;# 
  2854  019C                     	;# 
  2855  019D                     	;# 
  2856  019D                     	;# 
  2857  019D                     	;# 
  2858  019E                     	;# 
  2859  019E                     	;# 
  2860  019E                     	;# 
  2861  019F                     	;# 
  2862  019F                     	;# 
  2863  019F                     	;# 
  2864  019F                     	;# 
  2865  019F                     	;# 
  2866  020C                     	;# 
  2867  020D                     	;# 
  2868  020E                     	;# 
  2869  0211                     	;# 
  2870  0211                     	;# 
  2871  0212                     	;# 
  2872  0212                     	;# 
  2873  0213                     	;# 
  2874  0213                     	;# 
  2875  0214                     	;# 
  2876  0214                     	;# 
  2877  0215                     	;# 
  2878  0215                     	;# 
  2879  0215                     	;# 
  2880  0215                     	;# 
  2881  0216                     	;# 
  2882  0216                     	;# 
  2883  0217                     	;# 
  2884  0217                     	;# 
  2885  028C                     	;# 
  2886  028D                     	;# 
  2887  028E                     	;# 
  2888  0291                     	;# 
  2889  0291                     	;# 
  2890  0292                     	;# 
  2891  0293                     	;# 
  2892  0294                     	;# 
  2893  0298                     	;# 
  2894  0298                     	;# 
  2895  0299                     	;# 
  2896  029A                     	;# 
  2897  029B                     	;# 
  2898  029E                     	;# 
  2899  030C                     	;# 
  2900  030D                     	;# 
  2901  030E                     	;# 
  2902  038C                     	;# 
  2903  038D                     	;# 
  2904  038E                     	;# 
  2905  0391                     	;# 
  2906  0392                     	;# 
  2907  0393                     	;# 
  2908  0394                     	;# 
  2909  0395                     	;# 
  2910  0396                     	;# 
  2911  0397                     	;# 
  2912  0398                     	;# 
  2913  0399                     	;# 
  2914  040E                     	;# 
  2915  0413                     	;# 
  2916  0413                     	;# 
  2917  0414                     	;# 
  2918  0414                     	;# 
  2919  0415                     	;# 
  2920  0416                     	;# 
  2921  0417                     	;# 
  2922  0418                     	;# 
  2923  041A                     	;# 
  2924  041A                     	;# 
  2925  041B                     	;# 
  2926  041B                     	;# 
  2927  041C                     	;# 
  2928  041D                     	;# 
  2929  041E                     	;# 
  2930  041F                     	;# 
  2931  0493                     	;# 
  2932  0494                     	;# 
  2933  0495                     	;# 
  2934  0496                     	;# 
  2935  049A                     	;# 
  2936  049B                     	;# 
  2937  049C                     	;# 
  2938  049D                     	;# 
  2939  058C                     	;# 
  2940  058C                     	;# 
  2941  058D                     	;# 
  2942  058E                     	;# 
  2943  058E                     	;# 
  2944  058F                     	;# 
  2945  0590                     	;# 
  2946  0590                     	;# 
  2947  0591                     	;# 
  2948  0592                     	;# 
  2949  0592                     	;# 
  2950  0593                     	;# 
  2951  0594                     	;# 
  2952  0594                     	;# 
  2953  0595                     	;# 
  2954  0596                     	;# 
  2955  0596                     	;# 
  2956  0597                     	;# 
  2957  0598                     	;# 
  2958  0599                     	;# 
  2959  059A                     	;# 
  2960  059B                     	;# 
  2961  059B                     	;# 
  2962  059C                     	;# 
  2963  059D                     	;# 
  2964  060C                     	;# 
  2965  060C                     	;# 
  2966  060D                     	;# 
  2967  060E                     	;# 
  2968  060F                     	;# 
  2969  060F                     	;# 
  2970  0610                     	;# 
  2971  0611                     	;# 
  2972  0612                     	;# 
  2973  0613                     	;# 
  2974  0614                     	;# 
  2975  0617                     	;# 
  2976  0617                     	;# 
  2977  0618                     	;# 
  2978  0619                     	;# 
  2979  061A                     	;# 
  2980  061A                     	;# 
  2981  061B                     	;# 
  2982  061C                     	;# 
  2983  0691                     	;# 
  2984  0692                     	;# 
  2985  0693                     	;# 
  2986  0694                     	;# 
  2987  0695                     	;# 
  2988  0696                     	;# 
  2989  0697                     	;# 
  2990  0699                     	;# 
  2991  069A                     	;# 
  2992  0711                     	;# 
  2993  0712                     	;# 
  2994  0713                     	;# 
  2995  0714                     	;# 
  2996  0715                     	;# 
  2997  0718                     	;# 
  2998  0718                     	;# 
  2999  0719                     	;# 
  3000  071A                     	;# 
  3001  071A                     	;# 
  3002  071B                     	;# 
  3003  071C                     	;# 
  3004  071D                     	;# 
  3005  0791                     	;# 
  3006  0791                     	;# 
  3007  0792                     	;# 
  3008  0793                     	;# 
  3009  0793                     	;# 
  3010  0794                     	;# 
  3011  0795                     	;# 
  3012  0795                     	;# 
  3013  0796                     	;# 
  3014  0797                     	;# 
  3015  0797                     	;# 
  3016  0798                     	;# 
  3017  0799                     	;# 
  3018  079A                     	;# 
  3019  080C                     	;# 
  3020  080C                     	;# 
  3021  080D                     	;# 
  3022  080E                     	;# 
  3023  080E                     	;# 
  3024  080F                     	;# 
  3025  0810                     	;# 
  3026  0810                     	;# 
  3027  0811                     	;# 
  3028  0812                     	;# 
  3029  0812                     	;# 
  3030  0813                     	;# 
  3031  0814                     	;# 
  3032  0815                     	;# 
  3033  0816                     	;# 
  3034  0817                     	;# 
  3035  0818                     	;# 
  3036  0819                     	;# 
  3037  081A                     	;# 
  3038  081A                     	;# 
  3039  081B                     	;# 
  3040  081C                     	;# 
  3041  081C                     	;# 
  3042  081D                     	;# 
  3043  088C                     	;# 
  3044  088D                     	;# 
  3045  088E                     	;# 
  3046  088F                     	;# 
  3047  088F                     	;# 
  3048  0890                     	;# 
  3049  0891                     	;# 
  3050  0892                     	;# 
  3051  0893                     	;# 
  3052  0893                     	;# 
  3053  0894                     	;# 
  3054  0895                     	;# 
  3055  0896                     	;# 
  3056  0897                     	;# 
  3057  0897                     	;# 
  3058  0898                     	;# 
  3059  0899                     	;# 
  3060  0D8C                     	;# 
  3061  0D8C                     	;# 
  3062  0D8D                     	;# 
  3063  0D8E                     	;# 
  3064  0D8F                     	;# 
  3065  0D8F                     	;# 
  3066  0D90                     	;# 
  3067  0D91                     	;# 
  3068  0D92                     	;# 
  3069  0D92                     	;# 
  3070  0D93                     	;# 
  3071  0D94                     	;# 
  3072  0D95                     	;# 
  3073  0D95                     	;# 
  3074  0D96                     	;# 
  3075  0D97                     	;# 
  3076  0D98                     	;# 
  3077  0D99                     	;# 
  3078  0D9A                     	;# 
  3079  0D9B                     	;# 
  3080  0D9C                     	;# 
  3081  0D9D                     	;# 
  3082  0D9E                     	;# 
  3083  0D9E                     	;# 
  3084  0D9F                     	;# 
  3085  0DA0                     	;# 
  3086  0DA1                     	;# 
  3087  0DA1                     	;# 
  3088  0DA2                     	;# 
  3089  0DA3                     	;# 
  3090  0DA4                     	;# 
  3091  0DA4                     	;# 
  3092  0DA5                     	;# 
  3093  0DA6                     	;# 
  3094  0DA7                     	;# 
  3095  0DA7                     	;# 
  3096  0DA8                     	;# 
  3097  0DA9                     	;# 
  3098  0DAA                     	;# 
  3099  0DAB                     	;# 
  3100  0DAC                     	;# 
  3101  0DAD                     	;# 
  3102  0DAE                     	;# 
  3103  0DAF                     	;# 
  3104  0E0F                     	;# 
  3105  0E10                     	;# 
  3106  0E11                     	;# 
  3107  0E12                     	;# 
  3108  0E13                     	;# 
  3109  0E14                     	;# 
  3110  0E15                     	;# 
  3111  0E16                     	;# 
  3112  0E17                     	;# 
  3113  0E18                     	;# 
  3114  0E19                     	;# 
  3115  0E1A                     	;# 
  3116  0E1B                     	;# 
  3117  0E1C                     	;# 
  3118  0E1D                     	;# 
  3119  0E1E                     	;# 
  3120  0E1F                     	;# 
  3121  0E20                     	;# 
  3122  0E21                     	;# 
  3123  0E22                     	;# 
  3124  0E23                     	;# 
  3125  0E24                     	;# 
  3126  0E25                     	;# 
  3127  0E26                     	;# 
  3128  0E27                     	;# 
  3129  0E28                     	;# 
  3130  0E29                     	;# 
  3131  0E2A                     	;# 
  3132  0E2B                     	;# 
  3133  0E2C                     	;# 
  3134  0E2D                     	;# 
  3135  0E2E                     	;# 
  3136  0E90                     	;# 
  3137  0E91                     	;# 
  3138  0E92                     	;# 
  3139  0E94                     	;# 
  3140  0E95                     	;# 
  3141  0E9C                     	;# 
  3142  0E9D                     	;# 
  3143  0E9E                     	;# 
  3144  0E9F                     	;# 
  3145  0EA0                     	;# 
  3146  0EA1                     	;# 
  3147  0EA2                     	;# 
  3148  0EA3                     	;# 
  3149  0EA4                     	;# 
  3150  0EA5                     	;# 
  3151  0EA6                     	;# 
  3152  0EA7                     	;# 
  3153  0F0F                     	;# 
  3154  0F10                     	;# 
  3155  0F11                     	;# 
  3156  0F12                     	;# 
  3157  0F13                     	;# 
  3158  0F14                     	;# 
  3159  0F15                     	;# 
  3160  0F16                     	;# 
  3161  0F17                     	;# 
  3162  0F18                     	;# 
  3163  0F19                     	;# 
  3164  0F1A                     	;# 
  3165  0F1B                     	;# 
  3166  0F1C                     	;# 
  3167  0F1D                     	;# 
  3168  0F1E                     	;# 
  3169  0F1F                     	;# 
  3170  0F20                     	;# 
  3171  0F21                     	;# 
  3172  0F22                     	;# 
  3173  0F23                     	;# 
  3174  0F24                     	;# 
  3175  0F25                     	;# 
  3176  0F26                     	;# 
  3177  0F27                     	;# 
  3178  0F28                     	;# 
  3179  0F29                     	;# 
  3180  0F2A                     	;# 
  3181  0F2B                     	;# 
  3182  0F2C                     	;# 
  3183  0F2D                     	;# 
  3184  0F2E                     	;# 
  3185  0F2F                     	;# 
  3186  0F30                     	;# 
  3187  0F31                     	;# 
  3188  0F32                     	;# 
  3189  0F33                     	;# 
  3190  0F34                     	;# 
  3191  0F35                     	;# 
  3192  0F36                     	;# 
  3193  0F37                     	;# 
  3194  0FE4                     	;# 
  3195  0FE5                     	;# 
  3196  0FE6                     	;# 
  3197  0FE7                     	;# 
  3198  0FE8                     	;# 
  3199  0FE9                     	;# 
  3200  0FEA                     	;# 
  3201  0FEB                     	;# 
  3202  0FED                     	;# 
  3203  0FEE                     	;# 
  3204  0FEF                     	;# 
  3205  0000                     	;# 
  3206  0001                     	;# 
  3207  0002                     	;# 
  3208  0003                     	;# 
  3209  0004                     	;# 
  3210  0005                     	;# 
  3211  0006                     	;# 
  3212  0007                     	;# 
  3213  0008                     	;# 
  3214  0009                     	;# 
  3215  000A                     	;# 
  3216  000B                     	;# 
  3217  000C                     	;# 
  3218  000D                     	;# 
  3219  000E                     	;# 
  3220  0010                     	;# 
  3221  0011                     	;# 
  3222  0012                     	;# 
  3223  0013                     	;# 
  3224  0014                     	;# 
  3225  0015                     	;# 
  3226  0016                     	;# 
  3227  0016                     	;# 
  3228  0017                     	;# 
  3229  0018                     	;# 
  3230  0019                     	;# 
  3231  001A                     	;# 
  3232  001A                     	;# 
  3233  001B                     	;# 
  3234  001B                     	;# 
  3235  001C                     	;# 
  3236  001D                     	;# 
  3237  001E                     	;# 
  3238  001F                     	;# 
  3239  008C                     	;# 
  3240  008D                     	;# 
  3241  008E                     	;# 
  3242  0090                     	;# 
  3243  0091                     	;# 
  3244  0092                     	;# 
  3245  0093                     	;# 
  3246  0094                     	;# 
  3247  0095                     	;# 
  3248  0096                     	;# 
  3249  0098                     	;# 
  3250  0099                     	;# 
  3251  009A                     	;# 
  3252  009B                     	;# 
  3253  009B                     	;# 
  3254  009C                     	;# 
  3255  009D                     	;# 
  3256  009E                     	;# 
  3257  009F                     	;# 
  3258  010C                     	;# 
  3259  010D                     	;# 
  3260  010E                     	;# 
  3261  0111                     	;# 
  3262  0112                     	;# 
  3263  0113                     	;# 
  3264  0114                     	;# 
  3265  0115                     	;# 
  3266  0116                     	;# 
  3267  0117                     	;# 
  3268  0118                     	;# 
  3269  0119                     	;# 
  3270  011C                     	;# 
  3271  018C                     	;# 
  3272  018D                     	;# 
  3273  018E                     	;# 
  3274  0191                     	;# 
  3275  0191                     	;# 
  3276  0192                     	;# 
  3277  0193                     	;# 
  3278  0193                     	;# 
  3279  0194                     	;# 
  3280  0195                     	;# 
  3281  0196                     	;# 
  3282  0197                     	;# 
  3283  0199                     	;# 
  3284  0199                     	;# 
  3285  0199                     	;# 
  3286  019A                     	;# 
  3287  019A                     	;# 
  3288  019A                     	;# 
  3289  019B                     	;# 
  3290  019B                     	;# 
  3291  019B                     	;# 
  3292  019B                     	;# 
  3293  019B                     	;# 
  3294  019C                     	;# 
  3295  019C                     	;# 
  3296  019C                     	;# 
  3297  019D                     	;# 
  3298  019D                     	;# 
  3299  019D                     	;# 
  3300  019E                     	;# 
  3301  019E                     	;# 
  3302  019E                     	;# 
  3303  019F                     	;# 
  3304  019F                     	;# 
  3305  019F                     	;# 
  3306  019F                     	;# 
  3307  019F                     	;# 
  3308  020C                     	;# 
  3309  020D                     	;# 
  3310  020E                     	;# 
  3311  0211                     	;# 
  3312  0211                     	;# 
  3313  0212                     	;# 
  3314  0212                     	;# 
  3315  0213                     	;# 
  3316  0213                     	;# 
  3317  0214                     	;# 
  3318  0214                     	;# 
  3319  0215                     	;# 
  3320  0215                     	;# 
  3321  0215                     	;# 
  3322  0215                     	;# 
  3323  0216                     	;# 
  3324  0216                     	;# 
  3325  0217                     	;# 
  3326  0217                     	;# 
  3327  028C                     	;# 
  3328  028D                     	;# 
  3329  028E                     	;# 
  3330  0291                     	;# 
  3331  0291                     	;# 
  3332  0292                     	;# 
  3333  0293                     	;# 
  3334  0294                     	;# 
  3335  0298                     	;# 
  3336  0298                     	;# 
  3337  0299                     	;# 
  3338  029A                     	;# 
  3339  029B                     	;# 
  3340  029E                     	;# 
  3341  030C                     	;# 
  3342  030D                     	;# 
  3343  030E                     	;# 
  3344  038C                     	;# 
  3345  038D                     	;# 
  3346  038E                     	;# 
  3347  0391                     	;# 
  3348  0392                     	;# 
  3349  0393                     	;# 
  3350  0394                     	;# 
  3351  0395                     	;# 
  3352  0396                     	;# 
  3353  0397                     	;# 
  3354  0398                     	;# 
  3355  0399                     	;# 
  3356  040E                     	;# 
  3357  0413                     	;# 
  3358  0413                     	;# 
  3359  0414                     	;# 
  3360  0414                     	;# 
  3361  0415                     	;# 
  3362  0416                     	;# 
  3363  0417                     	;# 
  3364  0418                     	;# 
  3365  041A                     	;# 
  3366  041A                     	;# 
  3367  041B                     	;# 
  3368  041B                     	;# 
  3369  041C                     	;# 
  3370  041D                     	;# 
  3371  041E                     	;# 
  3372  041F                     	;# 
  3373  0493                     	;# 
  3374  0494                     	;# 
  3375  0495                     	;# 
  3376  0496                     	;# 
  3377  049A                     	;# 
  3378  049B                     	;# 
  3379  049C                     	;# 
  3380  049D                     	;# 
  3381  058C                     	;# 
  3382  058C                     	;# 
  3383  058D                     	;# 
  3384  058E                     	;# 
  3385  058E                     	;# 
  3386  058F                     	;# 
  3387  0590                     	;# 
  3388  0590                     	;# 
  3389  0591                     	;# 
  3390  0592                     	;# 
  3391  0592                     	;# 
  3392  0593                     	;# 
  3393  0594                     	;# 
  3394  0594                     	;# 
  3395  0595                     	;# 
  3396  0596                     	;# 
  3397  0596                     	;# 
  3398  0597                     	;# 
  3399  0598                     	;# 
  3400  0599                     	;# 
  3401  059A                     	;# 
  3402  059B                     	;# 
  3403  059B                     	;# 
  3404  059C                     	;# 
  3405  059D                     	;# 
  3406  060C                     	;# 
  3407  060C                     	;# 
  3408  060D                     	;# 
  3409  060E                     	;# 
  3410  060F                     	;# 
  3411  060F                     	;# 
  3412  0610                     	;# 
  3413  0611                     	;# 
  3414  0612                     	;# 
  3415  0613                     	;# 
  3416  0614                     	;# 
  3417  0617                     	;# 
  3418  0617                     	;# 
  3419  0618                     	;# 
  3420  0619                     	;# 
  3421  061A                     	;# 
  3422  061A                     	;# 
  3423  061B                     	;# 
  3424  061C                     	;# 
  3425  0691                     	;# 
  3426  0692                     	;# 
  3427  0693                     	;# 
  3428  0694                     	;# 
  3429  0695                     	;# 
  3430  0696                     	;# 
  3431  0697                     	;# 
  3432  0699                     	;# 
  3433  069A                     	;# 
  3434  0711                     	;# 
  3435  0712                     	;# 
  3436  0713                     	;# 
  3437  0714                     	;# 
  3438  0715                     	;# 
  3439  0718                     	;# 
  3440  0718                     	;# 
  3441  0719                     	;# 
  3442  071A                     	;# 
  3443  071A                     	;# 
  3444  071B                     	;# 
  3445  071C                     	;# 
  3446  071D                     	;# 
  3447  0791                     	;# 
  3448  0791                     	;# 
  3449  0792                     	;# 
  3450  0793                     	;# 
  3451  0793                     	;# 
  3452  0794                     	;# 
  3453  0795                     	;# 
  3454  0795                     	;# 
  3455  0796                     	;# 
  3456  0797                     	;# 
  3457  0797                     	;# 
  3458  0798                     	;# 
  3459  0799                     	;# 
  3460  079A                     	;# 
  3461  080C                     	;# 
  3462  080C                     	;# 
  3463  080D                     	;# 
  3464  080E                     	;# 
  3465  080E                     	;# 
  3466  080F                     	;# 
  3467  0810                     	;# 
  3468  0810                     	;# 
  3469  0811                     	;# 
  3470  0812                     	;# 
  3471  0812                     	;# 
  3472  0813                     	;# 
  3473  0814                     	;# 
  3474  0815                     	;# 
  3475  0816                     	;# 
  3476  0817                     	;# 
  3477  0818                     	;# 
  3478  0819                     	;# 
  3479  081A                     	;# 
  3480  081A                     	;# 
  3481  081B                     	;# 
  3482  081C                     	;# 
  3483  081C                     	;# 
  3484  081D                     	;# 
  3485  088C                     	;# 
  3486  088D                     	;# 
  3487  088E                     	;# 
  3488  088F                     	;# 
  3489  088F                     	;# 
  3490  0890                     	;# 
  3491  0891                     	;# 
  3492  0892                     	;# 
  3493  0893                     	;# 
  3494  0893                     	;# 
  3495  0894                     	;# 
  3496  0895                     	;# 
  3497  0896                     	;# 
  3498  0897                     	;# 
  3499  0897                     	;# 
  3500  0898                     	;# 
  3501  0899                     	;# 
  3502  0D8C                     	;# 
  3503  0D8C                     	;# 
  3504  0D8D                     	;# 
  3505  0D8E                     	;# 
  3506  0D8F                     	;# 
  3507  0D8F                     	;# 
  3508  0D90                     	;# 
  3509  0D91                     	;# 
  3510  0D92                     	;# 
  3511  0D92                     	;# 
  3512  0D93                     	;# 
  3513  0D94                     	;# 
  3514  0D95                     	;# 
  3515  0D95                     	;# 
  3516  0D96                     	;# 
  3517  0D97                     	;# 
  3518  0D98                     	;# 
  3519  0D99                     	;# 
  3520  0D9A                     	;# 
  3521  0D9B                     	;# 
  3522  0D9C                     	;# 
  3523  0D9D                     	;# 
  3524  0D9E                     	;# 
  3525  0D9E                     	;# 
  3526  0D9F                     	;# 
  3527  0DA0                     	;# 
  3528  0DA1                     	;# 
  3529  0DA1                     	;# 
  3530  0DA2                     	;# 
  3531  0DA3                     	;# 
  3532  0DA4                     	;# 
  3533  0DA4                     	;# 
  3534  0DA5                     	;# 
  3535  0DA6                     	;# 
  3536  0DA7                     	;# 
  3537  0DA7                     	;# 
  3538  0DA8                     	;# 
  3539  0DA9                     	;# 
  3540  0DAA                     	;# 
  3541  0DAB                     	;# 
  3542  0DAC                     	;# 
  3543  0DAD                     	;# 
  3544  0DAE                     	;# 
  3545  0DAF                     	;# 
  3546  0E0F                     	;# 
  3547  0E10                     	;# 
  3548  0E11                     	;# 
  3549  0E12                     	;# 
  3550  0E13                     	;# 
  3551  0E14                     	;# 
  3552  0E15                     	;# 
  3553  0E16                     	;# 
  3554  0E17                     	;# 
  3555  0E18                     	;# 
  3556  0E19                     	;# 
  3557  0E1A                     	;# 
  3558  0E1B                     	;# 
  3559  0E1C                     	;# 
  3560  0E1D                     	;# 
  3561  0E1E                     	;# 
  3562  0E1F                     	;# 
  3563  0E20                     	;# 
  3564  0E21                     	;# 
  3565  0E22                     	;# 
  3566  0E23                     	;# 
  3567  0E24                     	;# 
  3568  0E25                     	;# 
  3569  0E26                     	;# 
  3570  0E27                     	;# 
  3571  0E28                     	;# 
  3572  0E29                     	;# 
  3573  0E2A                     	;# 
  3574  0E2B                     	;# 
  3575  0E2C                     	;# 
  3576  0E2D                     	;# 
  3577  0E2E                     	;# 
  3578  0E90                     	;# 
  3579  0E91                     	;# 
  3580  0E92                     	;# 
  3581  0E94                     	;# 
  3582  0E95                     	;# 
  3583  0E9C                     	;# 
  3584  0E9D                     	;# 
  3585  0E9E                     	;# 
  3586  0E9F                     	;# 
  3587  0EA0                     	;# 
  3588  0EA1                     	;# 
  3589  0EA2                     	;# 
  3590  0EA3                     	;# 
  3591  0EA4                     	;# 
  3592  0EA5                     	;# 
  3593  0EA6                     	;# 
  3594  0EA7                     	;# 
  3595  0F0F                     	;# 
  3596  0F10                     	;# 
  3597  0F11                     	;# 
  3598  0F12                     	;# 
  3599  0F13                     	;# 
  3600  0F14                     	;# 
  3601  0F15                     	;# 
  3602  0F16                     	;# 
  3603  0F17                     	;# 
  3604  0F18                     	;# 
  3605  0F19                     	;# 
  3606  0F1A                     	;# 
  3607  0F1B                     	;# 
  3608  0F1C                     	;# 
  3609  0F1D                     	;# 
  3610  0F1E                     	;# 
  3611  0F1F                     	;# 
  3612  0F20                     	;# 
  3613  0F21                     	;# 
  3614  0F22                     	;# 
  3615  0F23                     	;# 
  3616  0F24                     	;# 
  3617  0F25                     	;# 
  3618  0F26                     	;# 
  3619  0F27                     	;# 
  3620  0F28                     	;# 
  3621  0F29                     	;# 
  3622  0F2A                     	;# 
  3623  0F2B                     	;# 
  3624  0F2C                     	;# 
  3625  0F2D                     	;# 
  3626  0F2E                     	;# 
  3627  0F2F                     	;# 
  3628  0F30                     	;# 
  3629  0F31                     	;# 
  3630  0F32                     	;# 
  3631  0F33                     	;# 
  3632  0F34                     	;# 
  3633  0F35                     	;# 
  3634  0F36                     	;# 
  3635  0F37                     	;# 
  3636  0FE4                     	;# 
  3637  0FE5                     	;# 
  3638  0FE6                     	;# 
  3639  0FE7                     	;# 
  3640  0FE8                     	;# 
  3641  0FE9                     	;# 
  3642  0FEA                     	;# 
  3643  0FEB                     	;# 
  3644  0FED                     	;# 
  3645  0FEE                     	;# 
  3646  0FEF                     	;# 
  3647  0000                     	;# 
  3648  0001                     	;# 
  3649  0002                     	;# 
  3650  0003                     	;# 
  3651  0004                     	;# 
  3652  0005                     	;# 
  3653  0006                     	;# 
  3654  0007                     	;# 
  3655  0008                     	;# 
  3656  0009                     	;# 
  3657  000A                     	;# 
  3658  000B                     	;# 
  3659  000C                     	;# 
  3660  000D                     	;# 
  3661  000E                     	;# 
  3662  0010                     	;# 
  3663  0011                     	;# 
  3664  0012                     	;# 
  3665  0013                     	;# 
  3666  0014                     	;# 
  3667  0015                     	;# 
  3668  0016                     	;# 
  3669  0016                     	;# 
  3670  0017                     	;# 
  3671  0018                     	;# 
  3672  0019                     	;# 
  3673  001A                     	;# 
  3674  001A                     	;# 
  3675  001B                     	;# 
  3676  001B                     	;# 
  3677  001C                     	;# 
  3678  001D                     	;# 
  3679  001E                     	;# 
  3680  001F                     	;# 
  3681  008C                     	;# 
  3682  008D                     	;# 
  3683  008E                     	;# 
  3684  0090                     	;# 
  3685  0091                     	;# 
  3686  0092                     	;# 
  3687  0093                     	;# 
  3688  0094                     	;# 
  3689  0095                     	;# 
  3690  0096                     	;# 
  3691  0098                     	;# 
  3692  0099                     	;# 
  3693  009A                     	;# 
  3694  009B                     	;# 
  3695  009B                     	;# 
  3696  009C                     	;# 
  3697  009D                     	;# 
  3698  009E                     	;# 
  3699  009F                     	;# 
  3700  010C                     	;# 
  3701  010D                     	;# 
  3702  010E                     	;# 
  3703  0111                     	;# 
  3704  0112                     	;# 
  3705  0113                     	;# 
  3706  0114                     	;# 
  3707  0115                     	;# 
  3708  0116                     	;# 
  3709  0117                     	;# 
  3710  0118                     	;# 
  3711  0119                     	;# 
  3712  011C                     	;# 
  3713  018C                     	;# 
  3714  018D                     	;# 
  3715  018E                     	;# 
  3716  0191                     	;# 
  3717  0191                     	;# 
  3718  0192                     	;# 
  3719  0193                     	;# 
  3720  0193                     	;# 
  3721  0194                     	;# 
  3722  0195                     	;# 
  3723  0196                     	;# 
  3724  0197                     	;# 
  3725  0199                     	;# 
  3726  0199                     	;# 
  3727  0199                     	;# 
  3728  019A                     	;# 
  3729  019A                     	;# 
  3730  019A                     	;# 
  3731  019B                     	;# 
  3732  019B                     	;# 
  3733  019B                     	;# 
  3734  019B                     	;# 
  3735  019B                     	;# 
  3736  019C                     	;# 
  3737  019C                     	;# 
  3738  019C                     	;# 
  3739  019D                     	;# 
  3740  019D                     	;# 
  3741  019D                     	;# 
  3742  019E                     	;# 
  3743  019E                     	;# 
  3744  019E                     	;# 
  3745  019F                     	;# 
  3746  019F                     	;# 
  3747  019F                     	;# 
  3748  019F                     	;# 
  3749  019F                     	;# 
  3750  020C                     	;# 
  3751  020D                     	;# 
  3752  020E                     	;# 
  3753  0211                     	;# 
  3754  0211                     	;# 
  3755  0212                     	;# 
  3756  0212                     	;# 
  3757  0213                     	;# 
  3758  0213                     	;# 
  3759  0214                     	;# 
  3760  0214                     	;# 
  3761  0215                     	;# 
  3762  0215                     	;# 
  3763  0215                     	;# 
  3764  0215                     	;# 
  3765  0216                     	;# 
  3766  0216                     	;# 
  3767  0217                     	;# 
  3768  0217                     	;# 
  3769  028C                     	;# 
  3770  028D                     	;# 
  3771  028E                     	;# 
  3772  0291                     	;# 
  3773  0291                     	;# 
  3774  0292                     	;# 
  3775  0293                     	;# 
  3776  0294                     	;# 
  3777  0298                     	;# 
  3778  0298                     	;# 
  3779  0299                     	;# 
  3780  029A                     	;# 
  3781  029B                     	;# 
  3782  029E                     	;# 
  3783  030C                     	;# 
  3784  030D                     	;# 
  3785  030E                     	;# 
  3786  038C                     	;# 
  3787  038D                     	;# 
  3788  038E                     	;# 
  3789  0391                     	;# 
  3790  0392                     	;# 
  3791  0393                     	;# 
  3792  0394                     	;# 
  3793  0395                     	;# 
  3794  0396                     	;# 
  3795  0397                     	;# 
  3796  0398                     	;# 
  3797  0399                     	;# 
  3798  040E                     	;# 
  3799  0413                     	;# 
  3800  0413                     	;# 
  3801  0414                     	;# 
  3802  0414                     	;# 
  3803  0415                     	;# 
  3804  0416                     	;# 
  3805  0417                     	;# 
  3806  0418                     	;# 
  3807  041A                     	;# 
  3808  041A                     	;# 
  3809  041B                     	;# 
  3810  041B                     	;# 
  3811  041C                     	;# 
  3812  041D                     	;# 
  3813  041E                     	;# 
  3814  041F                     	;# 
  3815  0493                     	;# 
  3816  0494                     	;# 
  3817  0495                     	;# 
  3818  0496                     	;# 
  3819  049A                     	;# 
  3820  049B                     	;# 
  3821  049C                     	;# 
  3822  049D                     	;# 
  3823  058C                     	;# 
  3824  058C                     	;# 
  3825  058D                     	;# 
  3826  058E                     	;# 
  3827  058E                     	;# 
  3828  058F                     	;# 
  3829  0590                     	;# 
  3830  0590                     	;# 
  3831  0591                     	;# 
  3832  0592                     	;# 
  3833  0592                     	;# 
  3834  0593                     	;# 
  3835  0594                     	;# 
  3836  0594                     	;# 
  3837  0595                     	;# 
  3838  0596                     	;# 
  3839  0596                     	;# 
  3840  0597                     	;# 
  3841  0598                     	;# 
  3842  0599                     	;# 
  3843  059A                     	;# 
  3844  059B                     	;# 
  3845  059B                     	;# 
  3846  059C                     	;# 
  3847  059D                     	;# 
  3848  060C                     	;# 
  3849  060C                     	;# 
  3850  060D                     	;# 
  3851  060E                     	;# 
  3852  060F                     	;# 
  3853  060F                     	;# 
  3854  0610                     	;# 
  3855  0611                     	;# 
  3856  0612                     	;# 
  3857  0613                     	;# 
  3858  0614                     	;# 
  3859  0617                     	;# 
  3860  0617                     	;# 
  3861  0618                     	;# 
  3862  0619                     	;# 
  3863  061A                     	;# 
  3864  061A                     	;# 
  3865  061B                     	;# 
  3866  061C                     	;# 
  3867  0691                     	;# 
  3868  0692                     	;# 
  3869  0693                     	;# 
  3870  0694                     	;# 
  3871  0695                     	;# 
  3872  0696                     	;# 
  3873  0697                     	;# 
  3874  0699                     	;# 
  3875  069A                     	;# 
  3876  0711                     	;# 
  3877  0712                     	;# 
  3878  0713                     	;# 
  3879  0714                     	;# 
  3880  0715                     	;# 
  3881  0718                     	;# 
  3882  0718                     	;# 
  3883  0719                     	;# 
  3884  071A                     	;# 
  3885  071A                     	;# 
  3886  071B                     	;# 
  3887  071C                     	;# 
  3888  071D                     	;# 
  3889  0791                     	;# 
  3890  0791                     	;# 
  3891  0792                     	;# 
  3892  0793                     	;# 
  3893  0793                     	;# 
  3894  0794                     	;# 
  3895  0795                     	;# 
  3896  0795                     	;# 
  3897  0796                     	;# 
  3898  0797                     	;# 
  3899  0797                     	;# 
  3900  0798                     	;# 
  3901  0799                     	;# 
  3902  079A                     	;# 
  3903  080C                     	;# 
  3904  080C                     	;# 
  3905  080D                     	;# 
  3906  080E                     	;# 
  3907  080E                     	;# 
  3908  080F                     	;# 
  3909  0810                     	;# 
  3910  0810                     	;# 
  3911  0811                     	;# 
  3912  0812                     	;# 
  3913  0812                     	;# 
  3914  0813                     	;# 
  3915  0814                     	;# 
  3916  0815                     	;# 
  3917  0816                     	;# 
  3918  0817                     	;# 
  3919  0818                     	;# 
  3920  0819                     	;# 
  3921  081A                     	;# 
  3922  081A                     	;# 
  3923  081B                     	;# 
  3924  081C                     	;# 
  3925  081C                     	;# 
  3926  081D                     	;# 
  3927  088C                     	;# 
  3928  088D                     	;# 
  3929  088E                     	;# 
  3930  088F                     	;# 
  3931  088F                     	;# 
  3932  0890                     	;# 
  3933  0891                     	;# 
  3934  0892                     	;# 
  3935  0893                     	;# 
  3936  0893                     	;# 
  3937  0894                     	;# 
  3938  0895                     	;# 
  3939  0896                     	;# 
  3940  0897                     	;# 
  3941  0897                     	;# 
  3942  0898                     	;# 
  3943  0899                     	;# 
  3944  0D8C                     	;# 
  3945  0D8C                     	;# 
  3946  0D8D                     	;# 
  3947  0D8E                     	;# 
  3948  0D8F                     	;# 
  3949  0D8F                     	;# 
  3950  0D90                     	;# 
  3951  0D91                     	;# 
  3952  0D92                     	;# 
  3953  0D92                     	;# 
  3954  0D93                     	;# 
  3955  0D94                     	;# 
  3956  0D95                     	;# 
  3957  0D95                     	;# 
  3958  0D96                     	;# 
  3959  0D97                     	;# 
  3960  0D98                     	;# 
  3961  0D99                     	;# 
  3962  0D9A                     	;# 
  3963  0D9B                     	;# 
  3964  0D9C                     	;# 
  3965  0D9D                     	;# 
  3966  0D9E                     	;# 
  3967  0D9E                     	;# 
  3968  0D9F                     	;# 
  3969  0DA0                     	;# 
  3970  0DA1                     	;# 
  3971  0DA1                     	;# 
  3972  0DA2                     	;# 
  3973  0DA3                     	;# 
  3974  0DA4                     	;# 
  3975  0DA4                     	;# 
  3976  0DA5                     	;# 
  3977  0DA6                     	;# 
  3978  0DA7                     	;# 
  3979  0DA7                     	;# 
  3980  0DA8                     	;# 
  3981  0DA9                     	;# 
  3982  0DAA                     	;# 
  3983  0DAB                     	;# 
  3984  0DAC                     	;# 
  3985  0DAD                     	;# 
  3986  0DAE                     	;# 
  3987  0DAF                     	;# 
  3988  0E0F                     	;# 
  3989  0E10                     	;# 
  3990  0E11                     	;# 
  3991  0E12                     	;# 
  3992  0E13                     	;# 
  3993  0E14                     	;# 
  3994  0E15                     	;# 
  3995  0E16                     	;# 
  3996  0E17                     	;# 
  3997  0E18                     	;# 
  3998  0E19                     	;# 
  3999  0E1A                     	;# 
  4000  0E1B                     	;# 
  4001  0E1C                     	;# 
  4002  0E1D                     	;# 
  4003  0E1E                     	;# 
  4004  0E1F                     	;# 
  4005  0E20                     	;# 
  4006  0E21                     	;# 
  4007  0E22                     	;# 
  4008  0E23                     	;# 
  4009  0E24                     	;# 
  4010  0E25                     	;# 
  4011  0E26                     	;# 
  4012  0E27                     	;# 
  4013  0E28                     	;# 
  4014  0E29                     	;# 
  4015  0E2A                     	;# 
  4016  0E2B                     	;# 
  4017  0E2C                     	;# 
  4018  0E2D                     	;# 
  4019  0E2E                     	;# 
  4020  0E90                     	;# 
  4021  0E91                     	;# 
  4022  0E92                     	;# 
  4023  0E94                     	;# 
  4024  0E95                     	;# 
  4025  0E9C                     	;# 
  4026  0E9D                     	;# 
  4027  0E9E                     	;# 
  4028  0E9F                     	;# 
  4029  0EA0                     	;# 
  4030  0EA1                     	;# 
  4031  0EA2                     	;# 
  4032  0EA3                     	;# 
  4033  0EA4                     	;# 
  4034  0EA5                     	;# 
  4035  0EA6                     	;# 
  4036  0EA7                     	;# 
  4037  0F0F                     	;# 
  4038  0F10                     	;# 
  4039  0F11                     	;# 
  4040  0F12                     	;# 
  4041  0F13                     	;# 
  4042  0F14                     	;# 
  4043  0F15                     	;# 
  4044  0F16                     	;# 
  4045  0F17                     	;# 
  4046  0F18                     	;# 
  4047  0F19                     	;# 
  4048  0F1A                     	;# 
  4049  0F1B                     	;# 
  4050  0F1C                     	;# 
  4051  0F1D                     	;# 
  4052  0F1E                     	;# 
  4053  0F1F                     	;# 
  4054  0F20                     	;# 
  4055  0F21                     	;# 
  4056  0F22                     	;# 
  4057  0F23                     	;# 
  4058  0F24                     	;# 
  4059  0F25                     	;# 
  4060  0F26                     	;# 
  4061  0F27                     	;# 
  4062  0F28                     	;# 
  4063  0F29                     	;# 
  4064  0F2A                     	;# 
  4065  0F2B                     	;# 
  4066  0F2C                     	;# 
  4067  0F2D                     	;# 
  4068  0F2E                     	;# 
  4069  0F2F                     	;# 
  4070  0F30                     	;# 
  4071  0F31                     	;# 
  4072  0F32                     	;# 
  4073  0F33                     	;# 
  4074  0F34                     	;# 
  4075  0F35                     	;# 
  4076  0F36                     	;# 
  4077  0F37                     	;# 
  4078  0FE4                     	;# 
  4079  0FE5                     	;# 
  4080  0FE6                     	;# 
  4081  0FE7                     	;# 
  4082  0FE8                     	;# 
  4083  0FE9                     	;# 
  4084  0FEA                     	;# 
  4085  0FEB                     	;# 
  4086  0FED                     	;# 
  4087  0FEE                     	;# 
  4088  0FEF                     	;# 
  4089  0000                     	;# 
  4090  0001                     	;# 
  4091  0002                     	;# 
  4092  0003                     	;# 
  4093  0004                     	;# 
  4094  0005                     	;# 
  4095  0006                     	;# 
  4096  0007                     	;# 
  4097  0008                     	;# 
  4098  0009                     	;# 
  4099  000A                     	;# 
  4100  000B                     	;# 
  4101  000C                     	;# 
  4102  000D                     	;# 
  4103  000E                     	;# 
  4104  0010                     	;# 
  4105  0011                     	;# 
  4106  0012                     	;# 
  4107  0013                     	;# 
  4108  0014                     	;# 
  4109  0015                     	;# 
  4110  0016                     	;# 
  4111  0016                     	;# 
  4112  0017                     	;# 
  4113  0018                     	;# 
  4114  0019                     	;# 
  4115  001A                     	;# 
  4116  001A                     	;# 
  4117  001B                     	;# 
  4118  001B                     	;# 
  4119  001C                     	;# 
  4120  001D                     	;# 
  4121  001E                     	;# 
  4122  001F                     	;# 
  4123  008C                     	;# 
  4124  008D                     	;# 
  4125  008E                     	;# 
  4126  0090                     	;# 
  4127  0091                     	;# 
  4128  0092                     	;# 
  4129  0093                     	;# 
  4130  0094                     	;# 
  4131  0095                     	;# 
  4132  0096                     	;# 
  4133  0098                     	;# 
  4134  0099                     	;# 
  4135  009A                     	;# 
  4136  009B                     	;# 
  4137  009B                     	;# 
  4138  009C                     	;# 
  4139  009D                     	;# 
  4140  009E                     	;# 
  4141  009F                     	;# 
  4142  010C                     	;# 
  4143  010D                     	;# 
  4144  010E                     	;# 
  4145  0111                     	;# 
  4146  0112                     	;# 
  4147  0113                     	;# 
  4148  0114                     	;# 
  4149  0115                     	;# 
  4150  0116                     	;# 
  4151  0117                     	;# 
  4152  0118                     	;# 
  4153  0119                     	;# 
  4154  011C                     	;# 
  4155  018C                     	;# 
  4156  018D                     	;# 
  4157  018E                     	;# 
  4158  0191                     	;# 
  4159  0191                     	;# 
  4160  0192                     	;# 
  4161  0193                     	;# 
  4162  0193                     	;# 
  4163  0194                     	;# 
  4164  0195                     	;# 
  4165  0196                     	;# 
  4166  0197                     	;# 
  4167  0199                     	;# 
  4168  0199                     	;# 
  4169  0199                     	;# 
  4170  019A                     	;# 
  4171  019A                     	;# 
  4172  019A                     	;# 
  4173  019B                     	;# 
  4174  019B                     	;# 
  4175  019B                     	;# 
  4176  019B                     	;# 
  4177  019B                     	;# 
  4178  019C                     	;# 
  4179  019C                     	;# 
  4180  019C                     	;# 
  4181  019D                     	;# 
  4182  019D                     	;# 
  4183  019D                     	;# 
  4184  019E                     	;# 
  4185  019E                     	;# 
  4186  019E                     	;# 
  4187  019F                     	;# 
  4188  019F                     	;# 
  4189  019F                     	;# 
  4190  019F                     	;# 
  4191  019F                     	;# 
  4192  020C                     	;# 
  4193  020D                     	;# 
  4194  020E                     	;# 
  4195  0211                     	;# 
  4196  0211                     	;# 
  4197  0212                     	;# 
  4198  0212                     	;# 
  4199  0213                     	;# 
  4200  0213                     	;# 
  4201  0214                     	;# 
  4202  0214                     	;# 
  4203  0215                     	;# 
  4204  0215                     	;# 
  4205  0215                     	;# 
  4206  0215                     	;# 
  4207  0216                     	;# 
  4208  0216                     	;# 
  4209  0217                     	;# 
  4210  0217                     	;# 
  4211  028C                     	;# 
  4212  028D                     	;# 
  4213  028E                     	;# 
  4214  0291                     	;# 
  4215  0291                     	;# 
  4216  0292                     	;# 
  4217  0293                     	;# 
  4218  0294                     	;# 
  4219  0298                     	;# 
  4220  0298                     	;# 
  4221  0299                     	;# 
  4222  029A                     	;# 
  4223  029B                     	;# 
  4224  029E                     	;# 
  4225  030C                     	;# 
  4226  030D                     	;# 
  4227  030E                     	;# 
  4228  038C                     	;# 
  4229  038D                     	;# 
  4230  038E                     	;# 
  4231  0391                     	;# 
  4232  0392                     	;# 
  4233  0393                     	;# 
  4234  0394                     	;# 
  4235  0395                     	;# 
  4236  0396                     	;# 
  4237  0397                     	;# 
  4238  0398                     	;# 
  4239  0399                     	;# 
  4240  040E                     	;# 
  4241  0413                     	;# 
  4242  0413                     	;# 
  4243  0414                     	;# 
  4244  0414                     	;# 
  4245  0415                     	;# 
  4246  0416                     	;# 
  4247  0417                     	;# 
  4248  0418                     	;# 
  4249  041A                     	;# 
  4250  041A                     	;# 
  4251  041B                     	;# 
  4252  041B                     	;# 
  4253  041C                     	;# 
  4254  041D                     	;# 
  4255  041E                     	;# 
  4256  041F                     	;# 
  4257  0493                     	;# 
  4258  0494                     	;# 
  4259  0495                     	;# 
  4260  0496                     	;# 
  4261  049A                     	;# 
  4262  049B                     	;# 
  4263  049C                     	;# 
  4264  049D                     	;# 
  4265  058C                     	;# 
  4266  058C                     	;# 
  4267  058D                     	;# 
  4268  058E                     	;# 
  4269  058E                     	;# 
  4270  058F                     	;# 
  4271  0590                     	;# 
  4272  0590                     	;# 
  4273  0591                     	;# 
  4274  0592                     	;# 
  4275  0592                     	;# 
  4276  0593                     	;# 
  4277  0594                     	;# 
  4278  0594                     	;# 
  4279  0595                     	;# 
  4280  0596                     	;# 
  4281  0596                     	;# 
  4282  0597                     	;# 
  4283  0598                     	;# 
  4284  0599                     	;# 
  4285  059A                     	;# 
  4286  059B                     	;# 
  4287  059B                     	;# 
  4288  059C                     	;# 
  4289  059D                     	;# 
  4290  060C                     	;# 
  4291  060C                     	;# 
  4292  060D                     	;# 
  4293  060E                     	;# 
  4294  060F                     	;# 
  4295  060F                     	;# 
  4296  0610                     	;# 
  4297  0611                     	;# 
  4298  0612                     	;# 
  4299  0613                     	;# 
  4300  0614                     	;# 
  4301  0617                     	;# 
  4302  0617                     	;# 
  4303  0618                     	;# 
  4304  0619                     	;# 
  4305  061A                     	;# 
  4306  061A                     	;# 
  4307  061B                     	;# 
  4308  061C                     	;# 
  4309  0691                     	;# 
  4310  0692                     	;# 
  4311  0693                     	;# 
  4312  0694                     	;# 
  4313  0695                     	;# 
  4314  0696                     	;# 
  4315  0697                     	;# 
  4316  0699                     	;# 
  4317  069A                     	;# 
  4318  0711                     	;# 
  4319  0712                     	;# 
  4320  0713                     	;# 
  4321  0714                     	;# 
  4322  0715                     	;# 
  4323  0718                     	;# 
  4324  0718                     	;# 
  4325  0719                     	;# 
  4326  071A                     	;# 
  4327  071A                     	;# 
  4328  071B                     	;# 
  4329  071C                     	;# 
  4330  071D                     	;# 
  4331  0791                     	;# 
  4332  0791                     	;# 
  4333  0792                     	;# 
  4334  0793                     	;# 
  4335  0793                     	;# 
  4336  0794                     	;# 
  4337  0795                     	;# 
  4338  0795                     	;# 
  4339  0796                     	;# 
  4340  0797                     	;# 
  4341  0797                     	;# 
  4342  0798                     	;# 
  4343  0799                     	;# 
  4344  079A                     	;# 
  4345  080C                     	;# 
  4346  080C                     	;# 
  4347  080D                     	;# 
  4348  080E                     	;# 
  4349  080E                     	;# 
  4350  080F                     	;# 
  4351  0810                     	;# 
  4352  0810                     	;# 
  4353  0811                     	;# 
  4354  0812                     	;# 
  4355  0812                     	;# 
  4356  0813                     	;# 
  4357  0814                     	;# 
  4358  0815                     	;# 
  4359  0816                     	;# 
  4360  0817                     	;# 
  4361  0818                     	;# 
  4362  0819                     	;# 
  4363  081A                     	;# 
  4364  081A                     	;# 
  4365  081B                     	;# 
  4366  081C                     	;# 
  4367  081C                     	;# 
  4368  081D                     	;# 
  4369  088C                     	;# 
  4370  088D                     	;# 
  4371  088E                     	;# 
  4372  088F                     	;# 
  4373  088F                     	;# 
  4374  0890                     	;# 
  4375  0891                     	;# 
  4376  0892                     	;# 
  4377  0893                     	;# 
  4378  0893                     	;# 
  4379  0894                     	;# 
  4380  0895                     	;# 
  4381  0896                     	;# 
  4382  0897                     	;# 
  4383  0897                     	;# 
  4384  0898                     	;# 
  4385  0899                     	;# 
  4386  0D8C                     	;# 
  4387  0D8C                     	;# 
  4388  0D8D                     	;# 
  4389  0D8E                     	;# 
  4390  0D8F                     	;# 
  4391  0D8F                     	;# 
  4392  0D90                     	;# 
  4393  0D91                     	;# 
  4394  0D92                     	;# 
  4395  0D92                     	;# 
  4396  0D93                     	;# 
  4397  0D94                     	;# 
  4398  0D95                     	;# 
  4399  0D95                     	;# 
  4400  0D96                     	;# 
  4401  0D97                     	;# 
  4402  0D98                     	;# 
  4403  0D99                     	;# 
  4404  0D9A                     	;# 
  4405  0D9B                     	;# 
  4406  0D9C                     	;# 
  4407  0D9D                     	;# 
  4408  0D9E                     	;# 
  4409  0D9E                     	;# 
  4410  0D9F                     	;# 
  4411  0DA0                     	;# 
  4412  0DA1                     	;# 
  4413  0DA1                     	;# 
  4414  0DA2                     	;# 
  4415  0DA3                     	;# 
  4416  0DA4                     	;# 
  4417  0DA4                     	;# 
  4418  0DA5                     	;# 
  4419  0DA6                     	;# 
  4420  0DA7                     	;# 
  4421  0DA7                     	;# 
  4422  0DA8                     	;# 
  4423  0DA9                     	;# 
  4424  0DAA                     	;# 
  4425  0DAB                     	;# 
  4426  0DAC                     	;# 
  4427  0DAD                     	;# 
  4428  0DAE                     	;# 
  4429  0DAF                     	;# 
  4430  0E0F                     	;# 
  4431  0E10                     	;# 
  4432  0E11                     	;# 
  4433  0E12                     	;# 
  4434  0E13                     	;# 
  4435  0E14                     	;# 
  4436  0E15                     	;# 
  4437  0E16                     	;# 
  4438  0E17                     	;# 
  4439  0E18                     	;# 
  4440  0E19                     	;# 
  4441  0E1A                     	;# 
  4442  0E1B                     	;# 
  4443  0E1C                     	;# 
  4444  0E1D                     	;# 
  4445  0E1E                     	;# 
  4446  0E1F                     	;# 
  4447  0E20                     	;# 
  4448  0E21                     	;# 
  4449  0E22                     	;# 
  4450  0E23                     	;# 
  4451  0E24                     	;# 
  4452  0E25                     	;# 
  4453  0E26                     	;# 
  4454  0E27                     	;# 
  4455  0E28                     	;# 
  4456  0E29                     	;# 
  4457  0E2A                     	;# 
  4458  0E2B                     	;# 
  4459  0E2C                     	;# 
  4460  0E2D                     	;# 
  4461  0E2E                     	;# 
  4462  0E90                     	;# 
  4463  0E91                     	;# 
  4464  0E92                     	;# 
  4465  0E94                     	;# 
  4466  0E95                     	;# 
  4467  0E9C                     	;# 
  4468  0E9D                     	;# 
  4469  0E9E                     	;# 
  4470  0E9F                     	;# 
  4471  0EA0                     	;# 
  4472  0EA1                     	;# 
  4473  0EA2                     	;# 
  4474  0EA3                     	;# 
  4475  0EA4                     	;# 
  4476  0EA5                     	;# 
  4477  0EA6                     	;# 
  4478  0EA7                     	;# 
  4479  0F0F                     	;# 
  4480  0F10                     	;# 
  4481  0F11                     	;# 
  4482  0F12                     	;# 
  4483  0F13                     	;# 
  4484  0F14                     	;# 
  4485  0F15                     	;# 
  4486  0F16                     	;# 
  4487  0F17                     	;# 
  4488  0F18                     	;# 
  4489  0F19                     	;# 
  4490  0F1A                     	;# 
  4491  0F1B                     	;# 
  4492  0F1C                     	;# 
  4493  0F1D                     	;# 
  4494  0F1E                     	;# 
  4495  0F1F                     	;# 
  4496  0F20                     	;# 
  4497  0F21                     	;# 
  4498  0F22                     	;# 
  4499  0F23                     	;# 
  4500  0F24                     	;# 
  4501  0F25                     	;# 
  4502  0F26                     	;# 
  4503  0F27                     	;# 
  4504  0F28                     	;# 
  4505  0F29                     	;# 
  4506  0F2A                     	;# 
  4507  0F2B                     	;# 
  4508  0F2C                     	;# 
  4509  0F2D                     	;# 
  4510  0F2E                     	;# 
  4511  0F2F                     	;# 
  4512  0F30                     	;# 
  4513  0F31                     	;# 
  4514  0F32                     	;# 
  4515  0F33                     	;# 
  4516  0F34                     	;# 
  4517  0F35                     	;# 
  4518  0F36                     	;# 
  4519  0F37                     	;# 
  4520  0FE4                     	;# 
  4521  0FE5                     	;# 
  4522  0FE6                     	;# 
  4523  0FE7                     	;# 
  4524  0FE8                     	;# 
  4525  0FE9                     	;# 
  4526  0FEA                     	;# 
  4527  0FEB                     	;# 
  4528  0FED                     	;# 
  4529  0FEE                     	;# 
  4530  0FEF                     	;# 
  4531                           
  4532                           	psect	idataBANK1
  4533  16AF                     __pidataBANK1:
  4534                           
  4535                           ;initializer for _text10
  4536  16AF  3420               	retlw	32
  4537  16B0  3420               	retlw	32
  4538  16B1  3430               	retlw	48
  4539  16B2  3430               	retlw	48
  4540  16B3  3430               	retlw	48
  4541  16B4  3430               	retlw	48
  4542  16B5  3420               	retlw	32
  4543  16B6  3420               	retlw	32
  4544  16B7  3420               	retlw	32
  4545  16B8  3430               	retlw	48
  4546  16B9  3430               	retlw	48
  4547  16BA  3430               	retlw	48
  4548  16BB  3430               	retlw	48
  4549  16BC  3420               	retlw	32
  4550  16BD  3420               	retlw	32
  4551  16BE  3420               	retlw	32
  4552  16BF  3400               	retlw	0
  4553                           
  4554                           	psect	idataBANK2
  4555  0919                     __pidataBANK2:
  4556                           
  4557                           ;initializer for _text9
  4558  0919  3420               	retlw	32
  4559  091A  3420               	retlw	32
  4560  091B  3450               	retlw	80
  4561  091C  346F               	retlw	111
  4562  091D  3474               	retlw	116
  4563  091E  3431               	retlw	49
  4564  091F  3420               	retlw	32
  4565  0920  3420               	retlw	32
  4566  0921  3420               	retlw	32
  4567  0922  3450               	retlw	80
  4568  0923  346F               	retlw	111
  4569  0924  3474               	retlw	116
  4570  0925  3432               	retlw	50
  4571  0926  3420               	retlw	32
  4572  0927  3420               	retlw	32
  4573  0928  3420               	retlw	32
  4574  0929  3400               	retlw	0
  4575                           
  4576                           ;initializer for _text6
  4577  092A  3420               	retlw	32
  4578  092B  3420               	retlw	32
  4579  092C  3420               	retlw	32
  4580  092D  3420               	retlw	32
  4581  092E  3420               	retlw	32
  4582  092F  3468               	retlw	104
  4583  0930  346F               	retlw	111
  4584  0931  3477               	retlw	119
  4585  0932  3464               	retlw	100
  4586  0933  3479               	retlw	121
  4587  0934  3420               	retlw	32
  4588  0935  3420               	retlw	32
  4589  0936  3420               	retlw	32
  4590  0937  3420               	retlw	32
  4591  0938  3420               	retlw	32
  4592  0939  3420               	retlw	32
  4593  093A  3400               	retlw	0
  4594                           
  4595                           ;initializer for _text7
  4596  093B  3420               	retlw	32
  4597  093C  3420               	retlw	32
  4598  093D  3420               	retlw	32
  4599  093E  3420               	retlw	32
  4600  093F  3420               	retlw	32
  4601  0940  3420               	retlw	32
  4602  0941  3420               	retlw	32
  4603  0942  3420               	retlw	32
  4604  0943  3420               	retlw	32
  4605  0944  3420               	retlw	32
  4606  0945  3420               	retlw	32
  4607  0946  3420               	retlw	32
  4608  0947  3420               	retlw	32
  4609  0948  3420               	retlw	32
  4610  0949  3420               	retlw	32
  4611  094A  3420               	retlw	32
  4612  094B  3400               	retlw	0
  4613                           
  4614                           ;initializer for _faultStr
  4615  094C  3420               	retlw	32
  4616  094D  3454               	retlw	84
  4617  094E  3443               	retlw	67
  4618  094F  3420               	retlw	32
  4619  0950  3446               	retlw	70
  4620  0951  3461               	retlw	97
  4621  0952  3475               	retlw	117
  4622  0953  346C               	retlw	108
  4623  0954  3474               	retlw	116
  4624  0955  3420               	retlw	32
  4625  0956  343D               	retlw	61
  4626  0957  3420               	retlw	32
  4627  0958  3420               	retlw	32
  4628  0959  3420               	retlw	32
  4629  095A  3420               	retlw	32
  4630  095B  3420               	retlw	32
  4631  095C  3400               	retlw	0
  4632                           
  4633                           	psect	idataBANK3
  4634  08A7                     __pidataBANK3:
  4635                           
  4636                           ;initializer for _text11
  4637  08A7  3420               	retlw	32
  4638  08A8  3420               	retlw	32
  4639  08A9  3454               	retlw	84
  4640  08AA  3465               	retlw	101
  4641  08AB  346D               	retlw	109
  4642  08AC  3470               	retlw	112
  4643  08AD  3420               	retlw	32
  4644  08AE  3420               	retlw	32
  4645  08AF  3443               	retlw	67
  4646  08B0  3420               	retlw	32
  4647  08B1  3420               	retlw	32
  4648  08B2  3420               	retlw	32
  4649  08B3  3420               	retlw	32
  4650  08B4  3420               	retlw	32
  4651  08B5  3420               	retlw	32
  4652  08B6  3420               	retlw	32
  4653  08B7  3400               	retlw	0
  4654                           
  4655                           ;initializer for _text5
  4656  08B8  3420               	retlw	32
  4657  08B9  3450               	retlw	80
  4658  08BA  346F               	retlw	111
  4659  08BB  3477               	retlw	119
  4660  08BC  3465               	retlw	101
  4661  08BD  3472               	retlw	114
  4662  08BE  3469               	retlw	105
  4663  08BF  346E               	retlw	110
  4664  08C0  3467               	retlw	103
  4665  08C1  3420               	retlw	32
  4666  08C2  3455               	retlw	85
  4667  08C3  3470               	retlw	112
  4668  08C4  342E               	retlw	46
  4669  08C5  342E               	retlw	46
  4670  08C6  342E               	retlw	46
  4671  08C7  3420               	retlw	32
  4672  08C8  3400               	retlw	0
  4673                           
  4674                           ;initializer for _text1
  4675  08C9  3420               	retlw	32
  4676  08CA  3420               	retlw	32
  4677  08CB  3420               	retlw	32
  4678  08CC  3420               	retlw	32
  4679  08CD  346A               	retlw	106
  4680  08CE  346F               	retlw	111
  4681  08CF  3468               	retlw	104
  4682  08D0  346E               	retlw	110
  4683  08D1  3473               	retlw	115
  4684  08D2  347A               	retlw	122
  4685  08D3  3479               	retlw	121
  4686  08D4  3420               	retlw	32
  4687  08D5  3420               	retlw	32
  4688  08D6  3420               	retlw	32
  4689  08D7  3420               	retlw	32
  4690  08D8  3420               	retlw	32
  4691  08D9  3400               	retlw	0
  4692                           
  4693                           	psect	idataBANK4
  4694  0874                     __pidataBANK4:
  4695                           
  4696                           ;initializer for _text8
  4697  0874  3420               	retlw	32
  4698  0875  3420               	retlw	32
  4699  0876  3447               	retlw	71
  4700  0877  3472               	retlw	114
  4701  0878  3465               	retlw	101
  4702  0879  3465               	retlw	101
  4703  087A  346E               	retlw	110
  4704  087B  3420               	retlw	32
  4705  087C  3442               	retlw	66
  4706  087D  3475               	retlw	117
  4707  087E  3474               	retlw	116
  4708  087F  3474               	retlw	116
  4709  0880  346F               	retlw	111
  4710  0881  346E               	retlw	110
  4711  0882  3420               	retlw	32
  4712  0883  3420               	retlw	32
  4713  0884  3400               	retlw	0
  4714                           
  4715                           ;initializer for _text3
  4716  0885  3420               	retlw	32
  4717  0886  3420               	retlw	32
  4718  0887  3420               	retlw	32
  4719  0888  3457               	retlw	87
  4720  0889  3461               	retlw	97
  4721  088A  3472               	retlw	114
  4722  088B  346D               	retlw	109
  4723  088C  3469               	retlw	105
  4724  088D  346E               	retlw	110
  4725  088E  3467               	retlw	103
  4726  088F  3420               	retlw	32
  4727  0890  3420               	retlw	32
  4728  0891  3455               	retlw	85
  4729  0892  3470               	retlw	112
  4730  0893  3420               	retlw	32
  4731  0894  3420               	retlw	32
  4732  0895  3400               	retlw	0
  4733                           
  4734                           ;initializer for _text2
  4735  0896  3420               	retlw	32
  4736  0897  3420               	retlw	32
  4737  0898  3445               	retlw	69
  4738  0899  346E               	retlw	110
  4739  089A  3467               	retlw	103
  4740  089B  3469               	retlw	105
  4741  089C  346E               	retlw	110
  4742  089D  3465               	retlw	101
  4743  089E  3465               	retlw	101
  4744  089F  3472               	retlw	114
  4745  08A0  3469               	retlw	105
  4746  08A1  346E               	retlw	110
  4747  08A2  3467               	retlw	103
  4748  08A3  3420               	retlw	32
  4749  08A4  3420               	retlw	32
  4750  08A5  3420               	retlw	32
  4751  08A6  3400               	retlw	0
  4752  000B                     _INTCONbits	set	11
  4753  0011                     _PIR2bits	set	17
  4754  001B                     _PR2	set	27
  4755  001A                     _TMR2	set	26
  4756  001C                     _T2CONbits	set	28
  4757  001F                     _T2RSTbits	set	31
  4758  001D                     _T2HLTbits	set	29
  4759  0010                     _PIR1bits	set	16
  4760  001A                     _T2TMR	set	26
  4761  001B                     _T2PR	set	27
  4762  001F                     _T2RST	set	31
  4763  001D                     _T2HLT	set	29
  4764  001E                     _T2CLKCON	set	30
  4765  001C                     _T2CON	set	28
  4766  005F                     _GIE	set	95
  4767  0091                     _PIE2bits	set	145
  4768  009D                     _ADCON0bits	set	157
  4769  009C                     _ADRESH	set	156
  4770  009B                     _ADRESL	set	155
  4771  009F                     _ADCON2	set	159
  4772  009E                     _ADCON1	set	158
  4773  009D                     _ADCON0	set	157
  4774  0095                     _OPTION_REGbits	set	149
  4775  008E                     _TRISC	set	142
  4776  008D                     _TRISB	set	141
  4777  008C                     _TRISA	set	140
  4778  0098                     _OSCTUNE	set	152
  4779  0099                     _OSCCON	set	153
  4780  010E                     _LATC	set	270
  4781  010D                     _LATB	set	269
  4782  010C                     _LATA	set	268
  4783  0877                     _LATC7	set	2167
  4784  086F                     _LATB7	set	2159
  4785  0876                     _LATC6	set	2166
  4786  018C                     _ANSELA	set	396
  4787  018D                     _ANSELB	set	397
  4788  018E                     _ANSELC	set	398
  4789  0211                     _SSPBUF	set	529
  4790  0214                     _SSP1STATbits	set	532
  4791  0211                     _SSP1BUF	set	529
  4792  020E                     _WPUC	set	526
  4793  020C                     _WPUA	set	524
  4794  020D                     _WPUB	set	525
  4795  0212                     _SSP1ADD	set	530
  4796  0215                     _SSP1CON1	set	533
  4797  0214                     _SSP1STAT	set	532
  4798  10A0                     _BF	set	4256
  4799  029E                     _CCPTMRSbits	set	670
  4800  028E                     _ODCONC	set	654
  4801  028D                     _ODCONB	set	653
  4802  028C                     _ODCONA	set	652
  4803  0414                     _PR4	set	1044
  4804  0413                     _TMR4	set	1043
  4805  0415                     _T4CONbits	set	1045
  4806  0418                     _T4RSTbits	set	1048
  4807  0416                     _T4HLTbits	set	1046
  4808  0413                     _T4TMR	set	1043
  4809  0414                     _T4PR	set	1044
  4810  0418                     _T4RST	set	1048
  4811  0416                     _T4HLT	set	1046
  4812  0417                     _T4CLKCON	set	1047
  4813  0415                     _T4CON	set	1045
  4814  061A                     _PWM4DCL	set	1562
  4815  061B                     _PWM4DCH	set	1563
  4816  061C                     _PWM4CON	set	1564
  4817  0617                     _PWM3DCL	set	1559
  4818  0618                     _PWM3DCH	set	1560
  4819  0619                     _PWM3CON	set	1561
  4820  0E1B                     _T4PPS	set	3611
  4821  0E20                     _SSPCLKPPS	set	3616
  4822  0E21                     _SSPDATPPS	set	3617
  4823  0E18                     _T2PPS	set	3608
  4824  0E0F                     _PPSLOCKbits	set	3599
  4825  0E0F                     _PPSLOCK	set	3599
  4826  0EA1                     _RC1PPS	set	3745
  4827  0E9D                     _RB5PPS	set	3741
  4828  0E9E                     _RB6PPS	set	3742
  4829  0EA0                     _RC0PPS	set	3744
  4830                           
  4831                           	psect	stringtext1
  4832  1800                     __pstringtext1:
  4833  1800                     STR_3:
  4834  1800  3420               	retlw	32	;' '
  4835  1801  3420               	retlw	32	;' '
  4836  1802  3425               	retlw	37	;'%'
  4837  1803  3464               	retlw	100	;'d'
  4838  1804  3420               	retlw	32	;' '
  4839  1805  3420               	retlw	32	;' '
  4840  1806  3420               	retlw	32	;' '
  4841  1807  3425               	retlw	37	;'%'
  4842  1808  3464               	retlw	100	;'d'
  4843  1809  3420               	retlw	32	;' '
  4844  180A  3420               	retlw	32	;' '
  4845  180B  3420               	retlw	32	;' '
  4846  180C  3425               	retlw	37	;'%'
  4847  180D  3464               	retlw	100	;'d'
  4848  180E  3420               	retlw	32	;' '
  4849  180F  3420               	retlw	32	;' '
  4850  1810  3420               	retlw	32	;' '
  4851  1811  3425               	retlw	37	;'%'
  4852  1812  3464               	retlw	100	;'d'
  4853  1813  3420               	retlw	32	;' '
  4854  1814  3420               	retlw	32	;' '
  4855  1815  3420               	retlw	32	;' '
  4856  1816  340A               	retlw	10
  4857  1817  3400               	retlw	0
  4858                           
  4859                           	psect	stringtext2
  4860  1818                     __pstringtext2:
  4861  1818                     STR_2:
  4862  1818  3464               	retlw	100	;'d'
  4863  1819  3469               	retlw	105	;'i'
  4864  181A  3467               	retlw	103	;'g'
  4865  181B  3431               	retlw	49	;'1'
  4866  181C  3420               	retlw	32	;' '
  4867  181D  3464               	retlw	100	;'d'
  4868  181E  3469               	retlw	105	;'i'
  4869  181F  3467               	retlw	103	;'g'
  4870  1820  3432               	retlw	50	;'2'
  4871  1821  3420               	retlw	32	;' '
  4872  1822  3464               	retlw	100	;'d'
  4873  1823  3469               	retlw	105	;'i'
  4874  1824  3467               	retlw	103	;'g'
  4875  1825  3433               	retlw	51	;'3'
  4876  1826  3420               	retlw	32	;' '
  4877  1827  3464               	retlw	100	;'d'
  4878  1828  3469               	retlw	105	;'i'
  4879  1829  3467               	retlw	103	;'g'
  4880  182A  3434               	retlw	52	;'4'
  4881  182B  340A               	retlw	10
  4882  182C  3400               	retlw	0
  4883                           
  4884                           	psect	stringtext3
  4885  182D                     __pstringtext3:
  4886  182D                     STR_1:
  4887  182D  346E               	retlw	110	;'n'
  4888  182E  3475               	retlw	117	;'u'
  4889  182F  346D               	retlw	109	;'m'
  4890  1830  343D               	retlw	61	;'='
  4891  1831  3420               	retlw	32	;' '
  4892  1832  3425               	retlw	37	;'%'
  4893  1833  3464               	retlw	100	;'d'
  4894  1834  340A               	retlw	10
  4895  1835  3400               	retlw	0
  4896                           
  4897                           	psect	stringtext4
  4898  0000                     __pstringtext4:
  4899                           
  4900                           	psect	cinit
  4901  001B                     start_initialization:	
  4902                           ; #config settings
  4903                           
  4904  001B                     __initialization:
  4905                           
  4906                           ; Initialize objects allocated to BANK1
  4907  001B  30AF               	movlw	low __pidataBANK1
  4908  001C  0084               	movwf	4
  4909  001D  3096               	movlw	(high __pidataBANK1)| (0+128)
  4910  001E  0085               	movwf	5
  4911  001F  30DD               	movlw	low __pdataBANK1
  4912  0020  0086               	movwf	6
  4913  0021  3000               	movlw	high __pdataBANK1
  4914  0022  0087               	movwf	7
  4915  0023  3011               	movlw	17
  4916  0024  3196  265C  3180   	fcall	init_ram
  4917                           
  4918                           ; Initialize objects allocated to BANK2
  4919  0027  3019               	movlw	low __pidataBANK2
  4920  0028  0084               	movwf	4
  4921  0029  3089               	movlw	(high __pidataBANK2)| (0+128)
  4922  002A  0085               	movwf	5
  4923  002B  3020               	movlw	low __pdataBANK2
  4924  002C  0086               	movwf	6
  4925  002D  3001               	movlw	high __pdataBANK2
  4926  002E  0087               	movwf	7
  4927  002F  3044               	movlw	68
  4928  0030  3196  265C  3180   	fcall	init_ram
  4929                           
  4930                           ; Initialize objects allocated to BANK3
  4931  0033  30A7               	movlw	low __pidataBANK3
  4932  0034  0084               	movwf	4
  4933  0035  3088               	movlw	(high __pidataBANK3)| (0+128)
  4934  0036  0085               	movwf	5
  4935  0037  30A0               	movlw	low __pdataBANK3
  4936  0038  0086               	movwf	6
  4937  0039  3001               	movlw	high __pdataBANK3
  4938  003A  0087               	movwf	7
  4939  003B  3033               	movlw	51
  4940  003C  3196  265C  3180   	fcall	init_ram
  4941                           
  4942                           ; Initialize objects allocated to BANK4
  4943  003F  3074               	movlw	low __pidataBANK4
  4944  0040  0084               	movwf	4
  4945  0041  3088               	movlw	(high __pidataBANK4)| (0+128)
  4946  0042  0085               	movwf	5
  4947  0043  3020               	movlw	low __pdataBANK4
  4948  0044  0086               	movwf	6
  4949  0045  3002               	movlw	high __pdataBANK4
  4950  0046  0087               	movwf	7
  4951  0047  3033               	movlw	51
  4952  0048  3196  265C  3180   	fcall	init_ram
  4953                           
  4954                           ; Clear objects allocated to BANK1
  4955  004B  30C5               	movlw	low __pbssBANK1
  4956  004C  0084               	movwf	4
  4957  004D  3000               	movlw	high __pbssBANK1
  4958  004E  0085               	movwf	5
  4959  004F  3018               	movlw	24
  4960  0050  3196  2656  3180   	fcall	clear_ram0
  4961                           
  4962                           ; Clear objects allocated to BANK3
  4963  0053  30D3               	movlw	low __pbssBANK3
  4964  0054  0084               	movwf	4
  4965  0055  3001               	movlw	high __pbssBANK3
  4966  0056  0085               	movwf	5
  4967  0057  3010               	movlw	16
  4968  0058  3196  2656  3180   	fcall	clear_ram0
  4969                           
  4970                           ; Clear objects allocated to BANK5
  4971  005B  30A0               	movlw	low __pbssBANK5
  4972  005C  0084               	movwf	4
  4973  005D  3002               	movlw	high __pbssBANK5
  4974  005E  0085               	movwf	5
  4975  005F  3020               	movlw	32
  4976  0060  3196  2656  3180   	fcall	clear_ram0
  4977  0063                     end_of_initialization:	
  4978                           ;End of C runtime variable initialization code
  4979                           
  4980  0063                     __end_of__initialization:
  4981  0063  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4982  0064  0020               	movlb	0
  4983  0065  3180  2867         	ljmp	_main	;jump to C main() function
  4984                           
  4985                           	psect	bssBANK1
  4986  00C5                     __pbssBANK1:
  4987  00C5                     _temp_float:
  4988  00C5                     	ds	4
  4989  00C9                     _TC_data:
  4990  00C9                     	ds	4
  4991  00CD                     _milliTime:
  4992  00CD                     	ds	4
  4993  00D1                     _nout:
  4994  00D1                     	ds	2
  4995  00D3                     _width:
  4996  00D3                     	ds	2
  4997  00D5                     _prec:
  4998  00D5                     	ds	2
  4999  00D7                     _flags:
  5000  00D7                     	ds	2
  5001  00D9                     _TMR4_InterruptHandler:
  5002  00D9                     	ds	2
  5003  00DB                     _byteVal:
  5004  00DB                     	ds	1
  5005  00DC                     _dummy:
  5006  00DC                     	ds	1
  5007                           
  5008                           	psect	dataBANK1
  5009  00DD                     __pdataBANK1:
  5010  00DD                     _text10:
  5011  00DD                     	ds	17
  5012                           
  5013                           	psect	dataBANK2
  5014  0120                     __pdataBANK2:
  5015  0120                     _text9:
  5016  0120                     	ds	17
  5017  0131                     _text6:
  5018  0131                     	ds	17
  5019  0142                     _text7:
  5020  0142                     	ds	17
  5021  0153                     _faultStr:
  5022  0153                     	ds	17
  5023                           
  5024                           	psect	bssBANK3
  5025  01D3                     __pbssBANK3:
  5026  01D3                     _text12:
  5027  01D3                     	ds	16
  5028                           
  5029                           	psect	dataBANK3
  5030  01A0                     __pdataBANK3:
  5031  01A0                     _text11:
  5032  01A0                     	ds	17
  5033  01B1                     _text5:
  5034  01B1                     	ds	17
  5035  01C2                     _text1:
  5036  01C2                     	ds	17
  5037                           
  5038                           	psect	dataBANK4
  5039  0220                     __pdataBANK4:
  5040  0220                     _text8:
  5041  0220                     	ds	17
  5042  0231                     _text3:
  5043  0231                     	ds	17
  5044  0242                     _text2:
  5045  0242                     	ds	17
  5046                           
  5047                           	psect	bssBANK5
  5048  02A0                     __pbssBANK5:
  5049  02A0                     _dbuf:
  5050  02A0                     	ds	32
  5051                           
  5052                           	psect	inittext
  5053  165C                     init_ram:
  5054  165C  00FE               	movwf	btemp
  5055  165D                     initloop:
  5056  165D  0012               	moviw fsr0++
  5057  165E  001E               	movwi fsr1++
  5058  165F  0BFE               	decfsz	btemp,f
  5059  1660  2E5D               	goto	initloop
  5060  1661  3400               	retlw	0
  5061                           
  5062                           	psect	clrtext
  5063  1656                     clear_ram0:	
  5064                           ;	Called with FSR0 containing the base address, and
  5065                           ;	WREG with the size to clear
  5066                           
  5067  1656  0064               	clrwdt	;clear the watchdog before getting into this loop
  5068  1657                     clrloop0:
  5069  1657  0180               	clrf	0	;clear RAM location pointed to by FSR
  5070  1658  3101               	addfsr 0,1
  5071  1659  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5072  165A  2E57               	goto	clrloop0	;have we reached the end yet?
  5073  165B  3400               	retlw	0	;all done for this memory range, return
  5074                           
  5075                           	psect	cstackBANK1
  5076  00A0                     __pcstackBANK1:
  5077  00A0                     	ds	2
  5078  00A2                     printf@ap:
  5079                           
  5080                           ; 1 bytes @ 0x2
  5081  00A2                     	ds	1
  5082  00A3                     ?_stuffIntToCharsBuf:
  5083  00A3                     stuffIntToCharsBuf@num:	
  5084                           ; 1 bytes @ 0x3
  5085                           
  5086                           
  5087                           ; 2 bytes @ 0x3
  5088  00A3                     	ds	2
  5089  00A5                     stuffIntToCharsBuf@buf:
  5090                           
  5091                           ; 1 bytes @ 0x5
  5092  00A5                     	ds	1
  5093  00A6                     stuffIntToCharsBuf@pos:
  5094                           
  5095                           ; 2 bytes @ 0x6
  5096  00A6                     	ds	2
  5097  00A8                     ??_stuffIntToCharsBuf:
  5098                           
  5099                           ; 1 bytes @ 0x8
  5100  00A8                     	ds	3
  5101  00AB                     stuffIntToCharsBuf@dig4:
  5102                           
  5103                           ; 2 bytes @ 0xB
  5104  00AB                     	ds	2
  5105  00AD                     stuffIntToCharsBuf@dig1:
  5106                           
  5107                           ; 2 bytes @ 0xD
  5108  00AD                     	ds	2
  5109  00AF                     stuffIntToCharsBuf@dig2:
  5110                           
  5111                           ; 2 bytes @ 0xF
  5112  00AF                     	ds	2
  5113  00B1                     stuffIntToCharsBuf@dig3:
  5114                           
  5115                           ; 2 bytes @ 0x11
  5116  00B1                     	ds	2
  5117  00B3                     stuffIntToCharsBuf@neg:
  5118                           
  5119                           ; 2 bytes @ 0x13
  5120  00B3                     	ds	2
  5121  00B5                     ??_main:
  5122                           
  5123                           ; 1 bytes @ 0x15
  5124  00B5                     	ds	4
  5125  00B9                     main@fault:
  5126                           
  5127                           ; 1 bytes @ 0x19
  5128  00B9                     	ds	1
  5129  00BA                     main@fault_type:
  5130                           
  5131                           ; 1 bytes @ 0x1A
  5132  00BA                     	ds	1
  5133  00BB                     main@upper16:
  5134                           
  5135                           ; 2 bytes @ 0x1B
  5136  00BB                     	ds	2
  5137  00BD                     main@lower16:
  5138                           
  5139                           ; 2 bytes @ 0x1D
  5140  00BD                     	ds	2
  5141  00BF                     main@adc_value0:
  5142                           
  5143                           ; 2 bytes @ 0x1F
  5144  00BF                     	ds	2
  5145  00C1                     main@adc_value1:
  5146                           
  5147                           ; 2 bytes @ 0x21
  5148  00C1                     	ds	2
  5149  00C3                     main@i:
  5150                           
  5151                           ; 2 bytes @ 0x23
  5152  00C3                     	ds	2
  5153                           
  5154                           	psect	cstackCOMMON
  5155  0070                     __pcstackCOMMON:
  5156  0070                     ?_PIN_MANAGER_Initialize:
  5157  0070                     ??_PIN_MANAGER_Initialize:	
  5158                           ; 1 bytes @ 0x0
  5159                           
  5160  0070                     ?_OSCILLATOR_Initialize:	
  5161                           ; 1 bytes @ 0x0
  5162                           
  5163  0070                     ??_OSCILLATOR_Initialize:	
  5164                           ; 1 bytes @ 0x0
  5165                           
  5166  0070                     ?_SPI_Initialize:	
  5167                           ; 1 bytes @ 0x0
  5168                           
  5169  0070                     ??_SPI_Initialize:	
  5170                           ; 1 bytes @ 0x0
  5171                           
  5172  0070                     ?_initDisplay:	
  5173                           ; 1 bytes @ 0x0
  5174                           
  5175  0070                     ?_ADC_Initialize:	
  5176                           ; 1 bytes @ 0x0
  5177                           
  5178  0070                     ??_ADC_Initialize:	
  5179                           ; 1 bytes @ 0x0
  5180                           
  5181  0070                     ?_PWM4_Initialize:	
  5182                           ; 1 bytes @ 0x0
  5183                           
  5184  0070                     ??_PWM4_Initialize:	
  5185                           ; 1 bytes @ 0x0
  5186                           
  5187  0070                     ?_TMR4_Initialize:	
  5188                           ; 1 bytes @ 0x0
  5189                           
  5190  0070                     ?_PWM3_Initialize:	
  5191                           ; 1 bytes @ 0x0
  5192                           
  5193  0070                     ??_PWM3_Initialize:	
  5194                           ; 1 bytes @ 0x0
  5195                           
  5196  0070                     ?_TMR2_Initialize:	
  5197                           ; 1 bytes @ 0x0
  5198                           
  5199  0070                     ??_TMR2_Initialize:	
  5200                           ; 1 bytes @ 0x0
  5201                           
  5202  0070                     ?_TMR2_Start:	
  5203                           ; 1 bytes @ 0x0
  5204                           
  5205  0070                     ??_TMR2_Start:	
  5206                           ; 1 bytes @ 0x0
  5207                           
  5208  0070                     ?_command:	
  5209                           ; 1 bytes @ 0x0
  5210                           
  5211  0070                     ?_dataCMD:	
  5212                           ; 1 bytes @ 0x0
  5213                           
  5214  0070                     ?_initOLED:	
  5215                           ; 1 bytes @ 0x0
  5216                           
  5217  0070                     ?_TMR4_SetInterruptHandler:	
  5218                           ; 1 bytes @ 0x0
  5219                           
  5220  0070                     ?_TMR4_DefaultInterruptHandler:	
  5221                           ; 1 bytes @ 0x0
  5222                           
  5223  0070                     ??_TMR4_DefaultInterruptHandler:	
  5224                           ; 1 bytes @ 0x0
  5225                           
  5226  0070                     ?_TMR4_Start:	
  5227                           ; 1 bytes @ 0x0
  5228                           
  5229  0070                     ??_TMR4_Start:	
  5230                           ; 1 bytes @ 0x0
  5231                           
  5232  0070                     ?_TMR4_CallBack:	
  5233                           ; 1 bytes @ 0x0
  5234                           
  5235  0070                     ??_TMR4_CallBack:	
  5236                           ; 1 bytes @ 0x0
  5237                           
  5238  0070                     ?_putch:	
  5239                           ; 1 bytes @ 0x0
  5240                           
  5241  0070                     ??_putch:	
  5242                           ; 1 bytes @ 0x0
  5243                           
  5244  0070                     ?_SYSTEM_Initialize:	
  5245                           ; 1 bytes @ 0x0
  5246                           
  5247  0070                     ?_PWM3_LoadDutyValue:	
  5248                           ; 1 bytes @ 0x0
  5249                           
  5250  0070                     ?_PWM4_LoadDutyValue:	
  5251                           ; 1 bytes @ 0x0
  5252                           
  5253  0070                     ?_main:	
  5254                           ; 1 bytes @ 0x0
  5255                           
  5256  0070                     ?_spi_transfer:	
  5257                           ; 1 bytes @ 0x0
  5258                           
  5259  0070                     ??_spi_transfer:	
  5260                           ; 1 bytes @ 0x0
  5261                           
  5262  0070                     ?_spi_write:	
  5263                           ; 1 bytes @ 0x0
  5264                           
  5265  0070                     ??_spi_write:	
  5266                           ; 1 bytes @ 0x0
  5267                           
  5268  0070                     ?_TMR4_ISR:	
  5269                           ; 1 bytes @ 0x0
  5270                           
  5271  0070                     ??_TMR4_ISR:	
  5272                           ; 1 bytes @ 0x0
  5273                           
  5274  0070                     ?_INTERRUPT_InterruptManager:	
  5275                           ; 1 bytes @ 0x0
  5276                           
  5277  0070                     ??_INTERRUPT_InterruptManager:	
  5278                           ; 1 bytes @ 0x0
  5279                           
  5280  0070                     ??___aodiv:	
  5281                           ; 1 bytes @ 0x0
  5282                           
  5283  0070                     ??___aomod:	
  5284                           ; 1 bytes @ 0x0
  5285                           
  5286  0070                     ?_fputc:	
  5287                           ; 1 bytes @ 0x0
  5288                           
  5289  0070                     ?_strlen:	
  5290                           ; 2 bytes @ 0x0
  5291                           
  5292  0070                     ?_ADC_GetConversion:	
  5293                           ; 2 bytes @ 0x0
  5294                           
  5295  0070                     ?___wmul:	
  5296                           ; 2 bytes @ 0x0
  5297                           
  5298  0070                     ?___awdiv:	
  5299                           ; 2 bytes @ 0x0
  5300                           
  5301  0070                     ?___fltol:	
  5302                           ; 2 bytes @ 0x0
  5303                           
  5304  0070                     ?___xxtofl:	
  5305                           ; 4 bytes @ 0x0
  5306                           
  5307  0070                     PIN_MANAGER_Initialize@state:	
  5308                           ; 4 bytes @ 0x0
  5309                           
  5310  0070                     spi_transfer@data:	
  5311                           ; 1 bytes @ 0x0
  5312                           
  5313  0070                     putch@c:	
  5314                           ; 1 bytes @ 0x0
  5315                           
  5316  0070                     PWM3_LoadDutyValue@dutyValue:	
  5317                           ; 1 bytes @ 0x0
  5318                           
  5319  0070                     PWM4_LoadDutyValue@dutyValue:	
  5320                           ; 2 bytes @ 0x0
  5321                           
  5322  0070                     TMR4_SetInterruptHandler@InterruptHandler:	
  5323                           ; 2 bytes @ 0x0
  5324                           
  5325  0070                     ___wmul@multiplier:	
  5326                           ; 2 bytes @ 0x0
  5327                           
  5328  0070                     ___awdiv@divisor:	
  5329                           ; 2 bytes @ 0x0
  5330                           
  5331  0070                     fputc@c:	
  5332                           ; 2 bytes @ 0x0
  5333                           
  5334  0070                     ___fltol@f1:	
  5335                           ; 2 bytes @ 0x0
  5336                           
  5337  0070                     ___xxtofl@val:	
  5338                           ; 4 bytes @ 0x0
  5339                           
  5340                           
  5341                           ; 4 bytes @ 0x0
  5342  0070                     	ds	1
  5343  0071                     ?_spi_read_32bits:
  5344  0071                     spi_write@spiByte:	
  5345                           ; 4 bytes @ 0x1
  5346                           
  5347  0071                     ___aodiv@counter:	
  5348                           ; 1 bytes @ 0x1
  5349                           
  5350  0071                     ___aomod@counter:	
  5351                           ; 1 bytes @ 0x1
  5352                           
  5353                           
  5354                           ; 1 bytes @ 0x1
  5355  0071                     	ds	1
  5356  0072                     ??_TMR4_Initialize:
  5357  0072                     ??_command:	
  5358                           ; 1 bytes @ 0x2
  5359                           
  5360  0072                     ??_dataCMD:	
  5361                           ; 1 bytes @ 0x2
  5362                           
  5363  0072                     ??_TMR4_SetInterruptHandler:	
  5364                           ; 1 bytes @ 0x2
  5365                           
  5366  0072                     ??_strlen:	
  5367                           ; 1 bytes @ 0x2
  5368                           
  5369  0072                     ??_ADC_GetConversion:	
  5370                           ; 1 bytes @ 0x2
  5371                           
  5372  0072                     ??_PWM3_LoadDutyValue:	
  5373                           ; 1 bytes @ 0x2
  5374                           
  5375  0072                     ??_PWM4_LoadDutyValue:	
  5376                           ; 1 bytes @ 0x2
  5377                           
  5378  0072                     ___aodiv@sign:	
  5379                           ; 1 bytes @ 0x2
  5380                           
  5381  0072                     ___aomod@sign:	
  5382                           ; 1 bytes @ 0x2
  5383                           
  5384  0072                     fputc@fp:	
  5385                           ; 1 bytes @ 0x2
  5386                           
  5387  0072                     ___wmul@multiplicand:	
  5388                           ; 1 bytes @ 0x2
  5389                           
  5390  0072                     ___awdiv@dividend:	
  5391                           ; 2 bytes @ 0x2
  5392                           
  5393                           
  5394                           ; 2 bytes @ 0x2
  5395  0072                     	ds	1
  5396  0073                     ??_fputc:
  5397  0073                     ?_abs:	
  5398                           ; 1 bytes @ 0x3
  5399                           
  5400  0073                     ADC_GetConversion@channel:	
  5401                           ; 2 bytes @ 0x3
  5402                           
  5403  0073                     strlen@a:	
  5404                           ; 1 bytes @ 0x3
  5405                           
  5406  0073                     abs@a:	
  5407                           ; 1 bytes @ 0x3
  5408                           
  5409  0073                     ___aodiv@quotient:	
  5410                           ; 2 bytes @ 0x3
  5411                           
  5412                           
  5413                           ; 8 bytes @ 0x3
  5414  0073                     	ds	1
  5415  0074                     ?_setMotorSpeed:
  5416  0074                     ??___wmul:	
  5417                           ; 1 bytes @ 0x4
  5418                           
  5419  0074                     ??___awdiv:	
  5420                           ; 1 bytes @ 0x4
  5421                           
  5422  0074                     ??___fltol:	
  5423                           ; 1 bytes @ 0x4
  5424                           
  5425  0074                     ??___xxtofl:	
  5426                           ; 1 bytes @ 0x4
  5427                           
  5428  0074                     command@bit0:	
  5429                           ; 1 bytes @ 0x4
  5430                           
  5431  0074                     dataCMD@bit0:	
  5432                           ; 1 bytes @ 0x4
  5433                           
  5434  0074                     strlen@s:	
  5435                           ; 1 bytes @ 0x4
  5436                           
  5437  0074                     setMotorSpeed@num:	
  5438                           ; 1 bytes @ 0x4
  5439                           
  5440  0074                     ___wmul@product:	
  5441                           ; 2 bytes @ 0x4
  5442                           
  5443                           
  5444                           ; 2 bytes @ 0x4
  5445  0074                     	ds	1
  5446  0075                     ??_spi_read_32bits:
  5447  0075                     ??_abs:	
  5448                           ; 1 bytes @ 0x5
  5449                           
  5450  0075                     command@s:	
  5451                           ; 1 bytes @ 0x5
  5452                           
  5453  0075                     dataCMD@s:	
  5454                           ; 1 bytes @ 0x5
  5455                           
  5456  0075                     ___awdiv@counter:	
  5457                           ; 1 bytes @ 0x5
  5458                           
  5459                           
  5460                           ; 1 bytes @ 0x5
  5461  0075                     	ds	1
  5462  0076                     ___awdiv@sign:
  5463  0076                     setMotorSpeed@motorNum:	
  5464                           ; 1 bytes @ 0x6
  5465                           
  5466  0076                     command@i:	
  5467                           ; 2 bytes @ 0x6
  5468                           
  5469  0076                     dataCMD@i:	
  5470                           ; 2 bytes @ 0x6
  5471                           
  5472                           
  5473                           ; 2 bytes @ 0x6
  5474  0076                     	ds	1
  5475  0077                     ___awdiv@quotient:
  5476                           
  5477                           ; 2 bytes @ 0x7
  5478  0077                     	ds	1
  5479  0078                     ??_setMotorSpeed:
  5480  0078                     ?_fputs:	
  5481                           ; 1 bytes @ 0x8
  5482                           
  5483  0078                     command@sendByte:	
  5484                           ; 2 bytes @ 0x8
  5485                           
  5486  0078                     dataCMD@sendByte:	
  5487                           ; 1 bytes @ 0x8
  5488                           
  5489  0078                     ___xxtofl@sign:	
  5490                           ; 1 bytes @ 0x8
  5491                           
  5492  0078                     fputs@fp:	
  5493                           ; 1 bytes @ 0x8
  5494                           
  5495                           
  5496                           ; 1 bytes @ 0x8
  5497  0078                     	ds	1
  5498  0079                     ?_reportfault:
  5499  0079                     ?_printByteValue:	
  5500                           ; 1 bytes @ 0x9
  5501                           
  5502  0079                     ??_initOLED:	
  5503                           ; 1 bytes @ 0x9
  5504                           
  5505  0079                     ??_fputs:	
  5506                           ; 1 bytes @ 0x9
  5507                           
  5508  0079                     printByteValue@byteVal:	
  5509                           ; 1 bytes @ 0x9
  5510                           
  5511  0079                     reportfault@fault:	
  5512                           ; 1 bytes @ 0x9
  5513                           
  5514  0079                     ___fltol@sign1:	
  5515                           ; 1 bytes @ 0x9
  5516                           
  5517  0079                     ___xxtofl@exp:	
  5518                           ; 1 bytes @ 0x9
  5519                           
  5520                           
  5521                           ; 1 bytes @ 0x9
  5522  0079                     	ds	1
  5523  007A                     ??_reportfault:
  5524  007A                     ___fltol@exp1:	
  5525                           ; 1 bytes @ 0xA
  5526                           
  5527  007A                     printByteValue@pos:	
  5528                           ; 1 bytes @ 0xA
  5529                           
  5530  007A                     ___xxtofl@arg:	
  5531                           ; 2 bytes @ 0xA
  5532                           
  5533                           
  5534                           ; 4 bytes @ 0xA
  5535  007A                     	ds	1
  5536  007B                     ??_initDisplay:
  5537  007B                     reportfault@s:	
  5538                           ; 1 bytes @ 0xB
  5539                           
  5540                           
  5541                           ; 1 bytes @ 0xB
  5542  007B                     	ds	1
  5543  007C                     ??_printByteValue:
  5544  007C                     ??_pad:	
  5545                           ; 1 bytes @ 0xC
  5546                           
  5547  007C                     reportfault@i:	
  5548                           ; 1 bytes @ 0xC
  5549                           
  5550  007C                     initDisplay@i:	
  5551                           ; 2 bytes @ 0xC
  5552                           
  5553                           
  5554                           ; 2 bytes @ 0xC
  5555  007C                     	ds	1
  5556  007D                     ??_printf:
  5557                           
  5558                           ; 1 bytes @ 0xD
  5559  007D                     	ds	1
  5560  007E                     ??_convert14BitToFloat:
  5561  007E                     ??_SYSTEM_Initialize:	
  5562                           ; 1 bytes @ 0xE
  5563                           
  5564                           
  5565                           	psect	cstackBANK0
  5566  0020                     __pcstackBANK0:	
  5567                           ; 1 bytes @ 0xE
  5568                           
  5569  0020                     ?___fldiv:
  5570  0020                     ?___aodiv:	
  5571                           ; 4 bytes @ 0x0
  5572                           
  5573  0020                     ?___aomod:	
  5574                           ; 8 bytes @ 0x0
  5575                           
  5576  0020                     printByteValue@lowerBits:	
  5577                           ; 8 bytes @ 0x0
  5578                           
  5579  0020                     spi_read_32bits@byte:	
  5580                           ; 1 bytes @ 0x0
  5581                           
  5582  0020                     fputs@c:	
  5583                           ; 1 bytes @ 0x0
  5584                           
  5585  0020                     ___fldiv@a:	
  5586                           ; 1 bytes @ 0x0
  5587                           
  5588  0020                     ___aodiv@divisor:	
  5589                           ; 4 bytes @ 0x0
  5590                           
  5591  0020                     ___aomod@divisor:	
  5592                           ; 8 bytes @ 0x0
  5593                           
  5594                           
  5595                           ; 8 bytes @ 0x0
  5596  0020                     	ds	1
  5597  0021                     printByteValue@upperBits:
  5598  0021                     fputs@i:	
  5599                           ; 1 bytes @ 0x1
  5600                           
  5601  0021                     spi_read_32bits@result:	
  5602                           ; 2 bytes @ 0x1
  5603                           
  5604                           
  5605                           ; 4 bytes @ 0x1
  5606  0021                     	ds	1
  5607  0022                     printByteValue@s:
  5608                           
  5609                           ; 1 bytes @ 0x2
  5610  0022                     	ds	1
  5611  0023                     fputs@s:
  5612  0023                     printByteValue@i:	
  5613                           ; 1 bytes @ 0x3
  5614                           
  5615                           
  5616                           ; 2 bytes @ 0x3
  5617  0023                     	ds	1
  5618  0024                     ?_pad:
  5619  0024                     pad@buf:	
  5620                           ; 2 bytes @ 0x4
  5621                           
  5622  0024                     ___fldiv@b:	
  5623                           ; 1 bytes @ 0x4
  5624                           
  5625                           
  5626                           ; 4 bytes @ 0x4
  5627  0024                     	ds	1
  5628  0025                     spi_read_32bits@i:
  5629  0025                     pad@p:	
  5630                           ; 2 bytes @ 0x5
  5631                           
  5632                           
  5633                           ; 2 bytes @ 0x5
  5634  0025                     	ds	2
  5635  0027                     pad@i:
  5636                           
  5637                           ; 2 bytes @ 0x7
  5638  0027                     	ds	1
  5639  0028                     ??___fldiv:
  5640  0028                     ___aodiv@dividend:	
  5641                           ; 1 bytes @ 0x8
  5642                           
  5643  0028                     ___aomod@dividend:	
  5644                           ; 8 bytes @ 0x8
  5645                           
  5646                           
  5647                           ; 8 bytes @ 0x8
  5648  0028                     	ds	1
  5649  0029                     pad@w:
  5650                           
  5651                           ; 2 bytes @ 0x9
  5652  0029                     	ds	2
  5653  002B                     pad@fp:
  5654                           
  5655                           ; 1 bytes @ 0xB
  5656  002B                     	ds	2
  5657  002D                     ___fldiv@rem:
  5658                           
  5659                           ; 4 bytes @ 0xD
  5660  002D                     	ds	3
  5661  0030                     ?_dtoa:
  5662  0030                     dtoa@d:	
  5663                           ; 2 bytes @ 0x10
  5664                           
  5665                           
  5666                           ; 8 bytes @ 0x10
  5667  0030                     	ds	1
  5668  0031                     ___fldiv@sign:
  5669                           
  5670                           ; 1 bytes @ 0x11
  5671  0031                     	ds	1
  5672  0032                     ___fldiv@new_exp:
  5673                           
  5674                           ; 2 bytes @ 0x12
  5675  0032                     	ds	2
  5676  0034                     ___fldiv@grs:
  5677                           
  5678                           ; 4 bytes @ 0x14
  5679  0034                     	ds	4
  5680  0038                     ??_dtoa:
  5681  0038                     ___fldiv@bexp:	
  5682                           ; 1 bytes @ 0x18
  5683                           
  5684                           
  5685                           ; 1 bytes @ 0x18
  5686  0038                     	ds	1
  5687  0039                     ___fldiv@aexp:
  5688                           
  5689                           ; 1 bytes @ 0x19
  5690  0039                     	ds	1
  5691  003A                     ?_convert14BitToFloat:
  5692  003A                     convert14BitToFloat@raw14bit:	
  5693                           ; 4 bytes @ 0x1A
  5694                           
  5695                           
  5696                           ; 2 bytes @ 0x1A
  5697  003A                     	ds	1
  5698  003B                     _dtoa$1495:
  5699                           
  5700                           ; 2 bytes @ 0x1B
  5701  003B                     	ds	2
  5702  003D                     dtoa@p:
  5703                           
  5704                           ; 2 bytes @ 0x1D
  5705  003D                     	ds	1
  5706  003E                     convert14BitToFloat@temp_Float:
  5707                           
  5708                           ; 4 bytes @ 0x1E
  5709  003E                     	ds	1
  5710  003F                     dtoa@fp:
  5711                           
  5712                           ; 1 bytes @ 0x1F
  5713  003F                     	ds	1
  5714  0040                     dtoa@w:
  5715                           
  5716                           ; 2 bytes @ 0x20
  5717  0040                     	ds	2
  5718  0042                     convert14BitToFloat@signed_int:
  5719  0042                     dtoa@s:	
  5720                           ; 2 bytes @ 0x22
  5721                           
  5722                           
  5723                           ; 2 bytes @ 0x22
  5724  0042                     	ds	2
  5725  0044                     convert14BitToFloat@raw14:
  5726  0044                     dtoa@n:	
  5727                           ; 2 bytes @ 0x24
  5728                           
  5729                           
  5730                           ; 8 bytes @ 0x24
  5731  0044                     	ds	8
  5732  004C                     dtoa@i:
  5733                           
  5734                           ; 2 bytes @ 0x2C
  5735  004C                     	ds	2
  5736  004E                     ?_vfpfcnvrt:
  5737  004E                     vfpfcnvrt@fmt:	
  5738                           ; 2 bytes @ 0x2E
  5739                           
  5740                           
  5741                           ; 1 bytes @ 0x2E
  5742  004E                     	ds	1
  5743  004F                     vfpfcnvrt@ap:
  5744                           
  5745                           ; 1 bytes @ 0x2F
  5746  004F                     	ds	1
  5747  0050                     ??_vfpfcnvrt:
  5748                           
  5749                           ; 1 bytes @ 0x30
  5750  0050                     	ds	5
  5751  0055                     vfpfcnvrt@ll:
  5752                           
  5753                           ; 8 bytes @ 0x35
  5754  0055                     	ds	8
  5755  005D                     vfpfcnvrt@fp:
  5756                           
  5757                           ; 1 bytes @ 0x3D
  5758  005D                     	ds	1
  5759  005E                     ?_vfprintf:
  5760  005E                     vfprintf@fmt:	
  5761                           ; 2 bytes @ 0x3E
  5762                           
  5763                           
  5764                           ; 2 bytes @ 0x3E
  5765  005E                     	ds	2
  5766  0060                     vfprintf@ap:
  5767                           
  5768                           ; 1 bytes @ 0x40
  5769  0060                     	ds	1
  5770  0061                     ??_vfprintf:
  5771                           
  5772                           ; 1 bytes @ 0x41
  5773  0061                     	ds	2
  5774  0063                     vfprintf@fp:
  5775                           
  5776                           ; 1 bytes @ 0x43
  5777  0063                     	ds	1
  5778  0064                     vfprintf@cfmt:
  5779                           
  5780                           ; 2 bytes @ 0x44
  5781  0064                     	ds	2
  5782  0066                     ?_printf:
  5783  0066                     printf@fmt:	
  5784                           ; 2 bytes @ 0x46
  5785                           
  5786                           
  5787                           ; 2 bytes @ 0x46
  5788  0066                     	ds	10
  5789                           
  5790                           	psect	maintext
  5791  0067                     __pmaintext:	
  5792 ;;
  5793 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  5794 ;;
  5795 ;; *************** function _main *****************
  5796 ;; Defined at:
  5797 ;;		line 114 in file "main.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;		None
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;  fault_type      1   26[BANK1 ] unsigned char 
  5802 ;;  fault           1   25[BANK1 ] unsigned char 
  5803 ;;  i               2   35[BANK1 ] int 
  5804 ;;  adc_value1      2   33[BANK1 ] unsigned short 
  5805 ;;  adc_value0      2   31[BANK1 ] unsigned short 
  5806 ;;  lower16         2   29[BANK1 ] unsigned short 
  5807 ;;  upper16         2   27[BANK1 ] unsigned short 
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  1    wreg      void 
  5810 ;; Registers used:
  5811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5812 ;; Tracked objects:
  5813 ;;		On entry : B1F/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5818 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  5819 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5820 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  5821 ;;Total ram usage:       16 bytes
  5822 ;; Hardware stack levels required when called:   13
  5823 ;; This function calls:
  5824 ;;		_ADC_GetConversion
  5825 ;;		_SYSTEM_Initialize
  5826 ;;		___fltol
  5827 ;;		_command
  5828 ;;		_convert14BitToFloat
  5829 ;;		_dataCMD
  5830 ;;		_printByteValue
  5831 ;;		_reportfault
  5832 ;;		_setMotorSpeed
  5833 ;;		_spi_read_32bits
  5834 ;;		_stuffIntToCharsBuf
  5835 ;; This function is called by:
  5836 ;;		Startup code after reset
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           
  5841                           ;psect for function _main
  5842  0067                     _main:
  5843  0067                     l3429:	
  5844                           ;incstack = 0
  5845                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5846                           
  5847                           
  5848                           ;main.c: 116:     _delay((unsigned long)((50)*(16000000/4000.0)));
  5849  0067  3002               	movlw	2
  5850  0068  0021               	movlb	1	; select bank1
  5851  0069  00B6               	movwf	(??_main^(0+128)+1)
  5852  006A  3004               	movlw	4
  5853  006B  00B5               	movwf	??_main^(0+128)
  5854  006C  30BA               	movlw	186
  5855  006D                     u3387:
  5856  006D  0B89               	decfsz	9,f
  5857  006E  286D               	goto	u3387
  5858  006F  0BB5               	decfsz	??_main^(0+128),f
  5859  0070  286D               	goto	u3387
  5860  0071  0BB6               	decfsz	(??_main^(0+128)+1),f
  5861  0072  286D               	goto	u3387
  5862  0073  0000               	nop
  5863  0074                     l3431:
  5864                           
  5865                           ;main.c: 118:     SYSTEM_Initialize();
  5866  0074  3197  2754  3180   	fcall	_SYSTEM_Initialize
  5867  0077                     l3433:
  5868                           
  5869                           ;main.c: 130:      _delay((unsigned long)((500)*(16000000/4000.0)));
  5870  0077  300B               	movlw	11
  5871  0078  0021               	movlb	1	; select bank1
  5872  0079  00B6               	movwf	(??_main^(0+128)+1)
  5873  007A  3026               	movlw	38
  5874  007B  00B5               	movwf	??_main^(0+128)
  5875  007C  305D               	movlw	93
  5876  007D                     u3397:
  5877  007D  0B89               	decfsz	9,f
  5878  007E  287D               	goto	u3397
  5879  007F  0BB5               	decfsz	??_main^(0+128),f
  5880  0080  287D               	goto	u3397
  5881  0081  0BB6               	decfsz	(??_main^(0+128)+1),f
  5882  0082  287D               	goto	u3397
  5883  0083  3200               	nop2
  5884  0084                     l3435:
  5885  0084                     l3437:
  5886  0084                     l3439:
  5887  0084                     l3441:
  5888  0084                     l3443:
  5889                           
  5890                           ;main.c: 152:     int i;;main.c: 153:     command(0x01);
  5891  0084  3001               	movlw	1
  5892  0085  318A  2247  3180   	fcall	_command
  5893  0088                     l3445:
  5894                           
  5895                           ;main.c: 154:     _delay((unsigned long)((2)*(16000000/4000.0)));
  5896  0088  300B               	movlw	11
  5897  0089  0021               	movlb	1	; select bank1
  5898  008A  00B5               	movwf	??_main^(0+128)
  5899  008B  3062               	movlw	98
  5900  008C                     u3407:
  5901  008C  0B89               	decfsz	9,f
  5902  008D  288C               	goto	u3407
  5903  008E  0BB5               	decfsz	??_main^(0+128),f
  5904  008F  288C               	goto	u3407
  5905  0090  0000               	nop
  5906  0091                     l3447:
  5907                           
  5908                           ;main.c: 155:     for(i=0;i<16;i++){
  5909  0091  0021               	movlb	1	; select bank1
  5910  0092  01C3               	clrf	main@i^(0+128)
  5911  0093  01C4               	clrf	(main@i+1)^(0+128)
  5912  0094                     l3453:
  5913                           
  5914                           ;main.c: 156:        dataCMD(text9[i]);
  5915  0094  0021               	movlb	1	; select bank1
  5916  0095  0843               	movf	main@i^(0+128),w
  5917  0096  3E20               	addlw	(low (_text9| (0+256)))& (0+255)
  5918  0097  0086               	movwf	6
  5919  0098  3001               	movlw	1	; select bank2/3
  5920  0099  0087               	movwf	7
  5921  009A  0801               	movf	1,w
  5922  009B  318A  22A2  3180   	fcall	_dataCMD
  5923  009E                     l3455:
  5924                           
  5925                           ;main.c: 157:     }
  5926  009E  3001               	movlw	1
  5927  009F  0021               	movlb	1	; select bank1
  5928  00A0  07C3               	addwf	main@i^(0+128),f
  5929  00A1  3000               	movlw	0
  5930  00A2  3DC4               	addwfc	(main@i+1)^(0+128),f
  5931  00A3                     l3457:
  5932  00A3  0844               	movf	(main@i+1)^(0+128),w
  5933  00A4  3A80               	xorlw	128
  5934  00A5  00B5               	movwf	??_main^(0+128)
  5935  00A6  3080               	movlw	128
  5936  00A7  0235               	subwf	??_main^(0+128),w
  5937  00A8  1D03               	skipz
  5938  00A9  28AC               	goto	u3225
  5939  00AA  3010               	movlw	16
  5940  00AB  0243               	subwf	main@i^(0+128),w
  5941  00AC                     u3225:
  5942  00AC  1C03               	skipc
  5943  00AD  28AF               	goto	u3221
  5944  00AE  28B0               	goto	u3220
  5945  00AF                     u3221:
  5946  00AF  2894               	goto	l3453
  5947  00B0                     u3220:
  5948  00B0                     l3459:
  5949                           
  5950                           ;main.c: 161:     {;main.c: 210:         adc_value0 = ADC_GetConversion(channel_AN2);
  5951  00B0  3002               	movlw	2
  5952  00B1  3197  2739  3180   	fcall	_ADC_GetConversion
  5953  00B4  0871               	movf	?_ADC_GetConversion+1,w
  5954  00B5  0021               	movlb	1	; select bank1
  5955  00B6  00C0               	movwf	(main@adc_value0+1)^(0+128)
  5956  00B7  0870               	movf	?_ADC_GetConversion,w
  5957  00B8  00BF               	movwf	main@adc_value0^(0+128)
  5958  00B9                     l3461:
  5959                           
  5960                           ;main.c: 211:         adc_value0 = adc_value0 >> 6;
  5961  00B9  0840               	movf	(main@adc_value0+1)^(0+128),w
  5962  00BA  00B6               	movwf	(??_main^(0+128)+1)
  5963  00BB  083F               	movf	main@adc_value0^(0+128),w
  5964  00BC  00B5               	movwf	??_main^(0+128)
  5965  00BD  3006               	movlw	6
  5966  00BE                     u3235:
  5967  00BE  36B6               	lsrf	(??_main^(0+128)+1),f
  5968  00BF  0CB5               	rrf	??_main^(0+128),f
  5969  00C0  0B89               	decfsz	9,f
  5970  00C1  28BE               	goto	u3235
  5971  00C2  0835               	movf	??_main^(0+128),w
  5972  00C3  00BF               	movwf	main@adc_value0^(0+128)
  5973  00C4  0836               	movf	(??_main+1)^(0+128),w
  5974  00C5  00C0               	movwf	(main@adc_value0+1)^(0+128)
  5975  00C6                     l3463:
  5976                           
  5977                           ;main.c: 212:         adc_value1 = ADC_GetConversion(channel_AN3);
  5978  00C6  3003               	movlw	3
  5979  00C7  3197  2739  3180   	fcall	_ADC_GetConversion
  5980  00CA  0871               	movf	?_ADC_GetConversion+1,w
  5981  00CB  0021               	movlb	1	; select bank1
  5982  00CC  00C2               	movwf	(main@adc_value1+1)^(0+128)
  5983  00CD  0870               	movf	?_ADC_GetConversion,w
  5984  00CE  00C1               	movwf	main@adc_value1^(0+128)
  5985                           
  5986                           ;main.c: 213:         adc_value1 = adc_value1 >> 6;
  5987  00CF  0842               	movf	(main@adc_value1+1)^(0+128),w
  5988  00D0  00B6               	movwf	(??_main^(0+128)+1)
  5989  00D1  0841               	movf	main@adc_value1^(0+128),w
  5990  00D2  00B5               	movwf	??_main^(0+128)
  5991  00D3  3006               	movlw	6
  5992  00D4                     u3245:
  5993  00D4  36B6               	lsrf	(??_main^(0+128)+1),f
  5994  00D5  0CB5               	rrf	??_main^(0+128),f
  5995  00D6  0B89               	decfsz	9,f
  5996  00D7  28D4               	goto	u3245
  5997  00D8  0835               	movf	??_main^(0+128),w
  5998  00D9  00C1               	movwf	main@adc_value1^(0+128)
  5999  00DA  0836               	movf	(??_main+1)^(0+128),w
  6000  00DB  00C2               	movwf	(main@adc_value1+1)^(0+128)
  6001  00DC                     l3465:
  6002                           
  6003                           ;main.c: 215:         if (adc_value0< 45)
  6004  00DC  3000               	movlw	0
  6005  00DD  0240               	subwf	(main@adc_value0+1)^(0+128),w
  6006  00DE  302D               	movlw	45
  6007  00DF  1903               	skipnz
  6008  00E0  023F               	subwf	main@adc_value0^(0+128),w
  6009  00E1  1803               	skipnc
  6010  00E2  28E4               	goto	u3251
  6011  00E3  28E5               	goto	u3250
  6012  00E4                     u3251:
  6013  00E4  28E7               	goto	l3469
  6014  00E5                     u3250:
  6015  00E5                     l3467:
  6016                           
  6017                           ;main.c: 216:             adc_value0 = 0;
  6018  00E5  01BF               	clrf	main@adc_value0^(0+128)
  6019  00E6  01C0               	clrf	(main@adc_value0+1)^(0+128)
  6020  00E7                     l3469:
  6021                           
  6022                           ;main.c: 217:         if (adc_value1< 45)
  6023  00E7  3000               	movlw	0
  6024  00E8  0242               	subwf	(main@adc_value1+1)^(0+128),w
  6025  00E9  302D               	movlw	45
  6026  00EA  1903               	skipnz
  6027  00EB  0241               	subwf	main@adc_value1^(0+128),w
  6028  00EC  1803               	skipnc
  6029  00ED  28EF               	goto	u3261
  6030  00EE  28F0               	goto	u3260
  6031  00EF                     u3261:
  6032  00EF  28F2               	goto	l3473
  6033  00F0                     u3260:
  6034  00F0                     l3471:
  6035                           
  6036                           ;main.c: 218:             adc_value1 = 0;
  6037  00F0  01C1               	clrf	main@adc_value1^(0+128)
  6038  00F1  01C2               	clrf	(main@adc_value1+1)^(0+128)
  6039  00F2                     l3473:
  6040                           
  6041                           ;main.c: 220:         stuffIntToCharsBuf(adc_value0 , text10 , 2 );
  6042  00F2  0840               	movf	(main@adc_value0+1)^(0+128),w
  6043  00F3  00A4               	movwf	(stuffIntToCharsBuf@num+1)^(0+128)
  6044  00F4  083F               	movf	main@adc_value0^(0+128),w
  6045  00F5  00A3               	movwf	stuffIntToCharsBuf@num^(0+128)
  6046  00F6  30DD               	movlw	(low (_text10| 0))& (0+255)
  6047  00F7  00B5               	movwf	??_main^(0+128)
  6048  00F8  0835               	movf	??_main^(0+128),w
  6049  00F9  00A5               	movwf	stuffIntToCharsBuf@buf^(0+128)
  6050  00FA  3002               	movlw	2
  6051  00FB  00A6               	movwf	stuffIntToCharsBuf@pos^(0+128)
  6052  00FC  3000               	movlw	0
  6053  00FD  00A7               	movwf	(stuffIntToCharsBuf@pos^(0+128)+1)
  6054  00FE  3185  25EE  3180   	fcall	_stuffIntToCharsBuf
  6055  0101                     l3475:
  6056                           
  6057                           ;main.c: 221:         stuffIntToCharsBuf(adc_value1 , text10 , 9 );
  6058  0101  0021               	movlb	1	; select bank1
  6059  0102  0842               	movf	(main@adc_value1+1)^(0+128),w
  6060  0103  00A4               	movwf	(stuffIntToCharsBuf@num+1)^(0+128)
  6061  0104  0841               	movf	main@adc_value1^(0+128),w
  6062  0105  00A3               	movwf	stuffIntToCharsBuf@num^(0+128)
  6063  0106  30DD               	movlw	(low (_text10| 0))& (0+255)
  6064  0107  00B5               	movwf	??_main^(0+128)
  6065  0108  0835               	movf	??_main^(0+128),w
  6066  0109  00A5               	movwf	stuffIntToCharsBuf@buf^(0+128)
  6067  010A  3009               	movlw	9
  6068  010B  00A6               	movwf	stuffIntToCharsBuf@pos^(0+128)
  6069  010C  3000               	movlw	0
  6070  010D  00A7               	movwf	(stuffIntToCharsBuf@pos^(0+128)+1)
  6071  010E  3185  25EE  3180   	fcall	_stuffIntToCharsBuf
  6072  0111                     l3477:
  6073                           
  6074                           ;main.c: 222:                 command(0x01);
  6075  0111  3001               	movlw	1
  6076  0112  318A  2247  3180   	fcall	_command
  6077  0115                     l3479:
  6078                           
  6079                           ;main.c: 223:         _delay((unsigned long)((2)*(16000000/4000.0)));
  6080  0115  300B               	movlw	11
  6081  0116  0021               	movlb	1	; select bank1
  6082  0117  00B5               	movwf	??_main^(0+128)
  6083  0118  3062               	movlw	98
  6084  0119                     u3417:
  6085  0119  0B89               	decfsz	9,f
  6086  011A  2919               	goto	u3417
  6087  011B  0BB5               	decfsz	??_main^(0+128),f
  6088  011C  2919               	goto	u3417
  6089  011D  0000               	nop
  6090  011E                     l3481:
  6091                           
  6092                           ;main.c: 224:         for(i=0;i<16;i++){
  6093  011E  0021               	movlb	1	; select bank1
  6094  011F  01C3               	clrf	main@i^(0+128)
  6095  0120  01C4               	clrf	(main@i+1)^(0+128)
  6096  0121                     l3487:
  6097                           
  6098                           ;main.c: 225:           dataCMD(text9[i]);
  6099  0121  0021               	movlb	1	; select bank1
  6100  0122  0843               	movf	main@i^(0+128),w
  6101  0123  3E20               	addlw	(low (_text9| (0+256)))& (0+255)
  6102  0124  0086               	movwf	6
  6103  0125  3001               	movlw	1	; select bank2/3
  6104  0126  0087               	movwf	7
  6105  0127  0801               	movf	1,w
  6106  0128  318A  22A2  3180   	fcall	_dataCMD
  6107  012B                     l3489:
  6108                           
  6109                           ;main.c: 226:         }
  6110  012B  3001               	movlw	1
  6111  012C  0021               	movlb	1	; select bank1
  6112  012D  07C3               	addwf	main@i^(0+128),f
  6113  012E  3000               	movlw	0
  6114  012F  3DC4               	addwfc	(main@i+1)^(0+128),f
  6115  0130                     l3491:
  6116  0130  0844               	movf	(main@i+1)^(0+128),w
  6117  0131  3A80               	xorlw	128
  6118  0132  00B5               	movwf	??_main^(0+128)
  6119  0133  3080               	movlw	128
  6120  0134  0235               	subwf	??_main^(0+128),w
  6121  0135  1D03               	skipz
  6122  0136  2939               	goto	u3275
  6123  0137  3010               	movlw	16
  6124  0138  0243               	subwf	main@i^(0+128),w
  6125  0139                     u3275:
  6126  0139  1C03               	skipc
  6127  013A  293C               	goto	u3271
  6128  013B  293D               	goto	u3270
  6129  013C                     u3271:
  6130  013C  2921               	goto	l3487
  6131  013D                     u3270:
  6132  013D                     l3493:
  6133                           
  6134                           ;main.c: 227:         command(0xA0);
  6135  013D  30A0               	movlw	160
  6136  013E  318A  2247  3180   	fcall	_command
  6137  0141                     l3495:
  6138                           
  6139                           ;main.c: 228:         for(i=0;i<16;i++){
  6140  0141  0021               	movlb	1	; select bank1
  6141  0142  01C3               	clrf	main@i^(0+128)
  6142  0143  01C4               	clrf	(main@i+1)^(0+128)
  6143  0144                     l3501:
  6144                           
  6145                           ;main.c: 229:           dataCMD(text10[i]);
  6146  0144  0021               	movlb	1	; select bank1
  6147  0145  0843               	movf	main@i^(0+128),w
  6148  0146  3EDD               	addlw	(low (_text10| 0))& (0+255)
  6149  0147  0086               	movwf	6
  6150  0148  0187               	clrf	7
  6151  0149  0801               	movf	1,w
  6152  014A  318A  22A2  3180   	fcall	_dataCMD
  6153  014D                     l3503:
  6154                           
  6155                           ;main.c: 230:         }
  6156  014D  3001               	movlw	1
  6157  014E  0021               	movlb	1	; select bank1
  6158  014F  07C3               	addwf	main@i^(0+128),f
  6159  0150  3000               	movlw	0
  6160  0151  3DC4               	addwfc	(main@i+1)^(0+128),f
  6161  0152                     l3505:
  6162  0152  0844               	movf	(main@i+1)^(0+128),w
  6163  0153  3A80               	xorlw	128
  6164  0154  00B5               	movwf	??_main^(0+128)
  6165  0155  3080               	movlw	128
  6166  0156  0235               	subwf	??_main^(0+128),w
  6167  0157  1D03               	skipz
  6168  0158  295B               	goto	u3285
  6169  0159  3010               	movlw	16
  6170  015A  0243               	subwf	main@i^(0+128),w
  6171  015B                     u3285:
  6172  015B  1C03               	skipc
  6173  015C  295E               	goto	u3281
  6174  015D  295F               	goto	u3280
  6175  015E                     u3281:
  6176  015E  2944               	goto	l3501
  6177  015F                     u3280:
  6178  015F                     l3507:
  6179                           
  6180                           ;main.c: 231:         setMotorSpeed(adc_value0, 1 );
  6181  015F  0021               	movlb	1	; select bank1
  6182  0160  0840               	movf	(main@adc_value0+1)^(0+128),w
  6183  0161  00F5               	movwf	setMotorSpeed@num+1
  6184  0162  083F               	movf	main@adc_value0^(0+128),w
  6185  0163  00F4               	movwf	setMotorSpeed@num
  6186  0164  3001               	movlw	1
  6187  0165  00F6               	movwf	setMotorSpeed@motorNum
  6188  0166  3000               	movlw	0
  6189  0167  00F7               	movwf	setMotorSpeed@motorNum+1
  6190  0168  3197  2770  3180   	fcall	_setMotorSpeed
  6191                           
  6192                           ;main.c: 232:         setMotorSpeed(adc_value1, 2 );
  6193  016B  0021               	movlb	1	; select bank1
  6194  016C  0842               	movf	(main@adc_value1+1)^(0+128),w
  6195  016D  00F5               	movwf	setMotorSpeed@num+1
  6196  016E  0841               	movf	main@adc_value1^(0+128),w
  6197  016F  00F4               	movwf	setMotorSpeed@num
  6198  0170  3002               	movlw	2
  6199  0171  00F6               	movwf	setMotorSpeed@motorNum
  6200  0172  3000               	movlw	0
  6201  0173  00F7               	movwf	setMotorSpeed@motorNum+1
  6202  0174  3197  2770  3180   	fcall	_setMotorSpeed
  6203  0177                     l3509:
  6204                           
  6205                           ;main.c: 233:         _delay((unsigned long)((2000)*(16000000/4000.0)));
  6206  0177  3029               	movlw	41
  6207  0178  0021               	movlb	1	; select bank1
  6208  0179  00B6               	movwf	(??_main^(0+128)+1)
  6209  017A  3096               	movlw	150
  6210  017B  00B5               	movwf	??_main^(0+128)
  6211  017C  307F               	movlw	127
  6212  017D                     u3427:
  6213  017D  0B89               	decfsz	9,f
  6214  017E  297D               	goto	u3427
  6215  017F  0BB5               	decfsz	??_main^(0+128),f
  6216  0180  297D               	goto	u3427
  6217  0181  0BB6               	decfsz	(??_main^(0+128)+1),f
  6218  0182  297D               	goto	u3427
  6219  0183                     l3511:
  6220                           
  6221                           ;main.c: 234:         command(0x01);
  6222  0183  3001               	movlw	1
  6223  0184  318A  2247  3180   	fcall	_command
  6224                           
  6225                           ;main.c: 235:         _delay((unsigned long)((2)*(16000000/4000.0)));
  6226  0187  300B               	movlw	11
  6227  0188  0021               	movlb	1	; select bank1
  6228  0189  00B5               	movwf	??_main^(0+128)
  6229  018A  3062               	movlw	98
  6230  018B                     u3437:
  6231  018B  0B89               	decfsz	9,f
  6232  018C  298B               	goto	u3437
  6233  018D  0BB5               	decfsz	??_main^(0+128),f
  6234  018E  298B               	goto	u3437
  6235  018F  0000               	nop
  6236  0190                     l3513:
  6237                           
  6238                           ;main.c: 236:         for(i=0;i<16;i++){
  6239  0190  0021               	movlb	1	; select bank1
  6240  0191  01C3               	clrf	main@i^(0+128)
  6241  0192  01C4               	clrf	(main@i+1)^(0+128)
  6242  0193                     l3519:
  6243                           
  6244                           ;main.c: 237:           dataCMD(text11[i]);
  6245  0193  0021               	movlb	1	; select bank1
  6246  0194  0843               	movf	main@i^(0+128),w
  6247  0195  3EA0               	addlw	(low (_text11| (0+256)))& (0+255)
  6248  0196  0086               	movwf	6
  6249  0197  3001               	movlw	1	; select bank3/4
  6250  0198  0087               	movwf	7
  6251  0199  0801               	movf	1,w
  6252  019A  318A  22A2  3180   	fcall	_dataCMD
  6253  019D                     l3521:
  6254                           
  6255                           ;main.c: 238:         }
  6256  019D  3001               	movlw	1
  6257  019E  0021               	movlb	1	; select bank1
  6258  019F  07C3               	addwf	main@i^(0+128),f
  6259  01A0  3000               	movlw	0
  6260  01A1  3DC4               	addwfc	(main@i+1)^(0+128),f
  6261  01A2                     l3523:
  6262  01A2  0844               	movf	(main@i+1)^(0+128),w
  6263  01A3  3A80               	xorlw	128
  6264  01A4  00B5               	movwf	??_main^(0+128)
  6265  01A5  3080               	movlw	128
  6266  01A6  0235               	subwf	??_main^(0+128),w
  6267  01A7  1D03               	skipz
  6268  01A8  29AB               	goto	u3295
  6269  01A9  3010               	movlw	16
  6270  01AA  0243               	subwf	main@i^(0+128),w
  6271  01AB                     u3295:
  6272  01AB  1C03               	skipc
  6273  01AC  29AE               	goto	u3291
  6274  01AD  29AF               	goto	u3290
  6275  01AE                     u3291:
  6276  01AE  2993               	goto	l3519
  6277  01AF                     u3290:
  6278  01AF                     l3525:
  6279                           
  6280                           ;main.c: 239:         TC_data = spi_read_32bits();
  6281  01AF  318A  22FD  3180   	fcall	_spi_read_32bits
  6282  01B2  0874               	movf	?_spi_read_32bits+3,w
  6283  01B3  0021               	movlb	1	; select bank1
  6284  01B4  00CC               	movwf	(_TC_data+3)^(0+128)
  6285  01B5  0873               	movf	?_spi_read_32bits+2,w
  6286  01B6  00CB               	movwf	(_TC_data+2)^(0+128)
  6287  01B7  0872               	movf	?_spi_read_32bits+1,w
  6288  01B8  00CA               	movwf	(_TC_data+1)^(0+128)
  6289  01B9  0871               	movf	?_spi_read_32bits,w
  6290  01BA  00C9               	movwf	_TC_data^(0+128)
  6291  01BB                     l3527:
  6292                           
  6293                           ;main.c: 245:         upper16 = (TC_data >> 16) & 0xFFFF;
  6294  01BB  0849               	movf	_TC_data^(0+128),w
  6295  01BC  00B5               	movwf	??_main^(0+128)
  6296  01BD  084A               	movf	(_TC_data+1)^(0+128),w
  6297  01BE  00B6               	movwf	(??_main^(0+128)+1)
  6298  01BF  084B               	movf	(_TC_data+2)^(0+128),w
  6299  01C0  00B7               	movwf	(??_main^(0+128)+2)
  6300  01C1  084C               	movf	(_TC_data+3)^(0+128),w
  6301  01C2  00B8               	movwf	(??_main^(0+128)+3)
  6302  01C3  3010               	movlw	16
  6303  01C4                     u3305:
  6304  01C4  36B8               	lsrf	(??_main^(0+128)+3),f
  6305  01C5  0CB7               	rrf	(??_main^(0+128)+2),f
  6306  01C6  0CB6               	rrf	(??_main^(0+128)+1),f
  6307  01C7  0CB5               	rrf	??_main^(0+128),f
  6308  01C8                     u3300:
  6309  01C8  0B89               	decfsz	9,f
  6310  01C9  29C4               	goto	u3305
  6311  01CA  0836               	movf	(??_main+1)^(0+128),w
  6312  01CB  00BC               	movwf	(main@upper16+1)^(0+128)
  6313  01CC  0835               	movf	??_main^(0+128),w
  6314  01CD  00BB               	movwf	main@upper16^(0+128)
  6315  01CE                     l3529:
  6316                           
  6317                           ;main.c: 246:         lower16 = TC_data & 0xFFFF;
  6318  01CE  084A               	movf	(_TC_data+1)^(0+128),w
  6319  01CF  00BE               	movwf	(main@lower16+1)^(0+128)
  6320  01D0  0849               	movf	_TC_data^(0+128),w
  6321  01D1  00BD               	movwf	main@lower16^(0+128)
  6322  01D2                     l3531:
  6323                           
  6324                           ;main.c: 249:         uint8_t fault = upper16 & 0x01;
  6325  01D2  083B               	movf	main@upper16^(0+128),w
  6326  01D3  3901               	andlw	1
  6327  01D4  00B5               	movwf	??_main^(0+128)
  6328  01D5  0835               	movf	??_main^(0+128),w
  6329  01D6  00B9               	movwf	main@fault^(0+128)
  6330  01D7                     l3533:
  6331                           
  6332                           ;main.c: 250:         uint8_t fault_type = lower16 & 0x07;
  6333  01D7  083D               	movf	main@lower16^(0+128),w
  6334  01D8  3907               	andlw	7
  6335  01D9  00B5               	movwf	??_main^(0+128)
  6336  01DA  0835               	movf	??_main^(0+128),w
  6337  01DB  00BA               	movwf	main@fault_type^(0+128)
  6338  01DC                     l3535:
  6339                           
  6340                           ;main.c: 251:         if (fault > 0){
  6341  01DC  0839               	movf	main@fault^(0+128),w
  6342  01DD  1903               	btfsc	3,2
  6343  01DE  29E0               	goto	u3311
  6344  01DF  29E1               	goto	u3310
  6345  01E0                     u3311:
  6346  01E0  29F5               	goto	l3541
  6347  01E1                     u3310:
  6348  01E1                     l3537:
  6349                           
  6350                           ;main.c: 252:            reportfault(faultStr, fault_type);
  6351  01E1  083A               	movf	main@fault_type^(0+128),w
  6352  01E2  00B5               	movwf	??_main^(0+128)
  6353  01E3  0835               	movf	??_main^(0+128),w
  6354  01E4  00F9               	movwf	reportfault@fault
  6355  01E5  3053               	movlw	(low (_faultStr| (0+256)))& (0+255)
  6356  01E6  3188  2015  3180   	fcall	_reportfault
  6357  01E9                     l3539:
  6358                           
  6359                           ;main.c: 253:            _delay((unsigned long)((2000)*(16000000/4000.0)));
  6360  01E9  3029               	movlw	41
  6361  01EA  0021               	movlb	1	; select bank1
  6362  01EB  00B6               	movwf	(??_main^(0+128)+1)
  6363  01EC  3096               	movlw	150
  6364  01ED  00B5               	movwf	??_main^(0+128)
  6365  01EE  307F               	movlw	127
  6366  01EF                     u3447:
  6367  01EF  0B89               	decfsz	9,f
  6368  01F0  29EF               	goto	u3447
  6369  01F1  0BB5               	decfsz	??_main^(0+128),f
  6370  01F2  29EF               	goto	u3447
  6371  01F3  0BB6               	decfsz	(??_main^(0+128)+1),f
  6372  01F4  29EF               	goto	u3447
  6373  01F5                     l3541:
  6374                           
  6375                           ;main.c: 255:         byteVal = (upper16 >> 8) & 0xFF;
  6376  01F5  0021               	movlb	1	; select bank1
  6377  01F6  083C               	movf	(main@upper16+1)^(0+128),w
  6378  01F7  00B5               	movwf	??_main^(0+128)
  6379  01F8  0835               	movf	??_main^(0+128),w
  6380  01F9  00DB               	movwf	_byteVal^(0+128)
  6381  01FA                     l3543:
  6382                           
  6383                           ;main.c: 256:         printByteValue(text7, byteVal,0);
  6384  01FA  085B               	movf	_byteVal^(0+128),w
  6385  01FB  00B5               	movwf	??_main^(0+128)
  6386  01FC  0835               	movf	??_main^(0+128),w
  6387  01FD  00F9               	movwf	printByteValue@byteVal
  6388  01FE  3000               	movlw	0
  6389  01FF  00FA               	movwf	printByteValue@pos
  6390  0200  00FB               	movwf	printByteValue@pos+1
  6391  0201  3042               	movlw	(low (_text7| (0+256)))& (0+255)
  6392  0202  318C  24C4  3180   	fcall	_printByteValue
  6393  0205                     l3545:
  6394                           
  6395                           ;main.c: 258:         byteVal = upper16 & 0xFF;
  6396  0205  0021               	movlb	1	; select bank1
  6397  0206  083B               	movf	main@upper16^(0+128),w
  6398  0207  00B5               	movwf	??_main^(0+128)
  6399  0208  0835               	movf	??_main^(0+128),w
  6400  0209  00DB               	movwf	_byteVal^(0+128)
  6401  020A                     l3547:
  6402                           
  6403                           ;main.c: 259:         printByteValue(text7, byteVal,1);
  6404  020A  085B               	movf	_byteVal^(0+128),w
  6405  020B  00B5               	movwf	??_main^(0+128)
  6406  020C  0835               	movf	??_main^(0+128),w
  6407  020D  00F9               	movwf	printByteValue@byteVal
  6408  020E  3001               	movlw	1
  6409  020F  00FA               	movwf	printByteValue@pos
  6410  0210  3000               	movlw	0
  6411  0211  00FB               	movwf	printByteValue@pos+1
  6412  0212  3042               	movlw	(low (_text7| (0+256)))& (0+255)
  6413  0213  318C  24C4  3180   	fcall	_printByteValue
  6414  0216                     l3549:
  6415                           
  6416                           ;main.c: 261:         byteVal = (lower16 >> 8) & 0xFF;
  6417  0216  0021               	movlb	1	; select bank1
  6418  0217  083E               	movf	(main@lower16+1)^(0+128),w
  6419  0218  00B5               	movwf	??_main^(0+128)
  6420  0219  0835               	movf	??_main^(0+128),w
  6421  021A  00DB               	movwf	_byteVal^(0+128)
  6422                           
  6423                           ;main.c: 262:         printByteValue(text7, byteVal,2);
  6424  021B  085B               	movf	_byteVal^(0+128),w
  6425  021C  00B5               	movwf	??_main^(0+128)
  6426  021D  0835               	movf	??_main^(0+128),w
  6427  021E  00F9               	movwf	printByteValue@byteVal
  6428  021F  3002               	movlw	2
  6429  0220  00FA               	movwf	printByteValue@pos
  6430  0221  3000               	movlw	0
  6431  0222  00FB               	movwf	printByteValue@pos+1
  6432  0223  3042               	movlw	(low (_text7| (0+256)))& (0+255)
  6433  0224  318C  24C4  3180   	fcall	_printByteValue
  6434  0227                     l3551:
  6435                           
  6436                           ;main.c: 264:         byteVal = lower16 & 0xFF;
  6437  0227  0021               	movlb	1	; select bank1
  6438  0228  083D               	movf	main@lower16^(0+128),w
  6439  0229  00B5               	movwf	??_main^(0+128)
  6440  022A  0835               	movf	??_main^(0+128),w
  6441  022B  00DB               	movwf	_byteVal^(0+128)
  6442  022C                     l3553:
  6443                           
  6444                           ;main.c: 265:         printByteValue(text7, byteVal,3);
  6445  022C  085B               	movf	_byteVal^(0+128),w
  6446  022D  00B5               	movwf	??_main^(0+128)
  6447  022E  0835               	movf	??_main^(0+128),w
  6448  022F  00F9               	movwf	printByteValue@byteVal
  6449  0230  3003               	movlw	3
  6450  0231  00FA               	movwf	printByteValue@pos
  6451  0232  3000               	movlw	0
  6452  0233  00FB               	movwf	printByteValue@pos+1
  6453  0234  3042               	movlw	(low (_text7| (0+256)))& (0+255)
  6454  0235  318C  24C4  3180   	fcall	_printByteValue
  6455                           
  6456                           ;main.c: 266:         _delay((unsigned long)((2000)*(16000000/4000.0)));
  6457  0238  3029               	movlw	41
  6458  0239  0021               	movlb	1	; select bank1
  6459  023A  00B6               	movwf	(??_main^(0+128)+1)
  6460  023B  3096               	movlw	150
  6461  023C  00B5               	movwf	??_main^(0+128)
  6462  023D  307F               	movlw	127
  6463  023E                     u3457:
  6464  023E  0B89               	decfsz	9,f
  6465  023F  2A3E               	goto	u3457
  6466  0240  0BB5               	decfsz	??_main^(0+128),f
  6467  0241  2A3E               	goto	u3457
  6468  0242  0BB6               	decfsz	(??_main^(0+128)+1),f
  6469  0243  2A3E               	goto	u3457
  6470  0244                     l3555:
  6471                           
  6472                           ;main.c: 268:         temp_float = convert14BitToFloat((upper16 >>2));
  6473  0244  0021               	movlb	1	; select bank1
  6474  0245  083C               	movf	(main@upper16+1)^(0+128),w
  6475  0246  00B6               	movwf	(??_main^(0+128)+1)
  6476  0247  083B               	movf	main@upper16^(0+128),w
  6477  0248  00B5               	movwf	??_main^(0+128)
  6478  0249  36B6               	lsrf	(??_main^(0+128)+1),f
  6479  024A  0CB5               	rrf	??_main^(0+128),f
  6480  024B  36B6               	lsrf	(??_main^(0+128)+1),f
  6481  024C  0CB5               	rrf	??_main^(0+128),f
  6482  024D  0835               	movf	??_main^(0+128),w
  6483  024E  0020               	movlb	0	; select bank0
  6484  024F  00BA               	movwf	convert14BitToFloat@raw14bit
  6485  0250  0021               	movlb	1	; select bank1
  6486  0251  0836               	movf	(??_main+1)^(0+128),w
  6487  0252  0020               	movlb	0	; select bank0
  6488  0253  00BB               	movwf	convert14BitToFloat@raw14bit+1
  6489  0254  3189  21A5  3180   	fcall	_convert14BitToFloat
  6490  0257  0020               	movlb	0	; select bank0
  6491  0258  083D               	movf	?_convert14BitToFloat+3,w
  6492  0259  0021               	movlb	1	; select bank1
  6493  025A  00C8               	movwf	(_temp_float+3)^(0+128)
  6494  025B  0020               	movlb	0	; select bank0
  6495  025C  083C               	movf	?_convert14BitToFloat+2,w
  6496  025D  0021               	movlb	1	; select bank1
  6497  025E  00C7               	movwf	(_temp_float+2)^(0+128)
  6498  025F  0020               	movlb	0	; select bank0
  6499  0260  083B               	movf	?_convert14BitToFloat+1,w
  6500  0261  0021               	movlb	1	; select bank1
  6501  0262  00C6               	movwf	(_temp_float+1)^(0+128)
  6502  0263  0020               	movlb	0	; select bank0
  6503  0264  083A               	movf	?_convert14BitToFloat,w
  6504  0265  0021               	movlb	1	; select bank1
  6505  0266  00C5               	movwf	_temp_float^(0+128)
  6506  0267                     l3557:
  6507                           
  6508                           ;main.c: 270:         stuffIntToCharsBuf( (int16_t)temp_float , text10 , 2 );
  6509  0267  0848               	movf	(_temp_float+3)^(0+128),w
  6510  0268  00F3               	movwf	___fltol@f1+3
  6511  0269  0847               	movf	(_temp_float+2)^(0+128),w
  6512  026A  00F2               	movwf	___fltol@f1+2
  6513  026B  0846               	movf	(_temp_float+1)^(0+128),w
  6514  026C  00F1               	movwf	___fltol@f1+1
  6515  026D  0845               	movf	_temp_float^(0+128),w
  6516  026E  00F0               	movwf	___fltol@f1
  6517  026F  318B  23B9  3180   	fcall	___fltol
  6518  0272  0871               	movf	?___fltol+1,w
  6519  0273  0021               	movlb	1	; select bank1
  6520  0274  00A4               	movwf	(stuffIntToCharsBuf@num+1)^(0+128)
  6521  0275  0870               	movf	?___fltol,w
  6522  0276  00A3               	movwf	stuffIntToCharsBuf@num^(0+128)
  6523  0277  30DD               	movlw	(low (_text10| 0))& (0+255)
  6524  0278  00B5               	movwf	??_main^(0+128)
  6525  0279  0835               	movf	??_main^(0+128),w
  6526  027A  00A5               	movwf	stuffIntToCharsBuf@buf^(0+128)
  6527  027B  3002               	movlw	2
  6528  027C  00A6               	movwf	stuffIntToCharsBuf@pos^(0+128)
  6529  027D  3000               	movlw	0
  6530  027E  00A7               	movwf	(stuffIntToCharsBuf@pos^(0+128)+1)
  6531  027F  3185  25EE  3180   	fcall	_stuffIntToCharsBuf
  6532  0282                     l3559:
  6533                           
  6534                           ;main.c: 271:         stuffIntToCharsBuf((lower16 >>8) , text10 , 9 );
  6535  0282  0021               	movlb	1	; select bank1
  6536  0283  083E               	movf	(main@lower16+1)^(0+128),w
  6537  0284  00B6               	movwf	(??_main^(0+128)+1)
  6538  0285  083D               	movf	main@lower16^(0+128),w
  6539  0286  00B5               	movwf	??_main^(0+128)
  6540  0287  0836               	movf	(??_main^(0+128)+1),w
  6541  0288  00B5               	movwf	??_main^(0+128)
  6542  0289  01B6               	clrf	(??_main^(0+128)+1)
  6543  028A  0835               	movf	??_main^(0+128),w
  6544  028B  00A3               	movwf	stuffIntToCharsBuf@num^(0+128)
  6545  028C  0836               	movf	(??_main+1)^(0+128),w
  6546  028D  00A4               	movwf	(stuffIntToCharsBuf@num+1)^(0+128)
  6547  028E  30DD               	movlw	(low (_text10| 0))& (0+255)
  6548  028F  00B7               	movwf	(??_main+2)^(0+128)
  6549  0290  0837               	movf	(??_main+2)^(0+128),w
  6550  0291  00A5               	movwf	stuffIntToCharsBuf@buf^(0+128)
  6551  0292  3009               	movlw	9
  6552  0293  00A6               	movwf	stuffIntToCharsBuf@pos^(0+128)
  6553  0294  3000               	movlw	0
  6554  0295  00A7               	movwf	(stuffIntToCharsBuf@pos^(0+128)+1)
  6555  0296  3185  25EE  3180   	fcall	_stuffIntToCharsBuf
  6556  0299                     l3561:
  6557                           
  6558                           ;main.c: 272:         command(0xA0);
  6559  0299  30A0               	movlw	160
  6560  029A  318A  2247  3180   	fcall	_command
  6561  029D                     l3563:
  6562                           
  6563                           ;main.c: 273:         for(i=0;i<16;i++){
  6564  029D  0021               	movlb	1	; select bank1
  6565  029E  01C3               	clrf	main@i^(0+128)
  6566  029F  01C4               	clrf	(main@i+1)^(0+128)
  6567  02A0                     l3569:
  6568                           
  6569                           ;main.c: 274:           dataCMD(text10[i]);
  6570  02A0  0021               	movlb	1	; select bank1
  6571  02A1  0843               	movf	main@i^(0+128),w
  6572  02A2  3EDD               	addlw	(low (_text10| 0))& (0+255)
  6573  02A3  0086               	movwf	6
  6574  02A4  0187               	clrf	7
  6575  02A5  0801               	movf	1,w
  6576  02A6  318A  22A2  3180   	fcall	_dataCMD
  6577  02A9                     l3571:
  6578                           
  6579                           ;main.c: 275:         }
  6580  02A9  3001               	movlw	1
  6581  02AA  0021               	movlb	1	; select bank1
  6582  02AB  07C3               	addwf	main@i^(0+128),f
  6583  02AC  3000               	movlw	0
  6584  02AD  3DC4               	addwfc	(main@i+1)^(0+128),f
  6585  02AE                     l3573:
  6586  02AE  0844               	movf	(main@i+1)^(0+128),w
  6587  02AF  3A80               	xorlw	128
  6588  02B0  00B5               	movwf	??_main^(0+128)
  6589  02B1  3080               	movlw	128
  6590  02B2  0235               	subwf	??_main^(0+128),w
  6591  02B3  1D03               	skipz
  6592  02B4  2AB7               	goto	u3325
  6593  02B5  3010               	movlw	16
  6594  02B6  0243               	subwf	main@i^(0+128),w
  6595  02B7                     u3325:
  6596  02B7  1C03               	skipc
  6597  02B8  2ABA               	goto	u3321
  6598  02B9  2ABB               	goto	u3320
  6599  02BA                     u3321:
  6600  02BA  2AA0               	goto	l3569
  6601  02BB                     u3320:
  6602  02BB                     l3575:
  6603                           
  6604                           ;main.c: 277:         _delay((unsigned long)((2000)*(16000000/4000.0)));
  6605  02BB  3029               	movlw	41
  6606  02BC  0021               	movlb	1	; select bank1
  6607  02BD  00B6               	movwf	(??_main^(0+128)+1)
  6608  02BE  3096               	movlw	150
  6609  02BF  00B5               	movwf	??_main^(0+128)
  6610  02C0  307F               	movlw	127
  6611  02C1                     u3467:
  6612  02C1  0B89               	decfsz	9,f
  6613  02C2  2AC1               	goto	u3467
  6614  02C3  0BB5               	decfsz	??_main^(0+128),f
  6615  02C4  2AC1               	goto	u3467
  6616  02C5  0BB6               	decfsz	(??_main^(0+128)+1),f
  6617  02C6  2AC1               	goto	u3467
  6618  02C7  28B0               	goto	l3459
  6619  02C8  3180  2819         	ljmp	start
  6620  02CA                     __end_of_main:
  6621                           
  6622                           	psect	text1
  6623  05EE                     __ptext1:	
  6624 ;; *************** function _stuffIntToCharsBuf *****************
  6625 ;; Defined at:
  6626 ;;		line 393 in file "main.c"
  6627 ;; Parameters:    Size  Location     Type
  6628 ;;  num             2    3[BANK1 ] int 
  6629 ;;  buf             1    5[BANK1 ] PTR unsigned char 
  6630 ;;		 -> text10(17), 
  6631 ;;  pos             2    6[BANK1 ] int 
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;  neg             2   19[BANK1 ] int 
  6634 ;;  dig3            2   17[BANK1 ] int 
  6635 ;;  dig2            2   15[BANK1 ] int 
  6636 ;;  dig1            2   13[BANK1 ] int 
  6637 ;;  dig4            2   11[BANK1 ] int 
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      void 
  6640 ;; Registers used:
  6641 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6647 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6648 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6649 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6650 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  6651 ;;Total ram usage:       18 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:   12
  6654 ;; This function calls:
  6655 ;;		___awdiv
  6656 ;;		___wmul
  6657 ;;		_printf
  6658 ;; This function is called by:
  6659 ;;		_main
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           
  6664                           ;psect for function _stuffIntToCharsBuf
  6665  05EE                     _stuffIntToCharsBuf:
  6666  05EE                     l3229:	
  6667                           ;incstack = 0
  6668                           ; Regs used in _stuffIntToCharsBuf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6669                           
  6670                           
  6671                           ;main.c: 395:   printf("num= %d\n", num);
  6672  05EE  302D               	movlw	low (STR_1| (0+32768))
  6673  05EF  0020               	movlb	0	; select bank0
  6674  05F0  00E6               	movwf	printf@fmt
  6675  05F1  3098               	movlw	high (STR_1| (0+32768))
  6676  05F2  00E7               	movwf	printf@fmt+1
  6677  05F3  0021               	movlb	1	; select bank1
  6678  05F4  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  6679  05F5  0020               	movlb	0	; select bank0
  6680  05F6  00E9               	movwf	?_printf+3
  6681  05F7  0021               	movlb	1	; select bank1
  6682  05F8  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  6683  05F9  0020               	movlb	0	; select bank0
  6684  05FA  00E8               	movwf	?_printf+2
  6685  05FB  3188  2002  3185   	fcall	_printf
  6686  05FE                     l3231:
  6687                           
  6688                           ;main.c: 396:   int dig1, dig2, dig3, dig4, neg=0;
  6689  05FE  0021               	movlb	1	; select bank1
  6690  05FF  01B3               	clrf	stuffIntToCharsBuf@neg^(0+128)
  6691  0600  01B4               	clrf	(stuffIntToCharsBuf@neg+1)^(0+128)
  6692  0601                     l3233:
  6693                           
  6694                           ;main.c: 398:   if (num < 0) {
  6695  0601  1FA4               	btfss	(stuffIntToCharsBuf@num+1)^(0+128),7
  6696  0602  2E04               	goto	u2971
  6697  0603  2E05               	goto	u2970
  6698  0604                     u2971:
  6699  0604  2E18               	goto	l3241
  6700  0605                     u2970:
  6701  0605                     l3235:
  6702                           
  6703                           ;main.c: 399:     neg = 1;
  6704  0605  3001               	movlw	1
  6705  0606  00B3               	movwf	stuffIntToCharsBuf@neg^(0+128)
  6706  0607  3000               	movlw	0
  6707  0608  00B4               	movwf	(stuffIntToCharsBuf@neg^(0+128)+1)
  6708  0609                     l3237:
  6709                           
  6710                           ;main.c: 400:     buf[0+pos]= 45;
  6711  0609  302D               	movlw	45
  6712  060A  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  6713  060B  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  6714  060C  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  6715  060D  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  6716  060E  0829               	movf	(??_stuffIntToCharsBuf+1)^(0+128),w
  6717  060F  0086               	movwf	6
  6718  0610  0187               	clrf	7
  6719  0611  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  6720  0612  0081               	movwf	1
  6721  0613                     l3239:
  6722                           
  6723                           ;main.c: 401:     num= num*(-1);
  6724  0613  09A3               	comf	stuffIntToCharsBuf@num^(0+128),f
  6725  0614  09A4               	comf	(stuffIntToCharsBuf@num+1)^(0+128),f
  6726  0615  0AA3               	incf	stuffIntToCharsBuf@num^(0+128),f
  6727  0616  1903               	skipnz
  6728  0617  0AA4               	incf	(stuffIntToCharsBuf@num+1)^(0+128),f
  6729  0618                     l3241:
  6730                           
  6731                           ;main.c: 404:   dig1 = num/1000;
  6732  0618  30E8               	movlw	232
  6733  0619  00F0               	movwf	___awdiv@divisor
  6734  061A  3003               	movlw	3
  6735  061B  00F1               	movwf	___awdiv@divisor+1
  6736  061C  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  6737  061D  00F3               	movwf	___awdiv@dividend+1
  6738  061E  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  6739  061F  00F2               	movwf	___awdiv@dividend
  6740  0620  318B  235A  3185   	fcall	___awdiv
  6741  0623  0871               	movf	?___awdiv+1,w
  6742  0624  0021               	movlb	1	; select bank1
  6743  0625  00AE               	movwf	(stuffIntToCharsBuf@dig1+1)^(0+128)
  6744  0626  0870               	movf	?___awdiv,w
  6745  0627  00AD               	movwf	stuffIntToCharsBuf@dig1^(0+128)
  6746  0628                     l3243:
  6747                           
  6748                           ;main.c: 405:   num = num - dig1*1000;
  6749  0628  082E               	movf	(stuffIntToCharsBuf@dig1+1)^(0+128),w
  6750  0629  00F1               	movwf	___wmul@multiplier+1
  6751  062A  082D               	movf	stuffIntToCharsBuf@dig1^(0+128),w
  6752  062B  00F0               	movwf	___wmul@multiplier
  6753  062C  3018               	movlw	24
  6754  062D  00F2               	movwf	___wmul@multiplicand
  6755  062E  30FC               	movlw	252
  6756  062F  00F3               	movwf	___wmul@multiplicand+1
  6757  0630  3197  278C  3185   	fcall	___wmul
  6758  0633  0021               	movlb	1	; select bank1
  6759  0634  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  6760  0635  0770               	addwf	?___wmul,w
  6761  0636  00A3               	movwf	stuffIntToCharsBuf@num^(0+128)
  6762  0637  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  6763  0638  3D71               	addwfc	?___wmul+1,w
  6764  0639  00A4               	movwf	(stuffIntToCharsBuf@num+1)^(0+128)
  6765  063A                     l3245:
  6766                           
  6767                           ;main.c: 406:   dig2 = num /100;
  6768  063A  3064               	movlw	100
  6769  063B  00F0               	movwf	___awdiv@divisor
  6770  063C  3000               	movlw	0
  6771  063D  00F1               	movwf	___awdiv@divisor+1
  6772  063E  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  6773  063F  00F3               	movwf	___awdiv@dividend+1
  6774  0640  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  6775  0641  00F2               	movwf	___awdiv@dividend
  6776  0642  318B  235A  3185   	fcall	___awdiv
  6777  0645  0871               	movf	?___awdiv+1,w
  6778  0646  0021               	movlb	1	; select bank1
  6779  0647  00B0               	movwf	(stuffIntToCharsBuf@dig2+1)^(0+128)
  6780  0648  0870               	movf	?___awdiv,w
  6781  0649  00AF               	movwf	stuffIntToCharsBuf@dig2^(0+128)
  6782  064A                     l3247:
  6783                           
  6784                           ;main.c: 407:   num = num - dig2*100;
  6785  064A  0830               	movf	(stuffIntToCharsBuf@dig2+1)^(0+128),w
  6786  064B  00F1               	movwf	___wmul@multiplier+1
  6787  064C  082F               	movf	stuffIntToCharsBuf@dig2^(0+128),w
  6788  064D  00F0               	movwf	___wmul@multiplier
  6789  064E  309C               	movlw	156
  6790  064F  00F2               	movwf	___wmul@multiplicand
  6791  0650  30FF               	movlw	255
  6792  0651  00F3               	movwf	___wmul@multiplicand+1
  6793  0652  3197  278C  3185   	fcall	___wmul
  6794  0655  0021               	movlb	1	; select bank1
  6795  0656  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  6796  0657  0770               	addwf	?___wmul,w
  6797  0658  00A3               	movwf	stuffIntToCharsBuf@num^(0+128)
  6798  0659  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  6799  065A  3D71               	addwfc	?___wmul+1,w
  6800  065B  00A4               	movwf	(stuffIntToCharsBuf@num+1)^(0+128)
  6801  065C                     l3249:
  6802                           
  6803                           ;main.c: 408:   dig3 = num / 10;
  6804  065C  300A               	movlw	10
  6805  065D  00F0               	movwf	___awdiv@divisor
  6806  065E  3000               	movlw	0
  6807  065F  00F1               	movwf	___awdiv@divisor+1
  6808  0660  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  6809  0661  00F3               	movwf	___awdiv@dividend+1
  6810  0662  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  6811  0663  00F2               	movwf	___awdiv@dividend
  6812  0664  318B  235A  3185   	fcall	___awdiv
  6813  0667  0871               	movf	?___awdiv+1,w
  6814  0668  0021               	movlb	1	; select bank1
  6815  0669  00B2               	movwf	(stuffIntToCharsBuf@dig3+1)^(0+128)
  6816  066A  0870               	movf	?___awdiv,w
  6817  066B  00B1               	movwf	stuffIntToCharsBuf@dig3^(0+128)
  6818  066C                     l3251:
  6819                           
  6820                           ;main.c: 409:   dig4 = num - dig3*10;
  6821  066C  0832               	movf	(stuffIntToCharsBuf@dig3+1)^(0+128),w
  6822  066D  00F1               	movwf	___wmul@multiplier+1
  6823  066E  0831               	movf	stuffIntToCharsBuf@dig3^(0+128),w
  6824  066F  00F0               	movwf	___wmul@multiplier
  6825  0670  30F6               	movlw	246
  6826  0671  00F2               	movwf	___wmul@multiplicand
  6827  0672  30FF               	movlw	255
  6828  0673  00F3               	movwf	___wmul@multiplicand+1
  6829  0674  3197  278C  3185   	fcall	___wmul
  6830  0677  0021               	movlb	1	; select bank1
  6831  0678  0823               	movf	stuffIntToCharsBuf@num^(0+128),w
  6832  0679  0770               	addwf	?___wmul,w
  6833  067A  00AB               	movwf	stuffIntToCharsBuf@dig4^(0+128)
  6834  067B  0824               	movf	(stuffIntToCharsBuf@num+1)^(0+128),w
  6835  067C  3D71               	addwfc	?___wmul+1,w
  6836  067D  00AC               	movwf	(stuffIntToCharsBuf@dig4+1)^(0+128)
  6837  067E                     l3253:
  6838                           
  6839                           ;main.c: 411:   printf("dig1 dig2 dig3 dig4\n");
  6840  067E  3018               	movlw	low (STR_2| (0+32768))
  6841  067F  0020               	movlb	0	; select bank0
  6842  0680  00E6               	movwf	printf@fmt
  6843  0681  3098               	movlw	high (STR_2| (0+32768))
  6844  0682  00E7               	movwf	printf@fmt+1
  6845  0683  3188  2002  3185   	fcall	_printf
  6846  0686                     l3255:
  6847                           
  6848                           ;main.c: 412:   printf("  %d   %d   %d   %d   \n", dig1, dig2, dig3, dig4);
  6849  0686  3000               	movlw	low (STR_3| (0+32768))
  6850  0687  0020               	movlb	0	; select bank0
  6851  0688  00E6               	movwf	printf@fmt
  6852  0689  3098               	movlw	high (STR_3| (0+32768))
  6853  068A  00E7               	movwf	printf@fmt+1
  6854  068B  0021               	movlb	1	; select bank1
  6855  068C  082E               	movf	(stuffIntToCharsBuf@dig1+1)^(0+128),w
  6856  068D  0020               	movlb	0	; select bank0
  6857  068E  00E9               	movwf	?_printf+3
  6858  068F  0021               	movlb	1	; select bank1
  6859  0690  082D               	movf	stuffIntToCharsBuf@dig1^(0+128),w
  6860  0691  0020               	movlb	0	; select bank0
  6861  0692  00E8               	movwf	?_printf+2
  6862  0693  0021               	movlb	1	; select bank1
  6863  0694  0830               	movf	(stuffIntToCharsBuf@dig2+1)^(0+128),w
  6864  0695  0020               	movlb	0	; select bank0
  6865  0696  00EB               	movwf	?_printf+5
  6866  0697  0021               	movlb	1	; select bank1
  6867  0698  082F               	movf	stuffIntToCharsBuf@dig2^(0+128),w
  6868  0699  0020               	movlb	0	; select bank0
  6869  069A  00EA               	movwf	?_printf+4
  6870  069B  0021               	movlb	1	; select bank1
  6871  069C  0832               	movf	(stuffIntToCharsBuf@dig3+1)^(0+128),w
  6872  069D  0020               	movlb	0	; select bank0
  6873  069E  00ED               	movwf	?_printf+7
  6874  069F  0021               	movlb	1	; select bank1
  6875  06A0  0831               	movf	stuffIntToCharsBuf@dig3^(0+128),w
  6876  06A1  0020               	movlb	0	; select bank0
  6877  06A2  00EC               	movwf	?_printf+6
  6878  06A3  0021               	movlb	1	; select bank1
  6879  06A4  082C               	movf	(stuffIntToCharsBuf@dig4+1)^(0+128),w
  6880  06A5  0020               	movlb	0	; select bank0
  6881  06A6  00EF               	movwf	?_printf+9
  6882  06A7  0021               	movlb	1	; select bank1
  6883  06A8  082B               	movf	stuffIntToCharsBuf@dig4^(0+128),w
  6884  06A9  0020               	movlb	0	; select bank0
  6885  06AA  00EE               	movwf	?_printf+8
  6886  06AB  3188  2002  3185   	fcall	_printf
  6887  06AE                     l3257:
  6888                           
  6889                           ;main.c: 415:   buf[0+pos+neg] = dig1+48;
  6890  06AE  0021               	movlb	1	; select bank1
  6891  06AF  082D               	movf	stuffIntToCharsBuf@dig1^(0+128),w
  6892  06B0  3E30               	addlw	48
  6893  06B1  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  6894  06B2  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  6895  06B3  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  6896  06B4  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  6897  06B5  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  6898  06B6  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  6899  06B7  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  6900  06B8  082A               	movf	(??_stuffIntToCharsBuf+2)^(0+128),w
  6901  06B9  0086               	movwf	6
  6902  06BA  0187               	clrf	7
  6903  06BB  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  6904  06BC  0081               	movwf	1
  6905  06BD                     l3259:
  6906                           
  6907                           ;main.c: 416:   buf[1+pos+neg] = dig2+48;
  6908  06BD  082F               	movf	stuffIntToCharsBuf@dig2^(0+128),w
  6909  06BE  3E30               	addlw	48
  6910  06BF  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  6911  06C0  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  6912  06C1  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  6913  06C2  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  6914  06C3  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  6915  06C4  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  6916  06C5  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  6917  06C6  0A2A               	incf	(??_stuffIntToCharsBuf+2)^(0+128),w
  6918  06C7  0086               	movwf	6
  6919  06C8  0187               	clrf	7
  6920  06C9  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  6921  06CA  0081               	movwf	1
  6922  06CB                     l3261:
  6923                           
  6924                           ;main.c: 417:   buf[2+pos+neg] = dig3+48;
  6925  06CB  0831               	movf	stuffIntToCharsBuf@dig3^(0+128),w
  6926  06CC  3E30               	addlw	48
  6927  06CD  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  6928  06CE  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  6929  06CF  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  6930  06D0  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  6931  06D1  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  6932  06D2  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  6933  06D3  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  6934  06D4  082A               	movf	(??_stuffIntToCharsBuf+2)^(0+128),w
  6935  06D5  3E02               	addlw	2
  6936  06D6  0086               	movwf	6
  6937  06D7  0187               	clrf	7
  6938  06D8  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  6939  06D9  0081               	movwf	1
  6940  06DA                     l3263:
  6941                           
  6942                           ;main.c: 418:   buf[3+pos+neg] = dig4+48;
  6943  06DA  082B               	movf	stuffIntToCharsBuf@dig4^(0+128),w
  6944  06DB  3E30               	addlw	48
  6945  06DC  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  6946  06DD  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  6947  06DE  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  6948  06DF  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  6949  06E0  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  6950  06E1  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  6951  06E2  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  6952  06E3  082A               	movf	(??_stuffIntToCharsBuf+2)^(0+128),w
  6953  06E4  3E03               	addlw	3
  6954  06E5  0086               	movwf	6
  6955  06E6  0187               	clrf	7
  6956  06E7  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  6957  06E8  0081               	movwf	1
  6958  06E9                     l3265:
  6959                           
  6960                           ;main.c: 420:   if (dig1 == 0){
  6961  06E9  082D               	movf	stuffIntToCharsBuf@dig1^(0+128),w
  6962  06EA  042E               	iorwf	(stuffIntToCharsBuf@dig1+1)^(0+128),w
  6963  06EB  1D03               	btfss	3,2
  6964  06EC  2EEE               	goto	u2981
  6965  06ED  2EEF               	goto	u2980
  6966  06EE                     u2981:
  6967  06EE  2F23               	goto	l365
  6968  06EF                     u2980:
  6969  06EF                     l3267:
  6970                           
  6971                           ;main.c: 421:     buf[0+pos+neg] = ' ';
  6972  06EF  3020               	movlw	32
  6973  06F0  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  6974  06F1  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  6975  06F2  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  6976  06F3  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  6977  06F4  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  6978  06F5  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  6979  06F6  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  6980  06F7  082A               	movf	(??_stuffIntToCharsBuf+2)^(0+128),w
  6981  06F8  0086               	movwf	6
  6982  06F9  0187               	clrf	7
  6983  06FA  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  6984  06FB  0081               	movwf	1
  6985  06FC                     l3269:
  6986                           
  6987                           ;main.c: 422:     if (dig2 == 0){
  6988  06FC  082F               	movf	stuffIntToCharsBuf@dig2^(0+128),w
  6989  06FD  0430               	iorwf	(stuffIntToCharsBuf@dig2+1)^(0+128),w
  6990  06FE  1D03               	btfss	3,2
  6991  06FF  2F01               	goto	u2991
  6992  0700  2F02               	goto	u2990
  6993  0701                     u2991:
  6994  0701  2F23               	goto	l365
  6995  0702                     u2990:
  6996  0702                     l3271:
  6997                           
  6998                           ;main.c: 423:       buf[1+pos+neg] = ' ';
  6999  0702  3020               	movlw	32
  7000  0703  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  7001  0704  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  7002  0705  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  7003  0706  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  7004  0707  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  7005  0708  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  7006  0709  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  7007  070A  0A2A               	incf	(??_stuffIntToCharsBuf+2)^(0+128),w
  7008  070B  0086               	movwf	6
  7009  070C  0187               	clrf	7
  7010  070D  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  7011  070E  0081               	movwf	1
  7012  070F                     l3273:
  7013                           
  7014                           ;main.c: 424:       if (dig3 == 0 )
  7015  070F  0831               	movf	stuffIntToCharsBuf@dig3^(0+128),w
  7016  0710  0432               	iorwf	(stuffIntToCharsBuf@dig3+1)^(0+128),w
  7017  0711  1D03               	btfss	3,2
  7018  0712  2F14               	goto	u3001
  7019  0713  2F15               	goto	u3000
  7020  0714                     u3001:
  7021  0714  2F23               	goto	l365
  7022  0715                     u3000:
  7023  0715                     l3275:
  7024                           
  7025                           ;main.c: 425:         buf[2+pos+neg] = ' ';
  7026  0715  3020               	movlw	32
  7027  0716  00A8               	movwf	??_stuffIntToCharsBuf^(0+128)
  7028  0717  0826               	movf	stuffIntToCharsBuf@pos^(0+128),w
  7029  0718  0725               	addwf	stuffIntToCharsBuf@buf^(0+128),w
  7030  0719  00A9               	movwf	(??_stuffIntToCharsBuf+1)^(0+128)
  7031  071A  0833               	movf	stuffIntToCharsBuf@neg^(0+128),w
  7032  071B  0729               	addwf	(??_stuffIntToCharsBuf+1)^(0+128),w
  7033  071C  00AA               	movwf	(??_stuffIntToCharsBuf+2)^(0+128)
  7034  071D  082A               	movf	(??_stuffIntToCharsBuf+2)^(0+128),w
  7035  071E  3E02               	addlw	2
  7036  071F  0086               	movwf	6
  7037  0720  0187               	clrf	7
  7038  0721  0828               	movf	??_stuffIntToCharsBuf^(0+128),w
  7039  0722  0081               	movwf	1
  7040  0723                     l365:
  7041  0723  0008               	return
  7042  0724                     __end_of_stuffIntToCharsBuf:
  7043                           
  7044                           	psect	text2
  7045  0802                     __ptext2:	
  7046 ;; *************** function _printf *****************
  7047 ;; Defined at:
  7048 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  7051 ;;		 -> STR_3(24), STR_2(21), STR_1(9), 
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;  ret             2    0        int 
  7054 ;;  ap              1    2[BANK1 ] PTR void [1]
  7055 ;;		 -> ?_printf(2), 
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  2   70[BANK0 ] int 
  7058 ;; Registers used:
  7059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7065 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7066 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7068 ;;      Totals:         1      10       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7069 ;;Total ram usage:       14 bytes
  7070 ;; Hardware stack levels used:    1
  7071 ;; Hardware stack levels required when called:   11
  7072 ;; This function calls:
  7073 ;;		_vfprintf
  7074 ;; This function is called by:
  7075 ;;		_stuffIntToCharsBuf
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           
  7080                           ;psect for function _printf
  7081  0802                     _printf:
  7082  0802                     l2945:	
  7083                           ;incstack = 0
  7084                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7085                           
  7086  0802  3068               	movlw	(low ((?_printf| 0+2)))& (0+255)
  7087  0803  00FD               	movwf	??_printf
  7088  0804  087D               	movf	??_printf,w
  7089  0805  0021               	movlb	1	; select bank1
  7090  0806  00A2               	movwf	printf@ap^(0+128)
  7091  0807                     l2947:
  7092  0807  0020               	movlb	0	; select bank0
  7093  0808  0867               	movf	printf@fmt+1,w
  7094  0809  00DF               	movwf	vfprintf@fmt+1
  7095  080A  0866               	movf	printf@fmt,w
  7096  080B  00DE               	movwf	vfprintf@fmt
  7097  080C  30A2               	movlw	(low (printf@ap| 0))& (0+255)
  7098  080D  00FD               	movwf	??_printf
  7099  080E  087D               	movf	??_printf,w
  7100  080F  00E0               	movwf	vfprintf@ap
  7101  0810  3000               	movlw	0
  7102  0811  3188  2043  3188   	fcall	_vfprintf
  7103  0814                     l1055:
  7104  0814  0008               	return
  7105  0815                     __end_of_printf:
  7106                           
  7107                           	psect	text3
  7108  0843                     __ptext3:	
  7109 ;; *************** function _vfprintf *****************
  7110 ;; Defined at:
  7111 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;  fp              1    wreg     PTR struct _IO_FILE
  7114 ;;		 -> NULL(0), 
  7115 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  7116 ;;		 -> STR_3(24), STR_2(21), STR_1(9), 
  7117 ;;  ap              1   64[BANK0 ] PTR PTR void 
  7118 ;;		 -> printf@ap(1), 
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  7121 ;;		 -> NULL(0), 
  7122 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  7123 ;;		 -> STR_3(24), STR_2(21), STR_1(9), 
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  2   62[BANK0 ] int 
  7126 ;; Registers used:
  7127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7133 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7134 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7135 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7136 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7137 ;;Total ram usage:        8 bytes
  7138 ;; Hardware stack levels used:    1
  7139 ;; Hardware stack levels required when called:   10
  7140 ;; This function calls:
  7141 ;;		_vfpfcnvrt
  7142 ;; This function is called by:
  7143 ;;		_printf
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           
  7148                           ;psect for function _vfprintf
  7149  0843                     _vfprintf:
  7150                           
  7151                           ;incstack = 0
  7152                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7153                           ;vfprintf@fp stored from wreg
  7154  0843  0020               	movlb	0	; select bank0
  7155  0844  00E3               	movwf	vfprintf@fp
  7156  0845                     l2823:
  7157                           
  7158                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  7159  0845  085F               	movf	vfprintf@fmt+1,w
  7160  0846  00E5               	movwf	vfprintf@cfmt+1
  7161  0847  085E               	movf	vfprintf@fmt,w
  7162  0848  00E4               	movwf	vfprintf@cfmt
  7163  0849                     l2825:
  7164                           
  7165                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  7166  0849  0021               	movlb	1	; select bank1
  7167  084A  01D1               	clrf	_nout^(0+128)
  7168  084B  01D2               	clrf	(_nout+1)^(0+128)
  7169                           
  7170                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7171  084C  2861               	goto	l2829
  7172  084D                     l2827:
  7173                           
  7174                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  7175  084D  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  7176  084E  00E1               	movwf	??_vfprintf
  7177  084F  0861               	movf	??_vfprintf,w
  7178  0850  00CE               	movwf	vfpfcnvrt@fmt
  7179  0851  0860               	movf	vfprintf@ap,w
  7180  0852  00E2               	movwf	??_vfprintf+1
  7181  0853  0862               	movf	??_vfprintf+1,w
  7182  0854  00CF               	movwf	vfpfcnvrt@ap
  7183  0855  0863               	movf	vfprintf@fp,w
  7184  0856  3187  2724  3188   	fcall	_vfpfcnvrt
  7185  0859  0020               	movlb	0	; select bank0
  7186  085A  084E               	movf	?_vfpfcnvrt,w
  7187  085B  0021               	movlb	1	; select bank1
  7188  085C  07D1               	addwf	_nout^(0+128),f
  7189  085D  0020               	movlb	0	; select bank0
  7190  085E  084F               	movf	?_vfpfcnvrt+1,w
  7191  085F  0021               	movlb	1	; select bank1
  7192  0860  3DD2               	addwfc	(_nout+1)^(0+128),f
  7193  0861                     l2829:
  7194                           
  7195                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7196  0861  0020               	movlb	0	; select bank0
  7197  0862  0864               	movf	vfprintf@cfmt,w
  7198  0863  0084               	movwf	4
  7199  0864  0865               	movf	vfprintf@cfmt+1,w
  7200  0865  0085               	movwf	5
  7201  0866  0012               	moviw fsr0++
  7202  0867  1D03               	btfss	3,2
  7203  0868  286A               	goto	u2331
  7204  0869  286B               	goto	u2330
  7205  086A                     u2331:
  7206  086A  284D               	goto	l2827
  7207  086B                     u2330:
  7208  086B                     l2831:
  7209                           
  7210                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  7211  086B  0021               	movlb	1	; select bank1
  7212  086C  0852               	movf	(_nout+1)^(0+128),w
  7213  086D  0020               	movlb	0	; select bank0
  7214  086E  00DF               	movwf	?_vfprintf+1
  7215  086F  0021               	movlb	1	; select bank1
  7216  0870  0851               	movf	_nout^(0+128),w
  7217  0871  0020               	movlb	0	; select bank0
  7218  0872  00DE               	movwf	?_vfprintf
  7219  0873                     l1127:
  7220  0873  0008               	return
  7221  0874                     __end_of_vfprintf:
  7222                           
  7223                           	psect	text4
  7224  0724                     __ptext4:	
  7225 ;; *************** function _vfpfcnvrt *****************
  7226 ;; Defined at:
  7227 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  7228 ;; Parameters:    Size  Location     Type
  7229 ;;  fp              1    wreg     PTR struct _IO_FILE
  7230 ;;		 -> NULL(0), 
  7231 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  7232 ;;		 -> vfprintf@cfmt(2), 
  7233 ;;  ap              1   47[BANK0 ] PTR PTR void 
  7234 ;;		 -> printf@ap(1), 
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  7237 ;;		 -> NULL(0), 
  7238 ;;  ll              8   53[BANK0 ] long long 
  7239 ;;  llu             8    0        unsigned long long 
  7240 ;;  f               4    0        unsigned long long 
  7241 ;;  ct              3    0        unsigned char [3]
  7242 ;;  vp              2    0        PTR void 
  7243 ;;  i               2    0        int 
  7244 ;;  done            2    0        int 
  7245 ;;  cp              2    0        PTR unsigned char 
  7246 ;;  c               1    0        unsigned char 
  7247 ;; Return value:  Size  Location     Type
  7248 ;;                  2   46[BANK0 ] int 
  7249 ;; Registers used:
  7250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7251 ;; Tracked objects:
  7252 ;;		On entry : 0/0
  7253 ;;		On exit  : 0/0
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7256 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7257 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7258 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7259 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7260 ;;Total ram usage:       16 bytes
  7261 ;; Hardware stack levels used:    1
  7262 ;; Hardware stack levels required when called:    9
  7263 ;; This function calls:
  7264 ;;		_dtoa
  7265 ;;		_fputc
  7266 ;; This function is called by:
  7267 ;;		_vfprintf
  7268 ;; This function uses a non-reentrant model
  7269 ;;
  7270                           
  7271                           
  7272                           ;psect for function _vfpfcnvrt
  7273  0724                     _vfpfcnvrt:
  7274                           
  7275                           ;incstack = 0
  7276                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7277                           ;vfpfcnvrt@fp stored from wreg
  7278  0724  0020               	movlb	0	; select bank0
  7279  0725  00DD               	movwf	vfpfcnvrt@fp
  7280  0726                     l2705:
  7281                           
  7282                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  7283  0726  084E               	movf	vfpfcnvrt@fmt,w
  7284  0727  0086               	movwf	6
  7285  0728  0187               	clrf	7
  7286  0729  3F40               	moviw [0]fsr1
  7287  072A  00D0               	movwf	??_vfpfcnvrt
  7288  072B  3F41               	moviw [1]fsr1
  7289  072C  00D1               	movwf	??_vfpfcnvrt+1
  7290  072D  0850               	movf	??_vfpfcnvrt,w
  7291  072E  0084               	movwf	4
  7292  072F  0851               	movf	??_vfpfcnvrt+1,w
  7293  0730  0085               	movwf	5
  7294  0731  0012               	moviw fsr0++
  7295  0732  3A25               	xorlw	37
  7296  0733  1D03               	btfss	3,2
  7297  0734  2F36               	goto	u2291
  7298  0735  2F37               	goto	u2290
  7299  0736                     u2291:
  7300  0736  2FDB               	goto	l2741
  7301  0737                     u2290:
  7302  0737                     l2707:
  7303                           
  7304                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  7305  0737  084E               	movf	vfpfcnvrt@fmt,w
  7306  0738  0086               	movwf	6
  7307  0739  0187               	clrf	7
  7308  073A  3001               	movlw	1
  7309  073B  0781               	addwf	1,f
  7310  073C  3141               	addfsr 1,1
  7311  073D  1803               	skipnc
  7312  073E  0A81               	incf	1,f
  7313  073F                     l2709:
  7314                           
  7315                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  7316  073F  0021               	movlb	1	; select bank1
  7317  0740  01D3               	clrf	_width^(0+128)
  7318  0741  01D4               	clrf	(_width+1)^(0+128)
  7319  0742  01D7               	clrf	_flags^(0+128)
  7320  0743  01D8               	clrf	(_flags+1)^(0+128)
  7321  0744                     l2711:
  7322                           
  7323                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  7324  0744  30FF               	movlw	255
  7325  0745  00D5               	movwf	_prec^(0+128)
  7326  0746  30FF               	movlw	255
  7327  0747  00D6               	movwf	(_prec^(0+128)+1)
  7328  0748                     l2713:
  7329                           
  7330                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7331  0748  0020               	movlb	0	; select bank0
  7332  0749  084E               	movf	vfpfcnvrt@fmt,w
  7333  074A  0086               	movwf	6
  7334  074B  0187               	clrf	7
  7335  074C  3F40               	moviw [0]fsr1
  7336  074D  00D0               	movwf	??_vfpfcnvrt
  7337  074E  3F41               	moviw [1]fsr1
  7338  074F  00D1               	movwf	??_vfpfcnvrt+1
  7339  0750  0850               	movf	??_vfpfcnvrt,w
  7340  0751  0084               	movwf	4
  7341  0752  0851               	movf	??_vfpfcnvrt+1,w
  7342  0753  0085               	movwf	5
  7343  0754  0012               	moviw fsr0++
  7344  0755  3A64               	xorlw	100
  7345  0756  1903               	btfsc	3,2
  7346  0757  2F59               	goto	u2301
  7347  0758  2F5A               	goto	u2300
  7348  0759                     u2301:
  7349  0759  2F6B               	goto	l2717
  7350  075A                     u2300:
  7351  075A                     l2715:
  7352  075A  084E               	movf	vfpfcnvrt@fmt,w
  7353  075B  0086               	movwf	6
  7354  075C  0187               	clrf	7
  7355  075D  3F40               	moviw [0]fsr1
  7356  075E  00D0               	movwf	??_vfpfcnvrt
  7357  075F  3F41               	moviw [1]fsr1
  7358  0760  00D1               	movwf	??_vfpfcnvrt+1
  7359  0761  0850               	movf	??_vfpfcnvrt,w
  7360  0762  0084               	movwf	4
  7361  0763  0851               	movf	??_vfpfcnvrt+1,w
  7362  0764  0085               	movwf	5
  7363  0765  0012               	moviw fsr0++
  7364  0766  3A69               	xorlw	105
  7365  0767  1D03               	btfss	3,2
  7366  0768  2F6A               	goto	u2311
  7367  0769  2F6B               	goto	u2310
  7368  076A                     u2311:
  7369  076A  2FA6               	goto	l2725
  7370  076B                     u2310:
  7371  076B                     l2717:
  7372                           
  7373                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7374  076B  084E               	movf	vfpfcnvrt@fmt,w
  7375  076C  0086               	movwf	6
  7376  076D  0187               	clrf	7
  7377  076E  3001               	movlw	1
  7378  076F  0781               	addwf	1,f
  7379  0770  3141               	addfsr 1,1
  7380  0771  1803               	skipnc
  7381  0772  0A81               	incf	1,f
  7382  0773                     l2719:
  7383                           
  7384                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7385  0773  084F               	movf	vfpfcnvrt@ap,w
  7386  0774  0086               	movwf	6
  7387  0775  0187               	clrf	7
  7388  0776  0801               	movf	1,w
  7389  0777  0084               	movwf	4
  7390  0778  0185               	clrf	5
  7391  0779  3002               	movlw	2
  7392  077A  0781               	addwf	1,f
  7393  077B  3F00               	moviw [0]fsr0
  7394  077C  00D0               	movwf	??_vfpfcnvrt
  7395  077D  3F01               	moviw [1]fsr0
  7396  077E  00D1               	movwf	??_vfpfcnvrt+1
  7397  077F  0850               	movf	??_vfpfcnvrt,w
  7398  0780  00D5               	movwf	vfpfcnvrt@ll
  7399  0781  0851               	movf	??_vfpfcnvrt+1,w
  7400  0782  00D6               	movwf	vfpfcnvrt@ll+1
  7401  0783  0D89               	rlf	9,f
  7402  0784  3B89               	subwfb	9,f
  7403  0785  0989               	comf	9,f
  7404  0786  00D7               	movwf	vfpfcnvrt@ll+2
  7405  0787  00D8               	movwf	vfpfcnvrt@ll+3
  7406  0788  00D9               	movwf	vfpfcnvrt@ll+4
  7407  0789  00DA               	movwf	vfpfcnvrt@ll+5
  7408  078A  00DB               	movwf	vfpfcnvrt@ll+6
  7409  078B  00DC               	movwf	vfpfcnvrt@ll+7
  7410  078C                     l2721:
  7411                           
  7412                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7413  078C  0855               	movf	vfpfcnvrt@ll,w
  7414  078D  00B0               	movwf	dtoa@d
  7415  078E  0856               	movf	vfpfcnvrt@ll+1,w
  7416  078F  00B1               	movwf	dtoa@d+1
  7417  0790  0857               	movf	vfpfcnvrt@ll+2,w
  7418  0791  00B2               	movwf	dtoa@d+2
  7419  0792  0858               	movf	vfpfcnvrt@ll+3,w
  7420  0793  00B3               	movwf	dtoa@d+3
  7421  0794  0859               	movf	vfpfcnvrt@ll+4,w
  7422  0795  00B4               	movwf	dtoa@d+4
  7423  0796  085A               	movf	vfpfcnvrt@ll+5,w
  7424  0797  00B5               	movwf	dtoa@d+5
  7425  0798  085B               	movf	vfpfcnvrt@ll+6,w
  7426  0799  00B6               	movwf	dtoa@d+6
  7427  079A  085C               	movf	vfpfcnvrt@ll+7,w
  7428  079B  00B7               	movwf	dtoa@d+7
  7429  079C  085D               	movf	vfpfcnvrt@fp,w
  7430  079D  3184  247E  3187   	fcall	_dtoa
  7431  07A0  0020               	movlb	0	; select bank0
  7432  07A1  0831               	movf	?_dtoa+1,w
  7433  07A2  00CF               	movwf	?_vfpfcnvrt+1
  7434  07A3  0830               	movf	?_dtoa,w
  7435  07A4  00CE               	movwf	?_vfpfcnvrt
  7436  07A5  2FFE               	goto	l1120
  7437  07A6                     l2725:
  7438                           
  7439                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7440  07A6  084E               	movf	vfpfcnvrt@fmt,w
  7441  07A7  0086               	movwf	6
  7442  07A8  0187               	clrf	7
  7443  07A9  3F40               	moviw [0]fsr1
  7444  07AA  00D0               	movwf	??_vfpfcnvrt
  7445  07AB  3F41               	moviw [1]fsr1
  7446  07AC  00D1               	movwf	??_vfpfcnvrt+1
  7447  07AD  0850               	movf	??_vfpfcnvrt,w
  7448  07AE  0084               	movwf	4
  7449  07AF  0851               	movf	??_vfpfcnvrt+1,w
  7450  07B0  0085               	movwf	5
  7451  07B1  0012               	moviw fsr0++
  7452  07B2  3A25               	xorlw	37
  7453  07B3  1D03               	btfss	3,2
  7454  07B4  2FB6               	goto	u2321
  7455  07B5  2FB7               	goto	u2320
  7456  07B6                     u2321:
  7457  07B6  2FD0               	goto	l2735
  7458  07B7                     u2320:
  7459  07B7                     l2727:
  7460                           
  7461                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7462  07B7  084E               	movf	vfpfcnvrt@fmt,w
  7463  07B8  0086               	movwf	6
  7464  07B9  0187               	clrf	7
  7465  07BA  3001               	movlw	1
  7466  07BB  0781               	addwf	1,f
  7467  07BC  3141               	addfsr 1,1
  7468  07BD  1803               	skipnc
  7469  07BE  0A81               	incf	1,f
  7470  07BF                     l2729:
  7471                           
  7472                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7473  07BF  3025               	movlw	37
  7474  07C0  00F0               	movwf	fputc@c
  7475  07C1  3000               	movlw	0
  7476  07C2  00F1               	movwf	fputc@c+1
  7477  07C3  085D               	movf	vfpfcnvrt@fp,w
  7478  07C4  00D0               	movwf	??_vfpfcnvrt
  7479  07C5  0850               	movf	??_vfpfcnvrt,w
  7480  07C6  00F2               	movwf	fputc@fp
  7481  07C7  3188  20DA  3187   	fcall	_fputc
  7482  07CA                     l2731:
  7483                           
  7484                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7485  07CA  3001               	movlw	1
  7486  07CB  0020               	movlb	0	; select bank0
  7487  07CC  00CE               	movwf	?_vfpfcnvrt
  7488  07CD  3000               	movlw	0
  7489  07CE  00CF               	movwf	?_vfpfcnvrt+1
  7490  07CF  2FFE               	goto	l1120
  7491  07D0                     l2735:
  7492                           
  7493                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7494  07D0  084E               	movf	vfpfcnvrt@fmt,w
  7495  07D1  0086               	movwf	6
  7496  07D2  0187               	clrf	7
  7497  07D3  3001               	movlw	1
  7498  07D4  0781               	addwf	1,f
  7499  07D5  3141               	addfsr 1,1
  7500  07D6  1803               	skipnc
  7501  07D7  0A81               	incf	1,f
  7502  07D8                     l2737:
  7503                           
  7504                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7505  07D8  01CE               	clrf	?_vfpfcnvrt
  7506  07D9  01CF               	clrf	?_vfpfcnvrt+1
  7507  07DA  2FFE               	goto	l1120
  7508  07DB                     l2741:
  7509                           
  7510                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7511  07DB  084E               	movf	vfpfcnvrt@fmt,w
  7512  07DC  0086               	movwf	6
  7513  07DD  0187               	clrf	7
  7514  07DE  3F40               	moviw [0]fsr1
  7515  07DF  00D0               	movwf	??_vfpfcnvrt
  7516  07E0  3F41               	moviw [1]fsr1
  7517  07E1  00D1               	movwf	??_vfpfcnvrt+1
  7518  07E2  0850               	movf	??_vfpfcnvrt,w
  7519  07E3  0084               	movwf	4
  7520  07E4  0851               	movf	??_vfpfcnvrt+1,w
  7521  07E5  0085               	movwf	5
  7522  07E6  0800               	movf	0,w	;code access
  7523  07E7  00D2               	movwf	??_vfpfcnvrt+2
  7524  07E8  01D3               	clrf	??_vfpfcnvrt+3
  7525  07E9  0852               	movf	??_vfpfcnvrt+2,w
  7526  07EA  00F0               	movwf	fputc@c
  7527  07EB  0853               	movf	??_vfpfcnvrt+3,w
  7528  07EC  00F1               	movwf	fputc@c+1
  7529  07ED  085D               	movf	vfpfcnvrt@fp,w
  7530  07EE  00D4               	movwf	??_vfpfcnvrt+4
  7531  07EF  0854               	movf	??_vfpfcnvrt+4,w
  7532  07F0  00F2               	movwf	fputc@fp
  7533  07F1  3188  20DA  3187   	fcall	_fputc
  7534  07F4                     l2743:
  7535                           
  7536                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7537  07F4  0020               	movlb	0	; select bank0
  7538  07F5  084E               	movf	vfpfcnvrt@fmt,w
  7539  07F6  0086               	movwf	6
  7540  07F7  0187               	clrf	7
  7541  07F8  3001               	movlw	1
  7542  07F9  0781               	addwf	1,f
  7543  07FA  3141               	addfsr 1,1
  7544  07FB  1803               	skipnc
  7545  07FC  0A81               	incf	1,f
  7546  07FD  2FCA               	goto	l2731
  7547  07FE                     l1120:
  7548  07FE  0008               	return
  7549  07FF                     __end_of_vfpfcnvrt:
  7550                           
  7551                           	psect	text5
  7552  047E                     __ptext5:	
  7553 ;; *************** function _dtoa *****************
  7554 ;; Defined at:
  7555 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;  fp              1    wreg     PTR struct _IO_FILE
  7558 ;;		 -> NULL(0), 
  7559 ;;  d               8   16[BANK0 ] long long 
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  7562 ;;		 -> NULL(0), 
  7563 ;;  n               8   36[BANK0 ] long long 
  7564 ;;  i               2   44[BANK0 ] int 
  7565 ;;  s               2   34[BANK0 ] int 
  7566 ;;  w               2   32[BANK0 ] int 
  7567 ;;  p               2   29[BANK0 ] int 
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  2   16[BANK0 ] int 
  7570 ;; Registers used:
  7571 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7577 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7578 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7579 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7580 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7581 ;;Total ram usage:       30 bytes
  7582 ;; Hardware stack levels used:    1
  7583 ;; Hardware stack levels required when called:    8
  7584 ;; This function calls:
  7585 ;;		___aodiv
  7586 ;;		___aomod
  7587 ;;		_abs
  7588 ;;		_pad
  7589 ;; This function is called by:
  7590 ;;		_vfpfcnvrt
  7591 ;; This function uses a non-reentrant model
  7592 ;;
  7593                           
  7594                           
  7595                           ;psect for function _dtoa
  7596  047E                     _dtoa:
  7597                           
  7598                           ;incstack = 0
  7599                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7600                           ;dtoa@fp stored from wreg
  7601  047E  0020               	movlb	0	; select bank0
  7602  047F  00BF               	movwf	dtoa@fp
  7603  0480                     l2563:
  7604                           
  7605                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7606  0480  0830               	movf	dtoa@d,w
  7607  0481  00C4               	movwf	dtoa@n
  7608  0482  0831               	movf	dtoa@d+1,w
  7609  0483  00C5               	movwf	dtoa@n+1
  7610  0484  0832               	movf	dtoa@d+2,w
  7611  0485  00C6               	movwf	dtoa@n+2
  7612  0486  0833               	movf	dtoa@d+3,w
  7613  0487  00C7               	movwf	dtoa@n+3
  7614  0488  0834               	movf	dtoa@d+4,w
  7615  0489  00C8               	movwf	dtoa@n+4
  7616  048A  0835               	movf	dtoa@d+5,w
  7617  048B  00C9               	movwf	dtoa@n+5
  7618  048C  0836               	movf	dtoa@d+6,w
  7619  048D  00CA               	movwf	dtoa@n+6
  7620  048E  0837               	movf	dtoa@d+7,w
  7621  048F  00CB               	movwf	dtoa@n+7
  7622  0490                     l2565:
  7623                           
  7624                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7625  0490  3044               	movlw	low dtoa@n
  7626  0491  0086               	movwf	6
  7627  0492  3000               	movlw	high dtoa@n
  7628  0493  0087               	movwf	7
  7629  0494  3F47               	moviw [7]fsr1
  7630  0495  00B8               	movwf	??_dtoa
  7631  0496  1BB8               	btfsc	??_dtoa,7
  7632  0497  2C99               	goto	u2031
  7633  0498  2C9B               	goto	u2030
  7634  0499                     u2031:
  7635  0499  3001               	movlw	1
  7636  049A  2C9C               	goto	u2040
  7637  049B                     u2030:
  7638  049B  3000               	movlw	0
  7639  049C                     u2040:
  7640  049C  0020               	movlb	0	; select bank0
  7641  049D  00B9               	movwf	??_dtoa+1
  7642  049E  01BA               	clrf	??_dtoa+2
  7643  049F  0839               	movf	??_dtoa+1,w
  7644  04A0  00C2               	movwf	dtoa@s
  7645  04A1  083A               	movf	??_dtoa+2,w
  7646  04A2  00C3               	movwf	dtoa@s+1
  7647  04A3                     l2567:
  7648                           
  7649                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7650  04A3  0842               	movf	dtoa@s,w
  7651  04A4  0443               	iorwf	dtoa@s+1,w
  7652  04A5  1903               	btfsc	3,2
  7653  04A6  2CA8               	goto	u2051
  7654  04A7  2CA9               	goto	u2050
  7655  04A8                     u2051:
  7656  04A8  2CC7               	goto	l1090
  7657  04A9                     u2050:
  7658  04A9                     l2569:
  7659                           
  7660                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7661  04A9  09C4               	comf	dtoa@n,f
  7662  04AA  09C5               	comf	dtoa@n+1,f
  7663  04AB  09C6               	comf	dtoa@n+2,f
  7664  04AC  09C7               	comf	dtoa@n+3,f
  7665  04AD  09C8               	comf	dtoa@n+4,f
  7666  04AE  09C9               	comf	dtoa@n+5,f
  7667  04AF  09CA               	comf	dtoa@n+6,f
  7668  04B0  09CB               	comf	dtoa@n+7,f
  7669  04B1  0AC4               	incf	dtoa@n,f
  7670  04B2  1D03               	skipz
  7671  04B3  2CC7               	goto	u206lld
  7672  04B4  0AC5               	incf	dtoa@n+1,f
  7673  04B5  1D03               	skipz
  7674  04B6  2CC7               	goto	u206lld
  7675  04B7  0AC6               	incf	dtoa@n+2,f
  7676  04B8  1D03               	skipz
  7677  04B9  2CC7               	goto	u206lld
  7678  04BA  0AC7               	incf	dtoa@n+3,f
  7679  04BB  1D03               	skipz
  7680  04BC  2CC7               	goto	u206lld
  7681  04BD  0AC8               	incf	dtoa@n+4,f
  7682  04BE  1D03               	skipz
  7683  04BF  2CC7               	goto	u206lld
  7684  04C0  0AC9               	incf	dtoa@n+5,f
  7685  04C1  1D03               	skipz
  7686  04C2  2CC7               	goto	u206lld
  7687  04C3  0ACA               	incf	dtoa@n+6,f
  7688  04C4  1D03               	skipz
  7689  04C5  2CC7               	goto	u206lld
  7690  04C6  0ACB               	incf	dtoa@n+7,f
  7691  04C7                     u206lld:
  7692  04C7                     l1090:	
  7693                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 297:     }
  7694                           
  7695                           
  7696                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7697  04C7  0021               	movlb	1	; select bank1
  7698  04C8  1BD6               	btfsc	(_prec+1)^(0+128),7
  7699  04C9  2CCB               	goto	u2071
  7700  04CA  2CCC               	goto	u2070
  7701  04CB                     u2071:
  7702  04CB  2CD0               	goto	l1091
  7703  04CC                     u2070:
  7704  04CC                     l2571:
  7705                           
  7706                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7707  04CC  30FD               	movlw	253
  7708  04CD  05D7               	andwf	_flags^(0+128),f
  7709  04CE  30FF               	movlw	255
  7710  04CF  05D8               	andwf	(_flags+1)^(0+128),f
  7711  04D0                     l1091:	
  7712                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 302:     }
  7713                           
  7714                           
  7715                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7716  04D0  0856               	movf	(_prec+1)^(0+128),w
  7717  04D1  3A80               	xorlw	128
  7718  04D2  0020               	movlb	0	; select bank0
  7719  04D3  00B8               	movwf	??_dtoa
  7720  04D4  3080               	movlw	128
  7721  04D5  0238               	subwf	??_dtoa,w
  7722  04D6  1D03               	skipz
  7723  04D7  2CDB               	goto	u2085
  7724  04D8  3001               	movlw	1
  7725  04D9  0021               	movlb	1	; select bank1
  7726  04DA  0255               	subwf	_prec^(0+128),w
  7727  04DB                     u2085:
  7728  04DB  1803               	skipnc
  7729  04DC  2CDE               	goto	u2081
  7730  04DD  2CDF               	goto	u2080
  7731  04DE                     u2081:
  7732  04DE  2CE5               	goto	l2575
  7733  04DF                     u2080:
  7734  04DF                     l2573:
  7735  04DF  3001               	movlw	1
  7736  04E0  0020               	movlb	0	; select bank0
  7737  04E1  00BD               	movwf	dtoa@p
  7738  04E2  3000               	movlw	0
  7739  04E3  00BE               	movwf	dtoa@p+1
  7740  04E4  2CED               	goto	l1095
  7741  04E5                     l2575:
  7742  04E5  0021               	movlb	1	; select bank1
  7743  04E6  0856               	movf	(_prec+1)^(0+128),w
  7744  04E7  0020               	movlb	0	; select bank0
  7745  04E8  00BE               	movwf	dtoa@p+1
  7746  04E9  0021               	movlb	1	; select bank1
  7747  04EA  0855               	movf	_prec^(0+128),w
  7748  04EB  0020               	movlb	0	; select bank0
  7749  04EC  00BD               	movwf	dtoa@p
  7750  04ED                     l1095:
  7751                           
  7752                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7753  04ED  0021               	movlb	1	; select bank1
  7754  04EE  0854               	movf	(_width+1)^(0+128),w
  7755  04EF  0020               	movlb	0	; select bank0
  7756  04F0  00C1               	movwf	dtoa@w+1
  7757  04F1  0021               	movlb	1	; select bank1
  7758  04F2  0853               	movf	_width^(0+128),w
  7759  04F3  0020               	movlb	0	; select bank0
  7760  04F4  00C0               	movwf	dtoa@w
  7761  04F5                     l2577:
  7762                           
  7763                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7764  04F5  0842               	movf	dtoa@s,w
  7765  04F6  0443               	iorwf	dtoa@s+1,w
  7766  04F7  1D03               	btfss	3,2
  7767  04F8  2CFA               	goto	u2091
  7768  04F9  2CFB               	goto	u2090
  7769  04FA                     u2091:
  7770  04FA  2D00               	goto	l2581
  7771  04FB                     u2090:
  7772  04FB                     l2579:
  7773  04FB  0021               	movlb	1	; select bank1
  7774  04FC  1D57               	btfss	_flags^(0+128),2
  7775  04FD  2CFF               	goto	u2101
  7776  04FE  2D00               	goto	u2100
  7777  04FF                     u2101:
  7778  04FF  2D05               	goto	l1096
  7779  0500                     u2100:
  7780  0500                     l2581:
  7781                           
  7782                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  7783  0500  30FF               	movlw	255
  7784  0501  0020               	movlb	0	; select bank0
  7785  0502  07C0               	addwf	dtoa@w,f
  7786  0503  30FF               	movlw	255
  7787  0504  3DC1               	addwfc	dtoa@w+1,f
  7788  0505                     l1096:	
  7789                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 307:     }
  7790                           
  7791                           
  7792                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7793  0505  301F               	movlw	31
  7794  0506  0020               	movlb	0	; select bank0
  7795  0507  00CC               	movwf	dtoa@i
  7796  0508  3000               	movlw	0
  7797  0509  00CD               	movwf	dtoa@i+1
  7798  050A                     l2583:
  7799                           
  7800                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7801  050A  0025               	movlb	5	; select bank5
  7802  050B  01BF               	clrf	(_dbuf^(0+640)+31)
  7803                           
  7804                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7805  050C  2D76               	goto	l1099
  7806  050D                     l2585:
  7807                           
  7808                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  7809  050D  30FF               	movlw	255
  7810  050E  0020               	movlb	0	; select bank0
  7811  050F  07CC               	addwf	dtoa@i,f
  7812  0510  30FF               	movlw	255
  7813  0511  3DCD               	addwfc	dtoa@i+1,f
  7814  0512                     l2587:
  7815                           
  7816                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7817  0512  300A               	movlw	10
  7818  0513  00A0               	movwf	___aomod@divisor
  7819  0514  01A1               	clrf	___aomod@divisor+1
  7820  0515  01A2               	clrf	___aomod@divisor+2
  7821  0516  01A3               	clrf	___aomod@divisor+3
  7822  0517  01A4               	clrf	___aomod@divisor+4
  7823  0518  01A5               	clrf	___aomod@divisor+5
  7824  0519  01A6               	clrf	___aomod@divisor+6
  7825  051A  01A7               	clrf	___aomod@divisor+7
  7826  051B  0844               	movf	dtoa@n,w
  7827  051C  00A8               	movwf	___aomod@dividend
  7828  051D  0845               	movf	dtoa@n+1,w
  7829  051E  00A9               	movwf	___aomod@dividend+1
  7830  051F  0846               	movf	dtoa@n+2,w
  7831  0520  00AA               	movwf	___aomod@dividend+2
  7832  0521  0847               	movf	dtoa@n+3,w
  7833  0522  00AB               	movwf	___aomod@dividend+3
  7834  0523  0848               	movf	dtoa@n+4,w
  7835  0524  00AC               	movwf	___aomod@dividend+4
  7836  0525  0849               	movf	dtoa@n+5,w
  7837  0526  00AD               	movwf	___aomod@dividend+5
  7838  0527  084A               	movf	dtoa@n+6,w
  7839  0528  00AE               	movwf	___aomod@dividend+6
  7840  0529  084B               	movf	dtoa@n+7,w
  7841  052A  00AF               	movwf	___aomod@dividend+7
  7842  052B  318E  2615  3184   	fcall	___aomod
  7843  052E  0020               	movlb	0	; select bank0
  7844  052F  0821               	movf	?___aomod+1,w
  7845  0530  00F4               	movwf	abs@a+1
  7846  0531  0820               	movf	?___aomod,w
  7847  0532  00F3               	movwf	abs@a
  7848  0533  3197  2705  3184   	fcall	_abs
  7849  0536  0873               	movf	?_abs,w
  7850  0537  3E30               	addlw	48
  7851  0538  0020               	movlb	0	; select bank0
  7852  0539  00B8               	movwf	??_dtoa
  7853  053A  084C               	movf	dtoa@i,w
  7854  053B  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7855  053C  0086               	movwf	6
  7856  053D  3002               	movlw	2	; select bank5/6
  7857  053E  0087               	movwf	7
  7858  053F  0838               	movf	??_dtoa,w
  7859  0540  0081               	movwf	1
  7860  0541                     l2589:
  7861                           
  7862                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  7863  0541  30FF               	movlw	255
  7864  0542  07BD               	addwf	dtoa@p,f
  7865  0543  30FF               	movlw	255
  7866  0544  3DBE               	addwfc	dtoa@p+1,f
  7867  0545                     l2591:
  7868                           
  7869                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  7870  0545  30FF               	movlw	255
  7871  0546  07C0               	addwf	dtoa@w,f
  7872  0547  30FF               	movlw	255
  7873  0548  3DC1               	addwfc	dtoa@w+1,f
  7874  0549                     l2593:
  7875                           
  7876                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7877  0549  300A               	movlw	10
  7878  054A  00A0               	movwf	___aodiv@divisor
  7879  054B  01A1               	clrf	___aodiv@divisor+1
  7880  054C  01A2               	clrf	___aodiv@divisor+2
  7881  054D  01A3               	clrf	___aodiv@divisor+3
  7882  054E  01A4               	clrf	___aodiv@divisor+4
  7883  054F  01A5               	clrf	___aodiv@divisor+5
  7884  0550  01A6               	clrf	___aodiv@divisor+6
  7885  0551  01A7               	clrf	___aodiv@divisor+7
  7886  0552  0844               	movf	dtoa@n,w
  7887  0553  00A8               	movwf	___aodiv@dividend
  7888  0554  0845               	movf	dtoa@n+1,w
  7889  0555  00A9               	movwf	___aodiv@dividend+1
  7890  0556  0846               	movf	dtoa@n+2,w
  7891  0557  00AA               	movwf	___aodiv@dividend+2
  7892  0558  0847               	movf	dtoa@n+3,w
  7893  0559  00AB               	movwf	___aodiv@dividend+3
  7894  055A  0848               	movf	dtoa@n+4,w
  7895  055B  00AC               	movwf	___aodiv@dividend+4
  7896  055C  0849               	movf	dtoa@n+5,w
  7897  055D  00AD               	movwf	___aodiv@dividend+5
  7898  055E  084A               	movf	dtoa@n+6,w
  7899  055F  00AE               	movwf	___aodiv@dividend+6
  7900  0560  084B               	movf	dtoa@n+7,w
  7901  0561  00AF               	movwf	___aodiv@dividend+7
  7902  0562  318E  26FF  3184   	fcall	___aodiv
  7903  0565  0020               	movlb	0	; select bank0
  7904  0566  0820               	movf	?___aodiv,w
  7905  0567  00C4               	movwf	dtoa@n
  7906  0568  0821               	movf	?___aodiv+1,w
  7907  0569  00C5               	movwf	dtoa@n+1
  7908  056A  0822               	movf	?___aodiv+2,w
  7909  056B  00C6               	movwf	dtoa@n+2
  7910  056C  0823               	movf	?___aodiv+3,w
  7911  056D  00C7               	movwf	dtoa@n+3
  7912  056E  0824               	movf	?___aodiv+4,w
  7913  056F  00C8               	movwf	dtoa@n+4
  7914  0570  0825               	movf	?___aodiv+5,w
  7915  0571  00C9               	movwf	dtoa@n+5
  7916  0572  0826               	movf	?___aodiv+6,w
  7917  0573  00CA               	movwf	dtoa@n+6
  7918  0574  0827               	movf	?___aodiv+7,w
  7919  0575  00CB               	movwf	dtoa@n+7
  7920  0576                     l1099:	
  7921                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 318:     }
  7922                           
  7923                           
  7924                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7925  0576  0020               	movlb	0	; select bank0
  7926  0577  084D               	movf	dtoa@i+1,w
  7927  0578  3A80               	xorlw	128
  7928  0579  00B8               	movwf	??_dtoa
  7929  057A  3080               	movlw	128
  7930  057B  0238               	subwf	??_dtoa,w
  7931  057C  1D03               	skipz
  7932  057D  2D80               	goto	u2115
  7933  057E  3001               	movlw	1
  7934  057F  024C               	subwf	dtoa@i,w
  7935  0580                     u2115:
  7936  0580  1C03               	skipc
  7937  0581  2D83               	goto	u2111
  7938  0582  2D84               	goto	u2110
  7939  0583                     u2111:
  7940  0583  2DB1               	goto	l2603
  7941  0584                     u2110:
  7942  0584                     l2595:
  7943  0584  0020               	movlb	0	; select bank0
  7944  0585  0844               	movf	dtoa@n,w
  7945  0586  0445               	iorwf	dtoa@n+1,w
  7946  0587  0446               	iorwf	dtoa@n+2,w
  7947  0588  0447               	iorwf	dtoa@n+3,w
  7948  0589  0448               	iorwf	dtoa@n+4,w
  7949  058A  0449               	iorwf	dtoa@n+5,w
  7950  058B  044A               	iorwf	dtoa@n+6,w
  7951  058C  044B               	iorwf	dtoa@n+7,w
  7952  058D  1D03               	skipz
  7953  058E  2D90               	goto	u2121
  7954  058F  2D91               	goto	u2120
  7955  0590                     u2121:
  7956  0590  2D0D               	goto	l2585
  7957  0591                     u2120:
  7958  0591                     l2597:
  7959  0591  083E               	movf	dtoa@p+1,w
  7960  0592  3A80               	xorlw	128
  7961  0593  00B8               	movwf	??_dtoa
  7962  0594  3080               	movlw	128
  7963  0595  0238               	subwf	??_dtoa,w
  7964  0596  1D03               	skipz
  7965  0597  2D9A               	goto	u2135
  7966  0598  3001               	movlw	1
  7967  0599  023D               	subwf	dtoa@p,w
  7968  059A                     u2135:
  7969  059A  1803               	skipnc
  7970  059B  2D9D               	goto	u2131
  7971  059C  2D9E               	goto	u2130
  7972  059D                     u2131:
  7973  059D  2D0D               	goto	l2585
  7974  059E                     u2130:
  7975  059E                     l2599:
  7976  059E  0020               	movlb	0	; select bank0
  7977  059F  0841               	movf	dtoa@w+1,w
  7978  05A0  3A80               	xorlw	128
  7979  05A1  00B8               	movwf	??_dtoa
  7980  05A2  3080               	movlw	128
  7981  05A3  0238               	subwf	??_dtoa,w
  7982  05A4  1D03               	skipz
  7983  05A5  2DA8               	goto	u2145
  7984  05A6  3001               	movlw	1
  7985  05A7  0240               	subwf	dtoa@w,w
  7986  05A8                     u2145:
  7987  05A8  1C03               	skipc
  7988  05A9  2DAB               	goto	u2141
  7989  05AA  2DAC               	goto	u2140
  7990  05AB                     u2141:
  7991  05AB  2DB1               	goto	l2603
  7992  05AC                     u2140:
  7993  05AC                     l2601:
  7994  05AC  0021               	movlb	1	; select bank1
  7995  05AD  18D7               	btfsc	_flags^(0+128),1
  7996  05AE  2DB0               	goto	u2151
  7997  05AF  2DB1               	goto	u2150
  7998  05B0                     u2151:
  7999  05B0  2D0D               	goto	l2585
  8000  05B1                     u2150:
  8001  05B1                     l2603:
  8002                           
  8003                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8004  05B1  0020               	movlb	0	; select bank0
  8005  05B2  0842               	movf	dtoa@s,w
  8006  05B3  0443               	iorwf	dtoa@s+1,w
  8007  05B4  1D03               	btfss	3,2
  8008  05B5  2DB7               	goto	u2161
  8009  05B6  2DB8               	goto	u2160
  8010  05B7                     u2161:
  8011  05B7  2DBD               	goto	l2607
  8012  05B8                     u2160:
  8013  05B8                     l2605:
  8014  05B8  0021               	movlb	1	; select bank1
  8015  05B9  1D57               	btfss	_flags^(0+128),2
  8016  05BA  2DBC               	goto	u2171
  8017  05BB  2DBD               	goto	u2170
  8018  05BC                     u2171:
  8019  05BC  2DDA               	goto	l2617
  8020  05BD                     u2170:
  8021  05BD                     l2607:
  8022                           
  8023                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  8024  05BD  30FF               	movlw	255
  8025  05BE  0020               	movlb	0	; select bank0
  8026  05BF  07CC               	addwf	dtoa@i,f
  8027  05C0  30FF               	movlw	255
  8028  05C1  3DCD               	addwfc	dtoa@i+1,f
  8029  05C2                     l2609:
  8030                           
  8031                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8032  05C2  0842               	movf	dtoa@s,w
  8033  05C3  0443               	iorwf	dtoa@s+1,w
  8034  05C4  1D03               	btfss	3,2
  8035  05C5  2DC7               	goto	u2181
  8036  05C6  2DC8               	goto	u2180
  8037  05C7                     u2181:
  8038  05C7  2DCD               	goto	l2613
  8039  05C8                     u2180:
  8040  05C8                     l2611:
  8041  05C8  302B               	movlw	43
  8042  05C9  00BB               	movwf	_dtoa$1495
  8043  05CA  3000               	movlw	0
  8044  05CB  00BC               	movwf	_dtoa$1495+1
  8045  05CC  2DD1               	goto	l2615
  8046  05CD                     l2613:
  8047  05CD  302D               	movlw	45
  8048  05CE  00BB               	movwf	_dtoa$1495
  8049  05CF  3000               	movlw	0
  8050  05D0  00BC               	movwf	_dtoa$1495+1
  8051  05D1                     l2615:
  8052  05D1  083B               	movf	_dtoa$1495,w
  8053  05D2  00B8               	movwf	??_dtoa
  8054  05D3  084C               	movf	dtoa@i,w
  8055  05D4  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8056  05D5  0086               	movwf	6
  8057  05D6  3002               	movlw	2	; select bank5/6
  8058  05D7  0087               	movwf	7
  8059  05D8  0838               	movf	??_dtoa,w
  8060  05D9  0081               	movwf	1
  8061  05DA                     l2617:
  8062                           
  8063                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8064  05DA  0020               	movlb	0	; select bank0
  8065  05DB  084C               	movf	dtoa@i,w
  8066  05DC  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8067  05DD  00B8               	movwf	??_dtoa
  8068  05DE  0838               	movf	??_dtoa,w
  8069  05DF  00A4               	movwf	pad@buf
  8070  05E0  0841               	movf	dtoa@w+1,w
  8071  05E1  00A6               	movwf	pad@p+1
  8072  05E2  0840               	movf	dtoa@w,w
  8073  05E3  00A5               	movwf	pad@p
  8074  05E4  083F               	movf	dtoa@fp,w
  8075  05E5  3189  21EE  3184   	fcall	_pad
  8076  05E8  0020               	movlb	0	; select bank0
  8077  05E9  0825               	movf	?_pad+1,w
  8078  05EA  00B1               	movwf	?_dtoa+1
  8079  05EB  0824               	movf	?_pad,w
  8080  05EC  00B0               	movwf	?_dtoa
  8081  05ED                     l1113:
  8082  05ED  0008               	return
  8083  05EE                     __end_of_dtoa:
  8084                           
  8085                           	psect	text6
  8086  09EE                     __ptext6:	
  8087 ;; *************** function _pad *****************
  8088 ;; Defined at:
  8089 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;  fp              1    wreg     PTR struct _IO_FILE
  8092 ;;		 -> NULL(0), 
  8093 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  8094 ;;		 -> dbuf(32), 
  8095 ;;  p               2    5[BANK0 ] int 
  8096 ;; Auto vars:     Size  Location     Type
  8097 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  8098 ;;		 -> NULL(0), 
  8099 ;;  w               2    9[BANK0 ] int 
  8100 ;;  i               2    7[BANK0 ] int 
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  2    4[BANK0 ] int 
  8103 ;; Registers used:
  8104 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8110 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8111 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8113 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8114 ;;Total ram usage:        9 bytes
  8115 ;; Hardware stack levels used:    1
  8116 ;; Hardware stack levels required when called:    7
  8117 ;; This function calls:
  8118 ;;		_fputc
  8119 ;;		_fputs
  8120 ;;		_strlen
  8121 ;; This function is called by:
  8122 ;;		_dtoa
  8123 ;; This function uses a non-reentrant model
  8124 ;;
  8125                           
  8126                           
  8127                           ;psect for function _pad
  8128  09EE                     _pad:
  8129                           
  8130                           ;incstack = 0
  8131                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8132                           ;pad@fp stored from wreg
  8133  09EE  0020               	movlb	0	; select bank0
  8134  09EF  00AB               	movwf	pad@fp
  8135  09F0                     l2535:
  8136                           
  8137                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8138  09F0  0021               	movlb	1	; select bank1
  8139  09F1  1C57               	btfss	_flags^(0+128),0
  8140  09F2  29F4               	goto	u1971
  8141  09F3  29F5               	goto	u1970
  8142  09F4                     u1971:
  8143  09F4  29FE               	goto	l2539
  8144  09F5                     u1970:
  8145  09F5                     l2537:
  8146                           
  8147                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8148  09F5  0020               	movlb	0	; select bank0
  8149  09F6  082B               	movf	pad@fp,w
  8150  09F7  00FC               	movwf	??_pad
  8151  09F8  087C               	movf	??_pad,w
  8152  09F9  00F8               	movwf	fputs@fp
  8153  09FA  0824               	movf	pad@buf,w
  8154  09FB  3197  27AB  3189   	fcall	_fputs
  8155  09FE                     l2539:
  8156                           
  8157                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8158  09FE  0020               	movlb	0	; select bank0
  8159  09FF  1BA6               	btfsc	pad@p+1,7
  8160  0A00  2A02               	goto	u1981
  8161  0A01  2A03               	goto	u1980
  8162  0A02                     u1981:
  8163  0A02  2A08               	goto	l2543
  8164  0A03                     u1980:
  8165  0A03                     l2541:
  8166  0A03  0826               	movf	pad@p+1,w
  8167  0A04  00AA               	movwf	pad@w+1
  8168  0A05  0825               	movf	pad@p,w
  8169  0A06  00A9               	movwf	pad@w
  8170  0A07  2A0A               	goto	l1082
  8171  0A08                     l2543:
  8172  0A08  01A9               	clrf	pad@w
  8173  0A09  01AA               	clrf	pad@w+1
  8174  0A0A                     l1082:
  8175                           
  8176                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8177  0A0A  01A7               	clrf	pad@i
  8178  0A0B  01A8               	clrf	pad@i+1
  8179                           
  8180                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8181  0A0C  2A1E               	goto	l2549
  8182  0A0D                     l2545:
  8183                           
  8184                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8185  0A0D  3020               	movlw	32
  8186  0A0E  00F0               	movwf	fputc@c
  8187  0A0F  3000               	movlw	0
  8188  0A10  00F1               	movwf	fputc@c+1
  8189  0A11  0020               	movlb	0	; select bank0
  8190  0A12  082B               	movf	pad@fp,w
  8191  0A13  00FC               	movwf	??_pad
  8192  0A14  087C               	movf	??_pad,w
  8193  0A15  00F2               	movwf	fputc@fp
  8194  0A16  3188  20DA  3189   	fcall	_fputc
  8195  0A19                     l2547:
  8196                           
  8197                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8198  0A19  3001               	movlw	1
  8199  0A1A  0020               	movlb	0	; select bank0
  8200  0A1B  07A7               	addwf	pad@i,f
  8201  0A1C  3000               	movlw	0
  8202  0A1D  3DA8               	addwfc	pad@i+1,f
  8203  0A1E                     l2549:
  8204                           
  8205                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8206  0A1E  0828               	movf	pad@i+1,w
  8207  0A1F  3A80               	xorlw	128
  8208  0A20  00FC               	movwf	??_pad
  8209  0A21  082A               	movf	pad@w+1,w
  8210  0A22  3A80               	xorlw	128
  8211  0A23  027C               	subwf	??_pad,w
  8212  0A24  1D03               	skipz
  8213  0A25  2A28               	goto	u1995
  8214  0A26  0829               	movf	pad@w,w
  8215  0A27  0227               	subwf	pad@i,w
  8216  0A28                     u1995:
  8217  0A28  1C03               	skipc
  8218  0A29  2A2B               	goto	u1991
  8219  0A2A  2A2C               	goto	u1990
  8220  0A2B                     u1991:
  8221  0A2B  2A0D               	goto	l2545
  8222  0A2C                     u1990:
  8223  0A2C                     l1085:
  8224                           
  8225                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8226  0A2C  0021               	movlb	1	; select bank1
  8227  0A2D  1857               	btfsc	_flags^(0+128),0
  8228  0A2E  2A30               	goto	u2001
  8229  0A2F  2A31               	goto	u2000
  8230  0A30                     u2001:
  8231  0A30  2A3A               	goto	l1086
  8232  0A31                     u2000:
  8233  0A31                     l2551:
  8234                           
  8235                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8236  0A31  0020               	movlb	0	; select bank0
  8237  0A32  082B               	movf	pad@fp,w
  8238  0A33  00FC               	movwf	??_pad
  8239  0A34  087C               	movf	??_pad,w
  8240  0A35  00F8               	movwf	fputs@fp
  8241  0A36  0824               	movf	pad@buf,w
  8242  0A37  3197  27AB  3189   	fcall	_fputs
  8243  0A3A                     l1086:	
  8244                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 92:     }
  8245                           
  8246                           
  8247                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8248  0A3A  0020               	movlb	0	; select bank0
  8249  0A3B  0824               	movf	pad@buf,w
  8250  0A3C  3197  271F  3189   	fcall	_strlen
  8251  0A3F  0020               	movlb	0	; select bank0
  8252  0A40  0829               	movf	pad@w,w
  8253  0A41  0770               	addwf	?_strlen,w
  8254  0A42  00A4               	movwf	?_pad
  8255  0A43  082A               	movf	pad@w+1,w
  8256  0A44  3D71               	addwfc	?_strlen+1,w
  8257  0A45  00A5               	movwf	?_pad+1
  8258  0A46                     l1087:
  8259  0A46  0008               	return
  8260  0A47                     __end_of_pad:
  8261                           
  8262                           	psect	text7
  8263  171F                     __ptext7:	
  8264 ;; *************** function _strlen *****************
  8265 ;; Defined at:
  8266 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  8267 ;; Parameters:    Size  Location     Type
  8268 ;;  s               1    wreg     PTR const unsigned char 
  8269 ;;		 -> dbuf(32), 
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;  s               1    4[COMMON] PTR const unsigned char 
  8272 ;;		 -> dbuf(32), 
  8273 ;;  a               1    3[COMMON] PTR const unsigned char 
  8274 ;;		 -> dbuf(32), 
  8275 ;; Return value:  Size  Location     Type
  8276 ;;                  2    0[COMMON] unsigned int 
  8277 ;; Registers used:
  8278 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8279 ;; Tracked objects:
  8280 ;;		On entry : 0/0
  8281 ;;		On exit  : 0/0
  8282 ;;		Unchanged: 0/0
  8283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8284 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8285 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8286 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8287 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8288 ;;Total ram usage:        5 bytes
  8289 ;; Hardware stack levels used:    1
  8290 ;; Hardware stack levels required when called:    4
  8291 ;; This function calls:
  8292 ;;		Nothing
  8293 ;; This function is called by:
  8294 ;;		_pad
  8295 ;; This function uses a non-reentrant model
  8296 ;;
  8297                           
  8298                           
  8299                           ;psect for function _strlen
  8300  171F                     _strlen:
  8301                           
  8302                           ;incstack = 0
  8303                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  8304                           ;strlen@s stored from wreg
  8305  171F  00F4               	movwf	strlen@s
  8306  1720                     l2457:
  8307  1720  0874               	movf	strlen@s,w
  8308  1721  00F2               	movwf	??_strlen
  8309  1722  0872               	movf	??_strlen,w
  8310  1723  00F3               	movwf	strlen@a
  8311  1724  2F29               	goto	l2461
  8312  1725                     l2459:
  8313  1725  3001               	movlw	1
  8314  1726  00F2               	movwf	??_strlen
  8315  1727  0872               	movf	??_strlen,w
  8316  1728  07F4               	addwf	strlen@s,f
  8317  1729                     l2461:
  8318  1729  0874               	movf	strlen@s,w
  8319  172A  0086               	movwf	6
  8320  172B  3002               	movlw	2	; select bank4/5
  8321  172C  0087               	movwf	7
  8322  172D  0801               	movf	1,w
  8323  172E  1D03               	btfss	3,2
  8324  172F  2F31               	goto	u1751
  8325  1730  2F32               	goto	u1750
  8326  1731                     u1751:
  8327  1731  2F25               	goto	l2459
  8328  1732                     u1750:
  8329  1732                     l2463:
  8330  1732  0873               	movf	strlen@a,w
  8331  1733  0274               	subwf	strlen@s,w
  8332  1734  00F0               	movwf	?_strlen
  8333  1735  01F1               	clrf	?_strlen+1
  8334  1736  1BF0               	btfsc	?_strlen,7
  8335  1737  03F1               	decf	?_strlen+1,f
  8336  1738                     l1163:
  8337  1738  0008               	return
  8338  1739                     __end_of_strlen:
  8339                           
  8340                           	psect	text8
  8341  17AB                     __ptext8:	
  8342 ;; *************** function _fputs *****************
  8343 ;; Defined at:
  8344 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  s               1    wreg     PTR const unsigned char 
  8347 ;;		 -> dbuf(32), 
  8348 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  8349 ;;		 -> NULL(0), 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  8352 ;;		 -> dbuf(32), 
  8353 ;;  i               2    1[BANK0 ] int 
  8354 ;;  c               1    0[BANK0 ] unsigned char 
  8355 ;; Return value:  Size  Location     Type
  8356 ;;                  2    8[COMMON] int 
  8357 ;; Registers used:
  8358 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8359 ;; Tracked objects:
  8360 ;;		On entry : 0/0
  8361 ;;		On exit  : 0/0
  8362 ;;		Unchanged: 0/0
  8363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8364 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8365 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8366 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8367 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8368 ;;Total ram usage:        8 bytes
  8369 ;; Hardware stack levels used:    1
  8370 ;; Hardware stack levels required when called:    6
  8371 ;; This function calls:
  8372 ;;		_fputc
  8373 ;; This function is called by:
  8374 ;;		_pad
  8375 ;; This function uses a non-reentrant model
  8376 ;;
  8377                           
  8378                           
  8379                           ;psect for function _fputs
  8380  17AB                     _fputs:
  8381                           
  8382                           ;incstack = 0
  8383                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8384                           ;fputs@s stored from wreg
  8385  17AB  0020               	movlb	0	; select bank0
  8386  17AC  00A3               	movwf	fputs@s
  8387  17AD                     l2449:
  8388  17AD  01A1               	clrf	fputs@i
  8389  17AE  01A2               	clrf	fputs@i+1
  8390  17AF  2FC3               	goto	l2455
  8391  17B0                     l2451:
  8392  17B0  0820               	movf	fputs@c,w
  8393  17B1  00F9               	movwf	??_fputs
  8394  17B2  01FA               	clrf	??_fputs+1
  8395  17B3  0879               	movf	??_fputs,w
  8396  17B4  00F0               	movwf	fputc@c
  8397  17B5  087A               	movf	??_fputs+1,w
  8398  17B6  00F1               	movwf	fputc@c+1
  8399  17B7  0878               	movf	fputs@fp,w
  8400  17B8  00FB               	movwf	??_fputs+2
  8401  17B9  087B               	movf	??_fputs+2,w
  8402  17BA  00F2               	movwf	fputc@fp
  8403  17BB  3188  20DA  3197   	fcall	_fputc
  8404  17BE                     l2453:
  8405  17BE  3001               	movlw	1
  8406  17BF  0020               	movlb	0	; select bank0
  8407  17C0  07A1               	addwf	fputs@i,f
  8408  17C1  3000               	movlw	0
  8409  17C2  3DA2               	addwfc	fputs@i+1,f
  8410  17C3                     l2455:
  8411  17C3  0821               	movf	fputs@i,w
  8412  17C4  0723               	addwf	fputs@s,w
  8413  17C5  00F9               	movwf	??_fputs
  8414  17C6  0879               	movf	??_fputs,w
  8415  17C7  0086               	movwf	6
  8416  17C8  3002               	movlw	2	; select bank4/5
  8417  17C9  0087               	movwf	7
  8418  17CA  0801               	movf	1,w
  8419  17CB  00FA               	movwf	??_fputs+1
  8420  17CC  087A               	movf	??_fputs+1,w
  8421  17CD  00A0               	movwf	fputs@c
  8422  17CE  0820               	movf	fputs@c,w
  8423  17CF  1D03               	btfss	3,2
  8424  17D0  2FD2               	goto	u1741
  8425  17D1  2FD3               	goto	u1740
  8426  17D2                     u1741:
  8427  17D2  2FB0               	goto	l2451
  8428  17D3                     u1740:
  8429  17D3                     l1154:
  8430  17D3  0008               	return
  8431  17D4                     __end_of_fputs:
  8432                           
  8433                           	psect	text9
  8434  08DA                     __ptext9:	
  8435 ;; *************** function _fputc *****************
  8436 ;; Defined at:
  8437 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;  c               2    0[COMMON] int 
  8440 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  8441 ;;		 -> NULL(0), 
  8442 ;; Auto vars:     Size  Location     Type
  8443 ;;		None
  8444 ;; Return value:  Size  Location     Type
  8445 ;;                  2    0[COMMON] int 
  8446 ;; Registers used:
  8447 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8448 ;; Tracked objects:
  8449 ;;		On entry : 0/0
  8450 ;;		On exit  : 0/0
  8451 ;;		Unchanged: 0/0
  8452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8453 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8455 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8456 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8457 ;;Total ram usage:        8 bytes
  8458 ;; Hardware stack levels used:    1
  8459 ;; Hardware stack levels required when called:    5
  8460 ;; This function calls:
  8461 ;;		_putch
  8462 ;; This function is called by:
  8463 ;;		_pad
  8464 ;;		_vfpfcnvrt
  8465 ;;		_fputs
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           
  8470                           ;psect for function _fputc
  8471  08DA                     _fputc:
  8472  08DA                     l2435:	
  8473                           ;incstack = 0
  8474                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8475                           
  8476  08DA  0872               	movf	fputc@fp,w
  8477  08DB  1903               	btfsc	3,2
  8478  08DC  28DE               	goto	u1701
  8479  08DD  28DF               	goto	u1700
  8480  08DE                     u1701:
  8481  08DE  28E4               	goto	l2439
  8482  08DF                     u1700:
  8483  08DF                     l2437:
  8484  08DF  0872               	movf	fputc@fp,w
  8485  08E0  1D03               	btfss	3,2
  8486  08E1  28E3               	goto	u1711
  8487  08E2  28E4               	goto	u1710
  8488  08E3                     u1711:
  8489  08E3  28E9               	goto	l2441
  8490  08E4                     u1710:
  8491  08E4                     l2439:
  8492  08E4  0870               	movf	fputc@c,w
  8493  08E5  3187  27FF  3188   	fcall	_putch
  8494  08E8  2918               	goto	l1146
  8495  08E9                     l2441:
  8496  08E9  0872               	movf	fputc@fp,w
  8497  08EA  3E03               	addlw	3
  8498  08EB  0086               	movwf	6
  8499  08EC  0187               	clrf	7
  8500  08ED  0016               	moviw fsr1++
  8501  08EE  0401               	iorwf	1,w
  8502  08EF  1903               	btfsc	3,2
  8503  08F0  28F2               	goto	u1721
  8504  08F1  28F3               	goto	u1720
  8505  08F2                     u1721:
  8506  08F2  2910               	goto	l2445
  8507  08F3                     u1720:
  8508  08F3                     l2443:
  8509  08F3  0872               	movf	fputc@fp,w
  8510  08F4  3E03               	addlw	3
  8511  08F5  0086               	movwf	6
  8512  08F6  0187               	clrf	7
  8513  08F7  3F40               	moviw [0]fsr1
  8514  08F8  00F3               	movwf	??_fputc
  8515  08F9  3F41               	moviw [1]fsr1
  8516  08FA  00F4               	movwf	??_fputc+1
  8517  08FB  0A72               	incf	fputc@fp,w
  8518  08FC  0086               	movwf	6
  8519  08FD  0187               	clrf	7
  8520  08FE  3F40               	moviw [0]fsr1
  8521  08FF  00F5               	movwf	??_fputc+2
  8522  0900  3F41               	moviw [1]fsr1
  8523  0901  00F6               	movwf	??_fputc+3
  8524  0902  0876               	movf	??_fputc+3,w
  8525  0903  3A80               	xorlw	128
  8526  0904  00F7               	movwf	??_fputc+4
  8527  0905  0874               	movf	??_fputc+1,w
  8528  0906  3A80               	xorlw	128
  8529  0907  0277               	subwf	??_fputc+4,w
  8530  0908  1D03               	skipz
  8531  0909  290C               	goto	u1735
  8532  090A  0873               	movf	??_fputc,w
  8533  090B  0275               	subwf	??_fputc+2,w
  8534  090C                     u1735:
  8535  090C  1803               	skipnc
  8536  090D  290F               	goto	u1731
  8537  090E  2910               	goto	u1730
  8538  090F                     u1731:
  8539  090F  2918               	goto	l1146
  8540  0910                     u1730:
  8541  0910                     l2445:
  8542  0910  0A72               	incf	fputc@fp,w
  8543  0911  0086               	movwf	6
  8544  0912  0187               	clrf	7
  8545  0913  3001               	movlw	1
  8546  0914  0781               	addwf	1,f
  8547  0915  3141               	addfsr 1,1
  8548  0916  1803               	skipnc
  8549  0917  0A81               	incf	1,f
  8550  0918                     l1146:
  8551  0918  0008               	return
  8552  0919                     __end_of_fputc:
  8553                           
  8554                           	psect	text10
  8555  07FF                     __ptext10:	
  8556 ;; *************** function _putch *****************
  8557 ;; Defined at:
  8558 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\putch.c"
  8559 ;; Parameters:    Size  Location     Type
  8560 ;;  c               1    wreg     unsigned char 
  8561 ;; Auto vars:     Size  Location     Type
  8562 ;;  c               1    0[COMMON] unsigned char 
  8563 ;; Return value:  Size  Location     Type
  8564 ;;                  1    wreg      void 
  8565 ;; Registers used:
  8566 ;;		wreg
  8567 ;; Tracked objects:
  8568 ;;		On entry : 0/0
  8569 ;;		On exit  : 0/0
  8570 ;;		Unchanged: 0/0
  8571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8576 ;;Total ram usage:        0 bytes
  8577 ;; Hardware stack levels used:    1
  8578 ;; Hardware stack levels required when called:    4
  8579 ;; This function calls:
  8580 ;;		Nothing
  8581 ;; This function is called by:
  8582 ;;		_fputc
  8583 ;; This function uses a non-reentrant model
  8584 ;;
  8585                           
  8586                           
  8587                           ;psect for function _putch
  8588  07FF                     _putch:
  8589  07FF                     l1157:	
  8590                           ;incstack = 0
  8591                           ; Regs used in _putch: [wreg]
  8592                           
  8593  07FF  0008               	return
  8594  0800                     __end_of_putch:
  8595                           
  8596                           	psect	text11
  8597  1705                     __ptext11:	
  8598 ;; *************** function _abs *****************
  8599 ;; Defined at:
  8600 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;  a               2    3[COMMON] int 
  8603 ;; Auto vars:     Size  Location     Type
  8604 ;;		None
  8605 ;; Return value:  Size  Location     Type
  8606 ;;                  2    3[COMMON] int 
  8607 ;; Registers used:
  8608 ;;		wreg, status,2, status,0
  8609 ;; Tracked objects:
  8610 ;;		On entry : 0/0
  8611 ;;		On exit  : 0/0
  8612 ;;		Unchanged: 0/0
  8613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8616 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8617 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8618 ;;Total ram usage:        4 bytes
  8619 ;; Hardware stack levels used:    1
  8620 ;; Hardware stack levels required when called:    4
  8621 ;; This function calls:
  8622 ;;		Nothing
  8623 ;; This function is called by:
  8624 ;;		_dtoa
  8625 ;; This function uses a non-reentrant model
  8626 ;;
  8627                           
  8628                           
  8629                           ;psect for function _abs
  8630  1705                     _abs:
  8631  1705                     l2555:	
  8632                           ;incstack = 0
  8633                           ; Regs used in _abs: [wreg+status,2+status,0]
  8634                           
  8635  1705  0874               	movf	abs@a+1,w
  8636  1706  3A80               	xorlw	128
  8637  1707  00F5               	movwf	??_abs
  8638  1708  3080               	movlw	128
  8639  1709  0275               	subwf	??_abs,w
  8640  170A  1D03               	skipz
  8641  170B  2F0E               	goto	u2015
  8642  170C  3001               	movlw	1
  8643  170D  0273               	subwf	abs@a,w
  8644  170E                     u2015:
  8645  170E  1803               	skipnc
  8646  170F  2F11               	goto	u2011
  8647  1710  2F12               	goto	u2010
  8648  1711                     u2011:
  8649  1711  2F1E               	goto	l1131
  8650  1712                     u2010:
  8651  1712                     l2557:
  8652  1712  0973               	comf	abs@a,w
  8653  1713  00F5               	movwf	??_abs
  8654  1714  0974               	comf	abs@a+1,w
  8655  1715  00F6               	movwf	??_abs+1
  8656  1716  0AF5               	incf	??_abs,f
  8657  1717  1903               	skipnz
  8658  1718  0AF6               	incf	??_abs+1,f
  8659  1719  0875               	movf	??_abs,w
  8660  171A  00F3               	movwf	?_abs
  8661  171B  0876               	movf	??_abs+1,w
  8662  171C  00F4               	movwf	?_abs+1
  8663  171D  2F1E               	goto	l1134
  8664  171E                     l1131:
  8665  171E                     l1134:
  8666  171E  0008               	return
  8667  171F                     __end_of_abs:
  8668                           
  8669                           	psect	text12
  8670  0E15                     __ptext12:	
  8671 ;; *************** function ___aomod *****************
  8672 ;; Defined at:
  8673 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;  divisor         8    0[BANK0 ] long long 
  8676 ;;  dividend        8    8[BANK0 ] long long 
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;  sign            1    2[COMMON] unsigned char 
  8679 ;;  counter         1    1[COMMON] unsigned char 
  8680 ;; Return value:  Size  Location     Type
  8681 ;;                  8    0[BANK0 ] long long 
  8682 ;; Registers used:
  8683 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8684 ;; Tracked objects:
  8685 ;;		On entry : 0/0
  8686 ;;		On exit  : 0/0
  8687 ;;		Unchanged: 0/0
  8688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8689 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8690 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8692 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8693 ;;Total ram usage:       19 bytes
  8694 ;; Hardware stack levels used:    1
  8695 ;; Hardware stack levels required when called:    4
  8696 ;; This function calls:
  8697 ;;		Nothing
  8698 ;; This function is called by:
  8699 ;;		_dtoa
  8700 ;; This function uses a non-reentrant model
  8701 ;;
  8702                           
  8703                           
  8704                           ;psect for function ___aomod
  8705  0E15                     ___aomod:
  8706  0E15                     l2505:	
  8707                           ;incstack = 0
  8708                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  8709                           
  8710  0E15  01F2               	clrf	___aomod@sign
  8711  0E16                     l2507:
  8712  0E16  3028               	movlw	low ___aomod@dividend
  8713  0E17  0086               	movwf	6
  8714  0E18  3000               	movlw	high ___aomod@dividend
  8715  0E19  0087               	movwf	7
  8716  0E1A  3F47               	moviw [7]fsr1
  8717  0E1B  00F0               	movwf	??___aomod
  8718  0E1C  1FF0               	btfss	??___aomod,7
  8719  0E1D  2E1F               	goto	u1871
  8720  0E1E  2E20               	goto	u1870
  8721  0E1F                     u1871:
  8722  0E1F  2E41               	goto	l2511
  8723  0E20                     u1870:
  8724  0E20                     l2509:
  8725  0E20  0020               	movlb	0	; select bank0
  8726  0E21  09A8               	comf	___aomod@dividend,f
  8727  0E22  09A9               	comf	___aomod@dividend+1,f
  8728  0E23  09AA               	comf	___aomod@dividend+2,f
  8729  0E24  09AB               	comf	___aomod@dividend+3,f
  8730  0E25  09AC               	comf	___aomod@dividend+4,f
  8731  0E26  09AD               	comf	___aomod@dividend+5,f
  8732  0E27  09AE               	comf	___aomod@dividend+6,f
  8733  0E28  09AF               	comf	___aomod@dividend+7,f
  8734  0E29  0AA8               	incf	___aomod@dividend,f
  8735  0E2A  1D03               	skipz
  8736  0E2B  2E3F               	goto	u188lld
  8737  0E2C  0AA9               	incf	___aomod@dividend+1,f
  8738  0E2D  1D03               	skipz
  8739  0E2E  2E3F               	goto	u188lld
  8740  0E2F  0AAA               	incf	___aomod@dividend+2,f
  8741  0E30  1D03               	skipz
  8742  0E31  2E3F               	goto	u188lld
  8743  0E32  0AAB               	incf	___aomod@dividend+3,f
  8744  0E33  1D03               	skipz
  8745  0E34  2E3F               	goto	u188lld
  8746  0E35  0AAC               	incf	___aomod@dividend+4,f
  8747  0E36  1D03               	skipz
  8748  0E37  2E3F               	goto	u188lld
  8749  0E38  0AAD               	incf	___aomod@dividend+5,f
  8750  0E39  1D03               	skipz
  8751  0E3A  2E3F               	goto	u188lld
  8752  0E3B  0AAE               	incf	___aomod@dividend+6,f
  8753  0E3C  1D03               	skipz
  8754  0E3D  2E3F               	goto	u188lld
  8755  0E3E  0AAF               	incf	___aomod@dividend+7,f
  8756  0E3F                     u188lld:
  8757  0E3F  01F2               	clrf	___aomod@sign
  8758  0E40  0AF2               	incf	___aomod@sign,f
  8759  0E41                     l2511:
  8760  0E41  3020               	movlw	low ___aomod@divisor
  8761  0E42  0086               	movwf	6
  8762  0E43  3000               	movlw	high ___aomod@divisor
  8763  0E44  0087               	movwf	7
  8764  0E45  3F47               	moviw [7]fsr1
  8765  0E46  00F0               	movwf	??___aomod
  8766  0E47  1FF0               	btfss	??___aomod,7
  8767  0E48  2E4A               	goto	u1891
  8768  0E49  2E4B               	goto	u1890
  8769  0E4A                     u1891:
  8770  0E4A  2E6A               	goto	l2515
  8771  0E4B                     u1890:
  8772  0E4B                     l2513:
  8773  0E4B  0020               	movlb	0	; select bank0
  8774  0E4C  09A0               	comf	___aomod@divisor,f
  8775  0E4D  09A1               	comf	___aomod@divisor+1,f
  8776  0E4E  09A2               	comf	___aomod@divisor+2,f
  8777  0E4F  09A3               	comf	___aomod@divisor+3,f
  8778  0E50  09A4               	comf	___aomod@divisor+4,f
  8779  0E51  09A5               	comf	___aomod@divisor+5,f
  8780  0E52  09A6               	comf	___aomod@divisor+6,f
  8781  0E53  09A7               	comf	___aomod@divisor+7,f
  8782  0E54  0AA0               	incf	___aomod@divisor,f
  8783  0E55  1D03               	skipz
  8784  0E56  2E6A               	goto	u190lld
  8785  0E57  0AA1               	incf	___aomod@divisor+1,f
  8786  0E58  1D03               	skipz
  8787  0E59  2E6A               	goto	u190lld
  8788  0E5A  0AA2               	incf	___aomod@divisor+2,f
  8789  0E5B  1D03               	skipz
  8790  0E5C  2E6A               	goto	u190lld
  8791  0E5D  0AA3               	incf	___aomod@divisor+3,f
  8792  0E5E  1D03               	skipz
  8793  0E5F  2E6A               	goto	u190lld
  8794  0E60  0AA4               	incf	___aomod@divisor+4,f
  8795  0E61  1D03               	skipz
  8796  0E62  2E6A               	goto	u190lld
  8797  0E63  0AA5               	incf	___aomod@divisor+5,f
  8798  0E64  1D03               	skipz
  8799  0E65  2E6A               	goto	u190lld
  8800  0E66  0AA6               	incf	___aomod@divisor+6,f
  8801  0E67  1D03               	skipz
  8802  0E68  2E6A               	goto	u190lld
  8803  0E69  0AA7               	incf	___aomod@divisor+7,f
  8804  0E6A                     u190lld:
  8805  0E6A                     l2515:
  8806  0E6A  0020               	movlb	0	; select bank0
  8807  0E6B  0820               	movf	___aomod@divisor,w
  8808  0E6C  0421               	iorwf	___aomod@divisor+1,w
  8809  0E6D  0422               	iorwf	___aomod@divisor+2,w
  8810  0E6E  0423               	iorwf	___aomod@divisor+3,w
  8811  0E6F  0424               	iorwf	___aomod@divisor+4,w
  8812  0E70  0425               	iorwf	___aomod@divisor+5,w
  8813  0E71  0426               	iorwf	___aomod@divisor+6,w
  8814  0E72  0427               	iorwf	___aomod@divisor+7,w
  8815  0E73  1903               	skipnz
  8816  0E74  2E76               	goto	u1911
  8817  0E75  2E77               	goto	u1910
  8818  0E76                     u1911:
  8819  0E76  2ECA               	goto	l2531
  8820  0E77                     u1910:
  8821  0E77                     l2517:
  8822  0E77  01F1               	clrf	___aomod@counter
  8823  0E78  0AF1               	incf	___aomod@counter,f
  8824  0E79  2E86               	goto	l2523
  8825  0E7A                     l2519:
  8826  0E7A  35A0               	lslf	___aomod@divisor,f
  8827  0E7B  0DA1               	rlf	___aomod@divisor+1,f
  8828  0E7C  0DA2               	rlf	___aomod@divisor+2,f
  8829  0E7D  0DA3               	rlf	___aomod@divisor+3,f
  8830  0E7E  0DA4               	rlf	___aomod@divisor+4,f
  8831  0E7F  0DA5               	rlf	___aomod@divisor+5,f
  8832  0E80  0DA6               	rlf	___aomod@divisor+6,f
  8833  0E81  0DA7               	rlf	___aomod@divisor+7,f
  8834  0E82                     l2521:
  8835  0E82  3001               	movlw	1
  8836  0E83  00F0               	movwf	??___aomod
  8837  0E84  0870               	movf	??___aomod,w
  8838  0E85  07F1               	addwf	___aomod@counter,f
  8839  0E86                     l2523:
  8840  0E86  1FA7               	btfss	___aomod@divisor+7,7
  8841  0E87  2E89               	goto	u1921
  8842  0E88  2E8A               	goto	u1920
  8843  0E89                     u1921:
  8844  0E89  2E7A               	goto	l2519
  8845  0E8A                     u1920:
  8846  0E8A                     l2525:
  8847  0E8A  0827               	movf	___aomod@divisor+7,w
  8848  0E8B  022F               	subwf	___aomod@dividend+7,w
  8849  0E8C  1D03               	skipz
  8850  0E8D  2EA8               	goto	u1935
  8851  0E8E  0826               	movf	___aomod@divisor+6,w
  8852  0E8F  022E               	subwf	___aomod@dividend+6,w
  8853  0E90  1D03               	skipz
  8854  0E91  2EA8               	goto	u1935
  8855  0E92  0825               	movf	___aomod@divisor+5,w
  8856  0E93  022D               	subwf	___aomod@dividend+5,w
  8857  0E94  1D03               	skipz
  8858  0E95  2EA8               	goto	u1935
  8859  0E96  0824               	movf	___aomod@divisor+4,w
  8860  0E97  022C               	subwf	___aomod@dividend+4,w
  8861  0E98  1D03               	skipz
  8862  0E99  2EA8               	goto	u1935
  8863  0E9A  0823               	movf	___aomod@divisor+3,w
  8864  0E9B  022B               	subwf	___aomod@dividend+3,w
  8865  0E9C  1D03               	skipz
  8866  0E9D  2EA8               	goto	u1935
  8867  0E9E  0822               	movf	___aomod@divisor+2,w
  8868  0E9F  022A               	subwf	___aomod@dividend+2,w
  8869  0EA0  1D03               	skipz
  8870  0EA1  2EA8               	goto	u1935
  8871  0EA2  0821               	movf	___aomod@divisor+1,w
  8872  0EA3  0229               	subwf	___aomod@dividend+1,w
  8873  0EA4  1D03               	skipz
  8874  0EA5  2EA8               	goto	u1935
  8875  0EA6  0820               	movf	___aomod@divisor,w
  8876  0EA7  0228               	subwf	___aomod@dividend,w
  8877  0EA8                     u1935:
  8878  0EA8  1C03               	skipc
  8879  0EA9  2EAB               	goto	u1931
  8880  0EAA  2EAC               	goto	u1930
  8881  0EAB                     u1931:
  8882  0EAB  2EBC               	goto	l2529
  8883  0EAC                     u1930:
  8884  0EAC                     l2527:
  8885  0EAC  0820               	movf	___aomod@divisor,w
  8886  0EAD  02A8               	subwf	___aomod@dividend,f
  8887  0EAE  0821               	movf	___aomod@divisor+1,w
  8888  0EAF  3BA9               	subwfb	___aomod@dividend+1,f
  8889  0EB0  0822               	movf	___aomod@divisor+2,w
  8890  0EB1  3BAA               	subwfb	___aomod@dividend+2,f
  8891  0EB2  0823               	movf	___aomod@divisor+3,w
  8892  0EB3  3BAB               	subwfb	___aomod@dividend+3,f
  8893  0EB4  0824               	movf	___aomod@divisor+4,w
  8894  0EB5  3BAC               	subwfb	___aomod@dividend+4,f
  8895  0EB6  0825               	movf	___aomod@divisor+5,w
  8896  0EB7  3BAD               	subwfb	___aomod@dividend+5,f
  8897  0EB8  0826               	movf	___aomod@divisor+6,w
  8898  0EB9  3BAE               	subwfb	___aomod@dividend+6,f
  8899  0EBA  0827               	movf	___aomod@divisor+7,w
  8900  0EBB  3BAF               	subwfb	___aomod@dividend+7,f
  8901  0EBC                     l2529:
  8902  0EBC  36A7               	lsrf	___aomod@divisor+7,f
  8903  0EBD  0CA6               	rrf	___aomod@divisor+6,f
  8904  0EBE  0CA5               	rrf	___aomod@divisor+5,f
  8905  0EBF  0CA4               	rrf	___aomod@divisor+4,f
  8906  0EC0  0CA3               	rrf	___aomod@divisor+3,f
  8907  0EC1  0CA2               	rrf	___aomod@divisor+2,f
  8908  0EC2  0CA1               	rrf	___aomod@divisor+1,f
  8909  0EC3  0CA0               	rrf	___aomod@divisor,f
  8910  0EC4  3001               	movlw	1
  8911  0EC5  02F1               	subwf	___aomod@counter,f
  8912  0EC6  1D03               	btfss	3,2
  8913  0EC7  2EC9               	goto	u1941
  8914  0EC8  2ECA               	goto	u1940
  8915  0EC9                     u1941:
  8916  0EC9  2E8A               	goto	l2525
  8917  0ECA                     u1940:
  8918  0ECA                     l2531:
  8919  0ECA  0872               	movf	___aomod@sign,w
  8920  0ECB  1903               	btfsc	3,2
  8921  0ECC  2ECE               	goto	u1951
  8922  0ECD  2ECF               	goto	u1950
  8923  0ECE                     u1951:
  8924  0ECE  2EED               	goto	l705
  8925  0ECF                     u1950:
  8926  0ECF                     l2533:
  8927  0ECF  09A8               	comf	___aomod@dividend,f
  8928  0ED0  09A9               	comf	___aomod@dividend+1,f
  8929  0ED1  09AA               	comf	___aomod@dividend+2,f
  8930  0ED2  09AB               	comf	___aomod@dividend+3,f
  8931  0ED3  09AC               	comf	___aomod@dividend+4,f
  8932  0ED4  09AD               	comf	___aomod@dividend+5,f
  8933  0ED5  09AE               	comf	___aomod@dividend+6,f
  8934  0ED6  09AF               	comf	___aomod@dividend+7,f
  8935  0ED7  0AA8               	incf	___aomod@dividend,f
  8936  0ED8  1D03               	skipz
  8937  0ED9  2EED               	goto	u196lld
  8938  0EDA  0AA9               	incf	___aomod@dividend+1,f
  8939  0EDB  1D03               	skipz
  8940  0EDC  2EED               	goto	u196lld
  8941  0EDD  0AAA               	incf	___aomod@dividend+2,f
  8942  0EDE  1D03               	skipz
  8943  0EDF  2EED               	goto	u196lld
  8944  0EE0  0AAB               	incf	___aomod@dividend+3,f
  8945  0EE1  1D03               	skipz
  8946  0EE2  2EED               	goto	u196lld
  8947  0EE3  0AAC               	incf	___aomod@dividend+4,f
  8948  0EE4  1D03               	skipz
  8949  0EE5  2EED               	goto	u196lld
  8950  0EE6  0AAD               	incf	___aomod@dividend+5,f
  8951  0EE7  1D03               	skipz
  8952  0EE8  2EED               	goto	u196lld
  8953  0EE9  0AAE               	incf	___aomod@dividend+6,f
  8954  0EEA  1D03               	skipz
  8955  0EEB  2EED               	goto	u196lld
  8956  0EEC  0AAF               	incf	___aomod@dividend+7,f
  8957  0EED                     u196lld:
  8958  0EED                     l705:
  8959  0EED  0020               	movlb	0	; select bank0
  8960  0EEE  0828               	movf	___aomod@dividend,w
  8961  0EEF  00A0               	movwf	?___aomod
  8962  0EF0  0829               	movf	___aomod@dividend+1,w
  8963  0EF1  00A1               	movwf	?___aomod+1
  8964  0EF2  082A               	movf	___aomod@dividend+2,w
  8965  0EF3  00A2               	movwf	?___aomod+2
  8966  0EF4  082B               	movf	___aomod@dividend+3,w
  8967  0EF5  00A3               	movwf	?___aomod+3
  8968  0EF6  082C               	movf	___aomod@dividend+4,w
  8969  0EF7  00A4               	movwf	?___aomod+4
  8970  0EF8  082D               	movf	___aomod@dividend+5,w
  8971  0EF9  00A5               	movwf	?___aomod+5
  8972  0EFA  082E               	movf	___aomod@dividend+6,w
  8973  0EFB  00A6               	movwf	?___aomod+6
  8974  0EFC  082F               	movf	___aomod@dividend+7,w
  8975  0EFD  00A7               	movwf	?___aomod+7
  8976  0EFE                     l706:
  8977  0EFE  0008               	return
  8978  0EFF                     __end_of___aomod:
  8979                           
  8980                           	psect	text13
  8981  0EFF                     __ptext13:	
  8982 ;; *************** function ___aodiv *****************
  8983 ;; Defined at:
  8984 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  8985 ;; Parameters:    Size  Location     Type
  8986 ;;  divisor         8    0[BANK0 ] long long 
  8987 ;;  dividend        8    8[BANK0 ] long long 
  8988 ;; Auto vars:     Size  Location     Type
  8989 ;;  quotient        8    3[COMMON] long long 
  8990 ;;  sign            1    2[COMMON] unsigned char 
  8991 ;;  counter         1    1[COMMON] unsigned char 
  8992 ;; Return value:  Size  Location     Type
  8993 ;;                  8    0[BANK0 ] long long 
  8994 ;; Registers used:
  8995 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8996 ;; Tracked objects:
  8997 ;;		On entry : 0/0
  8998 ;;		On exit  : 0/0
  8999 ;;		Unchanged: 0/0
  9000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9001 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9002 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9003 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9004 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9005 ;;Total ram usage:       27 bytes
  9006 ;; Hardware stack levels used:    1
  9007 ;; Hardware stack levels required when called:    4
  9008 ;; This function calls:
  9009 ;;		Nothing
  9010 ;; This function is called by:
  9011 ;;		_dtoa
  9012 ;; This function uses a non-reentrant model
  9013 ;;
  9014                           
  9015                           
  9016                           ;psect for function ___aodiv
  9017  0EFF                     ___aodiv:
  9018  0EFF                     l2467:	
  9019                           ;incstack = 0
  9020                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9021                           
  9022  0EFF  01F2               	clrf	___aodiv@sign
  9023  0F00                     l2469:
  9024  0F00  3020               	movlw	low ___aodiv@divisor
  9025  0F01  0086               	movwf	6
  9026  0F02  3000               	movlw	high ___aodiv@divisor
  9027  0F03  0087               	movwf	7
  9028  0F04  3F47               	moviw [7]fsr1
  9029  0F05  00F0               	movwf	??___aodiv
  9030  0F06  1FF0               	btfss	??___aodiv,7
  9031  0F07  2F09               	goto	u1761
  9032  0F08  2F0A               	goto	u1760
  9033  0F09                     u1761:
  9034  0F09  2F2B               	goto	l2473
  9035  0F0A                     u1760:
  9036  0F0A                     l2471:
  9037  0F0A  0020               	movlb	0	; select bank0
  9038  0F0B  09A0               	comf	___aodiv@divisor,f
  9039  0F0C  09A1               	comf	___aodiv@divisor+1,f
  9040  0F0D  09A2               	comf	___aodiv@divisor+2,f
  9041  0F0E  09A3               	comf	___aodiv@divisor+3,f
  9042  0F0F  09A4               	comf	___aodiv@divisor+4,f
  9043  0F10  09A5               	comf	___aodiv@divisor+5,f
  9044  0F11  09A6               	comf	___aodiv@divisor+6,f
  9045  0F12  09A7               	comf	___aodiv@divisor+7,f
  9046  0F13  0AA0               	incf	___aodiv@divisor,f
  9047  0F14  1D03               	skipz
  9048  0F15  2F29               	goto	u177lld
  9049  0F16  0AA1               	incf	___aodiv@divisor+1,f
  9050  0F17  1D03               	skipz
  9051  0F18  2F29               	goto	u177lld
  9052  0F19  0AA2               	incf	___aodiv@divisor+2,f
  9053  0F1A  1D03               	skipz
  9054  0F1B  2F29               	goto	u177lld
  9055  0F1C  0AA3               	incf	___aodiv@divisor+3,f
  9056  0F1D  1D03               	skipz
  9057  0F1E  2F29               	goto	u177lld
  9058  0F1F  0AA4               	incf	___aodiv@divisor+4,f
  9059  0F20  1D03               	skipz
  9060  0F21  2F29               	goto	u177lld
  9061  0F22  0AA5               	incf	___aodiv@divisor+5,f
  9062  0F23  1D03               	skipz
  9063  0F24  2F29               	goto	u177lld
  9064  0F25  0AA6               	incf	___aodiv@divisor+6,f
  9065  0F26  1D03               	skipz
  9066  0F27  2F29               	goto	u177lld
  9067  0F28  0AA7               	incf	___aodiv@divisor+7,f
  9068  0F29                     u177lld:
  9069  0F29  01F2               	clrf	___aodiv@sign
  9070  0F2A  0AF2               	incf	___aodiv@sign,f
  9071  0F2B                     l2473:
  9072  0F2B  3028               	movlw	low ___aodiv@dividend
  9073  0F2C  0086               	movwf	6
  9074  0F2D  3000               	movlw	high ___aodiv@dividend
  9075  0F2E  0087               	movwf	7
  9076  0F2F  3F47               	moviw [7]fsr1
  9077  0F30  00F0               	movwf	??___aodiv
  9078  0F31  1FF0               	btfss	??___aodiv,7
  9079  0F32  2F34               	goto	u1781
  9080  0F33  2F35               	goto	u1780
  9081  0F34                     u1781:
  9082  0F34  2F58               	goto	l2479
  9083  0F35                     u1780:
  9084  0F35                     l2475:
  9085  0F35  0020               	movlb	0	; select bank0
  9086  0F36  09A8               	comf	___aodiv@dividend,f
  9087  0F37  09A9               	comf	___aodiv@dividend+1,f
  9088  0F38  09AA               	comf	___aodiv@dividend+2,f
  9089  0F39  09AB               	comf	___aodiv@dividend+3,f
  9090  0F3A  09AC               	comf	___aodiv@dividend+4,f
  9091  0F3B  09AD               	comf	___aodiv@dividend+5,f
  9092  0F3C  09AE               	comf	___aodiv@dividend+6,f
  9093  0F3D  09AF               	comf	___aodiv@dividend+7,f
  9094  0F3E  0AA8               	incf	___aodiv@dividend,f
  9095  0F3F  1D03               	skipz
  9096  0F40  2F54               	goto	u179lld
  9097  0F41  0AA9               	incf	___aodiv@dividend+1,f
  9098  0F42  1D03               	skipz
  9099  0F43  2F54               	goto	u179lld
  9100  0F44  0AAA               	incf	___aodiv@dividend+2,f
  9101  0F45  1D03               	skipz
  9102  0F46  2F54               	goto	u179lld
  9103  0F47  0AAB               	incf	___aodiv@dividend+3,f
  9104  0F48  1D03               	skipz
  9105  0F49  2F54               	goto	u179lld
  9106  0F4A  0AAC               	incf	___aodiv@dividend+4,f
  9107  0F4B  1D03               	skipz
  9108  0F4C  2F54               	goto	u179lld
  9109  0F4D  0AAD               	incf	___aodiv@dividend+5,f
  9110  0F4E  1D03               	skipz
  9111  0F4F  2F54               	goto	u179lld
  9112  0F50  0AAE               	incf	___aodiv@dividend+6,f
  9113  0F51  1D03               	skipz
  9114  0F52  2F54               	goto	u179lld
  9115  0F53  0AAF               	incf	___aodiv@dividend+7,f
  9116  0F54                     u179lld:
  9117  0F54                     l2477:
  9118  0F54  3001               	movlw	1
  9119  0F55  00F0               	movwf	??___aodiv
  9120  0F56  0870               	movf	??___aodiv,w
  9121  0F57  06F2               	xorwf	___aodiv@sign,f
  9122  0F58                     l2479:
  9123  0F58  3073               	movlw	low ___aodiv@quotient
  9124  0F59  0086               	movwf	6
  9125  0F5A  3000               	movlw	high ___aodiv@quotient
  9126  0F5B  0087               	movwf	7
  9127  0F5C  3008               	movlw	8
  9128  0F5D  00F0               	movwf	??___aodiv
  9129  0F5E  3000               	movlw	0
  9130  0F5F                     u1800:
  9131  0F5F  001E               	movwi fsr1++
  9132  0F60  0BF0               	decfsz	??___aodiv,f
  9133  0F61  2F5F               	goto	u1800
  9134  0F62                     l2481:
  9135  0F62  0020               	movlb	0	; select bank0
  9136  0F63  0820               	movf	___aodiv@divisor,w
  9137  0F64  0421               	iorwf	___aodiv@divisor+1,w
  9138  0F65  0422               	iorwf	___aodiv@divisor+2,w
  9139  0F66  0423               	iorwf	___aodiv@divisor+3,w
  9140  0F67  0424               	iorwf	___aodiv@divisor+4,w
  9141  0F68  0425               	iorwf	___aodiv@divisor+5,w
  9142  0F69  0426               	iorwf	___aodiv@divisor+6,w
  9143  0F6A  0427               	iorwf	___aodiv@divisor+7,w
  9144  0F6B  1903               	skipnz
  9145  0F6C  2F6E               	goto	u1811
  9146  0F6D  2F6F               	goto	u1810
  9147  0F6E                     u1811:
  9148  0F6E  2FCB               	goto	l2501
  9149  0F6F                     u1810:
  9150  0F6F                     l2483:
  9151  0F6F  01F1               	clrf	___aodiv@counter
  9152  0F70  0AF1               	incf	___aodiv@counter,f
  9153  0F71  2F7E               	goto	l2489
  9154  0F72                     l2485:
  9155  0F72  35A0               	lslf	___aodiv@divisor,f
  9156  0F73  0DA1               	rlf	___aodiv@divisor+1,f
  9157  0F74  0DA2               	rlf	___aodiv@divisor+2,f
  9158  0F75  0DA3               	rlf	___aodiv@divisor+3,f
  9159  0F76  0DA4               	rlf	___aodiv@divisor+4,f
  9160  0F77  0DA5               	rlf	___aodiv@divisor+5,f
  9161  0F78  0DA6               	rlf	___aodiv@divisor+6,f
  9162  0F79  0DA7               	rlf	___aodiv@divisor+7,f
  9163  0F7A                     l2487:
  9164  0F7A  3001               	movlw	1
  9165  0F7B  00F0               	movwf	??___aodiv
  9166  0F7C  0870               	movf	??___aodiv,w
  9167  0F7D  07F1               	addwf	___aodiv@counter,f
  9168  0F7E                     l2489:
  9169  0F7E  1FA7               	btfss	___aodiv@divisor+7,7
  9170  0F7F  2F81               	goto	u1821
  9171  0F80  2F82               	goto	u1820
  9172  0F81                     u1821:
  9173  0F81  2F72               	goto	l2485
  9174  0F82                     u1820:
  9175  0F82                     l2491:
  9176  0F82  35F3               	lslf	___aodiv@quotient,f
  9177  0F83  0DF4               	rlf	___aodiv@quotient+1,f
  9178  0F84  0DF5               	rlf	___aodiv@quotient+2,f
  9179  0F85  0DF6               	rlf	___aodiv@quotient+3,f
  9180  0F86  0DF7               	rlf	___aodiv@quotient+4,f
  9181  0F87  0DF8               	rlf	___aodiv@quotient+5,f
  9182  0F88  0DF9               	rlf	___aodiv@quotient+6,f
  9183  0F89  0DFA               	rlf	___aodiv@quotient+7,f
  9184  0F8A                     l2493:
  9185  0F8A  0827               	movf	___aodiv@divisor+7,w
  9186  0F8B  022F               	subwf	___aodiv@dividend+7,w
  9187  0F8C  1D03               	skipz
  9188  0F8D  2FA8               	goto	u1835
  9189  0F8E  0826               	movf	___aodiv@divisor+6,w
  9190  0F8F  022E               	subwf	___aodiv@dividend+6,w
  9191  0F90  1D03               	skipz
  9192  0F91  2FA8               	goto	u1835
  9193  0F92  0825               	movf	___aodiv@divisor+5,w
  9194  0F93  022D               	subwf	___aodiv@dividend+5,w
  9195  0F94  1D03               	skipz
  9196  0F95  2FA8               	goto	u1835
  9197  0F96  0824               	movf	___aodiv@divisor+4,w
  9198  0F97  022C               	subwf	___aodiv@dividend+4,w
  9199  0F98  1D03               	skipz
  9200  0F99  2FA8               	goto	u1835
  9201  0F9A  0823               	movf	___aodiv@divisor+3,w
  9202  0F9B  022B               	subwf	___aodiv@dividend+3,w
  9203  0F9C  1D03               	skipz
  9204  0F9D  2FA8               	goto	u1835
  9205  0F9E  0822               	movf	___aodiv@divisor+2,w
  9206  0F9F  022A               	subwf	___aodiv@dividend+2,w
  9207  0FA0  1D03               	skipz
  9208  0FA1  2FA8               	goto	u1835
  9209  0FA2  0821               	movf	___aodiv@divisor+1,w
  9210  0FA3  0229               	subwf	___aodiv@dividend+1,w
  9211  0FA4  1D03               	skipz
  9212  0FA5  2FA8               	goto	u1835
  9213  0FA6  0820               	movf	___aodiv@divisor,w
  9214  0FA7  0228               	subwf	___aodiv@dividend,w
  9215  0FA8                     u1835:
  9216  0FA8  1C03               	skipc
  9217  0FA9  2FAB               	goto	u1831
  9218  0FAA  2FAC               	goto	u1830
  9219  0FAB                     u1831:
  9220  0FAB  2FBD               	goto	l2499
  9221  0FAC                     u1830:
  9222  0FAC                     l2495:
  9223  0FAC  0820               	movf	___aodiv@divisor,w
  9224  0FAD  02A8               	subwf	___aodiv@dividend,f
  9225  0FAE  0821               	movf	___aodiv@divisor+1,w
  9226  0FAF  3BA9               	subwfb	___aodiv@dividend+1,f
  9227  0FB0  0822               	movf	___aodiv@divisor+2,w
  9228  0FB1  3BAA               	subwfb	___aodiv@dividend+2,f
  9229  0FB2  0823               	movf	___aodiv@divisor+3,w
  9230  0FB3  3BAB               	subwfb	___aodiv@dividend+3,f
  9231  0FB4  0824               	movf	___aodiv@divisor+4,w
  9232  0FB5  3BAC               	subwfb	___aodiv@dividend+4,f
  9233  0FB6  0825               	movf	___aodiv@divisor+5,w
  9234  0FB7  3BAD               	subwfb	___aodiv@dividend+5,f
  9235  0FB8  0826               	movf	___aodiv@divisor+6,w
  9236  0FB9  3BAE               	subwfb	___aodiv@dividend+6,f
  9237  0FBA  0827               	movf	___aodiv@divisor+7,w
  9238  0FBB  3BAF               	subwfb	___aodiv@dividend+7,f
  9239  0FBC                     l2497:
  9240  0FBC  1473               	bsf	___aodiv@quotient,0
  9241  0FBD                     l2499:
  9242  0FBD  36A7               	lsrf	___aodiv@divisor+7,f
  9243  0FBE  0CA6               	rrf	___aodiv@divisor+6,f
  9244  0FBF  0CA5               	rrf	___aodiv@divisor+5,f
  9245  0FC0  0CA4               	rrf	___aodiv@divisor+4,f
  9246  0FC1  0CA3               	rrf	___aodiv@divisor+3,f
  9247  0FC2  0CA2               	rrf	___aodiv@divisor+2,f
  9248  0FC3  0CA1               	rrf	___aodiv@divisor+1,f
  9249  0FC4  0CA0               	rrf	___aodiv@divisor,f
  9250  0FC5  3001               	movlw	1
  9251  0FC6  02F1               	subwf	___aodiv@counter,f
  9252  0FC7  1D03               	btfss	3,2
  9253  0FC8  2FCA               	goto	u1841
  9254  0FC9  2FCB               	goto	u1840
  9255  0FCA                     u1841:
  9256  0FCA  2F82               	goto	l2491
  9257  0FCB                     u1840:
  9258  0FCB                     l2501:
  9259  0FCB  0872               	movf	___aodiv@sign,w
  9260  0FCC  1903               	btfsc	3,2
  9261  0FCD  2FCF               	goto	u1851
  9262  0FCE  2FD0               	goto	u1850
  9263  0FCF                     u1851:
  9264  0FCF  2FEE               	goto	l692
  9265  0FD0                     u1850:
  9266  0FD0                     l2503:
  9267  0FD0  09F3               	comf	___aodiv@quotient,f
  9268  0FD1  09F4               	comf	___aodiv@quotient+1,f
  9269  0FD2  09F5               	comf	___aodiv@quotient+2,f
  9270  0FD3  09F6               	comf	___aodiv@quotient+3,f
  9271  0FD4  09F7               	comf	___aodiv@quotient+4,f
  9272  0FD5  09F8               	comf	___aodiv@quotient+5,f
  9273  0FD6  09F9               	comf	___aodiv@quotient+6,f
  9274  0FD7  09FA               	comf	___aodiv@quotient+7,f
  9275  0FD8  0AF3               	incf	___aodiv@quotient,f
  9276  0FD9  1D03               	skipz
  9277  0FDA  2FEE               	goto	u186lld
  9278  0FDB  0AF4               	incf	___aodiv@quotient+1,f
  9279  0FDC  1D03               	skipz
  9280  0FDD  2FEE               	goto	u186lld
  9281  0FDE  0AF5               	incf	___aodiv@quotient+2,f
  9282  0FDF  1D03               	skipz
  9283  0FE0  2FEE               	goto	u186lld
  9284  0FE1  0AF6               	incf	___aodiv@quotient+3,f
  9285  0FE2  1D03               	skipz
  9286  0FE3  2FEE               	goto	u186lld
  9287  0FE4  0AF7               	incf	___aodiv@quotient+4,f
  9288  0FE5  1D03               	skipz
  9289  0FE6  2FEE               	goto	u186lld
  9290  0FE7  0AF8               	incf	___aodiv@quotient+5,f
  9291  0FE8  1D03               	skipz
  9292  0FE9  2FEE               	goto	u186lld
  9293  0FEA  0AF9               	incf	___aodiv@quotient+6,f
  9294  0FEB  1D03               	skipz
  9295  0FEC  2FEE               	goto	u186lld
  9296  0FED  0AFA               	incf	___aodiv@quotient+7,f
  9297  0FEE                     u186lld:
  9298  0FEE                     l692:
  9299  0FEE  0873               	movf	___aodiv@quotient,w
  9300  0FEF  0020               	movlb	0	; select bank0
  9301  0FF0  00A0               	movwf	?___aodiv
  9302  0FF1  0874               	movf	___aodiv@quotient+1,w
  9303  0FF2  00A1               	movwf	?___aodiv+1
  9304  0FF3  0875               	movf	___aodiv@quotient+2,w
  9305  0FF4  00A2               	movwf	?___aodiv+2
  9306  0FF5  0876               	movf	___aodiv@quotient+3,w
  9307  0FF6  00A3               	movwf	?___aodiv+3
  9308  0FF7  0877               	movf	___aodiv@quotient+4,w
  9309  0FF8  00A4               	movwf	?___aodiv+4
  9310  0FF9  0878               	movf	___aodiv@quotient+5,w
  9311  0FFA  00A5               	movwf	?___aodiv+5
  9312  0FFB  0879               	movf	___aodiv@quotient+6,w
  9313  0FFC  00A6               	movwf	?___aodiv+6
  9314  0FFD  087A               	movf	___aodiv@quotient+7,w
  9315  0FFE  00A7               	movwf	?___aodiv+7
  9316  0FFF                     l693:
  9317  0FFF  0008               	return
  9318  1000                     __end_of___aodiv:
  9319                           
  9320                           	psect	text14
  9321  178C                     __ptext14:	
  9322 ;; *************** function ___wmul *****************
  9323 ;; Defined at:
  9324 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;  multiplier      2    0[COMMON] unsigned int 
  9327 ;;  multiplicand    2    2[COMMON] unsigned int 
  9328 ;; Auto vars:     Size  Location     Type
  9329 ;;  product         2    4[COMMON] unsigned int 
  9330 ;; Return value:  Size  Location     Type
  9331 ;;                  2    0[COMMON] unsigned int 
  9332 ;; Registers used:
  9333 ;;		wreg, status,2, status,0
  9334 ;; Tracked objects:
  9335 ;;		On entry : 0/0
  9336 ;;		On exit  : 0/0
  9337 ;;		Unchanged: 0/0
  9338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9339 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9340 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9342 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9343 ;;Total ram usage:        6 bytes
  9344 ;; Hardware stack levels used:    1
  9345 ;; Hardware stack levels required when called:    4
  9346 ;; This function calls:
  9347 ;;		Nothing
  9348 ;; This function is called by:
  9349 ;;		_stuffIntToCharsBuf
  9350 ;; This function uses a non-reentrant model
  9351 ;;
  9352                           
  9353                           
  9354                           ;psect for function ___wmul
  9355  178C                     ___wmul:
  9356  178C                     l2961:	
  9357                           ;incstack = 0
  9358                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9359                           
  9360  178C  01F4               	clrf	___wmul@product
  9361  178D  01F5               	clrf	___wmul@product+1
  9362  178E                     l2963:
  9363  178E  1C70               	btfss	___wmul@multiplier,0
  9364  178F  2F91               	goto	u2391
  9365  1790  2F92               	goto	u2390
  9366  1791                     u2391:
  9367  1791  2F96               	goto	l592
  9368  1792                     u2390:
  9369  1792                     l2965:
  9370  1792  0872               	movf	___wmul@multiplicand,w
  9371  1793  07F4               	addwf	___wmul@product,f
  9372  1794  0873               	movf	___wmul@multiplicand+1,w
  9373  1795  3DF5               	addwfc	___wmul@product+1,f
  9374  1796                     l592:
  9375  1796  3001               	movlw	1
  9376  1797                     u2405:
  9377  1797  35F2               	lslf	___wmul@multiplicand,f
  9378  1798  0DF3               	rlf	___wmul@multiplicand+1,f
  9379  1799  0B89               	decfsz	9,f
  9380  179A  2F97               	goto	u2405
  9381  179B                     l2967:
  9382  179B  3001               	movlw	1
  9383  179C                     u2415:
  9384  179C  36F1               	lsrf	___wmul@multiplier+1,f
  9385  179D  0CF0               	rrf	___wmul@multiplier,f
  9386  179E  0B89               	decfsz	9,f
  9387  179F  2F9C               	goto	u2415
  9388  17A0                     l2969:
  9389  17A0  0870               	movf	___wmul@multiplier,w
  9390  17A1  0471               	iorwf	___wmul@multiplier+1,w
  9391  17A2  1D03               	btfss	3,2
  9392  17A3  2FA5               	goto	u2421
  9393  17A4  2FA6               	goto	u2420
  9394  17A5                     u2421:
  9395  17A5  2F8E               	goto	l2963
  9396  17A6                     u2420:
  9397  17A6                     l2971:
  9398  17A6  0875               	movf	___wmul@product+1,w
  9399  17A7  00F1               	movwf	?___wmul+1
  9400  17A8  0874               	movf	___wmul@product,w
  9401  17A9  00F0               	movwf	?___wmul
  9402  17AA                     l594:
  9403  17AA  0008               	return
  9404  17AB                     __end_of___wmul:
  9405                           
  9406                           	psect	text15
  9407  0B5A                     __ptext15:	
  9408 ;; *************** function ___awdiv *****************
  9409 ;; Defined at:
  9410 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awdiv.c"
  9411 ;; Parameters:    Size  Location     Type
  9412 ;;  divisor         2    0[COMMON] int 
  9413 ;;  dividend        2    2[COMMON] int 
  9414 ;; Auto vars:     Size  Location     Type
  9415 ;;  quotient        2    7[COMMON] int 
  9416 ;;  sign            1    6[COMMON] unsigned char 
  9417 ;;  counter         1    5[COMMON] unsigned char 
  9418 ;; Return value:  Size  Location     Type
  9419 ;;                  2    0[COMMON] int 
  9420 ;; Registers used:
  9421 ;;		wreg, status,2, status,0
  9422 ;; Tracked objects:
  9423 ;;		On entry : 0/0
  9424 ;;		On exit  : 0/0
  9425 ;;		Unchanged: 0/0
  9426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9427 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9428 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9429 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9430 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9431 ;;Total ram usage:        9 bytes
  9432 ;; Hardware stack levels used:    1
  9433 ;; Hardware stack levels required when called:    4
  9434 ;; This function calls:
  9435 ;;		Nothing
  9436 ;; This function is called by:
  9437 ;;		_stuffIntToCharsBuf
  9438 ;; This function uses a non-reentrant model
  9439 ;;
  9440                           
  9441                           
  9442                           ;psect for function ___awdiv
  9443  0B5A                     ___awdiv:
  9444  0B5A                     l2975:	
  9445                           ;incstack = 0
  9446                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9447                           
  9448  0B5A  01F6               	clrf	___awdiv@sign
  9449  0B5B                     l2977:
  9450  0B5B  1FF1               	btfss	___awdiv@divisor+1,7
  9451  0B5C  2B5E               	goto	u2431
  9452  0B5D  2B5F               	goto	u2430
  9453  0B5E                     u2431:
  9454  0B5E  2B66               	goto	l2983
  9455  0B5F                     u2430:
  9456  0B5F                     l2979:
  9457  0B5F  09F0               	comf	___awdiv@divisor,f
  9458  0B60  09F1               	comf	___awdiv@divisor+1,f
  9459  0B61  0AF0               	incf	___awdiv@divisor,f
  9460  0B62  1903               	skipnz
  9461  0B63  0AF1               	incf	___awdiv@divisor+1,f
  9462  0B64                     l2981:
  9463  0B64  01F6               	clrf	___awdiv@sign
  9464  0B65  0AF6               	incf	___awdiv@sign,f
  9465  0B66                     l2983:
  9466  0B66  1FF3               	btfss	___awdiv@dividend+1,7
  9467  0B67  2B69               	goto	u2441
  9468  0B68  2B6A               	goto	u2440
  9469  0B69                     u2441:
  9470  0B69  2B73               	goto	l2989
  9471  0B6A                     u2440:
  9472  0B6A                     l2985:
  9473  0B6A  09F2               	comf	___awdiv@dividend,f
  9474  0B6B  09F3               	comf	___awdiv@dividend+1,f
  9475  0B6C  0AF2               	incf	___awdiv@dividend,f
  9476  0B6D  1903               	skipnz
  9477  0B6E  0AF3               	incf	___awdiv@dividend+1,f
  9478  0B6F                     l2987:
  9479  0B6F  3001               	movlw	1
  9480  0B70  00F4               	movwf	??___awdiv
  9481  0B71  0874               	movf	??___awdiv,w
  9482  0B72  06F6               	xorwf	___awdiv@sign,f
  9483  0B73                     l2989:
  9484  0B73  01F7               	clrf	___awdiv@quotient
  9485  0B74  01F8               	clrf	___awdiv@quotient+1
  9486  0B75                     l2991:
  9487  0B75  0870               	movf	___awdiv@divisor,w
  9488  0B76  0471               	iorwf	___awdiv@divisor+1,w
  9489  0B77  1903               	btfsc	3,2
  9490  0B78  2B7A               	goto	u2451
  9491  0B79  2B7B               	goto	u2450
  9492  0B7A                     u2451:
  9493  0B7A  2BAA               	goto	l3011
  9494  0B7B                     u2450:
  9495  0B7B                     l2993:
  9496  0B7B  01F5               	clrf	___awdiv@counter
  9497  0B7C  0AF5               	incf	___awdiv@counter,f
  9498  0B7D  2B87               	goto	l2999
  9499  0B7E                     l2995:
  9500  0B7E  3001               	movlw	1
  9501  0B7F                     u2465:
  9502  0B7F  35F0               	lslf	___awdiv@divisor,f
  9503  0B80  0DF1               	rlf	___awdiv@divisor+1,f
  9504  0B81  0B89               	decfsz	9,f
  9505  0B82  2B7F               	goto	u2465
  9506  0B83                     l2997:
  9507  0B83  3001               	movlw	1
  9508  0B84  00F4               	movwf	??___awdiv
  9509  0B85  0874               	movf	??___awdiv,w
  9510  0B86  07F5               	addwf	___awdiv@counter,f
  9511  0B87                     l2999:
  9512  0B87  1FF1               	btfss	___awdiv@divisor+1,7
  9513  0B88  2B8A               	goto	u2471
  9514  0B89  2B8B               	goto	u2470
  9515  0B8A                     u2471:
  9516  0B8A  2B7E               	goto	l2995
  9517  0B8B                     u2470:
  9518  0B8B                     l3001:
  9519  0B8B  3001               	movlw	1
  9520  0B8C                     u2485:
  9521  0B8C  35F7               	lslf	___awdiv@quotient,f
  9522  0B8D  0DF8               	rlf	___awdiv@quotient+1,f
  9523  0B8E  0B89               	decfsz	9,f
  9524  0B8F  2B8C               	goto	u2485
  9525  0B90  0871               	movf	___awdiv@divisor+1,w
  9526  0B91  0273               	subwf	___awdiv@dividend+1,w
  9527  0B92  1D03               	skipz
  9528  0B93  2B96               	goto	u2495
  9529  0B94  0870               	movf	___awdiv@divisor,w
  9530  0B95  0272               	subwf	___awdiv@dividend,w
  9531  0B96                     u2495:
  9532  0B96  1C03               	skipc
  9533  0B97  2B99               	goto	u2491
  9534  0B98  2B9A               	goto	u2490
  9535  0B99                     u2491:
  9536  0B99  2B9F               	goto	l3007
  9537  0B9A                     u2490:
  9538  0B9A                     l3003:
  9539  0B9A  0870               	movf	___awdiv@divisor,w
  9540  0B9B  02F2               	subwf	___awdiv@dividend,f
  9541  0B9C  0871               	movf	___awdiv@divisor+1,w
  9542  0B9D  3BF3               	subwfb	___awdiv@dividend+1,f
  9543  0B9E                     l3005:
  9544  0B9E  1477               	bsf	___awdiv@quotient,0
  9545  0B9F                     l3007:
  9546  0B9F  3001               	movlw	1
  9547  0BA0                     u2505:
  9548  0BA0  36F1               	lsrf	___awdiv@divisor+1,f
  9549  0BA1  0CF0               	rrf	___awdiv@divisor,f
  9550  0BA2  0B89               	decfsz	9,f
  9551  0BA3  2BA0               	goto	u2505
  9552  0BA4                     l3009:
  9553  0BA4  3001               	movlw	1
  9554  0BA5  02F5               	subwf	___awdiv@counter,f
  9555  0BA6  1D03               	btfss	3,2
  9556  0BA7  2BA9               	goto	u2511
  9557  0BA8  2BAA               	goto	u2510
  9558  0BA9                     u2511:
  9559  0BA9  2B8B               	goto	l3001
  9560  0BAA                     u2510:
  9561  0BAA                     l3011:
  9562  0BAA  0876               	movf	___awdiv@sign,w
  9563  0BAB  1903               	btfsc	3,2
  9564  0BAC  2BAE               	goto	u2521
  9565  0BAD  2BAF               	goto	u2520
  9566  0BAE                     u2521:
  9567  0BAE  2BB4               	goto	l3015
  9568  0BAF                     u2520:
  9569  0BAF                     l3013:
  9570  0BAF  09F7               	comf	___awdiv@quotient,f
  9571  0BB0  09F8               	comf	___awdiv@quotient+1,f
  9572  0BB1  0AF7               	incf	___awdiv@quotient,f
  9573  0BB2  1903               	skipnz
  9574  0BB3  0AF8               	incf	___awdiv@quotient+1,f
  9575  0BB4                     l3015:
  9576  0BB4  0878               	movf	___awdiv@quotient+1,w
  9577  0BB5  00F1               	movwf	?___awdiv+1
  9578  0BB6  0877               	movf	___awdiv@quotient,w
  9579  0BB7  00F0               	movwf	?___awdiv
  9580  0BB8                     l745:
  9581  0BB8  0008               	return
  9582  0BB9                     __end_of___awdiv:
  9583                           
  9584                           	psect	text16
  9585  0AFD                     __ptext16:	
  9586 ;; *************** function _spi_read_32bits *****************
  9587 ;; Defined at:
  9588 ;;		line 503 in file "main.c"
  9589 ;; Parameters:    Size  Location     Type
  9590 ;;		None
  9591 ;; Auto vars:     Size  Location     Type
  9592 ;;  i               2    5[BANK0 ] int 
  9593 ;;  result          4    1[BANK0 ] unsigned long 
  9594 ;;  byte            1    0[BANK0 ] unsigned char 
  9595 ;; Return value:  Size  Location     Type
  9596 ;;                  4    1[COMMON] unsigned long 
  9597 ;; Registers used:
  9598 ;;		wreg, status,2, status,0, pclath, cstack
  9599 ;; Tracked objects:
  9600 ;;		On entry : 0/0
  9601 ;;		On exit  : 0/0
  9602 ;;		Unchanged: 0/0
  9603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9604 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9605 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9606 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9607 ;;      Totals:        12       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9608 ;;Total ram usage:       19 bytes
  9609 ;; Hardware stack levels used:    1
  9610 ;; Hardware stack levels required when called:    5
  9611 ;; This function calls:
  9612 ;;		_spi_transfer
  9613 ;; This function is called by:
  9614 ;;		_main
  9615 ;; This function uses a non-reentrant model
  9616 ;;
  9617                           
  9618                           
  9619                           ;psect for function _spi_read_32bits
  9620  0AFD                     _spi_read_32bits:
  9621  0AFD                     l3285:	
  9622                           ;incstack = 0
  9623                           ; Regs used in _spi_read_32bits: [wreg+status,2+status,0+pclath+cstack]
  9624                           
  9625                           
  9626                           ;main.c: 504:     uint32_t result = 0;
  9627  0AFD  3000               	movlw	0
  9628  0AFE  0020               	movlb	0	; select bank0
  9629  0AFF  00A4               	movwf	spi_read_32bits@result+3
  9630  0B00  3000               	movlw	0
  9631  0B01  00A3               	movwf	spi_read_32bits@result+2
  9632  0B02  3000               	movlw	0
  9633  0B03  00A2               	movwf	spi_read_32bits@result+1
  9634  0B04  3000               	movlw	0
  9635  0B05  00A1               	movwf	spi_read_32bits@result
  9636  0B06                     l3287:
  9637                           
  9638                           ;main.c: 505:     uint8_t byte;;main.c: 508:     LATC6 = 0;
  9639  0B06  0022               	movlb	2	; select bank2
  9640  0B07  130E               	bcf	14,6	;volatile
  9641  0B08                     l3289:
  9642                           
  9643                           ;main.c: 510:     for (int i = 0; i < 4; i++) {
  9644  0B08  0020               	movlb	0	; select bank0
  9645  0B09  01A5               	clrf	spi_read_32bits@i
  9646  0B0A  01A6               	clrf	spi_read_32bits@i+1
  9647  0B0B                     l3295:
  9648                           
  9649                           ;main.c: 511:         byte = spi_transfer(0x00);
  9650  0B0B  3000               	movlw	0
  9651  0B0C  3196  267D  318A   	fcall	_spi_transfer
  9652  0B0F  00F5               	movwf	??_spi_read_32bits
  9653  0B10  0875               	movf	??_spi_read_32bits,w
  9654  0B11  0020               	movlb	0	; select bank0
  9655  0B12  00A0               	movwf	spi_read_32bits@byte
  9656  0B13                     l3297:
  9657                           
  9658                           ;main.c: 512:         LATC6 = 0;
  9659  0B13  0022               	movlb	2	; select bank2
  9660  0B14  130E               	bcf	14,6	;volatile
  9661  0B15                     l3299:
  9662                           
  9663                           ;main.c: 513:         result = (result << 8) | byte;
  9664  0B15  0020               	movlb	0	; select bank0
  9665  0B16  0820               	movf	spi_read_32bits@byte,w
  9666  0B17  00F5               	movwf	??_spi_read_32bits
  9667  0B18  01F6               	clrf	??_spi_read_32bits+1
  9668  0B19  01F7               	clrf	??_spi_read_32bits+2
  9669  0B1A  01F8               	clrf	??_spi_read_32bits+3
  9670  0B1B  0821               	movf	spi_read_32bits@result,w
  9671  0B1C  00F9               	movwf	??_spi_read_32bits+4
  9672  0B1D  0822               	movf	spi_read_32bits@result+1,w
  9673  0B1E  00FA               	movwf	??_spi_read_32bits+5
  9674  0B1F  0823               	movf	spi_read_32bits@result+2,w
  9675  0B20  00FB               	movwf	??_spi_read_32bits+6
  9676  0B21  0824               	movf	spi_read_32bits@result+3,w
  9677  0B22  00FC               	movwf	??_spi_read_32bits+7
  9678  0B23  3008               	movlw	8
  9679  0B24                     u3035:
  9680  0B24  35F9               	lslf	??_spi_read_32bits+4,f
  9681  0B25  0DFA               	rlf	??_spi_read_32bits+5,f
  9682  0B26  0DFB               	rlf	??_spi_read_32bits+6,f
  9683  0B27  0DFC               	rlf	??_spi_read_32bits+7,f
  9684  0B28                     u3030:
  9685  0B28  0B89               	decfsz	9,f
  9686  0B29  2B24               	goto	u3035
  9687  0B2A  0879               	movf	??_spi_read_32bits+4,w
  9688  0B2B  04F5               	iorwf	??_spi_read_32bits,f
  9689  0B2C  087A               	movf	??_spi_read_32bits+5,w
  9690  0B2D  04F6               	iorwf	??_spi_read_32bits+1,f
  9691  0B2E  087B               	movf	??_spi_read_32bits+6,w
  9692  0B2F  04F7               	iorwf	??_spi_read_32bits+2,f
  9693  0B30  087C               	movf	??_spi_read_32bits+7,w
  9694  0B31  04F8               	iorwf	??_spi_read_32bits+3,f
  9695  0B32  0878               	movf	??_spi_read_32bits+3,w
  9696  0B33  00A4               	movwf	spi_read_32bits@result+3
  9697  0B34  0877               	movf	??_spi_read_32bits+2,w
  9698  0B35  00A3               	movwf	spi_read_32bits@result+2
  9699  0B36  0876               	movf	??_spi_read_32bits+1,w
  9700  0B37  00A2               	movwf	spi_read_32bits@result+1
  9701  0B38  0875               	movf	??_spi_read_32bits,w
  9702  0B39  00A1               	movwf	spi_read_32bits@result
  9703  0B3A                     l3301:
  9704                           
  9705                           ;main.c: 514:         LATC6 = 0;
  9706  0B3A  0022               	movlb	2	; select bank2
  9707  0B3B  130E               	bcf	14,6	;volatile
  9708  0B3C                     l3303:
  9709                           
  9710                           ;main.c: 515:     }
  9711  0B3C  3001               	movlw	1
  9712  0B3D  0020               	movlb	0	; select bank0
  9713  0B3E  07A5               	addwf	spi_read_32bits@i,f
  9714  0B3F  3000               	movlw	0
  9715  0B40  3DA6               	addwfc	spi_read_32bits@i+1,f
  9716  0B41                     l3305:
  9717  0B41  0826               	movf	spi_read_32bits@i+1,w
  9718  0B42  3A80               	xorlw	128
  9719  0B43  00F5               	movwf	??_spi_read_32bits
  9720  0B44  3080               	movlw	128
  9721  0B45  0275               	subwf	??_spi_read_32bits,w
  9722  0B46  1D03               	skipz
  9723  0B47  2B4A               	goto	u3045
  9724  0B48  3004               	movlw	4
  9725  0B49  0225               	subwf	spi_read_32bits@i,w
  9726  0B4A                     u3045:
  9727  0B4A  1C03               	skipc
  9728  0B4B  2B4D               	goto	u3041
  9729  0B4C  2B4E               	goto	u3040
  9730  0B4D                     u3041:
  9731  0B4D  2B0B               	goto	l3295
  9732  0B4E                     u3040:
  9733  0B4E                     l392:
  9734                           
  9735                           ;main.c: 518:     LATC6 = 1;
  9736  0B4E  0022               	movlb	2	; select bank2
  9737  0B4F  170E               	bsf	14,6	;volatile
  9738  0B50                     l3307:
  9739                           
  9740                           ;main.c: 520:     return result;
  9741  0B50  0020               	movlb	0	; select bank0
  9742  0B51  0824               	movf	spi_read_32bits@result+3,w
  9743  0B52  00F4               	movwf	?_spi_read_32bits+3
  9744  0B53  0823               	movf	spi_read_32bits@result+2,w
  9745  0B54  00F3               	movwf	?_spi_read_32bits+2
  9746  0B55  0822               	movf	spi_read_32bits@result+1,w
  9747  0B56  00F2               	movwf	?_spi_read_32bits+1
  9748  0B57  0821               	movf	spi_read_32bits@result,w
  9749  0B58  00F1               	movwf	?_spi_read_32bits
  9750  0B59                     l393:
  9751  0B59  0008               	return
  9752  0B5A                     __end_of_spi_read_32bits:
  9753                           
  9754                           	psect	text17
  9755  167D                     __ptext17:	
  9756 ;; *************** function _spi_transfer *****************
  9757 ;; Defined at:
  9758 ;;		line 486 in file "main.c"
  9759 ;; Parameters:    Size  Location     Type
  9760 ;;  data            1    wreg     unsigned char 
  9761 ;; Auto vars:     Size  Location     Type
  9762 ;;  data            1    0[COMMON] unsigned char 
  9763 ;; Return value:  Size  Location     Type
  9764 ;;                  1    wreg      unsigned char 
  9765 ;; Registers used:
  9766 ;;		wreg
  9767 ;; Tracked objects:
  9768 ;;		On entry : 0/0
  9769 ;;		On exit  : 0/0
  9770 ;;		Unchanged: 0/0
  9771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9773 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9775 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9776 ;;Total ram usage:        1 bytes
  9777 ;; Hardware stack levels used:    1
  9778 ;; Hardware stack levels required when called:    4
  9779 ;; This function calls:
  9780 ;;		Nothing
  9781 ;; This function is called by:
  9782 ;;		_spi_read_32bits
  9783 ;; This function uses a non-reentrant model
  9784 ;;
  9785                           
  9786                           
  9787                           ;psect for function _spi_transfer
  9788  167D                     _spi_transfer:
  9789                           
  9790                           ;incstack = 0
  9791                           ; Regs used in _spi_transfer: [wreg]
  9792                           ;spi_transfer@data stored from wreg
  9793  167D  00F0               	movwf	spi_transfer@data
  9794  167E                     l2951:
  9795                           
  9796                           ;main.c: 487:     SSP1BUF = data;
  9797  167E  0870               	movf	spi_transfer@data,w
  9798  167F  0024               	movlb	4	; select bank4
  9799  1680  0091               	movwf	17	;volatile
  9800  1681                     l382:	
  9801                           ;main.c: 488:     while(!SSP1STATbits.BF);
  9802                           
  9803  1681  1C14               	btfss	20,0	;volatile
  9804  1682  2E84               	goto	u2371
  9805  1683  2E85               	goto	u2370
  9806  1684                     u2371:
  9807  1684  2E81               	goto	l382
  9808  1685                     u2370:
  9809  1685                     l2953:
  9810                           
  9811                           ;main.c: 489:     return SSP1BUF;
  9812  1685  0811               	movf	17,w	;volatile
  9813  1686                     l385:
  9814  1686  0008               	return
  9815  1687                     __end_of_spi_transfer:
  9816                           
  9817                           	psect	text18
  9818  1770                     __ptext18:	
  9819 ;; *************** function _setMotorSpeed *****************
  9820 ;; Defined at:
  9821 ;;		line 364 in file "main.c"
  9822 ;; Parameters:    Size  Location     Type
  9823 ;;  num             2    4[COMMON] unsigned short 
  9824 ;;  motorNum        2    6[COMMON] short 
  9825 ;; Auto vars:     Size  Location     Type
  9826 ;;		None
  9827 ;; Return value:  Size  Location     Type
  9828 ;;                  1    wreg      void 
  9829 ;; Registers used:
  9830 ;;		wreg, status,2, status,0, pclath, cstack
  9831 ;; Tracked objects:
  9832 ;;		On entry : 0/0
  9833 ;;		On exit  : 0/0
  9834 ;;		Unchanged: 0/0
  9835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9836 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9839 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9840 ;;Total ram usage:        4 bytes
  9841 ;; Hardware stack levels used:    1
  9842 ;; Hardware stack levels required when called:    5
  9843 ;; This function calls:
  9844 ;;		_PWM3_LoadDutyValue
  9845 ;;		_PWM4_LoadDutyValue
  9846 ;; This function is called by:
  9847 ;;		_main
  9848 ;; This function uses a non-reentrant model
  9849 ;;
  9850                           
  9851                           
  9852                           ;psect for function _setMotorSpeed
  9853  1770                     _setMotorSpeed:
  9854  1770                     l3277:	
  9855                           ;incstack = 0
  9856                           ; Regs used in _setMotorSpeed: [wreg+status,2+status,0+pclath+cstack]
  9857                           
  9858                           
  9859                           ;main.c: 365:     if (motorNum == 1)
  9860  1770  0376               	decf	setMotorSpeed@motorNum,w
  9861  1771  0477               	iorwf	setMotorSpeed@motorNum+1,w
  9862  1772  1D03               	btfss	3,2
  9863  1773  2F75               	goto	u3011
  9864  1774  2F76               	goto	u3010
  9865  1775                     u3011:
  9866  1775  2F7D               	goto	l3281
  9867  1776                     u3010:
  9868  1776                     l3279:
  9869                           
  9870                           ;main.c: 366:         PWM3_LoadDutyValue(num);
  9871  1776  0875               	movf	setMotorSpeed@num+1,w
  9872  1777  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  9873  1778  0874               	movf	setMotorSpeed@num,w
  9874  1779  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  9875  177A  3196  26C0  3197   	fcall	_PWM3_LoadDutyValue
  9876  177D                     l3281:
  9877                           
  9878                           ;main.c: 367:     if (motorNum == 2)
  9879  177D  3002               	movlw	2
  9880  177E  0676               	xorwf	setMotorSpeed@motorNum,w
  9881  177F  0477               	iorwf	setMotorSpeed@motorNum+1,w
  9882  1780  1D03               	btfss	3,2
  9883  1781  2F83               	goto	u3021
  9884  1782  2F84               	goto	u3020
  9885  1783                     u3021:
  9886  1783  2F8B               	goto	l351
  9887  1784                     u3020:
  9888  1784                     l3283:
  9889                           
  9890                           ;main.c: 368:         PWM4_LoadDutyValue(num);
  9891  1784  0875               	movf	setMotorSpeed@num+1,w
  9892  1785  00F1               	movwf	PWM4_LoadDutyValue@dutyValue+1
  9893  1786  0874               	movf	setMotorSpeed@num,w
  9894  1787  00F0               	movwf	PWM4_LoadDutyValue@dutyValue
  9895  1788  3196  26D6  3197   	fcall	_PWM4_LoadDutyValue
  9896  178B                     l351:
  9897  178B  0008               	return
  9898  178C                     __end_of_setMotorSpeed:
  9899                           
  9900                           	psect	text19
  9901  16D6                     __ptext19:	
  9902 ;; *************** function _PWM4_LoadDutyValue *****************
  9903 ;; Defined at:
  9904 ;;		line 74 in file "mcc_generated_files/pwm4.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;  dutyValue       2    0[COMMON] unsigned short 
  9907 ;; Auto vars:     Size  Location     Type
  9908 ;;		None
  9909 ;; Return value:  Size  Location     Type
  9910 ;;                  1    wreg      void 
  9911 ;; Registers used:
  9912 ;;		wreg, status,2, status,0
  9913 ;; Tracked objects:
  9914 ;;		On entry : 0/0
  9915 ;;		On exit  : 0/0
  9916 ;;		Unchanged: 0/0
  9917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9918 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9920 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9921 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;Total ram usage:        4 bytes
  9923 ;; Hardware stack levels used:    1
  9924 ;; Hardware stack levels required when called:    4
  9925 ;; This function calls:
  9926 ;;		Nothing
  9927 ;; This function is called by:
  9928 ;;		_setMotorSpeed
  9929 ;; This function uses a non-reentrant model
  9930 ;;
  9931                           
  9932                           
  9933                           ;psect for function _PWM4_LoadDutyValue
  9934  16D6                     _PWM4_LoadDutyValue:
  9935  16D6                     l2943:	
  9936                           ;incstack = 0
  9937                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2+status,0]
  9938                           
  9939                           
  9940                           ;mcc_generated_files/pwm4.c: 74:  void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm4.c: 75:  {;mcc_generated_files/pwm4.c: 77:      PWM4DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9941  16D6  0871               	movf	PWM4_LoadDutyValue@dutyValue+1,w
  9942  16D7  00F3               	movwf	??_PWM4_LoadDutyValue+1
  9943  16D8  0870               	movf	PWM4_LoadDutyValue@dutyValue,w
  9944  16D9  00F2               	movwf	??_PWM4_LoadDutyValue
  9945  16DA  36F3               	lsrf	??_PWM4_LoadDutyValue+1,f
  9946  16DB  0CF2               	rrf	??_PWM4_LoadDutyValue,f
  9947  16DC  36F3               	lsrf	??_PWM4_LoadDutyValue+1,f
  9948  16DD  0CF2               	rrf	??_PWM4_LoadDutyValue,f
  9949  16DE  0872               	movf	??_PWM4_LoadDutyValue,w
  9950  16DF  002C               	movlb	12	; select bank12
  9951  16E0  009B               	movwf	27	;volatile
  9952                           
  9953                           ;mcc_generated_files/pwm4.c: 80:      PWM4DCL = (dutyValue & 0x0003)<<6;
  9954  16E1  0870               	movf	PWM4_LoadDutyValue@dutyValue,w
  9955  16E2  3903               	andlw	3
  9956  16E3  00F2               	movwf	??_PWM4_LoadDutyValue
  9957  16E4  3005               	movlw	5
  9958  16E5                     u2365:
  9959  16E5  35F2               	lslf	??_PWM4_LoadDutyValue,f
  9960  16E6  3EFF               	addlw	-1
  9961  16E7  1D03               	skipz
  9962  16E8  2EE5               	goto	u2365
  9963  16E9  3572               	lslf	??_PWM4_LoadDutyValue,w
  9964  16EA  009A               	movwf	26	;volatile
  9965  16EB                     l160:
  9966  16EB  0008               	return
  9967  16EC                     __end_of_PWM4_LoadDutyValue:
  9968                           
  9969                           	psect	text20
  9970  16C0                     __ptext20:	
  9971 ;; *************** function _PWM3_LoadDutyValue *****************
  9972 ;; Defined at:
  9973 ;;		line 74 in file "mcc_generated_files/pwm3.c"
  9974 ;; Parameters:    Size  Location     Type
  9975 ;;  dutyValue       2    0[COMMON] unsigned short 
  9976 ;; Auto vars:     Size  Location     Type
  9977 ;;		None
  9978 ;; Return value:  Size  Location     Type
  9979 ;;                  1    wreg      void 
  9980 ;; Registers used:
  9981 ;;		wreg, status,2, status,0
  9982 ;; Tracked objects:
  9983 ;;		On entry : 0/0
  9984 ;;		On exit  : 0/0
  9985 ;;		Unchanged: 0/0
  9986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9989 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9990 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9991 ;;Total ram usage:        4 bytes
  9992 ;; Hardware stack levels used:    1
  9993 ;; Hardware stack levels required when called:    4
  9994 ;; This function calls:
  9995 ;;		Nothing
  9996 ;; This function is called by:
  9997 ;;		_setMotorSpeed
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           
 10002                           ;psect for function _PWM3_LoadDutyValue
 10003  16C0                     _PWM3_LoadDutyValue:
 10004  16C0                     l2941:	
 10005                           ;incstack = 0
 10006                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
 10007                           
 10008                           
 10009                           ;mcc_generated_files/pwm3.c: 74:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 75:  {;mcc_generated_files/pwm3.c: 77:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 10010  16C0  0871               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 10011  16C1  00F3               	movwf	??_PWM3_LoadDutyValue+1
 10012  16C2  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
 10013  16C3  00F2               	movwf	??_PWM3_LoadDutyValue
 10014  16C4  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
 10015  16C5  0CF2               	rrf	??_PWM3_LoadDutyValue,f
 10016  16C6  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
 10017  16C7  0CF2               	rrf	??_PWM3_LoadDutyValue,f
 10018  16C8  0872               	movf	??_PWM3_LoadDutyValue,w
 10019  16C9  002C               	movlb	12	; select bank12
 10020  16CA  0098               	movwf	24	;volatile
 10021                           
 10022                           ;mcc_generated_files/pwm3.c: 80:      PWM3DCL = (dutyValue & 0x0003)<<6;
 10023  16CB  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
 10024  16CC  3903               	andlw	3
 10025  16CD  00F2               	movwf	??_PWM3_LoadDutyValue
 10026  16CE  3005               	movlw	5
 10027  16CF                     u2355:
 10028  16CF  35F2               	lslf	??_PWM3_LoadDutyValue,f
 10029  16D0  3EFF               	addlw	-1
 10030  16D1  1D03               	skipz
 10031  16D2  2ECF               	goto	u2355
 10032  16D3  3572               	lslf	??_PWM3_LoadDutyValue,w
 10033  16D4  0097               	movwf	23	;volatile
 10034  16D5                     l146:
 10035  16D5  0008               	return
 10036  16D6                     __end_of_PWM3_LoadDutyValue:
 10037                           
 10038                           	psect	text21
 10039  0815                     __ptext21:	
 10040 ;; *************** function _reportfault *****************
 10041 ;; Defined at:
 10042 ;;		line 355 in file "main.c"
 10043 ;; Parameters:    Size  Location     Type
 10044 ;;  s               1    wreg     PTR unsigned char 
 10045 ;;		 -> faultStr(17), 
 10046 ;;  fault           1    9[COMMON] unsigned char 
 10047 ;; Auto vars:     Size  Location     Type
 10048 ;;  s               1   11[COMMON] PTR unsigned char 
 10049 ;;		 -> faultStr(17), 
 10050 ;;  i               2   12[COMMON] int 
 10051 ;; Return value:  Size  Location     Type
 10052 ;;                  1    wreg      void 
 10053 ;; Registers used:
 10054 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10055 ;; Tracked objects:
 10056 ;;		On entry : 0/0
 10057 ;;		On exit  : 0/0
 10058 ;;		Unchanged: 0/0
 10059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10060 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10061 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10062 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10063 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10064 ;;Total ram usage:        5 bytes
 10065 ;; Hardware stack levels used:    1
 10066 ;; Hardware stack levels required when called:    6
 10067 ;; This function calls:
 10068 ;;		_command
 10069 ;;		_dataCMD
 10070 ;; This function is called by:
 10071 ;;		_main
 10072 ;; This function uses a non-reentrant model
 10073 ;;
 10074                           
 10075                           
 10076                           ;psect for function _reportfault
 10077  0815                     _reportfault:
 10078                           
 10079                           ;incstack = 0
 10080                           ; Regs used in _reportfault: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10081                           ;reportfault@s stored from wreg
 10082  0815  00FB               	movwf	reportfault@s
 10083  0816                     l3311:
 10084                           
 10085                           ;main.c: 356:     command(0x01);
 10086  0816  3001               	movlw	1
 10087  0817  318A  2247  3188   	fcall	_command
 10088  081A                     l3313:
 10089                           
 10090                           ;main.c: 357:     int i;;main.c: 358:     s[11]= fault | '\x30';
 10091  081A  0879               	movf	reportfault@fault,w
 10092  081B  3830               	iorlw	48
 10093  081C  00FA               	movwf	??_reportfault
 10094  081D  087B               	movf	reportfault@s,w
 10095  081E  3E0B               	addlw	11
 10096  081F  0086               	movwf	6
 10097  0820  3001               	movlw	1	; select bank2/3
 10098  0821  0087               	movwf	7
 10099  0822  087A               	movf	??_reportfault,w
 10100  0823  0081               	movwf	1
 10101  0824                     l3315:
 10102                           
 10103                           ;main.c: 359:     for( i=0;i<16;i++){
 10104  0824  01FC               	clrf	reportfault@i
 10105  0825  01FD               	clrf	reportfault@i+1
 10106  0826                     l3321:
 10107                           
 10108                           ;main.c: 360:       dataCMD(s[i]);
 10109  0826  087C               	movf	reportfault@i,w
 10110  0827  077B               	addwf	reportfault@s,w
 10111  0828  00FA               	movwf	??_reportfault
 10112  0829  087A               	movf	??_reportfault,w
 10113  082A  0086               	movwf	6
 10114  082B  3001               	movlw	1	; select bank2/3
 10115  082C  0087               	movwf	7
 10116  082D  0801               	movf	1,w
 10117  082E  318A  22A2  3188   	fcall	_dataCMD
 10118  0831                     l3323:
 10119                           
 10120                           ;main.c: 361:     }
 10121  0831  3001               	movlw	1
 10122  0832  07FC               	addwf	reportfault@i,f
 10123  0833  3000               	movlw	0
 10124  0834  3DFD               	addwfc	reportfault@i+1,f
 10125  0835                     l3325:
 10126  0835  087D               	movf	reportfault@i+1,w
 10127  0836  3A80               	xorlw	128
 10128  0837  00FA               	movwf	??_reportfault
 10129  0838  3080               	movlw	128
 10130  0839  027A               	subwf	??_reportfault,w
 10131  083A  1D03               	skipz
 10132  083B  283E               	goto	u3055
 10133  083C  3010               	movlw	16
 10134  083D  027C               	subwf	reportfault@i,w
 10135  083E                     u3055:
 10136  083E  1C03               	skipc
 10137  083F  2841               	goto	u3051
 10138  0840  2842               	goto	u3050
 10139  0841                     u3051:
 10140  0841  2826               	goto	l3321
 10141  0842                     u3050:
 10142  0842                     l346:
 10143  0842  0008               	return
 10144  0843                     __end_of_reportfault:
 10145                           
 10146                           	psect	text22
 10147  0CC4                     __ptext22:	
 10148 ;; *************** function _printByteValue *****************
 10149 ;; Defined at:
 10150 ;;		line 314 in file "main.c"
 10151 ;; Parameters:    Size  Location     Type
 10152 ;;  s               1    wreg     PTR unsigned char 
 10153 ;;		 -> text7(17), 
 10154 ;;  byteVal         1    9[COMMON] unsigned char 
 10155 ;;  pos             2   10[COMMON] int 
 10156 ;; Auto vars:     Size  Location     Type
 10157 ;;  s               1    2[BANK0 ] PTR unsigned char 
 10158 ;;		 -> text7(17), 
 10159 ;;  i               2    3[BANK0 ] int 
 10160 ;;  upperBits       1    1[BANK0 ] unsigned char 
 10161 ;;  lowerBits       1    0[BANK0 ] unsigned char 
 10162 ;; Return value:  Size  Location     Type
 10163 ;;                  1    wreg      void 
 10164 ;; Registers used:
 10165 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10166 ;; Tracked objects:
 10167 ;;		On entry : 0/0
 10168 ;;		On exit  : 0/0
 10169 ;;		Unchanged: 0/0
 10170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10171 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10172 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10173 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10174 ;;      Totals:         5       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10175 ;;Total ram usage:       10 bytes
 10176 ;; Hardware stack levels used:    1
 10177 ;; Hardware stack levels required when called:    6
 10178 ;; This function calls:
 10179 ;;		_command
 10180 ;;		_dataCMD
 10181 ;; This function is called by:
 10182 ;;		_main
 10183 ;; This function uses a non-reentrant model
 10184 ;;
 10185                           
 10186                           
 10187                           ;psect for function _printByteValue
 10188  0CC4                     _printByteValue:
 10189                           
 10190                           ;incstack = 0
 10191                           ; Regs used in _printByteValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10192                           ;printByteValue@s stored from wreg
 10193  0CC4  0020               	movlb	0	; select bank0
 10194  0CC5  00A2               	movwf	printByteValue@s
 10195  0CC6                     l3327:
 10196                           
 10197                           ;main.c: 314: void printByteValue(char * s, unsigned char byteVal, int pos);main.c: 315:
      +                           {;main.c: 318:    int i;;main.c: 323:    unsigned char lowerBits = byteVal & '\x0F';
 10198  0CC6  0879               	movf	printByteValue@byteVal,w
 10199  0CC7  390F               	andlw	15
 10200  0CC8  00FC               	movwf	??_printByteValue
 10201  0CC9  087C               	movf	??_printByteValue,w
 10202  0CCA  00A0               	movwf	printByteValue@lowerBits
 10203  0CCB                     l3329:
 10204                           
 10205                           ;main.c: 324:    unsigned char upperBits = (byteVal >> 4) & '\x0F';
 10206  0CCB  0879               	movf	printByteValue@byteVal,w
 10207  0CCC  00FC               	movwf	??_printByteValue
 10208  0CCD  3004               	movlw	4
 10209  0CCE                     u3065:
 10210  0CCE  36FC               	lsrf	??_printByteValue,f
 10211  0CCF  0B89               	decfsz	9,f
 10212  0CD0  2CCE               	goto	u3065
 10213  0CD1  087C               	movf	??_printByteValue,w
 10214  0CD2  390F               	andlw	15
 10215  0CD3  00FD               	movwf	??_printByteValue+1
 10216  0CD4  087D               	movf	??_printByteValue+1,w
 10217  0CD5  00A1               	movwf	printByteValue@upperBits
 10218  0CD6                     l3331:
 10219                           
 10220                           ;main.c: 327:    if (lowerBits< 10)
 10221  0CD6  300A               	movlw	10
 10222  0CD7  0220               	subwf	printByteValue@lowerBits,w
 10223  0CD8  1803               	skipnc
 10224  0CD9  2CDB               	goto	u3071
 10225  0CDA  2CDC               	goto	u3070
 10226  0CDB                     u3071:
 10227  0CDB  2CE9               	goto	l3335
 10228  0CDC                     u3070:
 10229  0CDC                     l3333:
 10230                           
 10231                           ;main.c: 328:        s[2*pos+1]= lowerBits | '\x30';
 10232  0CDC  0820               	movf	printByteValue@lowerBits,w
 10233  0CDD  3830               	iorlw	48
 10234  0CDE  00FC               	movwf	??_printByteValue
 10235  0CDF  357A               	lslf	printByteValue@pos,w
 10236  0CE0  0722               	addwf	printByteValue@s,w
 10237  0CE1  00FD               	movwf	??_printByteValue+1
 10238  0CE2  0A7D               	incf	??_printByteValue+1,w
 10239  0CE3  0086               	movwf	6
 10240  0CE4  3001               	movlw	1	; select bank2/3
 10241  0CE5  0087               	movwf	7
 10242  0CE6  087C               	movf	??_printByteValue,w
 10243  0CE7  0081               	movwf	1
 10244  0CE8  2CF7               	goto	l3337
 10245  0CE9                     l3335:
 10246                           
 10247                           ;main.c: 330:        s[2*pos+1] = ((lowerBits-1)&'\x07') | '\x40';
 10248  0CE9  0820               	movf	printByteValue@lowerBits,w
 10249  0CEA  3EFF               	addlw	255
 10250  0CEB  3907               	andlw	7
 10251  0CEC  3840               	iorlw	64
 10252  0CED  00FC               	movwf	??_printByteValue
 10253  0CEE  357A               	lslf	printByteValue@pos,w
 10254  0CEF  0722               	addwf	printByteValue@s,w
 10255  0CF0  00FD               	movwf	??_printByteValue+1
 10256  0CF1  0A7D               	incf	??_printByteValue+1,w
 10257  0CF2  0086               	movwf	6
 10258  0CF3  3001               	movlw	1	; select bank2/3
 10259  0CF4  0087               	movwf	7
 10260  0CF5  087C               	movf	??_printByteValue,w
 10261  0CF6  0081               	movwf	1
 10262  0CF7                     l3337:
 10263                           
 10264                           ;main.c: 333:    if (upperBits< 10)
 10265  0CF7  300A               	movlw	10
 10266  0CF8  0221               	subwf	printByteValue@upperBits,w
 10267  0CF9  1803               	skipnc
 10268  0CFA  2CFC               	goto	u3081
 10269  0CFB  2CFD               	goto	u3080
 10270  0CFC                     u3081:
 10271  0CFC  2D0A               	goto	l3341
 10272  0CFD                     u3080:
 10273  0CFD                     l3339:
 10274                           
 10275                           ;main.c: 334:        s[2*pos]= upperBits | '\x30';
 10276  0CFD  0821               	movf	printByteValue@upperBits,w
 10277  0CFE  3830               	iorlw	48
 10278  0CFF  00FC               	movwf	??_printByteValue
 10279  0D00  357A               	lslf	printByteValue@pos,w
 10280  0D01  0722               	addwf	printByteValue@s,w
 10281  0D02  00FD               	movwf	??_printByteValue+1
 10282  0D03  087D               	movf	??_printByteValue+1,w
 10283  0D04  0086               	movwf	6
 10284  0D05  3001               	movlw	1	; select bank2/3
 10285  0D06  0087               	movwf	7
 10286  0D07  087C               	movf	??_printByteValue,w
 10287  0D08  0081               	movwf	1
 10288  0D09  2D18               	goto	l3343
 10289  0D0A                     l3341:
 10290                           
 10291                           ;main.c: 336:        s[2*pos] = ((upperBits- 1)&'\x07') | '\x40';
 10292  0D0A  0821               	movf	printByteValue@upperBits,w
 10293  0D0B  3EFF               	addlw	255
 10294  0D0C  3907               	andlw	7
 10295  0D0D  3840               	iorlw	64
 10296  0D0E  00FC               	movwf	??_printByteValue
 10297  0D0F  357A               	lslf	printByteValue@pos,w
 10298  0D10  0722               	addwf	printByteValue@s,w
 10299  0D11  00FD               	movwf	??_printByteValue+1
 10300  0D12  087D               	movf	??_printByteValue+1,w
 10301  0D13  0086               	movwf	6
 10302  0D14  3001               	movlw	1	; select bank2/3
 10303  0D15  0087               	movwf	7
 10304  0D16  087C               	movf	??_printByteValue,w
 10305  0D17  0081               	movwf	1
 10306  0D18                     l3343:
 10307                           
 10308                           ;main.c: 338:    command(0x01);
 10309  0D18  3001               	movlw	1
 10310  0D19  318A  2247  318C   	fcall	_command
 10311  0D1C                     l3345:
 10312                           
 10313                           ;main.c: 339:    _delay((unsigned long)((2)*(16000000/4000.0)));
 10314  0D1C  300B               	movlw	11
 10315  0D1D  00FC               	movwf	??_printByteValue
 10316  0D1E  3062               	movlw	98
 10317  0D1F                     u3477:
 10318  0D1F  0B89               	decfsz	9,f
 10319  0D20  2D1F               	goto	u3477
 10320  0D21  0BFC               	decfsz	??_printByteValue,f
 10321  0D22  2D1F               	goto	u3477
 10322  0D23  3200               	nop2
 10323  0D24                     l3347:
 10324                           
 10325                           ;main.c: 340:    for(i=0;i<16;i++){
 10326  0D24  0020               	movlb	0	; select bank0
 10327  0D25  01A3               	clrf	printByteValue@i
 10328  0D26  01A4               	clrf	printByteValue@i+1
 10329  0D27                     l3353:
 10330                           
 10331                           ;main.c: 341:       dataCMD(s[i]);
 10332  0D27  0020               	movlb	0	; select bank0
 10333  0D28  0823               	movf	printByteValue@i,w
 10334  0D29  0722               	addwf	printByteValue@s,w
 10335  0D2A  00FC               	movwf	??_printByteValue
 10336  0D2B  087C               	movf	??_printByteValue,w
 10337  0D2C  0086               	movwf	6
 10338  0D2D  3001               	movlw	1	; select bank2/3
 10339  0D2E  0087               	movwf	7
 10340  0D2F  0801               	movf	1,w
 10341  0D30  318A  22A2  318C   	fcall	_dataCMD
 10342  0D33                     l3355:
 10343                           
 10344                           ;main.c: 342:    }
 10345  0D33  3001               	movlw	1
 10346  0D34  0020               	movlb	0	; select bank0
 10347  0D35  07A3               	addwf	printByteValue@i,f
 10348  0D36  3000               	movlw	0
 10349  0D37  3DA4               	addwfc	printByteValue@i+1,f
 10350  0D38                     l3357:
 10351  0D38  0824               	movf	printByteValue@i+1,w
 10352  0D39  3A80               	xorlw	128
 10353  0D3A  00FC               	movwf	??_printByteValue
 10354  0D3B  3080               	movlw	128
 10355  0D3C  027C               	subwf	??_printByteValue,w
 10356  0D3D  1D03               	skipz
 10357  0D3E  2D41               	goto	u3095
 10358  0D3F  3010               	movlw	16
 10359  0D40  0223               	subwf	printByteValue@i,w
 10360  0D41                     u3095:
 10361  0D41  1C03               	skipc
 10362  0D42  2D44               	goto	u3091
 10363  0D43  2D45               	goto	u3090
 10364  0D44                     u3091:
 10365  0D44  2D27               	goto	l3353
 10366  0D45                     u3090:
 10367  0D45                     l3359:
 10368                           
 10369                           ;main.c: 349:    command(0xA0);
 10370  0D45  30A0               	movlw	160
 10371  0D46  318A  2247  318C   	fcall	_command
 10372  0D49                     l3361:
 10373                           
 10374                           ;main.c: 350:    for(i=0;i<16;i++){
 10375  0D49  0020               	movlb	0	; select bank0
 10376  0D4A  01A3               	clrf	printByteValue@i
 10377  0D4B  01A4               	clrf	printByteValue@i+1
 10378  0D4C                     l3367:
 10379                           
 10380                           ;main.c: 351:       dataCMD( text6[i] );
 10381  0D4C  0020               	movlb	0	; select bank0
 10382  0D4D  0823               	movf	printByteValue@i,w
 10383  0D4E  3E31               	addlw	(low (_text6| (0+256)))& (0+255)
 10384  0D4F  0086               	movwf	6
 10385  0D50  3001               	movlw	1	; select bank2/3
 10386  0D51  0087               	movwf	7
 10387  0D52  0801               	movf	1,w
 10388  0D53  318A  22A2  318C   	fcall	_dataCMD
 10389  0D56                     l3369:
 10390                           
 10391                           ;main.c: 352:    }
 10392  0D56  3001               	movlw	1
 10393  0D57  0020               	movlb	0	; select bank0
 10394  0D58  07A3               	addwf	printByteValue@i,f
 10395  0D59  3000               	movlw	0
 10396  0D5A  3DA4               	addwfc	printByteValue@i+1,f
 10397  0D5B                     l3371:
 10398  0D5B  0824               	movf	printByteValue@i+1,w
 10399  0D5C  3A80               	xorlw	128
 10400  0D5D  00FC               	movwf	??_printByteValue
 10401  0D5E  3080               	movlw	128
 10402  0D5F  027C               	subwf	??_printByteValue,w
 10403  0D60  1D03               	skipz
 10404  0D61  2D64               	goto	u3105
 10405  0D62  3010               	movlw	16
 10406  0D63  0223               	subwf	printByteValue@i,w
 10407  0D64                     u3105:
 10408  0D64  1C03               	skipc
 10409  0D65  2D67               	goto	u3101
 10410  0D66  2D68               	goto	u3100
 10411  0D67                     u3101:
 10412  0D67  2D4C               	goto	l3367
 10413  0D68                     u3100:
 10414  0D68                     l341:
 10415  0D68  0008               	return
 10416  0D69                     __end_of_printByteValue:
 10417                           
 10418                           	psect	text23
 10419  09A5                     __ptext23:	
 10420 ;; *************** function _convert14BitToFloat *****************
 10421 ;; Defined at:
 10422 ;;		line 373 in file "main.c"
 10423 ;; Parameters:    Size  Location     Type
 10424 ;;  raw14bit        2   26[BANK0 ] unsigned short 
 10425 ;; Auto vars:     Size  Location     Type
 10426 ;;  temp_Float      4   30[BANK0 ] float 
 10427 ;;  raw14           2   36[BANK0 ] short 
 10428 ;;  signed_int      2   34[BANK0 ] short 
 10429 ;; Return value:  Size  Location     Type
 10430 ;;                  4   26[BANK0 ] float 
 10431 ;; Registers used:
 10432 ;;		wreg, status,2, status,0, pclath, cstack
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 0/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10438 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10439 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10441 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10442 ;;Total ram usage:       12 bytes
 10443 ;; Hardware stack levels used:    1
 10444 ;; Hardware stack levels required when called:    5
 10445 ;; This function calls:
 10446 ;;		___fldiv
 10447 ;;		___xxtofl
 10448 ;; This function is called by:
 10449 ;;		_main
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           
 10454                           ;psect for function _convert14BitToFloat
 10455  09A5                     _convert14BitToFloat:
 10456  09A5                     l3373:	
 10457                           ;incstack = 0
 10458                           ; Regs used in _convert14BitToFloat: [wreg+status,2+status,0+pclath+cstack]
 10459                           
 10460                           
 10461                           ;main.c: 375:     int16_t raw14 = raw14bit & 0x3FFF;
 10462  09A5  30FF               	movlw	255
 10463  09A6  0020               	movlb	0	; select bank0
 10464  09A7  053A               	andwf	convert14BitToFloat@raw14bit,w
 10465  09A8  00C4               	movwf	convert14BitToFloat@raw14
 10466  09A9  303F               	movlw	63
 10467  09AA  053B               	andwf	convert14BitToFloat@raw14bit+1,w
 10468  09AB  00C5               	movwf	convert14BitToFloat@raw14+1
 10469  09AC                     l3375:
 10470                           
 10471                           ;main.c: 376:     int16_t signed_int = (raw14 & 0x2000) ? (raw14 - 0x4000) : raw14;
 10472  09AC  1AC5               	btfsc	convert14BitToFloat@raw14+1,5
 10473  09AD  29AF               	goto	u3111
 10474  09AE  29B0               	goto	u3110
 10475  09AF                     u3111:
 10476  09AF  29B5               	goto	l3379
 10477  09B0                     u3110:
 10478  09B0                     l3377:
 10479  09B0  0845               	movf	convert14BitToFloat@raw14+1,w
 10480  09B1  00C3               	movwf	convert14BitToFloat@signed_int+1
 10481  09B2  0844               	movf	convert14BitToFloat@raw14,w
 10482  09B3  00C2               	movwf	convert14BitToFloat@signed_int
 10483  09B4  29BB               	goto	l3381
 10484  09B5                     l3379:
 10485  09B5  0844               	movf	convert14BitToFloat@raw14,w
 10486  09B6  3E00               	addlw	0
 10487  09B7  00C2               	movwf	convert14BitToFloat@signed_int
 10488  09B8  30C0               	movlw	192
 10489  09B9  3D45               	addwfc	convert14BitToFloat@raw14+1,w
 10490  09BA  00C3               	movwf	convert14BitToFloat@signed_int+1
 10491  09BB                     l3381:
 10492                           
 10493                           ;main.c: 377:     float temp_Float = signed_int / 4.0;
 10494  09BB  3040               	movlw	64
 10495  09BC  00A3               	movwf	___fldiv@a+3
 10496  09BD  3080               	movlw	128
 10497  09BE  00A2               	movwf	___fldiv@a+2
 10498  09BF  3000               	movlw	0
 10499  09C0  00A1               	movwf	___fldiv@a+1
 10500  09C1  3000               	movlw	0
 10501  09C2  00A0               	movwf	___fldiv@a
 10502  09C3  0842               	movf	convert14BitToFloat@signed_int,w
 10503  09C4  00F0               	movwf	___xxtofl@val
 10504  09C5  0843               	movf	convert14BitToFloat@signed_int+1,w
 10505  09C6  00F1               	movwf	___xxtofl@val+1
 10506  09C7  0D89               	rlf	9,f
 10507  09C8  3B89               	subwfb	9,f
 10508  09C9  0989               	comf	9,f
 10509  09CA  00F2               	movwf	___xxtofl@val+2
 10510  09CB  00F3               	movwf	___xxtofl@val+3
 10511  09CC  3001               	movlw	1
 10512  09CD  318D  2569  3189   	fcall	___xxtofl
 10513  09D0  0873               	movf	?___xxtofl+3,w
 10514  09D1  0020               	movlb	0	; select bank0
 10515  09D2  00A7               	movwf	___fldiv@b+3
 10516  09D3  0872               	movf	?___xxtofl+2,w
 10517  09D4  00A6               	movwf	___fldiv@b+2
 10518  09D5  0871               	movf	?___xxtofl+1,w
 10519  09D6  00A5               	movwf	___fldiv@b+1
 10520  09D7  0870               	movf	?___xxtofl,w
 10521  09D8  00A4               	movwf	___fldiv@b
 10522  09D9  3182  22CA  3189   	fcall	___fldiv
 10523  09DC  0020               	movlb	0	; select bank0
 10524  09DD  0823               	movf	?___fldiv+3,w
 10525  09DE  00C1               	movwf	convert14BitToFloat@temp_Float+3
 10526  09DF  0822               	movf	?___fldiv+2,w
 10527  09E0  00C0               	movwf	convert14BitToFloat@temp_Float+2
 10528  09E1  0821               	movf	?___fldiv+1,w
 10529  09E2  00BF               	movwf	convert14BitToFloat@temp_Float+1
 10530  09E3  0820               	movf	?___fldiv,w
 10531  09E4  00BE               	movwf	convert14BitToFloat@temp_Float
 10532  09E5                     l3383:
 10533                           
 10534                           ;main.c: 390:     return temp_Float;
 10535  09E5  0841               	movf	convert14BitToFloat@temp_Float+3,w
 10536  09E6  00BD               	movwf	?_convert14BitToFloat+3
 10537  09E7  0840               	movf	convert14BitToFloat@temp_Float+2,w
 10538  09E8  00BC               	movwf	?_convert14BitToFloat+2
 10539  09E9  083F               	movf	convert14BitToFloat@temp_Float+1,w
 10540  09EA  00BB               	movwf	?_convert14BitToFloat+1
 10541  09EB  083E               	movf	convert14BitToFloat@temp_Float,w
 10542  09EC  00BA               	movwf	?_convert14BitToFloat
 10543  09ED                     l358:
 10544  09ED  0008               	return
 10545  09EE                     __end_of_convert14BitToFloat:
 10546                           
 10547                           	psect	text24
 10548  0D69                     __ptext24:	
 10549 ;; *************** function ___xxtofl *****************
 10550 ;; Defined at:
 10551 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\xxtofl.c"
 10552 ;; Parameters:    Size  Location     Type
 10553 ;;  sign            1    wreg     unsigned char 
 10554 ;;  val             4    0[COMMON] long 
 10555 ;; Auto vars:     Size  Location     Type
 10556 ;;  sign            1    8[COMMON] unsigned char 
 10557 ;;  arg             4   10[COMMON] unsigned long 
 10558 ;;  exp             1    9[COMMON] unsigned char 
 10559 ;; Return value:  Size  Location     Type
 10560 ;;                  4    0[COMMON] unsigned char 
 10561 ;; Registers used:
 10562 ;;		wreg, status,2, status,0
 10563 ;; Tracked objects:
 10564 ;;		On entry : 0/0
 10565 ;;		On exit  : 0/0
 10566 ;;		Unchanged: 0/0
 10567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10568 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10569 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10570 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10571 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10572 ;;Total ram usage:       14 bytes
 10573 ;; Hardware stack levels used:    1
 10574 ;; Hardware stack levels required when called:    4
 10575 ;; This function calls:
 10576 ;;		Nothing
 10577 ;; This function is called by:
 10578 ;;		_convert14BitToFloat
 10579 ;; This function uses a non-reentrant model
 10580 ;;
 10581                           
 10582                           
 10583                           ;psect for function ___xxtofl
 10584  0D69                     ___xxtofl:
 10585                           
 10586                           ;incstack = 0
 10587                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10588                           ;___xxtofl@sign stored from wreg
 10589  0D69  00F8               	movwf	___xxtofl@sign
 10590  0D6A                     l3159:
 10591  0D6A  0878               	movf	___xxtofl@sign,w
 10592  0D6B  1903               	btfsc	3,2
 10593  0D6C  2D6E               	goto	u2821
 10594  0D6D  2D6F               	goto	u2820
 10595  0D6E                     u2821:
 10596  0D6E  2D83               	goto	l3165
 10597  0D6F                     u2820:
 10598  0D6F                     l3161:
 10599  0D6F  1FF3               	btfss	___xxtofl@val+3,7
 10600  0D70  2D72               	goto	u2831
 10601  0D71  2D73               	goto	u2830
 10602  0D72                     u2831:
 10603  0D72  2D83               	goto	l3165
 10604  0D73                     u2830:
 10605  0D73                     l3163:
 10606  0D73  0970               	comf	___xxtofl@val,w
 10607  0D74  00FA               	movwf	___xxtofl@arg
 10608  0D75  0971               	comf	___xxtofl@val+1,w
 10609  0D76  00FB               	movwf	___xxtofl@arg+1
 10610  0D77  0972               	comf	___xxtofl@val+2,w
 10611  0D78  00FC               	movwf	___xxtofl@arg+2
 10612  0D79  0973               	comf	___xxtofl@val+3,w
 10613  0D7A  00FD               	movwf	___xxtofl@arg+3
 10614  0D7B  0AFA               	incf	___xxtofl@arg,f
 10615  0D7C  1903               	skipnz
 10616  0D7D  0AFB               	incf	___xxtofl@arg+1,f
 10617  0D7E  1903               	skipnz
 10618  0D7F  0AFC               	incf	___xxtofl@arg+2,f
 10619  0D80  1903               	skipnz
 10620  0D81  0AFD               	incf	___xxtofl@arg+3,f
 10621  0D82  2D8B               	goto	l1033
 10622  0D83                     l3165:
 10623  0D83  0873               	movf	___xxtofl@val+3,w
 10624  0D84  00FD               	movwf	___xxtofl@arg+3
 10625  0D85  0872               	movf	___xxtofl@val+2,w
 10626  0D86  00FC               	movwf	___xxtofl@arg+2
 10627  0D87  0871               	movf	___xxtofl@val+1,w
 10628  0D88  00FB               	movwf	___xxtofl@arg+1
 10629  0D89  0870               	movf	___xxtofl@val,w
 10630  0D8A  00FA               	movwf	___xxtofl@arg
 10631  0D8B                     l1033:
 10632  0D8B  0873               	movf	___xxtofl@val+3,w
 10633  0D8C  0472               	iorwf	___xxtofl@val+2,w
 10634  0D8D  0471               	iorwf	___xxtofl@val+1,w
 10635  0D8E  0470               	iorwf	___xxtofl@val,w
 10636  0D8F  1D03               	skipz
 10637  0D90  2D92               	goto	u2841
 10638  0D91  2D93               	goto	u2840
 10639  0D92                     u2841:
 10640  0D92  2D9C               	goto	l3171
 10641  0D93                     u2840:
 10642  0D93                     l3167:
 10643  0D93  3000               	movlw	0
 10644  0D94  00F3               	movwf	?___xxtofl+3
 10645  0D95  3000               	movlw	0
 10646  0D96  00F2               	movwf	?___xxtofl+2
 10647  0D97  3000               	movlw	0
 10648  0D98  00F1               	movwf	?___xxtofl+1
 10649  0D99  3000               	movlw	0
 10650  0D9A  00F0               	movwf	?___xxtofl
 10651  0D9B  2E14               	goto	l1035
 10652  0D9C                     l3171:
 10653  0D9C  3096               	movlw	150
 10654  0D9D  00F4               	movwf	??___xxtofl
 10655  0D9E  0874               	movf	??___xxtofl,w
 10656  0D9F  00F9               	movwf	___xxtofl@exp
 10657  0DA0  2DAC               	goto	l3175
 10658  0DA1                     l3173:
 10659  0DA1  3001               	movlw	1
 10660  0DA2  00F4               	movwf	??___xxtofl
 10661  0DA3  0874               	movf	??___xxtofl,w
 10662  0DA4  07F9               	addwf	___xxtofl@exp,f
 10663  0DA5  3001               	movlw	1
 10664  0DA6                     u2855:
 10665  0DA6  36FD               	lsrf	___xxtofl@arg+3,f
 10666  0DA7  0CFC               	rrf	___xxtofl@arg+2,f
 10667  0DA8  0CFB               	rrf	___xxtofl@arg+1,f
 10668  0DA9  0CFA               	rrf	___xxtofl@arg,f
 10669  0DAA  0B89               	decfsz	9,f
 10670  0DAB  2DA6               	goto	u2855
 10671  0DAC                     l3175:
 10672  0DAC  30FE               	movlw	254
 10673  0DAD  057D               	andwf	___xxtofl@arg+3,w
 10674  0DAE  1D03               	btfss	3,2
 10675  0DAF  2DB1               	goto	u2861
 10676  0DB0  2DB2               	goto	u2860
 10677  0DB1                     u2861:
 10678  0DB1  2DA1               	goto	l3173
 10679  0DB2                     u2860:
 10680  0DB2  2DC6               	goto	l1039
 10681  0DB3                     l3177:
 10682  0DB3  3001               	movlw	1
 10683  0DB4  00F4               	movwf	??___xxtofl
 10684  0DB5  0874               	movf	??___xxtofl,w
 10685  0DB6  07F9               	addwf	___xxtofl@exp,f
 10686  0DB7                     l3179:
 10687  0DB7  3001               	movlw	1
 10688  0DB8  07FA               	addwf	___xxtofl@arg,f
 10689  0DB9  3000               	movlw	0
 10690  0DBA  3DFB               	addwfc	___xxtofl@arg+1,f
 10691  0DBB  3000               	movlw	0
 10692  0DBC  3DFC               	addwfc	___xxtofl@arg+2,f
 10693  0DBD  3000               	movlw	0
 10694  0DBE  3DFD               	addwfc	___xxtofl@arg+3,f
 10695  0DBF                     l3181:
 10696  0DBF  3001               	movlw	1
 10697  0DC0                     u2875:
 10698  0DC0  36FD               	lsrf	___xxtofl@arg+3,f
 10699  0DC1  0CFC               	rrf	___xxtofl@arg+2,f
 10700  0DC2  0CFB               	rrf	___xxtofl@arg+1,f
 10701  0DC3  0CFA               	rrf	___xxtofl@arg,f
 10702  0DC4  0B89               	decfsz	9,f
 10703  0DC5  2DC0               	goto	u2875
 10704  0DC6                     l1039:
 10705  0DC6  30FF               	movlw	255
 10706  0DC7  057D               	andwf	___xxtofl@arg+3,w
 10707  0DC8  1D03               	btfss	3,2
 10708  0DC9  2DCB               	goto	u2881
 10709  0DCA  2DCC               	goto	u2880
 10710  0DCB                     u2881:
 10711  0DCB  2DB3               	goto	l3177
 10712  0DCC                     u2880:
 10713  0DCC  2DD6               	goto	l3185
 10714  0DCD                     l3183:
 10715  0DCD  3001               	movlw	1
 10716  0DCE  02F9               	subwf	___xxtofl@exp,f
 10717  0DCF  3001               	movlw	1
 10718  0DD0                     u2895:
 10719  0DD0  35FA               	lslf	___xxtofl@arg,f
 10720  0DD1  0DFB               	rlf	___xxtofl@arg+1,f
 10721  0DD2  0DFC               	rlf	___xxtofl@arg+2,f
 10722  0DD3  0DFD               	rlf	___xxtofl@arg+3,f
 10723  0DD4  0B89               	decfsz	9,f
 10724  0DD5  2DD0               	goto	u2895
 10725  0DD6                     l3185:
 10726  0DD6  1BFC               	btfsc	___xxtofl@arg+2,7
 10727  0DD7  2DD9               	goto	u2901
 10728  0DD8  2DDA               	goto	u2900
 10729  0DD9                     u2901:
 10730  0DD9  2DE0               	goto	l1046
 10731  0DDA                     u2900:
 10732  0DDA                     l3187:
 10733  0DDA  3002               	movlw	2
 10734  0DDB  0279               	subwf	___xxtofl@exp,w
 10735  0DDC  1803               	skipnc
 10736  0DDD  2DDF               	goto	u2911
 10737  0DDE  2DE0               	goto	u2910
 10738  0DDF                     u2911:
 10739  0DDF  2DCD               	goto	l3183
 10740  0DE0                     u2910:
 10741  0DE0                     l1046:
 10742  0DE0  1879               	btfsc	___xxtofl@exp,0
 10743  0DE1  2DE3               	goto	u2921
 10744  0DE2  2DE4               	goto	u2920
 10745  0DE3                     u2921:
 10746  0DE3  2DEC               	goto	l1047
 10747  0DE4                     u2920:
 10748  0DE4                     l3189:
 10749  0DE4  30FF               	movlw	255
 10750  0DE5  05FA               	andwf	___xxtofl@arg,f
 10751  0DE6  30FF               	movlw	255
 10752  0DE7  05FB               	andwf	___xxtofl@arg+1,f
 10753  0DE8  307F               	movlw	127
 10754  0DE9  05FC               	andwf	___xxtofl@arg+2,f
 10755  0DEA  30FF               	movlw	255
 10756  0DEB  05FD               	andwf	___xxtofl@arg+3,f
 10757  0DEC                     l1047:
 10758  0DEC  1003               	clrc
 10759  0DED  0CF9               	rrf	___xxtofl@exp,f
 10760  0DEE                     l3191:
 10761  0DEE  0879               	movf	___xxtofl@exp,w
 10762  0DEF  00F4               	movwf	??___xxtofl
 10763  0DF0  01F5               	clrf	??___xxtofl+1
 10764  0DF1  01F6               	clrf	??___xxtofl+2
 10765  0DF2  01F7               	clrf	??___xxtofl+3
 10766  0DF3  3018               	movlw	24
 10767  0DF4                     u2935:
 10768  0DF4  35F4               	lslf	??___xxtofl,f
 10769  0DF5  0DF5               	rlf	??___xxtofl+1,f
 10770  0DF6  0DF6               	rlf	??___xxtofl+2,f
 10771  0DF7  0DF7               	rlf	??___xxtofl+3,f
 10772  0DF8                     u2930:
 10773  0DF8  0B89               	decfsz	9,f
 10774  0DF9  2DF4               	goto	u2935
 10775  0DFA  0874               	movf	??___xxtofl,w
 10776  0DFB  04FA               	iorwf	___xxtofl@arg,f
 10777  0DFC  0875               	movf	??___xxtofl+1,w
 10778  0DFD  04FB               	iorwf	___xxtofl@arg+1,f
 10779  0DFE  0876               	movf	??___xxtofl+2,w
 10780  0DFF  04FC               	iorwf	___xxtofl@arg+2,f
 10781  0E00  0877               	movf	??___xxtofl+3,w
 10782  0E01  04FD               	iorwf	___xxtofl@arg+3,f
 10783  0E02                     l3193:
 10784  0E02  0878               	movf	___xxtofl@sign,w
 10785  0E03  1903               	btfsc	3,2
 10786  0E04  2E06               	goto	u2941
 10787  0E05  2E07               	goto	u2940
 10788  0E06                     u2941:
 10789  0E06  2E0C               	goto	l3199
 10790  0E07                     u2940:
 10791  0E07                     l3195:
 10792  0E07  1FF3               	btfss	___xxtofl@val+3,7
 10793  0E08  2E0A               	goto	u2951
 10794  0E09  2E0B               	goto	u2950
 10795  0E0A                     u2951:
 10796  0E0A  2E0C               	goto	l3199
 10797  0E0B                     u2950:
 10798  0E0B                     l3197:
 10799  0E0B  17FD               	bsf	___xxtofl@arg+3,7
 10800  0E0C                     l3199:
 10801  0E0C  087D               	movf	___xxtofl@arg+3,w
 10802  0E0D  00F3               	movwf	?___xxtofl+3
 10803  0E0E  087C               	movf	___xxtofl@arg+2,w
 10804  0E0F  00F2               	movwf	?___xxtofl+2
 10805  0E10  087B               	movf	___xxtofl@arg+1,w
 10806  0E11  00F1               	movwf	?___xxtofl+1
 10807  0E12  087A               	movf	___xxtofl@arg,w
 10808  0E13  00F0               	movwf	?___xxtofl
 10809  0E14                     l1035:
 10810  0E14  0008               	return
 10811  0E15                     __end_of___xxtofl:
 10812                           
 10813                           	psect	text25
 10814  02CA                     __ptext25:	
 10815 ;; *************** function ___fldiv *****************
 10816 ;; Defined at:
 10817 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcdiv.c"
 10818 ;; Parameters:    Size  Location     Type
 10819 ;;  a               4    0[BANK0 ] unsigned char 
 10820 ;;  b               4    4[BANK0 ] unsigned char 
 10821 ;; Auto vars:     Size  Location     Type
 10822 ;;  grs             4   20[BANK0 ] unsigned long 
 10823 ;;  rem             4   13[BANK0 ] unsigned long 
 10824 ;;  new_exp         2   18[BANK0 ] int 
 10825 ;;  aexp            1   25[BANK0 ] unsigned char 
 10826 ;;  bexp            1   24[BANK0 ] unsigned char 
 10827 ;;  sign            1   17[BANK0 ] unsigned char 
 10828 ;; Return value:  Size  Location     Type
 10829 ;;                  4    0[BANK0 ] unsigned char 
 10830 ;; Registers used:
 10831 ;;		wreg, status,2, status,0
 10832 ;; Tracked objects:
 10833 ;;		On entry : 0/0
 10834 ;;		On exit  : 0/0
 10835 ;;		Unchanged: 0/0
 10836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10837 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10838 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10839 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10840 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10841 ;;Total ram usage:       26 bytes
 10842 ;; Hardware stack levels used:    1
 10843 ;; Hardware stack levels required when called:    4
 10844 ;; This function calls:
 10845 ;;		Nothing
 10846 ;; This function is called by:
 10847 ;;		_convert14BitToFloat
 10848 ;; This function uses a non-reentrant model
 10849 ;;
 10850                           
 10851                           
 10852                           ;psect for function ___fldiv
 10853  02CA                     ___fldiv:
 10854  02CA                     l3019:	
 10855                           ;incstack = 0
 10856                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10857                           
 10858  02CA  0020               	movlb	0	; select bank0
 10859  02CB  0827               	movf	___fldiv@b+3,w
 10860  02CC  3980               	andlw	128
 10861  02CD  00A8               	movwf	??___fldiv
 10862  02CE  0828               	movf	??___fldiv,w
 10863  02CF  00B1               	movwf	___fldiv@sign
 10864  02D0                     l3021:
 10865  02D0  3527               	lslf	___fldiv@b+3,w
 10866  02D1  00A8               	movwf	??___fldiv
 10867  02D2  0828               	movf	??___fldiv,w
 10868  02D3  00B8               	movwf	___fldiv@bexp
 10869  02D4                     l3023:
 10870  02D4  1FA6               	btfss	___fldiv@b+2,7
 10871  02D5  2AD7               	goto	u2531
 10872  02D6  2AD8               	goto	u2530
 10873  02D7                     u2531:
 10874  02D7  2AD9               	goto	l3027
 10875  02D8                     u2530:
 10876  02D8                     l3025:
 10877  02D8  1438               	bsf	___fldiv@bexp,0
 10878  02D9                     l3027:
 10879  02D9  0838               	movf	___fldiv@bexp,w
 10880  02DA  1903               	btfsc	3,2
 10881  02DB  2ADD               	goto	u2541
 10882  02DC  2ADE               	goto	u2540
 10883  02DD                     u2541:
 10884  02DD  2AEE               	goto	l3037
 10885  02DE                     u2540:
 10886  02DE                     l3029:
 10887  02DE  0A38               	incf	___fldiv@bexp,w
 10888  02DF  1D03               	btfss	3,2
 10889  02E0  2AE2               	goto	u2551
 10890  02E1  2AE3               	goto	u2550
 10891  02E2                     u2551:
 10892  02E2  2AEB               	goto	l3033
 10893  02E3                     u2550:
 10894  02E3                     l3031:
 10895  02E3  3000               	movlw	0
 10896  02E4  00A7               	movwf	___fldiv@b+3
 10897  02E5  3000               	movlw	0
 10898  02E6  00A6               	movwf	___fldiv@b+2
 10899  02E7  3000               	movlw	0
 10900  02E8  00A5               	movwf	___fldiv@b+1
 10901  02E9  3000               	movlw	0
 10902  02EA  00A4               	movwf	___fldiv@b
 10903  02EB                     l3033:
 10904  02EB  17A6               	bsf	___fldiv@b+2,7
 10905  02EC                     l3035:
 10906  02EC  01A7               	clrf	___fldiv@b+3
 10907  02ED  2AF6               	goto	l3039
 10908  02EE                     l3037:
 10909  02EE  3000               	movlw	0
 10910  02EF  00A7               	movwf	___fldiv@b+3
 10911  02F0  3000               	movlw	0
 10912  02F1  00A6               	movwf	___fldiv@b+2
 10913  02F2  3000               	movlw	0
 10914  02F3  00A5               	movwf	___fldiv@b+1
 10915  02F4  3000               	movlw	0
 10916  02F5  00A4               	movwf	___fldiv@b
 10917  02F6                     l3039:
 10918  02F6  0823               	movf	___fldiv@a+3,w
 10919  02F7  3980               	andlw	128
 10920  02F8  00A8               	movwf	??___fldiv
 10921  02F9  0828               	movf	??___fldiv,w
 10922  02FA  06B1               	xorwf	___fldiv@sign,f
 10923  02FB                     l3041:
 10924  02FB  3523               	lslf	___fldiv@a+3,w
 10925  02FC  00A8               	movwf	??___fldiv
 10926  02FD  0828               	movf	??___fldiv,w
 10927  02FE  00B9               	movwf	___fldiv@aexp
 10928  02FF                     l3043:
 10929  02FF  1FA2               	btfss	___fldiv@a+2,7
 10930  0300  2B02               	goto	u2561
 10931  0301  2B03               	goto	u2560
 10932  0302                     u2561:
 10933  0302  2B04               	goto	l3047
 10934  0303                     u2560:
 10935  0303                     l3045:
 10936  0303  1439               	bsf	___fldiv@aexp,0
 10937  0304                     l3047:
 10938  0304  0839               	movf	___fldiv@aexp,w
 10939  0305  1903               	btfsc	3,2
 10940  0306  2B08               	goto	u2571
 10941  0307  2B09               	goto	u2570
 10942  0308                     u2571:
 10943  0308  2B19               	goto	l3057
 10944  0309                     u2570:
 10945  0309                     l3049:
 10946  0309  0A39               	incf	___fldiv@aexp,w
 10947  030A  1D03               	btfss	3,2
 10948  030B  2B0D               	goto	u2581
 10949  030C  2B0E               	goto	u2580
 10950  030D                     u2581:
 10951  030D  2B16               	goto	l3053
 10952  030E                     u2580:
 10953  030E                     l3051:
 10954  030E  3000               	movlw	0
 10955  030F  00A3               	movwf	___fldiv@a+3
 10956  0310  3000               	movlw	0
 10957  0311  00A2               	movwf	___fldiv@a+2
 10958  0312  3000               	movlw	0
 10959  0313  00A1               	movwf	___fldiv@a+1
 10960  0314  3000               	movlw	0
 10961  0315  00A0               	movwf	___fldiv@a
 10962  0316                     l3053:
 10963  0316  17A2               	bsf	___fldiv@a+2,7
 10964  0317                     l3055:
 10965  0317  01A3               	clrf	___fldiv@a+3
 10966  0318  2B21               	goto	l949
 10967  0319                     l3057:
 10968  0319  3000               	movlw	0
 10969  031A  00A3               	movwf	___fldiv@a+3
 10970  031B  3000               	movlw	0
 10971  031C  00A2               	movwf	___fldiv@a+2
 10972  031D  3000               	movlw	0
 10973  031E  00A1               	movwf	___fldiv@a+1
 10974  031F  3000               	movlw	0
 10975  0320  00A0               	movwf	___fldiv@a
 10976  0321                     l949:
 10977  0321  0823               	movf	___fldiv@a+3,w
 10978  0322  0422               	iorwf	___fldiv@a+2,w
 10979  0323  0421               	iorwf	___fldiv@a+1,w
 10980  0324  0420               	iorwf	___fldiv@a,w
 10981  0325  1D03               	skipz
 10982  0326  2B28               	goto	u2591
 10983  0327  2B29               	goto	u2590
 10984  0328                     u2591:
 10985  0328  2B42               	goto	l3067
 10986  0329                     u2590:
 10987  0329                     l3059:
 10988  0329  3000               	movlw	0
 10989  032A  00A7               	movwf	___fldiv@b+3
 10990  032B  3000               	movlw	0
 10991  032C  00A6               	movwf	___fldiv@b+2
 10992  032D  3000               	movlw	0
 10993  032E  00A5               	movwf	___fldiv@b+1
 10994  032F  3000               	movlw	0
 10995  0330  00A4               	movwf	___fldiv@b
 10996  0331  3080               	movlw	128
 10997  0332  04A6               	iorwf	___fldiv@b+2,f
 10998  0333  307F               	movlw	127
 10999  0334  04A7               	iorwf	___fldiv@b+3,f
 11000  0335                     l3061:
 11001  0335  0831               	movf	___fldiv@sign,w
 11002  0336  00A8               	movwf	??___fldiv
 11003  0337  0828               	movf	??___fldiv,w
 11004  0338  04A7               	iorwf	___fldiv@b+3,f
 11005  0339                     l3063:
 11006  0339  0827               	movf	___fldiv@b+3,w
 11007  033A  00A3               	movwf	?___fldiv+3
 11008  033B  0826               	movf	___fldiv@b+2,w
 11009  033C  00A2               	movwf	?___fldiv+2
 11010  033D  0825               	movf	___fldiv@b+1,w
 11011  033E  00A1               	movwf	?___fldiv+1
 11012  033F  0824               	movf	___fldiv@b,w
 11013  0340  00A0               	movwf	?___fldiv
 11014  0341  2C7D               	goto	l951
 11015  0342                     l3067:
 11016  0342  0838               	movf	___fldiv@bexp,w
 11017  0343  1D03               	btfss	3,2
 11018  0344  2B46               	goto	u2601
 11019  0345  2B47               	goto	u2600
 11020  0346                     u2601:
 11021  0346  2B50               	goto	l3073
 11022  0347                     u2600:
 11023  0347                     l3069:
 11024  0347  3000               	movlw	0
 11025  0348  00A3               	movwf	?___fldiv+3
 11026  0349  3000               	movlw	0
 11027  034A  00A2               	movwf	?___fldiv+2
 11028  034B  3000               	movlw	0
 11029  034C  00A1               	movwf	?___fldiv+1
 11030  034D  3000               	movlw	0
 11031  034E  00A0               	movwf	?___fldiv
 11032  034F  2C7D               	goto	l951
 11033  0350                     l3073:
 11034  0350  0838               	movf	___fldiv@bexp,w
 11035  0351  00A8               	movwf	??___fldiv
 11036  0352  01A9               	clrf	??___fldiv+1
 11037  0353  0829               	movf	??___fldiv+1,w
 11038  0354  00AB               	movwf	??___fldiv+3
 11039  0355  0839               	movf	___fldiv@aexp,w
 11040  0356  0228               	subwf	??___fldiv,w
 11041  0357  00AA               	movwf	??___fldiv+2
 11042  0358  1C03               	skipc
 11043  0359  03AB               	decf	??___fldiv+3,f
 11044  035A  082A               	movf	??___fldiv+2,w
 11045  035B  3E7F               	addlw	127
 11046  035C  00B2               	movwf	___fldiv@new_exp
 11047  035D  3000               	movlw	0
 11048  035E  3D2B               	addwfc	??___fldiv+3,w
 11049  035F  00B3               	movwf	___fldiv@new_exp+1
 11050  0360                     l3075:
 11051  0360  0827               	movf	___fldiv@b+3,w
 11052  0361  00B0               	movwf	___fldiv@rem+3
 11053  0362  0826               	movf	___fldiv@b+2,w
 11054  0363  00AF               	movwf	___fldiv@rem+2
 11055  0364  0825               	movf	___fldiv@b+1,w
 11056  0365  00AE               	movwf	___fldiv@rem+1
 11057  0366  0824               	movf	___fldiv@b,w
 11058  0367  00AD               	movwf	___fldiv@rem
 11059  0368                     l3077:
 11060  0368  3000               	movlw	0
 11061  0369  00A7               	movwf	___fldiv@b+3
 11062  036A  3000               	movlw	0
 11063  036B  00A6               	movwf	___fldiv@b+2
 11064  036C  3000               	movlw	0
 11065  036D  00A5               	movwf	___fldiv@b+1
 11066  036E  3000               	movlw	0
 11067  036F  00A4               	movwf	___fldiv@b
 11068  0370                     l3079:
 11069  0370  3000               	movlw	0
 11070  0371  00B7               	movwf	___fldiv@grs+3
 11071  0372  3000               	movlw	0
 11072  0373  00B6               	movwf	___fldiv@grs+2
 11073  0374  3000               	movlw	0
 11074  0375  00B5               	movwf	___fldiv@grs+1
 11075  0376  3000               	movlw	0
 11076  0377  00B4               	movwf	___fldiv@grs
 11077  0378                     l3081:
 11078  0378  01B9               	clrf	___fldiv@aexp
 11079  0379  2BB8               	goto	l3101
 11080  037A                     l3083:
 11081  037A  0839               	movf	___fldiv@aexp,w
 11082  037B  1903               	btfsc	3,2
 11083  037C  2B7E               	goto	u2611
 11084  037D  2B7F               	goto	u2610
 11085  037E                     u2611:
 11086  037E  2B99               	goto	l3093
 11087  037F                     u2610:
 11088  037F                     l3085:
 11089  037F  3001               	movlw	1
 11090  0380                     u2625:
 11091  0380  35AD               	lslf	___fldiv@rem,f
 11092  0381  0DAE               	rlf	___fldiv@rem+1,f
 11093  0382  0DAF               	rlf	___fldiv@rem+2,f
 11094  0383  0DB0               	rlf	___fldiv@rem+3,f
 11095  0384  0B89               	decfsz	9,f
 11096  0385  2B80               	goto	u2625
 11097  0386  3001               	movlw	1
 11098  0387                     u2635:
 11099  0387  35A4               	lslf	___fldiv@b,f
 11100  0388  0DA5               	rlf	___fldiv@b+1,f
 11101  0389  0DA6               	rlf	___fldiv@b+2,f
 11102  038A  0DA7               	rlf	___fldiv@b+3,f
 11103  038B  0B89               	decfsz	9,f
 11104  038C  2B87               	goto	u2635
 11105  038D                     l3087:
 11106  038D  1FB7               	btfss	___fldiv@grs+3,7
 11107  038E  2B90               	goto	u2641
 11108  038F  2B91               	goto	u2640
 11109  0390                     u2641:
 11110  0390  2B92               	goto	l3091
 11111  0391                     u2640:
 11112  0391                     l3089:
 11113  0391  1424               	bsf	___fldiv@b,0
 11114  0392                     l3091:
 11115  0392  3001               	movlw	1
 11116  0393                     u2655:
 11117  0393  35B4               	lslf	___fldiv@grs,f
 11118  0394  0DB5               	rlf	___fldiv@grs+1,f
 11119  0395  0DB6               	rlf	___fldiv@grs+2,f
 11120  0396  0DB7               	rlf	___fldiv@grs+3,f
 11121  0397  0B89               	decfsz	9,f
 11122  0398  2B93               	goto	u2655
 11123  0399                     l3093:
 11124  0399  0823               	movf	___fldiv@a+3,w
 11125  039A  0230               	subwf	___fldiv@rem+3,w
 11126  039B  1D03               	skipz
 11127  039C  2BA7               	goto	u2665
 11128  039D  0822               	movf	___fldiv@a+2,w
 11129  039E  022F               	subwf	___fldiv@rem+2,w
 11130  039F  1D03               	skipz
 11131  03A0  2BA7               	goto	u2665
 11132  03A1  0821               	movf	___fldiv@a+1,w
 11133  03A2  022E               	subwf	___fldiv@rem+1,w
 11134  03A3  1D03               	skipz
 11135  03A4  2BA7               	goto	u2665
 11136  03A5  0820               	movf	___fldiv@a,w
 11137  03A6  022D               	subwf	___fldiv@rem,w
 11138  03A7                     u2665:
 11139  03A7  1C03               	skipc
 11140  03A8  2BAA               	goto	u2661
 11141  03A9  2BAB               	goto	u2660
 11142  03AA                     u2661:
 11143  03AA  2BB4               	goto	l3099
 11144  03AB                     u2660:
 11145  03AB                     l3095:
 11146  03AB  1737               	bsf	___fldiv@grs+3,6
 11147  03AC                     l3097:
 11148  03AC  0820               	movf	___fldiv@a,w
 11149  03AD  02AD               	subwf	___fldiv@rem,f
 11150  03AE  0821               	movf	___fldiv@a+1,w
 11151  03AF  3BAE               	subwfb	___fldiv@rem+1,f
 11152  03B0  0822               	movf	___fldiv@a+2,w
 11153  03B1  3BAF               	subwfb	___fldiv@rem+2,f
 11154  03B2  0823               	movf	___fldiv@a+3,w
 11155  03B3  3BB0               	subwfb	___fldiv@rem+3,f
 11156  03B4                     l3099:
 11157  03B4  3001               	movlw	1
 11158  03B5  00A8               	movwf	??___fldiv
 11159  03B6  0828               	movf	??___fldiv,w
 11160  03B7  07B9               	addwf	___fldiv@aexp,f
 11161  03B8                     l3101:
 11162  03B8  301A               	movlw	26
 11163  03B9  0239               	subwf	___fldiv@aexp,w
 11164  03BA  1C03               	skipc
 11165  03BB  2BBD               	goto	u2671
 11166  03BC  2BBE               	goto	u2670
 11167  03BD                     u2671:
 11168  03BD  2B7A               	goto	l3083
 11169  03BE                     u2670:
 11170  03BE                     l3103:
 11171  03BE  0830               	movf	___fldiv@rem+3,w
 11172  03BF  042F               	iorwf	___fldiv@rem+2,w
 11173  03C0  042E               	iorwf	___fldiv@rem+1,w
 11174  03C1  042D               	iorwf	___fldiv@rem,w
 11175  03C2  1903               	skipnz
 11176  03C3  2BC5               	goto	u2681
 11177  03C4  2BC6               	goto	u2680
 11178  03C5                     u2681:
 11179  03C5  2BDF               	goto	l3117
 11180  03C6                     u2680:
 11181  03C6                     l3105:
 11182  03C6  1434               	bsf	___fldiv@grs,0
 11183  03C7  2BDF               	goto	l3117
 11184  03C8                     l3107:
 11185  03C8  3001               	movlw	1
 11186  03C9                     u2695:
 11187  03C9  35A4               	lslf	___fldiv@b,f
 11188  03CA  0DA5               	rlf	___fldiv@b+1,f
 11189  03CB  0DA6               	rlf	___fldiv@b+2,f
 11190  03CC  0DA7               	rlf	___fldiv@b+3,f
 11191  03CD  0B89               	decfsz	9,f
 11192  03CE  2BC9               	goto	u2695
 11193  03CF                     l3109:
 11194  03CF  1FB7               	btfss	___fldiv@grs+3,7
 11195  03D0  2BD2               	goto	u2701
 11196  03D1  2BD3               	goto	u2700
 11197  03D2                     u2701:
 11198  03D2  2BD4               	goto	l3113
 11199  03D3                     u2700:
 11200  03D3                     l3111:
 11201  03D3  1424               	bsf	___fldiv@b,0
 11202  03D4                     l3113:
 11203  03D4  3001               	movlw	1
 11204  03D5                     u2715:
 11205  03D5  35B4               	lslf	___fldiv@grs,f
 11206  03D6  0DB5               	rlf	___fldiv@grs+1,f
 11207  03D7  0DB6               	rlf	___fldiv@grs+2,f
 11208  03D8  0DB7               	rlf	___fldiv@grs+3,f
 11209  03D9  0B89               	decfsz	9,f
 11210  03DA  2BD5               	goto	u2715
 11211  03DB                     l3115:
 11212  03DB  30FF               	movlw	255
 11213  03DC  07B2               	addwf	___fldiv@new_exp,f
 11214  03DD  30FF               	movlw	255
 11215  03DE  3DB3               	addwfc	___fldiv@new_exp+1,f
 11216  03DF                     l3117:
 11217  03DF  1FA6               	btfss	___fldiv@b+2,7
 11218  03E0  2BE2               	goto	u2721
 11219  03E1  2BE3               	goto	u2720
 11220  03E2                     u2721:
 11221  03E2  2BC8               	goto	l3107
 11222  03E3                     u2720:
 11223  03E3                     l3119:
 11224  03E3  01B9               	clrf	___fldiv@aexp
 11225  03E4                     l3121:
 11226  03E4  1FB7               	btfss	___fldiv@grs+3,7
 11227  03E5  2BE7               	goto	u2731
 11228  03E6  2BE8               	goto	u2730
 11229  03E7                     u2731:
 11230  03E7  2C04               	goto	l3129
 11231  03E8                     u2730:
 11232  03E8                     l3123:
 11233  03E8  30FF               	movlw	255
 11234  03E9  0534               	andwf	___fldiv@grs,w
 11235  03EA  00A8               	movwf	??___fldiv
 11236  03EB  30FF               	movlw	255
 11237  03EC  0535               	andwf	___fldiv@grs+1,w
 11238  03ED  00A9               	movwf	??___fldiv+1
 11239  03EE  30FF               	movlw	255
 11240  03EF  0536               	andwf	___fldiv@grs+2,w
 11241  03F0  00AA               	movwf	??___fldiv+2
 11242  03F1  307F               	movlw	127
 11243  03F2  0537               	andwf	___fldiv@grs+3,w
 11244  03F3  00AB               	movwf	??___fldiv+3
 11245  03F4  082B               	movf	??___fldiv+3,w
 11246  03F5  042A               	iorwf	??___fldiv+2,w
 11247  03F6  0429               	iorwf	??___fldiv+1,w
 11248  03F7  0428               	iorwf	??___fldiv,w
 11249  03F8  1903               	skipnz
 11250  03F9  2BFB               	goto	u2741
 11251  03FA  2BFC               	goto	u2740
 11252  03FB                     u2741:
 11253  03FB  2BFF               	goto	l965
 11254  03FC                     u2740:
 11255  03FC                     l3125:
 11256  03FC  01B9               	clrf	___fldiv@aexp
 11257  03FD  0AB9               	incf	___fldiv@aexp,f
 11258  03FE  2C04               	goto	l3129
 11259  03FF                     l965:
 11260  03FF  1C24               	btfss	___fldiv@b,0
 11261  0400  2C02               	goto	u2751
 11262  0401  2C03               	goto	u2750
 11263  0402                     u2751:
 11264  0402  2C04               	goto	l3129
 11265  0403                     u2750:
 11266  0403  2BFC               	goto	l3125
 11267  0404                     l3129:
 11268  0404  0839               	movf	___fldiv@aexp,w
 11269  0405  1903               	btfsc	3,2
 11270  0406  2C08               	goto	u2761
 11271  0407  2C09               	goto	u2760
 11272  0408                     u2761:
 11273  0408  2C31               	goto	l3139
 11274  0409                     u2760:
 11275  0409                     l3131:
 11276  0409  3001               	movlw	1
 11277  040A  07A4               	addwf	___fldiv@b,f
 11278  040B  3000               	movlw	0
 11279  040C  3DA5               	addwfc	___fldiv@b+1,f
 11280  040D  3000               	movlw	0
 11281  040E  3DA6               	addwfc	___fldiv@b+2,f
 11282  040F  3000               	movlw	0
 11283  0410  3DA7               	addwfc	___fldiv@b+3,f
 11284  0411                     l3133:
 11285  0411  1C27               	btfss	___fldiv@b+3,0
 11286  0412  2C14               	goto	u2771
 11287  0413  2C15               	goto	u2770
 11288  0414                     u2771:
 11289  0414  2C31               	goto	l3139
 11290  0415                     u2770:
 11291  0415                     l3135:
 11292  0415  0824               	movf	___fldiv@b,w
 11293  0416  00A8               	movwf	??___fldiv
 11294  0417  0825               	movf	___fldiv@b+1,w
 11295  0418  00A9               	movwf	??___fldiv+1
 11296  0419  0826               	movf	___fldiv@b+2,w
 11297  041A  00AA               	movwf	??___fldiv+2
 11298  041B  0827               	movf	___fldiv@b+3,w
 11299  041C  00AB               	movwf	??___fldiv+3
 11300  041D  3001               	movlw	1
 11301  041E  00AC               	movwf	??___fldiv+4
 11302  041F                     u2785:
 11303  041F  37AB               	asrf	??___fldiv+3,f
 11304  0420  0CAA               	rrf	??___fldiv+2,f
 11305  0421  0CA9               	rrf	??___fldiv+1,f
 11306  0422  0CA8               	rrf	??___fldiv,f
 11307  0423                     u2780:
 11308  0423  0BAC               	decfsz	??___fldiv+4,f
 11309  0424  2C1F               	goto	u2785
 11310  0425  082B               	movf	??___fldiv+3,w
 11311  0426  00A7               	movwf	___fldiv@b+3
 11312  0427  082A               	movf	??___fldiv+2,w
 11313  0428  00A6               	movwf	___fldiv@b+2
 11314  0429  0829               	movf	??___fldiv+1,w
 11315  042A  00A5               	movwf	___fldiv@b+1
 11316  042B  0828               	movf	??___fldiv,w
 11317  042C  00A4               	movwf	___fldiv@b
 11318  042D                     l3137:
 11319  042D  3001               	movlw	1
 11320  042E  07B2               	addwf	___fldiv@new_exp,f
 11321  042F  3000               	movlw	0
 11322  0430  3DB3               	addwfc	___fldiv@new_exp+1,f
 11323  0431                     l3139:
 11324  0431  0833               	movf	___fldiv@new_exp+1,w
 11325  0432  3A80               	xorlw	128
 11326  0433  00A8               	movwf	??___fldiv
 11327  0434  3080               	movlw	128
 11328  0435  0228               	subwf	??___fldiv,w
 11329  0436  1D03               	skipz
 11330  0437  2C3A               	goto	u2795
 11331  0438  30FF               	movlw	255
 11332  0439  0232               	subwf	___fldiv@new_exp,w
 11333  043A                     u2795:
 11334  043A  1C03               	skipc
 11335  043B  2C3D               	goto	u2791
 11336  043C  2C3E               	goto	u2790
 11337  043D                     u2791:
 11338  043D  2C4B               	goto	l970
 11339  043E                     u2790:
 11340  043E                     l3141:
 11341  043E  30FF               	movlw	255
 11342  043F  0020               	movlb	0	; select bank0
 11343  0440  00B2               	movwf	___fldiv@new_exp
 11344  0441  3000               	movlw	0
 11345  0442  00B3               	movwf	___fldiv@new_exp+1
 11346  0443  3000               	movlw	0
 11347  0444  00A7               	movwf	___fldiv@b+3
 11348  0445  3000               	movlw	0
 11349  0446  00A6               	movwf	___fldiv@b+2
 11350  0447  3000               	movlw	0
 11351  0448  00A5               	movwf	___fldiv@b+1
 11352  0449  3000               	movlw	0
 11353  044A  00A4               	movwf	___fldiv@b
 11354  044B                     l970:
 11355  044B  0020               	movlb	0	; select bank0
 11356  044C  0833               	movf	___fldiv@new_exp+1,w
 11357  044D  3A80               	xorlw	128
 11358  044E  00A8               	movwf	??___fldiv
 11359  044F  3080               	movlw	128
 11360  0450  0228               	subwf	??___fldiv,w
 11361  0451  1D03               	skipz
 11362  0452  2C55               	goto	u2805
 11363  0453  3001               	movlw	1
 11364  0454  0232               	subwf	___fldiv@new_exp,w
 11365  0455                     u2805:
 11366  0455  1803               	skipnc
 11367  0456  2C58               	goto	u2801
 11368  0457  2C59               	goto	u2800
 11369  0458                     u2801:
 11370  0458  2C65               	goto	l971
 11371  0459                     u2800:
 11372  0459                     l3143:
 11373  0459  0020               	movlb	0	; select bank0
 11374  045A  01B2               	clrf	___fldiv@new_exp
 11375  045B  01B3               	clrf	___fldiv@new_exp+1
 11376  045C                     l3145:
 11377  045C  3000               	movlw	0
 11378  045D  00A7               	movwf	___fldiv@b+3
 11379  045E  3000               	movlw	0
 11380  045F  00A6               	movwf	___fldiv@b+2
 11381  0460  3000               	movlw	0
 11382  0461  00A5               	movwf	___fldiv@b+1
 11383  0462  3000               	movlw	0
 11384  0463  00A4               	movwf	___fldiv@b
 11385  0464                     l3147:
 11386  0464  01B1               	clrf	___fldiv@sign
 11387  0465                     l971:
 11388  0465  0020               	movlb	0	; select bank0
 11389  0466  0832               	movf	___fldiv@new_exp,w
 11390  0467  00A8               	movwf	??___fldiv
 11391  0468  0828               	movf	??___fldiv,w
 11392  0469  00B8               	movwf	___fldiv@bexp
 11393  046A                     l3149:
 11394  046A  1C38               	btfss	___fldiv@bexp,0
 11395  046B  2C6D               	goto	u2811
 11396  046C  2C6E               	goto	u2810
 11397  046D                     u2811:
 11398  046D  2C70               	goto	l3153
 11399  046E                     u2810:
 11400  046E                     l3151:
 11401  046E  17A6               	bsf	___fldiv@b+2,7
 11402  046F  2C74               	goto	l973
 11403  0470                     l3153:
 11404  0470  307F               	movlw	127
 11405  0471  00A8               	movwf	??___fldiv
 11406  0472  0828               	movf	??___fldiv,w
 11407  0473  05A6               	andwf	___fldiv@b+2,f
 11408  0474                     l973:
 11409  0474  3638               	lsrf	___fldiv@bexp,w
 11410  0475  00A8               	movwf	??___fldiv
 11411  0476  0828               	movf	??___fldiv,w
 11412  0477  00A7               	movwf	___fldiv@b+3
 11413  0478  0831               	movf	___fldiv@sign,w
 11414  0479  00A8               	movwf	??___fldiv
 11415  047A  0828               	movf	??___fldiv,w
 11416  047B  04A7               	iorwf	___fldiv@b+3,f
 11417  047C  2B39               	goto	l3063
 11418  047D                     l951:
 11419  047D  0008               	return
 11420  047E                     __end_of___fldiv:
 11421                           
 11422                           	psect	text26
 11423  0BB9                     __ptext26:	
 11424 ;; *************** function ___fltol *****************
 11425 ;; Defined at:
 11426 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fltol.c"
 11427 ;; Parameters:    Size  Location     Type
 11428 ;;  f1              4    0[COMMON] unsigned char 
 11429 ;; Auto vars:     Size  Location     Type
 11430 ;;  exp1            1   10[COMMON] unsigned char 
 11431 ;;  sign1           1    9[COMMON] unsigned char 
 11432 ;; Return value:  Size  Location     Type
 11433 ;;                  4    0[COMMON] long 
 11434 ;; Registers used:
 11435 ;;		wreg, status,2, status,0
 11436 ;; Tracked objects:
 11437 ;;		On entry : 0/0
 11438 ;;		On exit  : 0/0
 11439 ;;		Unchanged: 0/0
 11440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11441 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11443 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11444 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11445 ;;Total ram usage:       11 bytes
 11446 ;; Hardware stack levels used:    1
 11447 ;; Hardware stack levels required when called:    4
 11448 ;; This function calls:
 11449 ;;		Nothing
 11450 ;; This function is called by:
 11451 ;;		_main
 11452 ;; This function uses a non-reentrant model
 11453 ;;
 11454                           
 11455                           
 11456                           ;psect for function ___fltol
 11457  0BB9                     ___fltol:
 11458  0BB9                     l3391:	
 11459                           ;incstack = 0
 11460                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 11461                           
 11462  0BB9  1003               	clrc
 11463  0BBA  0D72               	rlf	___fltol@f1+2,w
 11464  0BBB  0D73               	rlf	___fltol@f1+3,w
 11465  0BBC  00F4               	movwf	??___fltol
 11466  0BBD  0874               	movf	??___fltol,w
 11467  0BBE  00FA               	movwf	___fltol@exp1
 11468  0BBF  087A               	movf	___fltol@exp1,w
 11469  0BC0  1D03               	btfss	3,2
 11470  0BC1  2BC3               	goto	u3121
 11471  0BC2  2BC4               	goto	u3120
 11472  0BC3                     u3121:
 11473  0BC3  2BCD               	goto	l3397
 11474  0BC4                     u3120:
 11475  0BC4                     l3393:
 11476  0BC4  3000               	movlw	0
 11477  0BC5  00F3               	movwf	?___fltol+3
 11478  0BC6  3000               	movlw	0
 11479  0BC7  00F2               	movwf	?___fltol+2
 11480  0BC8  3000               	movlw	0
 11481  0BC9  00F1               	movwf	?___fltol+1
 11482  0BCA  3000               	movlw	0
 11483  0BCB  00F0               	movwf	?___fltol
 11484  0BCC  2C2C               	goto	l786
 11485  0BCD                     l3397:
 11486  0BCD  0870               	movf	___fltol@f1,w
 11487  0BCE  00F4               	movwf	??___fltol
 11488  0BCF  0871               	movf	___fltol@f1+1,w
 11489  0BD0  00F5               	movwf	??___fltol+1
 11490  0BD1  0872               	movf	___fltol@f1+2,w
 11491  0BD2  00F6               	movwf	??___fltol+2
 11492  0BD3  0873               	movf	___fltol@f1+3,w
 11493  0BD4  00F7               	movwf	??___fltol+3
 11494  0BD5  301F               	movlw	31
 11495  0BD6                     u3135:
 11496  0BD6  36F7               	lsrf	??___fltol+3,f
 11497  0BD7  0CF6               	rrf	??___fltol+2,f
 11498  0BD8  0CF5               	rrf	??___fltol+1,f
 11499  0BD9  0CF4               	rrf	??___fltol,f
 11500  0BDA                     u3130:
 11501  0BDA  0B89               	decfsz	9,f
 11502  0BDB  2BD6               	goto	u3135
 11503  0BDC  0874               	movf	??___fltol,w
 11504  0BDD  00F8               	movwf	??___fltol+4
 11505  0BDE  0878               	movf	??___fltol+4,w
 11506  0BDF  00F9               	movwf	___fltol@sign1
 11507  0BE0                     l3399:
 11508  0BE0  17F2               	bsf	___fltol@f1+2,7
 11509  0BE1                     l3401:
 11510  0BE1  30FF               	movlw	255
 11511  0BE2  05F0               	andwf	___fltol@f1,f
 11512  0BE3  30FF               	movlw	255
 11513  0BE4  05F1               	andwf	___fltol@f1+1,f
 11514  0BE5  30FF               	movlw	255
 11515  0BE6  05F2               	andwf	___fltol@f1+2,f
 11516  0BE7  3000               	movlw	0
 11517  0BE8  05F3               	andwf	___fltol@f1+3,f
 11518  0BE9                     l3403:
 11519  0BE9  3096               	movlw	150
 11520  0BEA  02FA               	subwf	___fltol@exp1,f
 11521  0BEB                     l3405:
 11522  0BEB  1FFA               	btfss	___fltol@exp1,7
 11523  0BEC  2BEE               	goto	u3141
 11524  0BED  2BEF               	goto	u3140
 11525  0BEE                     u3141:
 11526  0BEE  2C07               	goto	l3415
 11527  0BEF                     u3140:
 11528  0BEF                     l3407:
 11529  0BEF  087A               	movf	___fltol@exp1,w
 11530  0BF0  3A80               	xorlw	128
 11531  0BF1  3E97               	addlw	151
 11532  0BF2  1803               	skipnc
 11533  0BF3  2BF5               	goto	u3151
 11534  0BF4  2BF6               	goto	u3150
 11535  0BF5                     u3151:
 11536  0BF5  2BF7               	goto	l3413
 11537  0BF6                     u3150:
 11538  0BF6  2BC4               	goto	l3393
 11539  0BF7                     l3413:
 11540  0BF7  3001               	movlw	1
 11541  0BF8                     u3165:
 11542  0BF8  36F3               	lsrf	___fltol@f1+3,f
 11543  0BF9  0CF2               	rrf	___fltol@f1+2,f
 11544  0BFA  0CF1               	rrf	___fltol@f1+1,f
 11545  0BFB  0CF0               	rrf	___fltol@f1,f
 11546  0BFC  0B89               	decfsz	9,f
 11547  0BFD  2BF8               	goto	u3165
 11548  0BFE  3001               	movlw	1
 11549  0BFF  00F4               	movwf	??___fltol
 11550  0C00  0874               	movf	??___fltol,w
 11551  0C01  07FA               	addwf	___fltol@exp1,f
 11552  0C02  1D03               	btfss	3,2
 11553  0C03  2C05               	goto	u3171
 11554  0C04  2C06               	goto	u3170
 11555  0C05                     u3171:
 11556  0C05  2BF7               	goto	l3413
 11557  0C06                     u3170:
 11558  0C06  2C1C               	goto	l3423
 11559  0C07                     l3415:
 11560  0C07  3020               	movlw	32
 11561  0C08  027A               	subwf	___fltol@exp1,w
 11562  0C09  1C03               	skipc
 11563  0C0A  2C0C               	goto	u3181
 11564  0C0B  2C0D               	goto	u3180
 11565  0C0C                     u3181:
 11566  0C0C  2C17               	goto	l793
 11567  0C0D                     u3180:
 11568  0C0D  2BC4               	goto	l3393
 11569  0C0E                     l3421:
 11570  0C0E  3001               	movlw	1
 11571  0C0F                     u3195:
 11572  0C0F  35F0               	lslf	___fltol@f1,f
 11573  0C10  0DF1               	rlf	___fltol@f1+1,f
 11574  0C11  0DF2               	rlf	___fltol@f1+2,f
 11575  0C12  0DF3               	rlf	___fltol@f1+3,f
 11576  0C13  0B89               	decfsz	9,f
 11577  0C14  2C0F               	goto	u3195
 11578  0C15  3001               	movlw	1
 11579  0C16  02FA               	subwf	___fltol@exp1,f
 11580  0C17                     l793:
 11581  0C17  087A               	movf	___fltol@exp1,w
 11582  0C18  1D03               	btfss	3,2
 11583  0C19  2C1B               	goto	u3201
 11584  0C1A  2C1C               	goto	u3200
 11585  0C1B                     u3201:
 11586  0C1B  2C0E               	goto	l3421
 11587  0C1C                     u3200:
 11588  0C1C                     l3423:
 11589  0C1C  0879               	movf	___fltol@sign1,w
 11590  0C1D  1903               	btfsc	3,2
 11591  0C1E  2C20               	goto	u3211
 11592  0C1F  2C21               	goto	u3210
 11593  0C20                     u3211:
 11594  0C20  2C2C               	goto	l796
 11595  0C21                     u3210:
 11596  0C21                     l3425:
 11597  0C21  09F0               	comf	___fltol@f1,f
 11598  0C22  09F1               	comf	___fltol@f1+1,f
 11599  0C23  09F2               	comf	___fltol@f1+2,f
 11600  0C24  09F3               	comf	___fltol@f1+3,f
 11601  0C25  0AF0               	incf	___fltol@f1,f
 11602  0C26  1903               	skipnz
 11603  0C27  0AF1               	incf	___fltol@f1+1,f
 11604  0C28  1903               	skipnz
 11605  0C29  0AF2               	incf	___fltol@f1+2,f
 11606  0C2A  1903               	skipnz
 11607  0C2B  0AF3               	incf	___fltol@f1+3,f
 11608  0C2C                     l796:
 11609  0C2C                     l786:
 11610  0C2C  0008               	return
 11611  0C2D                     __end_of___fltol:
 11612                           
 11613                           	psect	text27
 11614  1754                     __ptext27:	
 11615 ;; *************** function _SYSTEM_Initialize *****************
 11616 ;; Defined at:
 11617 ;;		line 76 in file "mcc_generated_files/mcc.c"
 11618 ;; Parameters:    Size  Location     Type
 11619 ;;		None
 11620 ;; Auto vars:     Size  Location     Type
 11621 ;;		None
 11622 ;; Return value:  Size  Location     Type
 11623 ;;                  1    wreg      void 
 11624 ;; Registers used:
 11625 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11626 ;; Tracked objects:
 11627 ;;		On entry : 0/0
 11628 ;;		On exit  : 0/0
 11629 ;;		Unchanged: 0/0
 11630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11635 ;;Total ram usage:        0 bytes
 11636 ;; Hardware stack levels used:    1
 11637 ;; Hardware stack levels required when called:    8
 11638 ;; This function calls:
 11639 ;;		_ADC_Initialize
 11640 ;;		_OSCILLATOR_Initialize
 11641 ;;		_PIN_MANAGER_Initialize
 11642 ;;		_PWM3_Initialize
 11643 ;;		_PWM4_Initialize
 11644 ;;		_SPI_Initialize
 11645 ;;		_TMR2_Initialize
 11646 ;;		_TMR4_Initialize
 11647 ;;		_initDisplay
 11648 ;; This function is called by:
 11649 ;;		_main
 11650 ;; This function uses a non-reentrant model
 11651 ;;
 11652                           
 11653                           
 11654                           ;psect for function _SYSTEM_Initialize
 11655  1754                     _SYSTEM_Initialize:
 11656  1754                     l3203:	
 11657                           ;incstack = 0
 11658                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11659                           
 11660                           
 11661                           ;mcc_generated_files/mcc.c: 79:     PIN_MANAGER_Initialize();
 11662  1754  3189  215D  3197   	fcall	_PIN_MANAGER_Initialize
 11663                           
 11664                           ;mcc_generated_files/mcc.c: 80:     OSCILLATOR_Initialize();
 11665  1757  3196  263F  3197   	fcall	_OSCILLATOR_Initialize
 11666                           
 11667                           ;mcc_generated_files/mcc.c: 81:     SPI_Initialize();
 11668  175A  3196  264A  3197   	fcall	_SPI_Initialize
 11669  175D                     l3205:
 11670                           
 11671                           ;mcc_generated_files/mcc.c: 82:     initDisplay();
 11672  175D  3197  27D4  3197   	fcall	_initDisplay
 11673  1760                     l3207:
 11674                           
 11675                           ;mcc_generated_files/mcc.c: 83:     ADC_Initialize();
 11676  1760  3196  2662  3197   	fcall	_ADC_Initialize
 11677  1763                     l3209:
 11678                           
 11679                           ;mcc_generated_files/mcc.c: 84:     PWM4_Initialize();
 11680  1763  3196  2674  3197   	fcall	_PWM4_Initialize
 11681  1766                     l3211:
 11682                           
 11683                           ;mcc_generated_files/mcc.c: 85:     TMR4_Initialize();
 11684  1766  3196  26EC  3197   	fcall	_TMR4_Initialize
 11685  1769                     l3213:
 11686                           
 11687                           ;mcc_generated_files/mcc.c: 86:     PWM3_Initialize();
 11688  1769  3196  266B  3197   	fcall	_PWM3_Initialize
 11689  176C                     l3215:
 11690                           
 11691                           ;mcc_generated_files/mcc.c: 87:     TMR2_Initialize();
 11692  176C  3196  2694  3197   	fcall	_TMR2_Initialize
 11693  176F                     l25:
 11694  176F  0008               	return
 11695  1770                     __end_of_SYSTEM_Initialize:
 11696                           
 11697                           	psect	text28
 11698  17D4                     __ptext28:	
 11699 ;; *************** function _initDisplay *****************
 11700 ;; Defined at:
 11701 ;;		line 561 in file "main.c"
 11702 ;; Parameters:    Size  Location     Type
 11703 ;;		None
 11704 ;; Auto vars:     Size  Location     Type
 11705 ;;  i               2   12[COMMON] int 
 11706 ;; Return value:  Size  Location     Type
 11707 ;;                  1    wreg      void 
 11708 ;; Registers used:
 11709 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11710 ;; Tracked objects:
 11711 ;;		On entry : 0/0
 11712 ;;		On exit  : 0/0
 11713 ;;		Unchanged: 0/0
 11714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11716 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11717 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11718 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11719 ;;Total ram usage:        3 bytes
 11720 ;; Hardware stack levels used:    1
 11721 ;; Hardware stack levels required when called:    7
 11722 ;; This function calls:
 11723 ;;		_command
 11724 ;;		_dataCMD
 11725 ;;		_initOLED
 11726 ;; This function is called by:
 11727 ;;		_SYSTEM_Initialize
 11728 ;; This function uses a non-reentrant model
 11729 ;;
 11730                           
 11731                           
 11732                           ;psect for function _initDisplay
 11733  17D4                     _initDisplay:
 11734  17D4                     l2875:	
 11735                           ;incstack = 0
 11736                           ; Regs used in _initDisplay: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11737                           
 11738                           
 11739                           ;main.c: 563:     int i;;main.c: 564:     initOLED();
 11740  17D4  318C  242D  3197   	fcall	_initOLED
 11741                           
 11742                           ;main.c: 565:     command(0x01);
 11743  17D7  3001               	movlw	1
 11744  17D8  318A  2247  3197   	fcall	_command
 11745  17DB                     l2877:
 11746                           
 11747                           ;main.c: 566:     _delay((unsigned long)((2)*(16000000/4000.0)));
 11748  17DB  300B               	movlw	11
 11749  17DC  00FB               	movwf	??_initDisplay
 11750  17DD  3062               	movlw	98
 11751  17DE                     u3487:
 11752  17DE  0B89               	decfsz	9,f
 11753  17DF  2FDE               	goto	u3487
 11754  17E0  0BFB               	decfsz	??_initDisplay,f
 11755  17E1  2FDE               	goto	u3487
 11756  17E2  3200               	nop2
 11757  17E3                     l2879:
 11758                           
 11759                           ;main.c: 567:     for(i=0;i<16;i++){
 11760  17E3  01FC               	clrf	initDisplay@i
 11761  17E4  01FD               	clrf	initDisplay@i+1
 11762  17E5                     l2885:
 11763                           
 11764                           ;main.c: 568:        dataCMD(text5[i]);
 11765  17E5  087C               	movf	initDisplay@i,w
 11766  17E6  3EB1               	addlw	(low (_text5| (0+256)))& (0+255)
 11767  17E7  0086               	movwf	6
 11768  17E8  3001               	movlw	1	; select bank3/4
 11769  17E9  0087               	movwf	7
 11770  17EA  0801               	movf	1,w
 11771  17EB  318A  22A2  3197   	fcall	_dataCMD
 11772  17EE                     l2887:
 11773                           
 11774                           ;main.c: 569:     }
 11775  17EE  3001               	movlw	1
 11776  17EF  07FC               	addwf	initDisplay@i,f
 11777  17F0  3000               	movlw	0
 11778  17F1  3DFD               	addwfc	initDisplay@i+1,f
 11779  17F2                     l2889:
 11780  17F2  087D               	movf	initDisplay@i+1,w
 11781  17F3  3A80               	xorlw	128
 11782  17F4  00FB               	movwf	??_initDisplay
 11783  17F5  3080               	movlw	128
 11784  17F6  027B               	subwf	??_initDisplay,w
 11785  17F7  1D03               	skipz
 11786  17F8  2FFB               	goto	u2345
 11787  17F9  3010               	movlw	16
 11788  17FA  027C               	subwf	initDisplay@i,w
 11789  17FB                     u2345:
 11790  17FB  1C03               	skipc
 11791  17FC  2FFE               	goto	u2341
 11792  17FD  2FFF               	goto	u2340
 11793  17FE                     u2341:
 11794  17FE  2FE5               	goto	l2885
 11795  17FF                     u2340:
 11796  17FF                     l411:
 11797  17FF  0008               	return
 11798  1800                     __end_of_initDisplay:
 11799                           
 11800                           	psect	text29
 11801  0C2D                     __ptext29:	
 11802 ;; *************** function _initOLED *****************
 11803 ;; Defined at:
 11804 ;;		line 604 in file "main.c"
 11805 ;; Parameters:    Size  Location     Type
 11806 ;;		None
 11807 ;; Auto vars:     Size  Location     Type
 11808 ;;		None
 11809 ;; Return value:  Size  Location     Type
 11810 ;;                  1    wreg      void 
 11811 ;; Registers used:
 11812 ;;		wreg, status,2, status,0, pclath, cstack
 11813 ;; Tracked objects:
 11814 ;;		On entry : 0/0
 11815 ;;		On exit  : 0/0
 11816 ;;		Unchanged: 0/0
 11817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11820 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11821 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11822 ;;Total ram usage:        2 bytes
 11823 ;; Hardware stack levels used:    1
 11824 ;; Hardware stack levels required when called:    6
 11825 ;; This function calls:
 11826 ;;		_command
 11827 ;;		_dataCMD
 11828 ;; This function is called by:
 11829 ;;		_initDisplay
 11830 ;; This function uses a non-reentrant model
 11831 ;;
 11832                           
 11833                           
 11834                           ;psect for function _initOLED
 11835  0C2D                     _initOLED:
 11836  0C2D                     l2751:	
 11837                           ;incstack = 0
 11838                           ; Regs used in _initOLED: [wreg+status,2+status,0+pclath+cstack]
 11839                           
 11840                           
 11841                           ;main.c: 608:      LATC7 = 1;
 11842  0C2D  0022               	movlb	2	; select bank2
 11843  0C2E  178E               	bsf	14,7	;volatile
 11844  0C2F                     l2753:
 11845                           
 11846                           ;main.c: 610:     _delay((unsigned long)((100)*(16000000/4000.0)));
 11847  0C2F  3003               	movlw	3
 11848  0C30  00FA               	movwf	??_initOLED+1
 11849  0C31  3008               	movlw	8
 11850  0C32  00F9               	movwf	??_initOLED
 11851  0C33  3077               	movlw	119
 11852  0C34                     u3497:
 11853  0C34  0B89               	decfsz	9,f
 11854  0C35  2C34               	goto	u3497
 11855  0C36  0BF9               	decfsz	??_initOLED,f
 11856  0C37  2C34               	goto	u3497
 11857  0C38  0BFA               	decfsz	??_initOLED+1,f
 11858  0C39  2C34               	goto	u3497
 11859  0C3A  0000               	nop
 11860  0C3B                     l2755:
 11861                           
 11862                           ;main.c: 612:     command(0x2A);
 11863  0C3B  302A               	movlw	42
 11864  0C3C  318A  2247  318C   	fcall	_command
 11865  0C3F                     l2757:
 11866                           
 11867                           ;main.c: 613:  command(0x71);
 11868  0C3F  3071               	movlw	113
 11869  0C40  318A  2247  318C   	fcall	_command
 11870  0C43                     l2759:
 11871                           
 11872                           ;main.c: 614:  dataCMD(0x00);
 11873  0C43  3000               	movlw	0
 11874  0C44  318A  22A2  318C   	fcall	_dataCMD
 11875  0C47                     l2761:
 11876                           
 11877                           ;main.c: 615:  command(0x28);
 11878  0C47  3028               	movlw	40
 11879  0C48  318A  2247  318C   	fcall	_command
 11880  0C4B                     l2763:
 11881                           
 11882                           ;main.c: 616:  command(0x08);
 11883  0C4B  3008               	movlw	8
 11884  0C4C  318A  2247  318C   	fcall	_command
 11885  0C4F                     l2765:
 11886                           
 11887                           ;main.c: 617:  command(0x2A);
 11888  0C4F  302A               	movlw	42
 11889  0C50  318A  2247  318C   	fcall	_command
 11890  0C53                     l2767:
 11891                           
 11892                           ;main.c: 618:  command(0x79);
 11893  0C53  3079               	movlw	121
 11894  0C54  318A  2247  318C   	fcall	_command
 11895  0C57                     l2769:
 11896                           
 11897                           ;main.c: 619:  command(0xD5);
 11898  0C57  30D5               	movlw	213
 11899  0C58  318A  2247  318C   	fcall	_command
 11900  0C5B                     l2771:
 11901                           
 11902                           ;main.c: 620:  command(0x70);
 11903  0C5B  3070               	movlw	112
 11904  0C5C  318A  2247  318C   	fcall	_command
 11905  0C5F                     l2773:
 11906                           
 11907                           ;main.c: 621:  command(0x78);
 11908  0C5F  3078               	movlw	120
 11909  0C60  318A  2247  318C   	fcall	_command
 11910  0C63                     l2775:
 11911                           
 11912                           ;main.c: 622:  command(0x09);
 11913  0C63  3009               	movlw	9
 11914  0C64  318A  2247  318C   	fcall	_command
 11915  0C67                     l2777:
 11916                           
 11917                           ;main.c: 623:     command(0x06);
 11918  0C67  3006               	movlw	6
 11919  0C68  318A  2247  318C   	fcall	_command
 11920  0C6B                     l2779:
 11921                           
 11922                           ;main.c: 624:  command(0x72);
 11923  0C6B  3072               	movlw	114
 11924  0C6C  318A  2247  318C   	fcall	_command
 11925  0C6F                     l2781:
 11926                           
 11927                           ;main.c: 625:  dataCMD(0x00);
 11928  0C6F  3000               	movlw	0
 11929  0C70  318A  22A2  318C   	fcall	_dataCMD
 11930  0C73                     l2783:
 11931                           
 11932                           ;main.c: 626:  command(0x2A);
 11933  0C73  302A               	movlw	42
 11934  0C74  318A  2247  318C   	fcall	_command
 11935  0C77                     l2785:
 11936                           
 11937                           ;main.c: 627:  command(0x79);
 11938  0C77  3079               	movlw	121
 11939  0C78  318A  2247  318C   	fcall	_command
 11940  0C7B                     l2787:
 11941                           
 11942                           ;main.c: 628:  command(0xDA);
 11943  0C7B  30DA               	movlw	218
 11944  0C7C  318A  2247  318C   	fcall	_command
 11945  0C7F                     l2789:
 11946                           
 11947                           ;main.c: 630:  command(0x00);
 11948  0C7F  3000               	movlw	0
 11949  0C80  318A  2247  318C   	fcall	_command
 11950  0C83                     l2791:
 11951                           
 11952                           ;main.c: 631:  command(0xDC);
 11953  0C83  30DC               	movlw	220
 11954  0C84  318A  2247  318C   	fcall	_command
 11955  0C87                     l2793:
 11956                           
 11957                           ;main.c: 632:  command(0x00);
 11958  0C87  3000               	movlw	0
 11959  0C88  318A  2247  318C   	fcall	_command
 11960  0C8B                     l2795:
 11961                           
 11962                           ;main.c: 633:  command(0x81);
 11963  0C8B  3081               	movlw	129
 11964  0C8C  318A  2247  318C   	fcall	_command
 11965  0C8F                     l2797:
 11966                           
 11967                           ;main.c: 634:  command(0x7F);
 11968  0C8F  307F               	movlw	127
 11969  0C90  318A  2247  318C   	fcall	_command
 11970  0C93                     l2799:
 11971                           
 11972                           ;main.c: 635:  command(0xD9);
 11973  0C93  30D9               	movlw	217
 11974  0C94  318A  2247  318C   	fcall	_command
 11975  0C97                     l2801:
 11976                           
 11977                           ;main.c: 636:  command(0xF1);
 11978  0C97  30F1               	movlw	241
 11979  0C98  318A  2247  318C   	fcall	_command
 11980  0C9B                     l2803:
 11981                           
 11982                           ;main.c: 637:  command(0xDB);
 11983  0C9B  30DB               	movlw	219
 11984  0C9C  318A  2247  318C   	fcall	_command
 11985  0C9F                     l2805:
 11986                           
 11987                           ;main.c: 638:  command(0x40);
 11988  0C9F  3040               	movlw	64
 11989  0CA0  318A  2247  318C   	fcall	_command
 11990  0CA3                     l2807:
 11991                           
 11992                           ;main.c: 639:  command(0x78);
 11993  0CA3  3078               	movlw	120
 11994  0CA4  318A  2247  318C   	fcall	_command
 11995  0CA7                     l2809:
 11996                           
 11997                           ;main.c: 640:  command(0x28);
 11998  0CA7  3028               	movlw	40
 11999  0CA8  318A  2247  318C   	fcall	_command
 12000  0CAB                     l2811:
 12001                           
 12002                           ;main.c: 641:  command(0x01);
 12003  0CAB  3001               	movlw	1
 12004  0CAC  318A  2247  318C   	fcall	_command
 12005  0CAF                     l2813:
 12006                           
 12007                           ;main.c: 642:  command(0x80);
 12008  0CAF  3080               	movlw	128
 12009  0CB0  318A  2247  318C   	fcall	_command
 12010  0CB3                     l2815:
 12011                           
 12012                           ;main.c: 643:  command(0x0C);
 12013  0CB3  300C               	movlw	12
 12014  0CB4  318A  2247  318C   	fcall	_command
 12015  0CB7                     l2817:
 12016                           
 12017                           ;main.c: 645:     _delay((unsigned long)((100)*(16000000/4000.0)));
 12018  0CB7  3003               	movlw	3
 12019  0CB8  00FA               	movwf	??_initOLED+1
 12020  0CB9  3008               	movlw	8
 12021  0CBA  00F9               	movwf	??_initOLED
 12022  0CBB  3077               	movlw	119
 12023  0CBC                     u3507:
 12024  0CBC  0B89               	decfsz	9,f
 12025  0CBD  2CBC               	goto	u3507
 12026  0CBE  0BF9               	decfsz	??_initOLED,f
 12027  0CBF  2CBC               	goto	u3507
 12028  0CC0  0BFA               	decfsz	??_initOLED+1,f
 12029  0CC1  2CBC               	goto	u3507
 12030  0CC2  0000               	nop
 12031  0CC3                     l421:
 12032  0CC3  0008               	return
 12033  0CC4                     __end_of_initOLED:
 12034                           
 12035                           	psect	text30
 12036  0AA2                     __ptext30:	
 12037 ;; *************** function _dataCMD *****************
 12038 ;; Defined at:
 12039 ;;		line 572 in file "main.c"
 12040 ;; Parameters:    Size  Location     Type
 12041 ;;  s               1    wreg     unsigned char 
 12042 ;; Auto vars:     Size  Location     Type
 12043 ;;  s               1    5[COMMON] unsigned char 
 12044 ;;  i               2    6[COMMON] int 
 12045 ;;  sendByte        1    8[COMMON] unsigned char 
 12046 ;;  bit0            1    4[COMMON] unsigned char 
 12047 ;; Return value:  Size  Location     Type
 12048 ;;                  1    wreg      void 
 12049 ;; Registers used:
 12050 ;;		wreg, status,2, status,0, pclath, cstack
 12051 ;; Tracked objects:
 12052 ;;		On entry : 0/0
 12053 ;;		On exit  : 0/0
 12054 ;;		Unchanged: 0/0
 12055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12057 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12058 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12059 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12060 ;;Total ram usage:        7 bytes
 12061 ;; Hardware stack levels used:    1
 12062 ;; Hardware stack levels required when called:    5
 12063 ;; This function calls:
 12064 ;;		_spi_write
 12065 ;; This function is called by:
 12066 ;;		_main
 12067 ;;		_printByteValue
 12068 ;;		_reportfault
 12069 ;;		_initDisplay
 12070 ;;		_initOLED
 12071 ;;		_printADCValues
 12072 ;; This function uses a non-reentrant model
 12073 ;;
 12074                           
 12075                           
 12076                           ;psect for function _dataCMD
 12077  0AA2                     _dataCMD:
 12078                           
 12079                           ;incstack = 0
 12080                           ; Regs used in _dataCMD: [wreg+status,2+status,0+pclath+cstack]
 12081                           ;dataCMD@s stored from wreg
 12082  0AA2  00F5               	movwf	dataCMD@s
 12083  0AA3                     l2663:
 12084                           
 12085                           ;main.c: 572: void dataCMD(unsigned char s);main.c: 573: {;main.c: 575:     LATB7 =0;
 12086  0AA3  0022               	movlb	2	; select bank2
 12087  0AA4  138D               	bcf	13,7	;volatile
 12088  0AA5                     l2665:
 12089                           
 12090                           ;main.c: 576:     spi_write('\xFA');
 12091  0AA5  30FA               	movlw	250
 12092  0AA6  3196  26A1  318A   	fcall	_spi_write
 12093  0AA9                     l2667:
 12094  0AA9                     l2669:
 12095                           
 12096                           ;main.c: 579:  unsigned char sendByte = '\x00';
 12097  0AA9  01F8               	clrf	dataCMD@sendByte
 12098  0AAA                     l2671:
 12099                           
 12100                           ;main.c: 581:  for(int i=0; i< 8; i++)
 12101  0AAA  01F6               	clrf	dataCMD@i
 12102  0AAB  01F7               	clrf	dataCMD@i+1
 12103  0AAC                     l2677:
 12104                           
 12105                           ;main.c: 582:  {;main.c: 583:   bit0 = s & 1;
 12106  0AAC  0875               	movf	dataCMD@s,w
 12107  0AAD  3901               	andlw	1
 12108  0AAE  00F2               	movwf	??_dataCMD
 12109  0AAF  0872               	movf	??_dataCMD,w
 12110  0AB0  00F4               	movwf	dataCMD@bit0
 12111  0AB1                     l2679:
 12112                           
 12113                           ;main.c: 585:   s = s >>1;
 12114  0AB1  3675               	lsrf	dataCMD@s,w
 12115  0AB2  00F2               	movwf	??_dataCMD
 12116  0AB3  0872               	movf	??_dataCMD,w
 12117  0AB4  00F5               	movwf	dataCMD@s
 12118  0AB5                     l2681:
 12119                           
 12120                           ;main.c: 586:   sendByte = sendByte <<1;
 12121  0AB5  3578               	lslf	dataCMD@sendByte,w
 12122  0AB6  00F2               	movwf	??_dataCMD
 12123  0AB7  0872               	movf	??_dataCMD,w
 12124  0AB8  00F8               	movwf	dataCMD@sendByte
 12125  0AB9                     l2683:
 12126                           
 12127                           ;main.c: 587:   if (bit0 == 1){
 12128  0AB9  0374               	decf	dataCMD@bit0,w
 12129  0ABA  1D03               	btfss	3,2
 12130  0ABB  2ABD               	goto	u2241
 12131  0ABC  2ABE               	goto	u2240
 12132  0ABD                     u2241:
 12133  0ABD  2AC3               	goto	l2687
 12134  0ABE                     u2240:
 12135  0ABE                     l2685:
 12136                           
 12137                           ;main.c: 589:    sendByte= sendByte | 1;}
 12138  0ABE  0878               	movf	dataCMD@sendByte,w
 12139  0ABF  3801               	iorlw	1
 12140  0AC0  00F2               	movwf	??_dataCMD
 12141  0AC1  0872               	movf	??_dataCMD,w
 12142  0AC2  00F8               	movwf	dataCMD@sendByte
 12143  0AC3                     l2687:
 12144                           
 12145                           ;main.c: 590:   if (i==3)
 12146  0AC3  3003               	movlw	3
 12147  0AC4  0676               	xorwf	dataCMD@i,w
 12148  0AC5  0477               	iorwf	dataCMD@i+1,w
 12149  0AC6  1D03               	btfss	3,2
 12150  0AC7  2AC9               	goto	u2251
 12151  0AC8  2ACA               	goto	u2250
 12152  0AC9                     u2251:
 12153  0AC9  2ADA               	goto	l2695
 12154  0ACA                     u2250:
 12155  0ACA                     l2689:
 12156                           
 12157                           ;main.c: 591:   {;main.c: 592:     sendByte = sendByte << 4;
 12158  0ACA  0878               	movf	dataCMD@sendByte,w
 12159  0ACB  00F2               	movwf	??_dataCMD
 12160  0ACC  3003               	movlw	3
 12161  0ACD                     u2265:
 12162  0ACD  35F2               	lslf	??_dataCMD,f
 12163  0ACE  3EFF               	addlw	-1
 12164  0ACF  1D03               	skipz
 12165  0AD0  2ACD               	goto	u2265
 12166  0AD1  3572               	lslf	??_dataCMD,w
 12167  0AD2  00F3               	movwf	??_dataCMD+1
 12168  0AD3  0873               	movf	??_dataCMD+1,w
 12169  0AD4  00F8               	movwf	dataCMD@sendByte
 12170  0AD5                     l2691:
 12171                           
 12172                           ;main.c: 593:     spi_write(sendByte);
 12173  0AD5  0878               	movf	dataCMD@sendByte,w
 12174  0AD6  3196  26A1  318A   	fcall	_spi_write
 12175  0AD9                     l2693:
 12176                           
 12177                           ;main.c: 594:     sendByte = '\x00';
 12178  0AD9  01F8               	clrf	dataCMD@sendByte
 12179  0ADA                     l2695:
 12180                           
 12181                           ;main.c: 596:  }
 12182  0ADA  3001               	movlw	1
 12183  0ADB  07F6               	addwf	dataCMD@i,f
 12184  0ADC  3000               	movlw	0
 12185  0ADD  3DF7               	addwfc	dataCMD@i+1,f
 12186  0ADE                     l2697:
 12187  0ADE  0877               	movf	dataCMD@i+1,w
 12188  0ADF  3A80               	xorlw	128
 12189  0AE0  00F2               	movwf	??_dataCMD
 12190  0AE1  3080               	movlw	128
 12191  0AE2  0272               	subwf	??_dataCMD,w
 12192  0AE3  1D03               	skipz
 12193  0AE4  2AE7               	goto	u2275
 12194  0AE5  3008               	movlw	8
 12195  0AE6  0276               	subwf	dataCMD@i,w
 12196  0AE7                     u2275:
 12197  0AE7  1C03               	skipc
 12198  0AE8  2AEA               	goto	u2271
 12199  0AE9  2AEB               	goto	u2270
 12200  0AEA                     u2271:
 12201  0AEA  2AAC               	goto	l2677
 12202  0AEB                     u2270:
 12203  0AEB                     l2699:
 12204                           
 12205                           ;main.c: 597:       sendByte = sendByte << 4;
 12206  0AEB  0878               	movf	dataCMD@sendByte,w
 12207  0AEC  00F2               	movwf	??_dataCMD
 12208  0AED  3003               	movlw	3
 12209  0AEE                     u2285:
 12210  0AEE  35F2               	lslf	??_dataCMD,f
 12211  0AEF  3EFF               	addlw	-1
 12212  0AF0  1D03               	skipz
 12213  0AF1  2AEE               	goto	u2285
 12214  0AF2  3572               	lslf	??_dataCMD,w
 12215  0AF3  00F3               	movwf	??_dataCMD+1
 12216  0AF4  0873               	movf	??_dataCMD+1,w
 12217  0AF5  00F8               	movwf	dataCMD@sendByte
 12218  0AF6                     l2701:
 12219                           
 12220                           ;main.c: 598:    spi_write(sendByte);
 12221  0AF6  0878               	movf	dataCMD@sendByte,w
 12222  0AF7  3196  26A1  318A   	fcall	_spi_write
 12223  0AFA                     l2703:
 12224                           
 12225                           ;main.c: 601:    LATB7=1;
 12226  0AFA  0022               	movlb	2	; select bank2
 12227  0AFB  178D               	bsf	13,7	;volatile
 12228  0AFC                     l418:
 12229  0AFC  0008               	return
 12230  0AFD                     __end_of_dataCMD:
 12231                           
 12232                           	psect	text31
 12233  0A47                     __ptext31:	
 12234 ;; *************** function _command *****************
 12235 ;; Defined at:
 12236 ;;		line 529 in file "main.c"
 12237 ;; Parameters:    Size  Location     Type
 12238 ;;  s               1    wreg     unsigned char 
 12239 ;; Auto vars:     Size  Location     Type
 12240 ;;  s               1    5[COMMON] unsigned char 
 12241 ;;  i               2    6[COMMON] int 
 12242 ;;  sendByte        1    8[COMMON] unsigned char 
 12243 ;;  bit0            1    4[COMMON] unsigned char 
 12244 ;; Return value:  Size  Location     Type
 12245 ;;                  1    wreg      void 
 12246 ;; Registers used:
 12247 ;;		wreg, status,2, status,0, pclath, cstack
 12248 ;; Tracked objects:
 12249 ;;		On entry : 0/0
 12250 ;;		On exit  : 0/0
 12251 ;;		Unchanged: 0/0
 12252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12254 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12255 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12256 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12257 ;;Total ram usage:        7 bytes
 12258 ;; Hardware stack levels used:    1
 12259 ;; Hardware stack levels required when called:    5
 12260 ;; This function calls:
 12261 ;;		_spi_write
 12262 ;; This function is called by:
 12263 ;;		_main
 12264 ;;		_printByteValue
 12265 ;;		_reportfault
 12266 ;;		_initDisplay
 12267 ;;		_initOLED
 12268 ;;		_printADCValues
 12269 ;; This function uses a non-reentrant model
 12270 ;;
 12271                           
 12272                           
 12273                           ;psect for function _command
 12274  0A47                     _command:
 12275                           
 12276                           ;incstack = 0
 12277                           ; Regs used in _command: [wreg+status,2+status,0+pclath+cstack]
 12278                           ;command@s stored from wreg
 12279  0A47  00F5               	movwf	command@s
 12280  0A48                     l2621:
 12281                           
 12282                           ;main.c: 529: void command(unsigned char s);main.c: 530: {;main.c: 532:     LATB7=0;
 12283  0A48  0022               	movlb	2	; select bank2
 12284  0A49  138D               	bcf	13,7	;volatile
 12285  0A4A                     l2623:
 12286                           
 12287                           ;main.c: 533:     spi_write('\xF8');
 12288  0A4A  30F8               	movlw	248
 12289  0A4B  3196  26A1  318A   	fcall	_spi_write
 12290  0A4E                     l2625:
 12291  0A4E                     l2627:
 12292                           
 12293                           ;main.c: 536:  unsigned char sendByte = '\x00';
 12294  0A4E  01F8               	clrf	command@sendByte
 12295  0A4F                     l2629:
 12296                           
 12297                           ;main.c: 538:  for(int i=0; i< 8; i++)
 12298  0A4F  01F6               	clrf	command@i
 12299  0A50  01F7               	clrf	command@i+1
 12300  0A51                     l2635:
 12301                           
 12302                           ;main.c: 539:  {;main.c: 540:   bit0 = s & 1;
 12303  0A51  0875               	movf	command@s,w
 12304  0A52  3901               	andlw	1
 12305  0A53  00F2               	movwf	??_command
 12306  0A54  0872               	movf	??_command,w
 12307  0A55  00F4               	movwf	command@bit0
 12308  0A56                     l2637:
 12309                           
 12310                           ;main.c: 542:   s = s >> 1;
 12311  0A56  3675               	lsrf	command@s,w
 12312  0A57  00F2               	movwf	??_command
 12313  0A58  0872               	movf	??_command,w
 12314  0A59  00F5               	movwf	command@s
 12315  0A5A                     l2639:
 12316                           
 12317                           ;main.c: 543:   sendByte = sendByte << 1;
 12318  0A5A  3578               	lslf	command@sendByte,w
 12319  0A5B  00F2               	movwf	??_command
 12320  0A5C  0872               	movf	??_command,w
 12321  0A5D  00F8               	movwf	command@sendByte
 12322  0A5E                     l2641:
 12323                           
 12324                           ;main.c: 544:   if (bit0 == 1){
 12325  0A5E  0374               	decf	command@bit0,w
 12326  0A5F  1D03               	btfss	3,2
 12327  0A60  2A62               	goto	u2191
 12328  0A61  2A63               	goto	u2190
 12329  0A62                     u2191:
 12330  0A62  2A68               	goto	l2645
 12331  0A63                     u2190:
 12332  0A63                     l2643:
 12333                           
 12334                           ;main.c: 546:    sendByte= sendByte | 1;}
 12335  0A63  0878               	movf	command@sendByte,w
 12336  0A64  3801               	iorlw	1
 12337  0A65  00F2               	movwf	??_command
 12338  0A66  0872               	movf	??_command,w
 12339  0A67  00F8               	movwf	command@sendByte
 12340  0A68                     l2645:
 12341                           
 12342                           ;main.c: 547:   if (i==3)
 12343  0A68  3003               	movlw	3
 12344  0A69  0676               	xorwf	command@i,w
 12345  0A6A  0477               	iorwf	command@i+1,w
 12346  0A6B  1D03               	btfss	3,2
 12347  0A6C  2A6E               	goto	u2201
 12348  0A6D  2A6F               	goto	u2200
 12349  0A6E                     u2201:
 12350  0A6E  2A7F               	goto	l2653
 12351  0A6F                     u2200:
 12352  0A6F                     l2647:
 12353                           
 12354                           ;main.c: 548:   {;main.c: 549:     sendByte = sendByte << 4;
 12355  0A6F  0878               	movf	command@sendByte,w
 12356  0A70  00F2               	movwf	??_command
 12357  0A71  3003               	movlw	3
 12358  0A72                     u2215:
 12359  0A72  35F2               	lslf	??_command,f
 12360  0A73  3EFF               	addlw	-1
 12361  0A74  1D03               	skipz
 12362  0A75  2A72               	goto	u2215
 12363  0A76  3572               	lslf	??_command,w
 12364  0A77  00F3               	movwf	??_command+1
 12365  0A78  0873               	movf	??_command+1,w
 12366  0A79  00F8               	movwf	command@sendByte
 12367  0A7A                     l2649:
 12368                           
 12369                           ;main.c: 550:     spi_write(sendByte);
 12370  0A7A  0878               	movf	command@sendByte,w
 12371  0A7B  3196  26A1  318A   	fcall	_spi_write
 12372  0A7E                     l2651:
 12373                           
 12374                           ;main.c: 551:     sendByte = '\x00';
 12375  0A7E  01F8               	clrf	command@sendByte
 12376  0A7F                     l2653:
 12377                           
 12378                           ;main.c: 553:  }
 12379  0A7F  3001               	movlw	1
 12380  0A80  07F6               	addwf	command@i,f
 12381  0A81  3000               	movlw	0
 12382  0A82  3DF7               	addwfc	command@i+1,f
 12383  0A83                     l2655:
 12384  0A83  0877               	movf	command@i+1,w
 12385  0A84  3A80               	xorlw	128
 12386  0A85  00F2               	movwf	??_command
 12387  0A86  3080               	movlw	128
 12388  0A87  0272               	subwf	??_command,w
 12389  0A88  1D03               	skipz
 12390  0A89  2A8C               	goto	u2225
 12391  0A8A  3008               	movlw	8
 12392  0A8B  0276               	subwf	command@i,w
 12393  0A8C                     u2225:
 12394  0A8C  1C03               	skipc
 12395  0A8D  2A8F               	goto	u2221
 12396  0A8E  2A90               	goto	u2220
 12397  0A8F                     u2221:
 12398  0A8F  2A51               	goto	l2635
 12399  0A90                     u2220:
 12400  0A90                     l2657:
 12401                           
 12402                           ;main.c: 554:       sendByte = sendByte << 4;
 12403  0A90  0878               	movf	command@sendByte,w
 12404  0A91  00F2               	movwf	??_command
 12405  0A92  3003               	movlw	3
 12406  0A93                     u2235:
 12407  0A93  35F2               	lslf	??_command,f
 12408  0A94  3EFF               	addlw	-1
 12409  0A95  1D03               	skipz
 12410  0A96  2A93               	goto	u2235
 12411  0A97  3572               	lslf	??_command,w
 12412  0A98  00F3               	movwf	??_command+1
 12413  0A99  0873               	movf	??_command+1,w
 12414  0A9A  00F8               	movwf	command@sendByte
 12415  0A9B                     l2659:
 12416                           
 12417                           ;main.c: 555:    spi_write(sendByte);
 12418  0A9B  0878               	movf	command@sendByte,w
 12419  0A9C  3196  26A1  318A   	fcall	_spi_write
 12420  0A9F                     l2661:
 12421                           
 12422                           ;main.c: 558:    LATB7=1;
 12423  0A9F  0022               	movlb	2	; select bank2
 12424  0AA0  178D               	bsf	13,7	;volatile
 12425  0AA1                     l406:
 12426  0AA1  0008               	return
 12427  0AA2                     __end_of_command:
 12428                           
 12429                           	psect	text32
 12430  16A1                     __ptext32:	
 12431 ;; *************** function _spi_write *****************
 12432 ;; Defined at:
 12433 ;;		line 522 in file "main.c"
 12434 ;; Parameters:    Size  Location     Type
 12435 ;;  spiByte         1    wreg     unsigned char 
 12436 ;; Auto vars:     Size  Location     Type
 12437 ;;  spiByte         1    1[COMMON] unsigned char 
 12438 ;; Return value:  Size  Location     Type
 12439 ;;                  1    wreg      void 
 12440 ;; Registers used:
 12441 ;;		wreg
 12442 ;; Tracked objects:
 12443 ;;		On entry : 0/0
 12444 ;;		On exit  : 0/0
 12445 ;;		Unchanged: 0/0
 12446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12449 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12450 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12451 ;;Total ram usage:        2 bytes
 12452 ;; Hardware stack levels used:    1
 12453 ;; Hardware stack levels required when called:    4
 12454 ;; This function calls:
 12455 ;;		Nothing
 12456 ;; This function is called by:
 12457 ;;		_command
 12458 ;;		_dataCMD
 12459 ;; This function uses a non-reentrant model
 12460 ;;
 12461                           
 12462                           
 12463                           ;psect for function _spi_write
 12464  16A1                     _spi_write:
 12465                           
 12466                           ;incstack = 0
 12467                           ; Regs used in _spi_write: [wreg]
 12468                           ;spi_write@spiByte stored from wreg
 12469  16A1  00F1               	movwf	spi_write@spiByte
 12470  16A2                     l2559:
 12471                           
 12472                           ;main.c: 522: void spi_write(unsigned char spiByte);main.c: 523: {;main.c: 524:      SSP
      +                          BUF=spiByte;
 12473  16A2  0871               	movf	spi_write@spiByte,w
 12474  16A3  0024               	movlb	4	; select bank4
 12475  16A4  0091               	movwf	17	;volatile
 12476  16A5                     l396:	
 12477                           ;main.c: 526:      while(!BF );
 12478                           
 12479  16A5  1C14               	btfss	20,0	;volatile
 12480  16A6  2EA8               	goto	u2021
 12481  16A7  2EA9               	goto	u2020
 12482  16A8                     u2021:
 12483  16A8  2EA5               	goto	l396
 12484  16A9                     u2020:
 12485  16A9                     l2561:
 12486                           
 12487                           ;main.c: 527:      dummy= SSPBUF;
 12488  16A9  0811               	movf	17,w	;volatile
 12489  16AA  00F0               	movwf	??_spi_write
 12490  16AB  0870               	movf	??_spi_write,w
 12491  16AC  0021               	movlb	1	; select bank1
 12492  16AD  00DC               	movwf	_dummy^(0+128)
 12493  16AE                     l399:
 12494  16AE  0008               	return
 12495  16AF                     __end_of_spi_write:
 12496                           
 12497                           	psect	text33
 12498  16EC                     __ptext33:	
 12499 ;; *************** function _TMR4_Initialize *****************
 12500 ;; Defined at:
 12501 ;;		line 63 in file "mcc_generated_files/tmr4.c"
 12502 ;; Parameters:    Size  Location     Type
 12503 ;;		None
 12504 ;; Auto vars:     Size  Location     Type
 12505 ;;		None
 12506 ;; Return value:  Size  Location     Type
 12507 ;;                  1    wreg      void 
 12508 ;; Registers used:
 12509 ;;		wreg, status,2, status,0, pclath, cstack
 12510 ;; Tracked objects:
 12511 ;;		On entry : 0/0
 12512 ;;		On exit  : 0/0
 12513 ;;		Unchanged: 0/0
 12514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12519 ;;Total ram usage:        0 bytes
 12520 ;; Hardware stack levels used:    1
 12521 ;; Hardware stack levels required when called:    5
 12522 ;; This function calls:
 12523 ;;		_TMR4_SetInterruptHandler
 12524 ;;		_TMR4_Start
 12525 ;; This function is called by:
 12526 ;;		_SYSTEM_Initialize
 12527 ;; This function uses a non-reentrant model
 12528 ;;
 12529                           
 12530                           
 12531                           ;psect for function _TMR4_Initialize
 12532  16EC                     _TMR4_Initialize:
 12533  16EC                     l2907:	
 12534                           ;incstack = 0
 12535                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12536                           
 12537                           
 12538                           ;mcc_generated_files/tmr4.c: 68:     T4CON = 0x79;
 12539  16EC  3079               	movlw	121
 12540  16ED  0028               	movlb	8	; select bank8
 12541  16EE  0095               	movwf	21	;volatile
 12542                           
 12543                           ;mcc_generated_files/tmr4.c: 71:     T4CLKCON = 0x03;
 12544  16EF  3003               	movlw	3
 12545  16F0  0097               	movwf	23	;volatile
 12546  16F1                     l2909:
 12547                           
 12548                           ;mcc_generated_files/tmr4.c: 74:     T4HLT = 0x00;
 12549  16F1  0196               	clrf	22	;volatile
 12550  16F2                     l2911:
 12551                           
 12552                           ;mcc_generated_files/tmr4.c: 77:     T4RST = 0x00;
 12553  16F2  0198               	clrf	24	;volatile
 12554                           
 12555                           ;mcc_generated_files/tmr4.c: 80:     T4PR = 0x17;
 12556  16F3  3017               	movlw	23
 12557  16F4  0094               	movwf	20	;volatile
 12558  16F5                     l2913:
 12559                           
 12560                           ;mcc_generated_files/tmr4.c: 83:     T4TMR = 0x00;
 12561  16F5  0193               	clrf	19	;volatile
 12562  16F6                     l2915:
 12563                           
 12564                           ;mcc_generated_files/tmr4.c: 86:     PIR2bits.TMR4IF = 0;
 12565  16F6  0020               	movlb	0	; select bank0
 12566  16F7  1091               	bcf	17,1	;volatile
 12567  16F8                     l2917:
 12568                           
 12569                           ;mcc_generated_files/tmr4.c: 89:     PIE2bits.TMR4IE = 1;
 12570  16F8  0021               	movlb	1	; select bank1
 12571  16F9  1491               	bsf	17,1	;volatile
 12572  16FA                     l2919:
 12573                           
 12574                           ;mcc_generated_files/tmr4.c: 92:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 12575  16FA  3003               	movlw	low _TMR4_DefaultInterruptHandler
 12576  16FB  00F0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
 12577  16FC  3000               	movlw	high _TMR4_DefaultInterruptHandler
 12578  16FD  00F1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
 12579  16FE  3196  2650  3196   	fcall	_TMR4_SetInterruptHandler
 12580  1701                     l2921:
 12581                           
 12582                           ;mcc_generated_files/tmr4.c: 95:     TMR4_Start();
 12583  1701  3196  263C  3196   	fcall	_TMR4_Start
 12584  1704                     l460:
 12585  1704  0008               	return
 12586  1705                     __end_of_TMR4_Initialize:
 12587                           
 12588                           	psect	text34
 12589  163C                     __ptext34:	
 12590 ;; *************** function _TMR4_Start *****************
 12591 ;; Defined at:
 12592 ;;		line 110 in file "mcc_generated_files/tmr4.c"
 12593 ;; Parameters:    Size  Location     Type
 12594 ;;		None
 12595 ;; Auto vars:     Size  Location     Type
 12596 ;;		None
 12597 ;; Return value:  Size  Location     Type
 12598 ;;                  1    wreg      void 
 12599 ;; Registers used:
 12600 ;;		None
 12601 ;; Tracked objects:
 12602 ;;		On entry : 0/0
 12603 ;;		On exit  : 0/0
 12604 ;;		Unchanged: 0/0
 12605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12610 ;;Total ram usage:        0 bytes
 12611 ;; Hardware stack levels used:    1
 12612 ;; Hardware stack levels required when called:    4
 12613 ;; This function calls:
 12614 ;;		Nothing
 12615 ;; This function is called by:
 12616 ;;		_TMR4_Initialize
 12617 ;;		_TMR4_StartTimer
 12618 ;; This function uses a non-reentrant model
 12619 ;;
 12620                           
 12621                           
 12622                           ;psect for function _TMR4_Start
 12623  163C                     _TMR4_Start:
 12624  163C                     l2821:	
 12625                           ;incstack = 0
 12626                           ; Regs used in _TMR4_Start: []
 12627                           
 12628                           
 12629                           ;mcc_generated_files/tmr4.c: 113:     T4CONbits.TMR4ON = 1;
 12630  163C  0028               	movlb	8	; select bank8
 12631  163D  1795               	bsf	21,7	;volatile
 12632  163E                     l469:
 12633  163E  0008               	return
 12634  163F                     __end_of_TMR4_Start:
 12635                           
 12636                           	psect	text35
 12637  1650                     __ptext35:	
 12638 ;; *************** function _TMR4_SetInterruptHandler *****************
 12639 ;; Defined at:
 12640 ;;		line 188 in file "mcc_generated_files/tmr4.c"
 12641 ;; Parameters:    Size  Location     Type
 12642 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 12643 ;;		 -> TMR4_DefaultInterruptHandler(1), 
 12644 ;; Auto vars:     Size  Location     Type
 12645 ;;		None
 12646 ;; Return value:  Size  Location     Type
 12647 ;;                  1    wreg      void 
 12648 ;; Registers used:
 12649 ;;		wreg
 12650 ;; Tracked objects:
 12651 ;;		On entry : 0/0
 12652 ;;		On exit  : 0/0
 12653 ;;		Unchanged: 0/0
 12654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12658 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12659 ;;Total ram usage:        2 bytes
 12660 ;; Hardware stack levels used:    1
 12661 ;; Hardware stack levels required when called:    4
 12662 ;; This function calls:
 12663 ;;		Nothing
 12664 ;; This function is called by:
 12665 ;;		_TMR4_Initialize
 12666 ;; This function uses a non-reentrant model
 12667 ;;
 12668                           
 12669                           
 12670                           ;psect for function _TMR4_SetInterruptHandler
 12671  1650                     _TMR4_SetInterruptHandler:
 12672  1650                     l2819:	
 12673                           ;incstack = 0
 12674                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
 12675                           
 12676                           
 12677                           ;mcc_generated_files/tmr4.c: 189:     TMR4_InterruptHandler = InterruptHandler;
 12678  1650  0871               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
 12679  1651  0021               	movlb	1	; select bank1
 12680  1652  00DA               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
 12681  1653  0870               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
 12682  1654  00D9               	movwf	_TMR4_InterruptHandler^(0+128)
 12683  1655                     l506:
 12684  1655  0008               	return
 12685  1656                     __end_of_TMR4_SetInterruptHandler:
 12686                           
 12687                           	psect	text36
 12688  1694                     __ptext36:	
 12689 ;; *************** function _TMR2_Initialize *****************
 12690 ;; Defined at:
 12691 ;;		line 61 in file "mcc_generated_files/tmr2.c"
 12692 ;; Parameters:    Size  Location     Type
 12693 ;;		None
 12694 ;; Auto vars:     Size  Location     Type
 12695 ;;		None
 12696 ;; Return value:  Size  Location     Type
 12697 ;;                  1    wreg      void 
 12698 ;; Registers used:
 12699 ;;		wreg, status,2, status,0, pclath, cstack
 12700 ;; Tracked objects:
 12701 ;;		On entry : 0/0
 12702 ;;		On exit  : 0/0
 12703 ;;		Unchanged: 0/0
 12704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12709 ;;Total ram usage:        0 bytes
 12710 ;; Hardware stack levels used:    1
 12711 ;; Hardware stack levels required when called:    5
 12712 ;; This function calls:
 12713 ;;		_TMR2_Start
 12714 ;; This function is called by:
 12715 ;;		_SYSTEM_Initialize
 12716 ;; This function uses a non-reentrant model
 12717 ;;
 12718                           
 12719                           
 12720                           ;psect for function _TMR2_Initialize
 12721  1694                     _TMR2_Initialize:
 12722  1694                     l2931:	
 12723                           ;incstack = 0
 12724                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12725                           
 12726                           
 12727                           ;mcc_generated_files/tmr2.c: 66:     T2CON = 0x00;
 12728  1694  0020               	movlb	0	; select bank0
 12729  1695  019C               	clrf	28	;volatile
 12730                           
 12731                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x00;
 12732  1696  019E               	clrf	30	;volatile
 12733                           
 12734                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
 12735  1697  019D               	clrf	29	;volatile
 12736                           
 12737                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 12738  1698  019F               	clrf	31	;volatile
 12739  1699                     l2933:
 12740                           
 12741                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0xDB;
 12742  1699  30DB               	movlw	219
 12743  169A  009B               	movwf	27	;volatile
 12744  169B                     l2935:
 12745                           
 12746                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 12747  169B  019A               	clrf	26	;volatile
 12748  169C                     l2937:
 12749                           
 12750                           ;mcc_generated_files/tmr2.c: 84:     PIR1bits.TMR2IF = 0;
 12751  169C  1090               	bcf	16,1	;volatile
 12752  169D                     l2939:
 12753                           
 12754                           ;mcc_generated_files/tmr2.c: 87:     TMR2_Start();
 12755  169D  3196  2639  3196   	fcall	_TMR2_Start
 12756  16A0                     l189:
 12757  16A0  0008               	return
 12758  16A1                     __end_of_TMR2_Initialize:
 12759                           
 12760                           	psect	text37
 12761  1639                     __ptext37:	
 12762 ;; *************** function _TMR2_Start *****************
 12763 ;; Defined at:
 12764 ;;		line 102 in file "mcc_generated_files/tmr2.c"
 12765 ;; Parameters:    Size  Location     Type
 12766 ;;		None
 12767 ;; Auto vars:     Size  Location     Type
 12768 ;;		None
 12769 ;; Return value:  Size  Location     Type
 12770 ;;                  1    wreg      void 
 12771 ;; Registers used:
 12772 ;;		None
 12773 ;; Tracked objects:
 12774 ;;		On entry : 0/0
 12775 ;;		On exit  : 0/0
 12776 ;;		Unchanged: 0/0
 12777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12782 ;;Total ram usage:        0 bytes
 12783 ;; Hardware stack levels used:    1
 12784 ;; Hardware stack levels required when called:    4
 12785 ;; This function calls:
 12786 ;;		Nothing
 12787 ;; This function is called by:
 12788 ;;		_TMR2_Initialize
 12789 ;;		_TMR2_StartTimer
 12790 ;; This function uses a non-reentrant model
 12791 ;;
 12792                           
 12793                           
 12794                           ;psect for function _TMR2_Start
 12795  1639                     _TMR2_Start:
 12796  1639                     l2749:	
 12797                           ;incstack = 0
 12798                           ; Regs used in _TMR2_Start: []
 12799                           
 12800                           
 12801                           ;mcc_generated_files/tmr2.c: 105:     T2CONbits.TMR2ON = 1;
 12802  1639  0020               	movlb	0	; select bank0
 12803  163A  179C               	bsf	28,7	;volatile
 12804  163B                     l198:
 12805  163B  0008               	return
 12806  163C                     __end_of_TMR2_Start:
 12807                           
 12808                           	psect	text38
 12809  164A                     __ptext38:	
 12810 ;; *************** function _SPI_Initialize *****************
 12811 ;; Defined at:
 12812 ;;		line 63 in file "mcc_generated_files/spi.c"
 12813 ;; Parameters:    Size  Location     Type
 12814 ;;		None
 12815 ;; Auto vars:     Size  Location     Type
 12816 ;;		None
 12817 ;; Return value:  Size  Location     Type
 12818 ;;                  1    wreg      void 
 12819 ;; Registers used:
 12820 ;;		wreg, status,2
 12821 ;; Tracked objects:
 12822 ;;		On entry : 0/0
 12823 ;;		On exit  : 0/0
 12824 ;;		Unchanged: 0/0
 12825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12830 ;;Total ram usage:        0 bytes
 12831 ;; Hardware stack levels used:    1
 12832 ;; Hardware stack levels required when called:    4
 12833 ;; This function calls:
 12834 ;;		Nothing
 12835 ;; This function is called by:
 12836 ;;		_SYSTEM_Initialize
 12837 ;; This function uses a non-reentrant model
 12838 ;;
 12839                           
 12840                           
 12841                           ;psect for function _SPI_Initialize
 12842  164A                     _SPI_Initialize:
 12843  164A                     l2869:	
 12844                           ;incstack = 0
 12845                           ; Regs used in _SPI_Initialize: [wreg+status,2]
 12846                           
 12847                           
 12848                           ;mcc_generated_files/spi.c: 68:     SSP1STAT = 0x00;
 12849  164A  0024               	movlb	4	; select bank4
 12850  164B  0194               	clrf	20	;volatile
 12851  164C                     l2871:
 12852                           
 12853                           ;mcc_generated_files/spi.c: 71:     SSP1CON1 = 0x32;
 12854  164C  3032               	movlw	50
 12855  164D  0095               	movwf	21	;volatile
 12856  164E                     l2873:
 12857                           
 12858                           ;mcc_generated_files/spi.c: 74:     SSP1ADD = 0x00;
 12859  164E  0192               	clrf	18	;volatile
 12860  164F                     l37:
 12861  164F  0008               	return
 12862  1650                     __end_of_SPI_Initialize:
 12863                           
 12864                           	psect	text39
 12865  1674                     __ptext39:	
 12866 ;; *************** function _PWM4_Initialize *****************
 12867 ;; Defined at:
 12868 ;;		line 57 in file "mcc_generated_files/pwm4.c"
 12869 ;; Parameters:    Size  Location     Type
 12870 ;;		None
 12871 ;; Auto vars:     Size  Location     Type
 12872 ;;		None
 12873 ;; Return value:  Size  Location     Type
 12874 ;;                  1    wreg      void 
 12875 ;; Registers used:
 12876 ;;		wreg, status,2, status,0
 12877 ;; Tracked objects:
 12878 ;;		On entry : 0/0
 12879 ;;		On exit  : 0/0
 12880 ;;		Unchanged: 0/0
 12881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12886 ;;Total ram usage:        0 bytes
 12887 ;; Hardware stack levels used:    1
 12888 ;; Hardware stack levels required when called:    4
 12889 ;; This function calls:
 12890 ;;		Nothing
 12891 ;; This function is called by:
 12892 ;;		_SYSTEM_Initialize
 12893 ;; This function uses a non-reentrant model
 12894 ;;
 12895                           
 12896                           
 12897                           ;psect for function _PWM4_Initialize
 12898  1674                     _PWM4_Initialize:
 12899  1674                     l2899:	
 12900                           ;incstack = 0
 12901                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 12902                           
 12903                           
 12904                           ;mcc_generated_files/pwm4.c: 61:      PWM4CON = 0x80;
 12905  1674  3080               	movlw	128
 12906  1675  002C               	movlb	12	; select bank12
 12907  1676  009C               	movwf	28	;volatile
 12908  1677                     l2901:
 12909                           
 12910                           ;mcc_generated_files/pwm4.c: 64:      PWM4DCH = 0x00;
 12911  1677  019B               	clrf	27	;volatile
 12912  1678                     l2903:
 12913                           
 12914                           ;mcc_generated_files/pwm4.c: 67:      PWM4DCL = 0x00;
 12915  1678  019A               	clrf	26	;volatile
 12916  1679                     l2905:
 12917                           
 12918                           ;mcc_generated_files/pwm4.c: 71:      CCPTMRSbits.P4TSEL = 0x0;
 12919  1679  303F               	movlw	-193
 12920  167A  0025               	movlb	5	; select bank5
 12921  167B  059E               	andwf	30,f	;volatile
 12922  167C                     l157:
 12923  167C  0008               	return
 12924  167D                     __end_of_PWM4_Initialize:
 12925                           
 12926                           	psect	text40
 12927  166B                     __ptext40:	
 12928 ;; *************** function _PWM3_Initialize *****************
 12929 ;; Defined at:
 12930 ;;		line 57 in file "mcc_generated_files/pwm3.c"
 12931 ;; Parameters:    Size  Location     Type
 12932 ;;		None
 12933 ;; Auto vars:     Size  Location     Type
 12934 ;;		None
 12935 ;; Return value:  Size  Location     Type
 12936 ;;                  1    wreg      void 
 12937 ;; Registers used:
 12938 ;;		wreg, status,2, status,0
 12939 ;; Tracked objects:
 12940 ;;		On entry : 0/0
 12941 ;;		On exit  : 0/0
 12942 ;;		Unchanged: 0/0
 12943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12948 ;;Total ram usage:        0 bytes
 12949 ;; Hardware stack levels used:    1
 12950 ;; Hardware stack levels required when called:    4
 12951 ;; This function calls:
 12952 ;;		Nothing
 12953 ;; This function is called by:
 12954 ;;		_SYSTEM_Initialize
 12955 ;; This function uses a non-reentrant model
 12956 ;;
 12957                           
 12958                           
 12959                           ;psect for function _PWM3_Initialize
 12960  166B                     _PWM3_Initialize:
 12961  166B                     l2923:	
 12962                           ;incstack = 0
 12963                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 12964                           
 12965                           
 12966                           ;mcc_generated_files/pwm3.c: 61:      PWM3CON = 0x80;
 12967  166B  3080               	movlw	128
 12968  166C  002C               	movlb	12	; select bank12
 12969  166D  0099               	movwf	25	;volatile
 12970  166E                     l2925:
 12971                           
 12972                           ;mcc_generated_files/pwm3.c: 64:      PWM3DCH = 0x00;
 12973  166E  0198               	clrf	24	;volatile
 12974  166F                     l2927:
 12975                           
 12976                           ;mcc_generated_files/pwm3.c: 67:      PWM3DCL = 0x00;
 12977  166F  0197               	clrf	23	;volatile
 12978  1670                     l2929:
 12979                           
 12980                           ;mcc_generated_files/pwm3.c: 71:      CCPTMRSbits.P3TSEL = 0x0;
 12981  1670  30CF               	movlw	-49
 12982  1671  0025               	movlb	5	; select bank5
 12983  1672  059E               	andwf	30,f	;volatile
 12984  1673                     l143:
 12985  1673  0008               	return
 12986  1674                     __end_of_PWM3_Initialize:
 12987                           
 12988                           	psect	text41
 12989  095D                     __ptext41:	
 12990 ;; *************** function _PIN_MANAGER_Initialize *****************
 12991 ;; Defined at:
 12992 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 12993 ;; Parameters:    Size  Location     Type
 12994 ;;		None
 12995 ;; Auto vars:     Size  Location     Type
 12996 ;;  state           1    0[COMMON] _Bool 
 12997 ;; Return value:  Size  Location     Type
 12998 ;;                  1    wreg      void 
 12999 ;; Registers used:
 13000 ;;		wreg, status,2, status,0
 13001 ;; Tracked objects:
 13002 ;;		On entry : 0/0
 13003 ;;		On exit  : 0/0
 13004 ;;		Unchanged: 0/0
 13005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13009 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13010 ;;Total ram usage:        1 bytes
 13011 ;; Hardware stack levels used:    1
 13012 ;; Hardware stack levels required when called:    4
 13013 ;; This function calls:
 13014 ;;		Nothing
 13015 ;; This function is called by:
 13016 ;;		_SYSTEM_Initialize
 13017 ;; This function uses a non-reentrant model
 13018 ;;
 13019                           
 13020                           
 13021                           ;psect for function _PIN_MANAGER_Initialize
 13022  095D                     _PIN_MANAGER_Initialize:
 13023  095D                     l2835:	
 13024                           ;incstack = 0
 13025                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 13026                           
 13027                           
 13028                           ;mcc_generated_files/pin_manager.c: 57:     LATA = 0x00;
 13029  095D  0022               	movlb	2	; select bank2
 13030  095E  018C               	clrf	12	;volatile
 13031                           
 13032                           ;mcc_generated_files/pin_manager.c: 58:     LATB = 0x00;
 13033  095F  018D               	clrf	13	;volatile
 13034                           
 13035                           ;mcc_generated_files/pin_manager.c: 59:     LATC = 0x00;
 13036  0960  018E               	clrf	14	;volatile
 13037  0961                     l2837:
 13038                           
 13039                           ;mcc_generated_files/pin_manager.c: 64:     TRISA = 0x37;
 13040  0961  3037               	movlw	55
 13041  0962  0021               	movlb	1	; select bank1
 13042  0963  008C               	movwf	12	;volatile
 13043  0964                     l2839:
 13044                           
 13045                           ;mcc_generated_files/pin_manager.c: 65:     TRISB = 0x10;
 13046  0964  3010               	movlw	16
 13047  0965  008D               	movwf	13	;volatile
 13048  0966                     l2841:
 13049                           
 13050                           ;mcc_generated_files/pin_manager.c: 66:     TRISC = 0x3C;
 13051  0966  303C               	movlw	60
 13052  0967  008E               	movwf	14	;volatile
 13053  0968                     l2843:
 13054                           
 13055                           ;mcc_generated_files/pin_manager.c: 71:     ANSELC = 0x0C;
 13056  0968  300C               	movlw	12
 13057  0969  0023               	movlb	3	; select bank3
 13058  096A  008E               	movwf	14	;volatile
 13059                           
 13060                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0x00;
 13061  096B  018D               	clrf	13	;volatile
 13062  096C                     l2845:
 13063                           
 13064                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x17;
 13065  096C  3017               	movlw	23
 13066  096D  008C               	movwf	12	;volatile
 13067  096E                     l2847:
 13068                           
 13069                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0xF0;
 13070  096E  30F0               	movlw	240
 13071  096F  0024               	movlb	4	; select bank4
 13072  0970  008D               	movwf	13	;volatile
 13073  0971                     l2849:
 13074                           
 13075                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x3F;
 13076  0971  303F               	movlw	63
 13077  0972  008C               	movwf	12	;volatile
 13078  0973                     l2851:
 13079                           
 13080                           ;mcc_generated_files/pin_manager.c: 80:     WPUC = 0xFC;
 13081  0973  30FC               	movlw	252
 13082  0974  008E               	movwf	14	;volatile
 13083  0975                     l2853:
 13084                           
 13085                           ;mcc_generated_files/pin_manager.c: 81:     OPTION_REGbits.nWPUEN = 0;
 13086  0975  0021               	movlb	1	; select bank1
 13087  0976  1395               	bcf	21,7	;volatile
 13088                           
 13089                           ;mcc_generated_files/pin_manager.c: 86:     ODCONA = 0x00;
 13090  0977  0025               	movlb	5	; select bank5
 13091  0978  018C               	clrf	12	;volatile
 13092                           
 13093                           ;mcc_generated_files/pin_manager.c: 87:     ODCONB = 0x00;
 13094  0979  018D               	clrf	13	;volatile
 13095                           
 13096                           ;mcc_generated_files/pin_manager.c: 88:     ODCONC = 0x00;
 13097  097A  018E               	clrf	14	;volatile
 13098  097B                     l2855:
 13099                           
 13100                           ;mcc_generated_files/pin_manager.c: 95:     _Bool state = (unsigned char)GIE;
 13101  097B  3000               	movlw	0
 13102  097C  1B8B               	btfsc	11,7	;volatile
 13103  097D  3001               	movlw	1
 13104  097E  00F0               	movwf	PIN_MANAGER_Initialize@state
 13105  097F                     l2857:
 13106                           
 13107                           ;mcc_generated_files/pin_manager.c: 96:     GIE = 0;
 13108  097F  138B               	bcf	11,7	;volatile
 13109                           
 13110                           ;mcc_generated_files/pin_manager.c: 97:     PPSLOCK = 0x55;
 13111  0980  3055               	movlw	85
 13112  0981  003C               	movlb	28	; select bank28
 13113  0982  008F               	movwf	15	;volsfr
 13114                           
 13115                           ;mcc_generated_files/pin_manager.c: 98:     PPSLOCK = 0xAA;
 13116  0983  30AA               	movlw	170
 13117  0984  008F               	movwf	15	;volsfr
 13118  0985                     l2859:
 13119                           
 13120                           ;mcc_generated_files/pin_manager.c: 99:     PPSLOCKbits.PPSLOCKED = 0x00;
 13121  0985  100F               	bcf	15,0	;volsfr
 13122                           
 13123                           ;mcc_generated_files/pin_manager.c: 101:     RC0PPS = 0x0E;
 13124  0986  300E               	movlw	14
 13125  0987  003D               	movlb	29	; select bank29
 13126  0988  00A0               	movwf	32	;volatile
 13127                           
 13128                           ;mcc_generated_files/pin_manager.c: 102:     T2PPS = 0x05;
 13129  0989  3005               	movlw	5
 13130  098A  003C               	movlb	28	; select bank28
 13131  098B  0098               	movwf	24	;volatile
 13132                           
 13133                           ;mcc_generated_files/pin_manager.c: 103:     SSPDATPPS = 0x0C;
 13134  098C  300C               	movlw	12
 13135  098D  00A1               	movwf	33	;volatile
 13136                           
 13137                           ;mcc_generated_files/pin_manager.c: 104:     RB6PPS = 0x10;
 13138  098E  3010               	movlw	16
 13139  098F  003D               	movlb	29	; select bank29
 13140  0990  009E               	movwf	30	;volatile
 13141                           
 13142                           ;mcc_generated_files/pin_manager.c: 105:     RB5PPS = 0x11;
 13143  0991  3011               	movlw	17
 13144  0992  009D               	movwf	29	;volatile
 13145                           
 13146                           ;mcc_generated_files/pin_manager.c: 106:     RC1PPS = 0x0F;
 13147  0993  300F               	movlw	15
 13148  0994  00A1               	movwf	33	;volatile
 13149                           
 13150                           ;mcc_generated_files/pin_manager.c: 107:     SSPCLKPPS = 0x0E;
 13151  0995  300E               	movlw	14
 13152  0996  003C               	movlb	28	; select bank28
 13153  0997  00A0               	movwf	32	;volatile
 13154                           
 13155                           ;mcc_generated_files/pin_manager.c: 108:     T4PPS = 0x11;
 13156  0998  3011               	movlw	17
 13157  0999  009B               	movwf	27	;volatile
 13158                           
 13159                           ;mcc_generated_files/pin_manager.c: 110:     PPSLOCK = 0x55;
 13160  099A  3055               	movlw	85
 13161  099B  008F               	movwf	15	;volsfr
 13162                           
 13163                           ;mcc_generated_files/pin_manager.c: 111:     PPSLOCK = 0xAA;
 13164  099C  30AA               	movlw	170
 13165  099D  008F               	movwf	15	;volsfr
 13166  099E                     l2861:
 13167                           
 13168                           ;mcc_generated_files/pin_manager.c: 112:     PPSLOCKbits.PPSLOCKED = 0x01;
 13169  099E  140F               	bsf	15,0	;volsfr
 13170  099F                     l2863:
 13171                           
 13172                           ;mcc_generated_files/pin_manager.c: 114:     GIE = state;
 13173  099F  0C70               	rrf	PIN_MANAGER_Initialize@state,w
 13174  09A0  1C03               	skipc
 13175  09A1  138B               	bcf	11,7	;volatile
 13176  09A2  1803               	skipnc
 13177  09A3  178B               	bsf	11,7	;volatile
 13178  09A4                     l94:
 13179  09A4  0008               	return
 13180  09A5                     __end_of_PIN_MANAGER_Initialize:
 13181                           
 13182                           	psect	text42
 13183  163F                     __ptext42:	
 13184 ;; *************** function _OSCILLATOR_Initialize *****************
 13185 ;; Defined at:
 13186 ;;		line 90 in file "mcc_generated_files/mcc.c"
 13187 ;; Parameters:    Size  Location     Type
 13188 ;;		None
 13189 ;; Auto vars:     Size  Location     Type
 13190 ;;		None
 13191 ;; Return value:  Size  Location     Type
 13192 ;;                  1    wreg      void 
 13193 ;; Registers used:
 13194 ;;		wreg, status,2
 13195 ;; Tracked objects:
 13196 ;;		On entry : 0/0
 13197 ;;		On exit  : 0/0
 13198 ;;		Unchanged: 0/0
 13199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13204 ;;Total ram usage:        0 bytes
 13205 ;; Hardware stack levels used:    1
 13206 ;; Hardware stack levels required when called:    4
 13207 ;; This function calls:
 13208 ;;		Nothing
 13209 ;; This function is called by:
 13210 ;;		_SYSTEM_Initialize
 13211 ;; This function uses a non-reentrant model
 13212 ;;
 13213                           
 13214                           
 13215                           ;psect for function _OSCILLATOR_Initialize
 13216  163F                     _OSCILLATOR_Initialize:
 13217  163F                     l2865:	
 13218                           ;incstack = 0
 13219                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13220                           
 13221                           
 13222                           ;mcc_generated_files/mcc.c: 93:     OSCCON = 0x78;
 13223  163F  3078               	movlw	120
 13224  1640  0021               	movlb	1	; select bank1
 13225  1641  0099               	movwf	25	;volatile
 13226  1642                     l2867:
 13227                           
 13228                           ;mcc_generated_files/mcc.c: 95:     OSCTUNE = 0x00;
 13229  1642  0198               	clrf	24	;volatile
 13230  1643                     l28:
 13231  1643  0008               	return
 13232  1644                     __end_of_OSCILLATOR_Initialize:
 13233                           
 13234                           	psect	text43
 13235  1662                     __ptext43:	
 13236 ;; *************** function _ADC_Initialize *****************
 13237 ;; Defined at:
 13238 ;;		line 64 in file "mcc_generated_files/adc.c"
 13239 ;; Parameters:    Size  Location     Type
 13240 ;;		None
 13241 ;; Auto vars:     Size  Location     Type
 13242 ;;		None
 13243 ;; Return value:  Size  Location     Type
 13244 ;;                  1    wreg      void 
 13245 ;; Registers used:
 13246 ;;		wreg, status,2
 13247 ;; Tracked objects:
 13248 ;;		On entry : 0/0
 13249 ;;		On exit  : 0/0
 13250 ;;		Unchanged: 0/0
 13251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13256 ;;Total ram usage:        0 bytes
 13257 ;; Hardware stack levels used:    1
 13258 ;; Hardware stack levels required when called:    4
 13259 ;; This function calls:
 13260 ;;		Nothing
 13261 ;; This function is called by:
 13262 ;;		_SYSTEM_Initialize
 13263 ;; This function uses a non-reentrant model
 13264 ;;
 13265                           
 13266                           
 13267                           ;psect for function _ADC_Initialize
 13268  1662                     _ADC_Initialize:
 13269  1662                     l2891:	
 13270                           ;incstack = 0
 13271                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 13272                           
 13273                           
 13274                           ;mcc_generated_files/adc.c: 69:     ADCON0 = 0x01;
 13275  1662  3001               	movlw	1
 13276  1663  0021               	movlb	1	; select bank1
 13277  1664  009D               	movwf	29	;volatile
 13278                           
 13279                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x60;
 13280  1665  3060               	movlw	96
 13281  1666  009E               	movwf	30	;volatile
 13282  1667                     l2893:
 13283                           
 13284                           ;mcc_generated_files/adc.c: 75:     ADCON2 = 0x00;
 13285  1667  019F               	clrf	31	;volatile
 13286  1668                     l2895:
 13287                           
 13288                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
 13289  1668  019B               	clrf	27	;volatile
 13290  1669                     l2897:
 13291                           
 13292                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
 13293  1669  019C               	clrf	28	;volatile
 13294  166A                     l114:
 13295  166A  0008               	return
 13296  166B                     __end_of_ADC_Initialize:
 13297                           
 13298                           	psect	text44
 13299  1739                     __ptext44:	
 13300 ;; *************** function _ADC_GetConversion *****************
 13301 ;; Defined at:
 13302 ;;		line 112 in file "mcc_generated_files/adc.c"
 13303 ;; Parameters:    Size  Location     Type
 13304 ;;  channel         1    wreg     enum E9639
 13305 ;; Auto vars:     Size  Location     Type
 13306 ;;  channel         1    3[COMMON] enum E9639
 13307 ;; Return value:  Size  Location     Type
 13308 ;;                  2    0[COMMON] unsigned short 
 13309 ;; Registers used:
 13310 ;;		wreg, status,2, status,0
 13311 ;; Tracked objects:
 13312 ;;		On entry : 0/0
 13313 ;;		On exit  : 0/0
 13314 ;;		Unchanged: 0/0
 13315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13316 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13319 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13320 ;;Total ram usage:        4 bytes
 13321 ;; Hardware stack levels used:    1
 13322 ;; Hardware stack levels required when called:    4
 13323 ;; This function calls:
 13324 ;;		Nothing
 13325 ;; This function is called by:
 13326 ;;		_main
 13327 ;;		_printADCValues
 13328 ;; This function uses a non-reentrant model
 13329 ;;
 13330                           
 13331                           
 13332                           ;psect for function _ADC_GetConversion
 13333  1739                     _ADC_GetConversion:
 13334                           
 13335                           ;incstack = 0
 13336                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 13337                           ;ADC_GetConversion@channel stored from wreg
 13338  1739  00F3               	movwf	ADC_GetConversion@channel
 13339  173A                     l3217:
 13340                           
 13341                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
 13342  173A  0873               	movf	ADC_GetConversion@channel,w
 13343  173B  00F2               	movwf	??_ADC_GetConversion
 13344  173C  0DF2               	rlf	??_ADC_GetConversion,f
 13345  173D  0DF2               	rlf	??_ADC_GetConversion,f
 13346  173E  0021               	movlb	1	; select bank1
 13347  173F  081D               	movf	29,w	;volatile
 13348  1740  0672               	xorwf	??_ADC_GetConversion,w
 13349  1741  3983               	andlw	-125
 13350  1742  0672               	xorwf	??_ADC_GetConversion,w
 13351  1743  009D               	movwf	29	;volatile
 13352  1744                     l3219:
 13353                           
 13354                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
 13355  1744  141D               	bsf	29,0	;volatile
 13356  1745                     l3221:
 13357                           
 13358                           ;mcc_generated_files/adc.c: 120:     _delay((unsigned long)((5)*(16000000/4000000.0)));
 13359  1745  3006               	movlw	6
 13360  1746                     u3517:
 13361  1746  0B89               	decfsz	9,f
 13362  1747  2F46               	goto	u3517
 13363  1748  3200               	nop2
 13364  1749                     l3223:
 13365                           
 13366                           ;mcc_generated_files/adc.c: 123:     ADCON0bits.GO_nDONE = 1;
 13367  1749  0021               	movlb	1	; select bank1
 13368  174A  149D               	bsf	29,1	;volatile
 13369  174B                     l129:	
 13370                           ;mcc_generated_files/adc.c: 127:     {;mcc_generated_files/adc.c: 128:     }
 13371                           
 13372                           
 13373                           ;mcc_generated_files/adc.c: 126:     while (ADCON0bits.GO_nDONE)
 13374  174B  189D               	btfsc	29,1	;volatile
 13375  174C  2F4E               	goto	u2961
 13376  174D  2F4F               	goto	u2960
 13377  174E                     u2961:
 13378  174E  2F4B               	goto	l129
 13379  174F                     u2960:
 13380  174F                     l3225:
 13381                           
 13382                           ;mcc_generated_files/adc.c: 131:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 13383  174F  081C               	movf	28,w	;volatile
 13384  1750  00F1               	movwf	?_ADC_GetConversion+1
 13385  1751  081B               	movf	27,w	;volatile
 13386  1752  00F0               	movwf	?_ADC_GetConversion
 13387  1753                     l132:
 13388  1753  0008               	return
 13389  1754                     __end_of_ADC_GetConversion:
 13390                           
 13391                           	psect	intentry
 13392  0004                     __pintentry:	
 13393 ;; *************** function _INTERRUPT_InterruptManager *****************
 13394 ;; Defined at:
 13395 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 13396 ;; Parameters:    Size  Location     Type
 13397 ;;		None
 13398 ;; Auto vars:     Size  Location     Type
 13399 ;;		None
 13400 ;; Return value:  Size  Location     Type
 13401 ;;                  1    wreg      void 
 13402 ;; Registers used:
 13403 ;;		wreg, status,2, status,0, pclath, cstack
 13404 ;; Tracked objects:
 13405 ;;		On entry : 0/0
 13406 ;;		On exit  : 0/0
 13407 ;;		Unchanged: 0/0
 13408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13413 ;;Total ram usage:        0 bytes
 13414 ;; Hardware stack levels used:    1
 13415 ;; Hardware stack levels required when called:    3
 13416 ;; This function calls:
 13417 ;;		_TMR4_ISR
 13418 ;; This function is called by:
 13419 ;;		Interrupt level 1
 13420 ;; This function uses a non-reentrant model
 13421 ;;
 13422                           
 13423  0004                     _INTERRUPT_InterruptManager:
 13424                           
 13425                           ;incstack = 0
 13426  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13427                           
 13428                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 13429  0005  3180               	pagesel	$
 13430  0006                     i1l3627:
 13431                           
 13432                           ;mcc_generated_files/interrupt_manager.c: 54:     if(INTCONbits.PEIE == 1 && PIE2bits.TM
      +                          R4IE == 1 && PIR2bits.TMR4IF == 1)
 13433  0006  1F0B               	btfss	11,6	;volatile
 13434  0007  2809               	goto	u335_21
 13435  0008  280A               	goto	u335_20
 13436  0009                     u335_21:
 13437  0009  2817               	goto	i1l524
 13438  000A                     u335_20:
 13439  000A                     i1l3629:
 13440  000A  0021               	movlb	1	; select bank1
 13441  000B  1C91               	btfss	17,1	;volatile
 13442  000C  280E               	goto	u336_21
 13443  000D  280F               	goto	u336_20
 13444  000E                     u336_21:
 13445  000E  2817               	goto	i1l524
 13446  000F                     u336_20:
 13447  000F                     i1l3631:
 13448  000F  0020               	movlb	0	; select bank0
 13449  0010  1C91               	btfss	17,1	;volatile
 13450  0011  2813               	goto	u337_21
 13451  0012  2814               	goto	u337_20
 13452  0013                     u337_21:
 13453  0013  2817               	goto	i1l524
 13454  0014                     u337_20:
 13455  0014                     i1l3633:
 13456                           
 13457                           ;mcc_generated_files/interrupt_manager.c: 55:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 56:         TMR4_ISR();
 13458  0014  3196  2644  3180   	fcall	_TMR4_ISR
 13459  0017                     i1l524:	
 13460                           ;mcc_generated_files/interrupt_manager.c: 57:     }
 13461                           
 13462  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13463  0018  0009               	retfie
 13464  0019                     __end_of_INTERRUPT_InterruptManager:
 13465                           
 13466                           	psect	text46
 13467  1644                     __ptext46:	
 13468 ;; *************** function _TMR4_ISR *****************
 13469 ;; Defined at:
 13470 ;;		line 167 in file "mcc_generated_files/tmr4.c"
 13471 ;; Parameters:    Size  Location     Type
 13472 ;;		None
 13473 ;; Auto vars:     Size  Location     Type
 13474 ;;		None
 13475 ;; Return value:  Size  Location     Type
 13476 ;;                  1    wreg      void 
 13477 ;; Registers used:
 13478 ;;		wreg, status,2, status,0, pclath, cstack
 13479 ;; Tracked objects:
 13480 ;;		On entry : 0/0
 13481 ;;		On exit  : 0/0
 13482 ;;		Unchanged: 0/0
 13483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13488 ;;Total ram usage:        0 bytes
 13489 ;; Hardware stack levels used:    1
 13490 ;; Hardware stack levels required when called:    2
 13491 ;; This function calls:
 13492 ;;		_TMR4_CallBack
 13493 ;; This function is called by:
 13494 ;;		_INTERRUPT_InterruptManager
 13495 ;; This function uses a non-reentrant model
 13496 ;;
 13497                           
 13498                           
 13499                           ;psect for function _TMR4_ISR
 13500  1644                     _TMR4_ISR:
 13501  1644                     i1l3387:	
 13502                           ;incstack = 0
 13503                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 13504                           
 13505                           
 13506                           ;mcc_generated_files/tmr4.c: 171:     PIR2bits.TMR4IF = 0;
 13507  1644  0020               	movlb	0	; select bank0
 13508  1645  1091               	bcf	17,1	;volatile
 13509  1646                     i1l3389:
 13510                           
 13511                           ;mcc_generated_files/tmr4.c: 175:     TMR4_CallBack();
 13512  1646  3196  2687  3196   	fcall	_TMR4_CallBack
 13513  1649                     i1l499:
 13514  1649  0008               	return
 13515  164A                     __end_of_TMR4_ISR:
 13516                           
 13517                           	psect	text47
 13518  1687                     __ptext47:	
 13519 ;; *************** function _TMR4_CallBack *****************
 13520 ;; Defined at:
 13521 ;;		line 178 in file "mcc_generated_files/tmr4.c"
 13522 ;; Parameters:    Size  Location     Type
 13523 ;;		None
 13524 ;; Auto vars:     Size  Location     Type
 13525 ;;		None
 13526 ;; Return value:  Size  Location     Type
 13527 ;;                  1    wreg      void 
 13528 ;; Registers used:
 13529 ;;		wreg, status,2, status,0, pclath, cstack
 13530 ;; Tracked objects:
 13531 ;;		On entry : 0/0
 13532 ;;		On exit  : 0/0
 13533 ;;		Unchanged: 0/0
 13534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13539 ;;Total ram usage:        0 bytes
 13540 ;; Hardware stack levels used:    1
 13541 ;; Hardware stack levels required when called:    1
 13542 ;; This function calls:
 13543 ;;		Absolute function
 13544 ;;		_TMR4_DefaultInterruptHandler
 13545 ;; This function is called by:
 13546 ;;		_TMR4_ISR
 13547 ;; This function uses a non-reentrant model
 13548 ;;
 13549                           
 13550                           
 13551                           ;psect for function _TMR4_CallBack
 13552  1687                     _TMR4_CallBack:
 13553  1687                     i1l2957:	
 13554                           ;incstack = 0
 13555                           ; Regs used in _TMR4_CallBack: [wreg+status,2+status,0+pclath+cstack]
 13556                           
 13557                           
 13558                           ;mcc_generated_files/tmr4.c: 182:     if(TMR4_InterruptHandler)
 13559  1687  0021               	movlb	1	; select bank1
 13560  1688  0859               	movf	_TMR4_InterruptHandler^(0+128),w
 13561  1689  045A               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
 13562  168A  1903               	btfsc	3,2
 13563  168B  2E8D               	goto	u238_21
 13564  168C  2E8E               	goto	u238_20
 13565  168D                     u238_21:
 13566  168D  2E93               	goto	i1l503
 13567  168E                     u238_20:
 13568  168E                     i1l2959:
 13569                           
 13570                           ;mcc_generated_files/tmr4.c: 183:     {;mcc_generated_files/tmr4.c: 184:         TMR4_In
      +                          terruptHandler();
 13571  168E  085A               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
 13572  168F  008A               	movwf	10
 13573  1690  0859               	movf	_TMR4_InterruptHandler^(0+128),w
 13574  1691  000A               	callw
 13575  1692  3196               	pagesel	$
 13576  1693                     i1l503:
 13577  1693  0008               	return
 13578  1694                     __end_of_TMR4_CallBack:
 13579                           
 13580                           	psect	text48
 13581  0003                     __ptext48:	
 13582 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 13583 ;; Defined at:
 13584 ;;		line 192 in file "mcc_generated_files/tmr4.c"
 13585 ;; Parameters:    Size  Location     Type
 13586 ;;		None
 13587 ;; Auto vars:     Size  Location     Type
 13588 ;;		None
 13589 ;; Return value:  Size  Location     Type
 13590 ;;                  1    wreg      void 
 13591 ;; Registers used:
 13592 ;;		None
 13593 ;; Tracked objects:
 13594 ;;		On entry : 0/0
 13595 ;;		On exit  : 0/0
 13596 ;;		Unchanged: 0/0
 13597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13602 ;;Total ram usage:        0 bytes
 13603 ;; Hardware stack levels used:    1
 13604 ;; This function calls:
 13605 ;;		Nothing
 13606 ;; This function is called by:
 13607 ;;		_TMR4_Initialize
 13608 ;;		_TMR4_CallBack
 13609 ;; This function uses a non-reentrant model
 13610 ;;
 13611                           
 13612                           
 13613                           ;psect for function _TMR4_DefaultInterruptHandler
 13614  0003                     _TMR4_DefaultInterruptHandler:
 13615  0003                     i1l509:	
 13616                           ;incstack = 0
 13617                           ; Regs used in _TMR4_DefaultInterruptHandler: []
 13618                           
 13619  0003  0008               	return
 13620  0004                     __end_of_TMR4_DefaultInterruptHandler:
 13621  007E                     btemp	set	126	;btemp
 13622  007E                     int$flags	set	126
 13623  007E                     wtemp0	set	126
 13624                           
 13625                           	psect	config
 13626                           
 13627                           ;Config register CONFIG1 @ 0x8007
 13628                           ;	Oscillator Selection Bits
 13629                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 13630                           ;	Power-up Timer Enable
 13631                           ;	PWRTE = OFF, PWRT disabled
 13632                           ;	MCLR Pin Function Select
 13633                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 13634                           ;	Flash Program Memory Code Protection
 13635                           ;	CP = OFF, Program memory code protection is disabled
 13636                           ;	Brown-out Reset Enable
 13637                           ;	BOREN = ON, Brown-out Reset enabled
 13638                           ;	Clock Out Enable
 13639                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 13640                           ;	Internal/External Switch Over
 13641                           ;	IESO = ON, Internal External Switch Over mode is enabled
 13642                           ;	Fail-Safe Clock Monitor Enable
 13643                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13644  8007                     	org	32775
 13645  8007  3FFC               	dw	16380
 13646                           
 13647                           ;Config register CONFIG2 @ 0x8008
 13648                           ;	Flash Memory Self-Write Protection
 13649                           ;	WRT = OFF, Write protection off
 13650                           ;	Peripheral Pin Select one-way control
 13651                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 13652                           ;	Zero Cross Detect Disable Bit
 13653                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 13654                           ;	PLL Enable Bit
 13655                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
 13656                           ;	Stack Overflow/Underflow Reset Enable
 13657                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 13658                           ;	Brown-out Reset Voltage Selection
 13659                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 13660                           ;	Low-Power Brown Out Reset
 13661                           ;	LPBOR = OFF, Low-Power BOR is disabled
 13662                           ;	Low-Voltage Programming Enable
 13663                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 13664  8008                     	org	32776
 13665  8008  1EFF               	dw	7935
 13666                           
 13667                           ;Config register CONFIG3 @ 0x8009
 13668                           ;	WDT Period Select
 13669                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
 13670                           ;	Watchdog Timer Enable
 13671                           ;	WDTE = OFF, WDT disabled
 13672                           ;	WDT Window Select
 13673                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
 13674                           ;	WDT Input Clock Selector
 13675                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
 13676  8009                     	org	32777
 13677  8009  3F9F               	dw	16287

Data Sizes:
    Strings     54
    Constant    0
    Data        187
    BSS         72
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     37      78
    BANK2            80      0      68
    BANK3            80      0      67
    BANK4            80      0      51
    BANK5            80      0      32
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1431_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_3(CODE[24]), STR_2(CODE[21]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_3(CODE[24]), STR_2(CODE[21]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_3(CODE[24]), STR_2(CODE[21]), STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR4_DefaultInterruptHandler(), 

    stuffIntToCharsBuf@buf	PTR unsigned char  size(1) Largest target is 17
		 -> text10(BANK1[17]), 

    reportfault@s	PTR unsigned char  size(1) Largest target is 17
		 -> faultStr(BANK2[17]), 

    printByteValue@s	PTR unsigned char  size(1) Largest target is 17
		 -> text7(BANK2[17]), 


Critical Paths under _main in COMMON

    _main->_printByteValue
    _main->_reportfault
    _stuffIntToCharsBuf->_printf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _spi_read_32bits->_spi_transfer
    _setMotorSpeed->_PWM3_LoadDutyValue
    _setMotorSpeed->_PWM4_LoadDutyValue
    _reportfault->_command
    _reportfault->_dataCMD
    _printByteValue->_command
    _printByteValue->_dataCMD
    _convert14BitToFloat->___xxtofl
    ___fldiv->___xxtofl
    _SYSTEM_Initialize->_initDisplay
    _initDisplay->_initOLED
    _initOLED->_command
    _initOLED->_dataCMD
    _dataCMD->_spi_write
    _command->_spi_write
    _TMR4_Initialize->_TMR4_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _stuffIntToCharsBuf->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _convert14BitToFloat->___fldiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_stuffIntToCharsBuf
    _stuffIntToCharsBuf->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   17576
                                             21 BANK1     16    16      0
                  _ADC_GetConversion
                  _SYSTEM_Initialize
                            ___fltol
                            _command
                _convert14BitToFloat
                            _dataCMD
                     _printByteValue
                        _reportfault
                      _setMotorSpeed
                    _spi_read_32bits
                 _stuffIntToCharsBuf
 ---------------------------------------------------------------------------------
 (1) _stuffIntToCharsBuf                                  18    13      5    9193
                                              3 BANK1     18    13      5
                            ___awdiv
                            ___fltol (ARG)
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10    5956
                                             13 COMMON     1     1      0
                                             70 BANK0     10     0     10
                                              0 BANK1      3     3      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3    5674
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2    5346
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    4045
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2422
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1083
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     768
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _spi_read_32bits                                     19    15      4     137
                                              1 COMMON    12     8      4
                                              0 BANK0      7     7      0
                       _spi_transfer
 ---------------------------------------------------------------------------------
 (2) _spi_transfer                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setMotorSpeed                                        4     0      4     632
                                              4 COMMON     4     0      4
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM4_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _reportfault                                          5     4      1     837
                                              9 COMMON     5     4      1
                            _command
                            _dataCMD
 ---------------------------------------------------------------------------------
 (1) _printByteValue                                      10     7      3    1846
                                              9 COMMON     5     2      3
                                              0 BANK0      5     5      0
                            _command
                            _dataCMD
 ---------------------------------------------------------------------------------
 (1) _convert14BitToFloat                                 12     8      4    1883
                                             26 BANK0     12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1377
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                     _SPI_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                        _initDisplay
 ---------------------------------------------------------------------------------
 (2) _initDisplay                                          3     3      0    1256
                                             11 COMMON     3     3      0
                            _command
                            _dataCMD
                           _initOLED
 ---------------------------------------------------------------------------------
 (3) _initOLED                                             2     2      0     594
                                              9 COMMON     2     2      0
                            _command
                            _dataCMD
 ---------------------------------------------------------------------------------
 (2) _dataCMD                                              7     7      0     297
                                              2 COMMON     7     7      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (2) _command                                              7     7      0     297
                                              2 COMMON     7     7      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (3) _spi_write                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0      98
           _TMR4_SetInterruptHandler
                         _TMR4_Start
 ---------------------------------------------------------------------------------
 (3) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (3) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0       0
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR4_ISR                                            0     0      0       0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (12) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _SPI_Initialize
     _TMR2_Initialize
       _TMR2_Start
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
       _TMR4_Start
     _initDisplay
       _command
         _spi_write
       _dataCMD
         _spi_write
       _initOLED
         _command
           _spi_write
         _dataCMD
           _spi_write
   ___fltol
   _command
     _spi_write
   _convert14BitToFloat
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
   _dataCMD
     _spi_write
   _printByteValue
     _command
       _spi_write
     _dataCMD
       _spi_write
   _reportfault
     _command
       _spi_write
     _dataCMD
       _spi_write
   _setMotorSpeed
     _PWM3_LoadDutyValue
     _PWM4_LoadDutyValue
   _spi_read_32bits
     _spi_transfer
   _stuffIntToCharsBuf
     ___awdiv
     ___fltol (ARG)
     ___wmul (ARG)
     _printf (ARG)
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch

 _INTERRUPT_InterruptManager (ROOT)
   _TMR4_ISR
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     25      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      44       9       85.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      43      11       83.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      33      13       63.7%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      20      15       40.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     186      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     186      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Aug 27 11:04:10 2025

                          _SPI_Initialize 164A                              ___fldiv@aexp 0039  
                            ___fldiv@bexp 0038                              ___fldiv@sign 0031  
             __end_of_convert14BitToFloat 09EE                                        _BF 10A0  
                                      l25 176F                                        l28 1643  
                                      l37 164F                                        l94 09A4  
                            ___awdiv@sign 0076                       ___wmul@multiplicand 0072  
                 printByteValue@upperBits 0021                                       l114 166A  
                                     l132 1753                                       l143 1673  
                                     l160 16EB                                       l129 174B  
                                     l146 16D5                                       l411 17FF  
                                     l157 167C                                       l421 0CC3  
                                     l341 0D68                                       l406 0AA1  
                                     l351 178B                                       l506 1655  
                                     l418 0AFC                                       l346 0842  
                                     l460 1704                                       l189 16A0  
                                     l365 0723                                       l198 163B  
                                     l358 09ED                                       l382 1681  
                                     l392 0B4E                                       l385 1686  
                                     l393 0B59                                       l705 0EED  
                                     l706 0EFE                                       l396 16A5  
                                     l469 163E                                       l399 16AE  
                                     l592 1796                                       l745 0BB8  
                                     l594 17AA                                       l692 0FEE  
                                     l693 0FFF                                       l951 047D  
                                     l793 0C17                                       l786 0C2C  
                                     l970 044B                                       l971 0465  
                                     l796 0C2C                                       l973 0474  
                                     l965 03FF                                       l949 0321  
                                     _GIE 005F                                       _PR2 001B  
                                     _PR4 0414                                       _abs 1705  
                                     _pad 09EE                           _TMR2_Initialize 1694  
                         _PWM4_Initialize 1674                                       wreg 0009  
                        spi_write@spiByte 0071                               command@bit0 0074  
                            ___fltol@exp1 007A                                      l1120 07FE  
                                    l1033 0D8B                                      l1113 05ED  
                                    l1035 0E14                                      l1131 171E  
                                    ?_abs 0073                                      l1046 0DE0  
                                    l1134 171E                                      l1047 0DEC  
                                    l1039 0DC6                                      l1127 0873  
                                    l1055 0814                                      l3001 0B8B  
                                    l1146 0918                                      l1154 17D3  
                                    l1082 0A0A                                      l1090 04C7  
                                    l3003 0B9A                                      l3011 0BAA  
                                    l1163 1738                                      l1091 04D0  
                                    l3101 03B8                                      l3021 02D0  
                                    l3013 0BAF                                      l3005 0B9E  
                                    l1157 07FF                                      l1085 0A2C  
                                    l1086 0A3A                                      l3111 03D3  
                                    l3103 03BE                                      l3031 02E3  
                                    l3023 02D4                                      l3015 0BB4  
                                    l3007 0B9F                                      l1087 0A46  
                                    l1095 04ED                                      l1096 0505  
                                    l3121 03E4                                      l3113 03D4  
                                    l3105 03C6                                      l3041 02FB  
                                    l3033 02EB                                      l3025 02D8  
                                    l3009 0BA4                                      l3211 1766  
                                    l3203 1754                                      l3131 0409  
                                    l3123 03E8                                      l3115 03DB  
                                    l3107 03C8                                      l3051 030E  
                                    l3043 02FF                                      l3035 02EC  
                                    l3027 02D9                                      l3019 02CA  
                                    l1099 0576                                      l3221 1745  
                                    l3213 1769                                      l3205 175D  
                                    l3141 043E                                      l3133 0411  
                                    l3125 03FC                                      l3109 03CF  
                                    l3117 03DF                                      l3061 0335  
                                    l3053 0316                                      l3045 0303  
                                    l3029 02DE                                      l3037 02EE  
                                    l3301 0B3A                                      l2501 0FCB  
                                    l3223 1749                                      l3215 176C  
                                    l3207 1760                                      l3151 046E  
                                    l3143 0459                                      l3135 0415  
                                    l3119 03E3                                      l3063 0339  
                                    l3055 0317                                      l3047 0304  
                                    l3039 02F6                                      l3311 0816  
                                    l3303 0B3C                                      l2503 0FD0  
                                    l2511 0E41                                      l3231 05FE  
                                    l3225 174F                                      l3217 173A  
                                    l3209 1763                                      l3401 0BE1  
                                    l3153 0470                                      l3145 045C  
                                    l3137 042D                                      l3129 0404  
                                    l3081 0378                                      l3073 0350  
                                    l3049 0309                                      l3057 0319  
                                    l3161 0D6F                                      l3321 0826  
                                    l3313 081A                                      l3305 0B41  
                                    l2521 0E82                                      l2513 0E4B  
                                    l2505 0E15                                      l2441 08E9  
                                    l2601 05AC                                      l3241 0618  
                                    l3233 0601                                      l3219 1744  
                                    l3403 0BE9                                      l3147 0464  
                                    l3139 0431                                      l3091 0392  
                                    l3083 037A                                      l3075 0360  
                                    l3059 0329                                      l3067 0342  
                                    l3171 0D9C                                      l3163 0D73  
                                    l3331 0CD6                                      l3323 0831  
                                    l3315 0824                                      l3307 0B50  
                                    l2523 0E86                                      l2531 0ECA  
                                    l2515 0E6A                                      l2507 0E16  
                                    l2443 08F3                                      l2435 08DA  
                                    l2451 17B0                                      l2611 05C8  
                                    l2603 05B1                                      l3251 066C  
                                    l3243 0628                                      l3235 0605  
                                    l2621 0A48                                      l2701 0AF6  
                                    l3421 0C0E                                      l3413 0BF7  
                                    l3405 0BEB                                      l3149 046A  
                                    l3085 037F                                      l3093 0399  
                                    l3077 0368                                      l3069 0347  
                                    l3181 0DBF                                      l3173 0DA1  
                                    l3165 0D83                                      l3341 0D0A  
                                    l3333 0CDC                                      l3325 0835  
                                    l2533 0ECF                                      l2525 0E8A  
                                    l2517 0E77                                      l2509 0E20  
                                    l2445 0910                                      l2437 08DF  
                                    l2453 17BE                                      l2461 1729  
                                    l2541 0A03                                      l2613 05CD  
                                    l2605 05B8                                      l3261 06CB  
                                    l3253 067E                                      l3245 063A  
                                    l3237 0609                                      l3229 05EE  
                                    l3501 0144                                      l2623 0A4A  
                                    l2703 0AFA                                      l3423 0C1C  
                                    l3407 0BEF                                      l3415 0C07  
                                    l3095 03AB                                      l3087 038D  
                                    l3079 0370                                      l3191 0DEE  
                                    l3183 0DCD                                      l3175 0DAC  
                                    l3167 0D93                                      l3159 0D6A  
                                    l3343 0D18                                      l3335 0CE9  
                                    l3327 0CC6                                      l2471 0F0A  
                                    l2527 0EAC                                      l2519 0E7A  
                                    l2439 08E4                                      l2455 17C3  
                                    l2463 1732                                      l2551 0A31  
                                    l2543 0A08                                      l2535 09F0  
                                    l2615 05D1                                      l2607 05BD  
                                    l2711 0744                                      l3271 0702  
                                    l3263 06DA                                      l3255 0686  
                                    l3247 064A                                      l3239 0613  
                                    l3511 0183                                      l3503 014D  
                                    l3431 0074                                      l2561 16A9  
                                    l2641 0A5E                                      l2625 0A4E  
                                    l2801 0C97                                      l3425 0C21  
                                    l3097 03AC                                      l3089 0391  
                                    l3193 0E02                                      l3185 0DD6  
                                    l3177 0DB3                                      l3361 0D49  
                                    l3353 0D27                                      l3345 0D1C  
                                    l3337 0CF7                                      l3329 0CCB  
                                    l3281 177D                                      l2481 0F62  
                                    l2473 0F2B                                      l2529 0EBC  
                                    l2449 17AD                                      l2457 1720  
                                    l2545 0A0D                                      l2537 09F5  
                                    l2609 05C2                                      l2617 05DA  
                                    l2721 078C                                      l2713 0748  
                                    l2705 0726                                      l3273 070F  
                                    l3265 06E9                                      l3257 06AE  
                                    l3249 065C                                      l3521 019D  
                                    l3513 0190                                      l3505 0152  
                                    l3441 0084                                      l3433 0077  
                                    l2651 0A7E                                      l2643 0A63  
                                    l2635 0A51                                      l2627 0A4E  
                                    l2811 0CAB                                      l2803 0C9B  
                                    l3099 03B4                                      l3195 0E07  
                                    l3187 0DDA                                      l3179 0DB7  
                                    l3371 0D5B                                      l3355 0D33  
                                    l3347 0D24                                      l3339 0CFD  
                                    l3283 1784                                      l2491 0F82  
                                    l2483 0F6F                                      l2475 0F35  
                                    l2467 0EFF                                      l2555 1705  
                                    l2459 1725                                      l2547 0A19  
                                    l2539 09FE                                      l2571 04CC  
                                    l2563 0480                                      l2731 07CA  
                                    l2715 075A                                      l2707 0737  
                                    l3275 0715                                      l3267 06EF  
                                    l3259 06BD                                      l3531 01D2  
                                    l3523 01A2                                      l3507 015F  
                                    l3443 0084                                      l3435 0084  
                                    l2901 1677                                      l2821 163C  
                                    l2661 0A9F                                      l2653 0A7F  
                                    l2645 0A68                                      l2637 0A56  
                                    l2629 0A4F                                      l2813 0CAF  
                                    l2805 0C9F                                      l3197 0E0B  
                                    l3189 0DE4                                      l3381 09BB  
                                    l3373 09A5                                      l3357 0D38  
                                    l3277 1770                                      l3285 0AFD  
                                    l2493 0F8A                                      l2485 0F72  
                                    l2477 0F54                                      l2469 0F00  
                                    l2557 1712                                      l2549 0A1E  
                                    l2581 0500                                      l2573 04DF  
                                    l2565 0490                                      l2725 07A6  
                                    l2717 076B                                      l2709 073F  
                                    l2741 07DB                                      l3269 06FC  
                                    l3541 01F5                                      l3533 01D7  
                                    l3525 01AF                                      l3509 0177  
                                    l3461 00B9                                      l3453 0094  
                                    l3445 0088                                      l3437 0084  
                                    l3429 0067                                      l2903 1678  
                                    l2911 16F2                                      l2559 16A2  
                                    l2655 0A83                                      l2647 0A6F  
                                    l2639 0A5A                                      l2671 0AAA  
                                    l2663 0AA3                                      l2815 0CB3  
                                    l2807 0CA3                                      l2751 0C2D  
                                    l3391 0BB9                                      l3199 0E0C  
                                    l3383 09E5                                      l3375 09AC  
                                    l3367 0D4C                                      l3359 0D45  
                                    l3279 1776                                      l3295 0B0B  
                                    l3287 0B06                                      l2495 0FAC  
                                    l2487 0F7A                                      l2479 0F58  
                                    l2591 0545                                      l2583 050A  
                                    l2575 04E5                                      l2567 04A3  
                                    l2743 07F4                                      l2727 07B7  
                                    l2735 07D0                                      l2719 0773  
                                    l2831 086B                                      l2823 0845  
                                    l3551 0227                                      l3543 01FA  
                                    l3535 01DC                                      l3527 01BB  
                                    l3519 0193                                      l3471 00F0  
                                    l3463 00C6                                      l3455 009E  
                                    l3447 0091                                      l3439 0084  
                                    l2841 0966                                      l2905 1679  
                                    l2921 1701                                      l2913 16F5  
                                    l2657 0A90                                      l2649 0A7A  
                                    l2681 0AB5                                      l2665 0AA5  
                                    l2817 0CB7                                      l2809 0CA7  
                                    l2761 0C47                                      l2753 0C2F  
                                    l3393 0BC4                                      l3377 09B0  
                                    l3369 0D56                                      l3297 0B13  
                                    l3289 0B08                                      l2497 0FBC  
                                    l2489 0F7E                                      l2593 0549  
                                    l2585 050D                                      l2577 04F5  
                                    l2569 04A9                                      l2737 07D8  
                                    l2729 07BF                                      l2825 0849  
                                    l3561 0299                                      l3553 022C  
                                    l3545 0205                                      l3537 01E1  
                                    l3529 01CE                                      l3481 011E  
                                    l3473 00F2                                      l3465 00DC  
                                    l3457 00A3                                      l2851 0973  
                                    l2843 0968                                      l2835 095D  
                                    l2923 166B                                      l2931 1694  
                                    l2819 1650                                      l2915 16F6  
                                    l2907 16EC                                      l2659 0A9B  
                                    l2691 0AD5                                      l2683 0AB9  
                                    l2667 0AA9                                      l2771 0C5B  
                                    l2763 0C4B                                      l2755 0C3B  
                                    l3379 09B5                                      l3299 0B15  
                                    l2499 0FBD                                      l2595 0584  
                                    l2587 0512                                      l2579 04FB  
                                    l2827 084D                                      l3571 02A9  
                                    l3563 029D                                      l3555 0244  
                                    l3547 020A                                      l3539 01E9  
                                    l3491 0130                                      l3475 0101  
                                    l3467 00E5                                      l3459 00B0  
                                    l2861 099E                                      l2853 0975  
                                    l2845 096C                                      l2837 0961  
                                    l2925 166E                                      l2749 1639  
                                    l2933 1699                                      l2917 16F8  
                                    l2909 16F1                                      l2693 0AD9  
                                    l2685 0ABE                                      l2677 0AAC  
                                    l2669 0AA9                                      l2781 0C6F  
                                    l2773 0C5F                                      l2765 0C4F  
                                    l2757 0C3F                                      l3397 0BCD  
                                    l2941 16C0                                      l2597 0591  
                                    l2589 0541                                      l2829 0861  
                                    l3573 02AE                                      l3557 0267  
                                    l3549 0216                                      l3493 013D  
                                    l3477 0111                                      l3469 00E7  
                                    ?_pad 0024                                      l2863 099F  
                                    l2855 097B                                      l2847 096E  
                                    l2839 0964                                      l2927 166F  
                                    l2871 164C                                      l2935 169B  
                                    l2919 16FA                                      l2695 0ADA  
                                    l2687 0AC3                                      l2679 0AB1  
                                    l2791 0C83                                      l2783 0C73  
                                    l2775 0C63                                      l2767 0C53  
                                    l2759 0C43                                      l3399 0BE0  
                                    l2943 16D6                                      l2951 167E  
                                    l2599 059E                                      l3575 02BB  
                                    l3559 0282                                      l3495 0141  
                                    l3487 0121                                      l3479 0115  
                                    l2865 163F                                      l2857 097F  
                                    l2849 0971                                      l2929 1670  
                                    l2873 164E                                      l2937 169C  
                                    l2697 0ADE                                      l2689 0ACA  
                                    l2793 0C87                                      l2785 0C77  
                                    l2777 0C67                                      l2769 0C57  
                                    l2953 1685                                      l2961 178C  
                                    l2945 0802                                      l3569 02A0  
                                    l3489 012B                                      l2891 1662  
                                    l2867 1642                                      l2859 0985  
                                    l2939 169D                                      l2699 0AEB  
                                    l2795 0C8B                                      l2787 0C7B  
                                    l2779 0C6B                                      l2875 17D4  
                                    l2971 17A6                                      l2963 178E  
                                    l2947 0807                                      l2893 1667  
                                    l2869 164A                                      l2797 0C8F  
                                    l2789 0C7F                                      l2885 17E5  
                                    l2877 17DB                                      l2981 0B64  
                                    l2965 1792                                      l2895 1668  
                                    l2799 0C93                                      l2887 17EE  
                                    l2879 17E3                                      l2991 0B75  
                                    l2983 0B66                                      l2975 0B5A  
                                    l2967 179B                                      l2897 1669  
                                    l2889 17F2                                      l2993 0B7B  
                                    l2985 0B6A                                      l2977 0B5B  
                                    l2969 17A0                                      l2899 1674  
                                    l2995 0B7E                                      l2987 0B6F  
                                    l2979 0B5F                                      l2997 0B83  
                                    l2989 0B73                                      l2999 0B87  
                                    STR_1 182D                                      STR_2 1818  
                                    STR_3 1800                                      u2000 0A31  
                                    u2001 0A30                                      u2010 1712  
                                    u2011 1711                                      u2020 16A9  
                                    u2100 0500                                      u2021 16A8  
                                    u2101 04FF                                      u2110 0584  
                                    u2030 049B                                      u2015 170E  
                                    u2111 0583                                      u2031 0499  
                                    u2200 0A6F                                      u2120 0591  
                                    u2040 049C                                      u3000 0715  
                                    u2201 0A6E                                      u2121 0590  
                                    u3001 0714                                      u3010 1776  
                                    u2130 059E                                      u2050 04A9  
                                    u3011 1775                                      u2131 059D  
                                    u2115 0580                                      u2051 04A8  
                                    u2220 0A90                                      u3100 0D68  
                                    u3020 1784                                      u2140 05AC  
                                    u2300 075A                                      u2221 0A8F  
                                    u3101 0D67                                      u3021 1783  
                                    u2141 05AB                                      u2301 0759  
                                    _LATA 010C                                      u3110 09B0  
                                    u3030 0B28                                      u2150 05B1  
                                    u2070 04CC                                      u2310 076B  
                                    _LATB 010D                                      u2215 0A72  
                                    u3111 09AF                                      u2151 05B0  
                                    u2135 059A                                      u2071 04CB  
                                    u2311 076A                                      _LATC 010E  
                                    u2240 0ABE                                      u3200 0C1C  
                                    u3120 0BC4                                      u3040 0B4E  
                                    u2160 05B8                                      u2080 04DF  
                                    u2320 07B7                                      u2225 0A8C  
                                    u2241 0ABD                                      u3201 0C1B  
                                    u3121 0BC3                                      u3105 0D64  
                                    u3041 0B4D                                      u2161 05B7  
                                    u2145 05A8                                      u2081 04DE  
                                    u2321 07B6                                      u2250 0ACA  
                                    u3210 0C21                                      u3130 0BDA  
                                    u3050 0842                                      u2170 05BD  
                                    u2090 04FB                                      u2330 086B  
                                    u2235 0A93                                      u2251 0AC9  
                                    u3211 0C20                                      u3051 0841  
                                    u3035 0B24                                      u2171 05BC  
                                    u2091 04FA                                      u2331 086A  
                                    u2340 17FF                                      u3140 0BEF  
                                    u2420 17A6                                      u1700 08DF  
                                    u2180 05C8                                      u3300 01C8  
                                    u3220 00B0                                      u2341 17FE  
                                    u3141 0BEE                                      u3045 0B4A  
                                    u2421 17A5                                      u2405 1797  
                                    u1701 08DE                                      u2181 05C7  
                                    u2085 04DB                                      u3221 00AF  
                                    u2190 0A63                                      u2270 0AEB  
                                    u3150 0BF6                                      u3070 0CDC  
                                    u2510 0BAA                                      u2430 0B5F  
                                    u1710 08E4                                      u3310 01E1  
                                    u2191 0A62                                      u2271 0AEA  
                                    u3151 0BF5                                      u3135 0BD6  
                                    u3071 0CDB                                      u3055 083E  
                                    u2511 0BA9                                      u2431 0B5E  
                                    u2415 179C                                      u1711 08E3  
                                    u3311 01E0                                      u2600 0347  
                                    u3080 0CFD                                      u2520 0BAF  
                                    u2440 0B6A                                      u1800 0F5F  
                                    u1720 08F3                                      u3320 02BB  
                                    u2265 0ACD                                      u2345 17FB  
                                    u2601 0346                                      u3081 0CFC  
                                    u3065 0CCE                                      u2521 0BAE  
                                    u2505 0BA0                                      u2441 0B69  
                                    u1721 08F2                                      u3321 02BA  
                                    u3305 01C4                                      u3225 00AC  
                                    u3170 0C06                                      u2610 037F  
                                    u2530 02D8                                      u3090 0D45  
                                    u2370 1685                                      u2450 0B7B  
                                    u1810 0F6F                                      u1730 0910  
                                    u2290 0737                                      u3250 00E5  
                                    _T2PR 001B                                      u2275 0AE7  
                                    u3171 0C05                                      u2611 037E  
                                    u2531 02D7                                      u3091 0D44  
                                    u2355 16CF                                      u2371 1684  
                                    u2451 0B7A                                      u1811 0F6E  
                                    u1731 090F                                      u2291 0736  
                                    u3251 00E4                                      u3235 00BE  
                                    u3180 0C0D                                      u2700 03D3  
                                    u2540 02DE                                      u1820 0F82  
                                    u1740 17D3                                      u3260 00F0  
                                    u2285 0AEE                                      u3181 0C0C  
                                    u3165 0BF8                                      u2701 03D2  
                                    u2541 02DD                                      u2365 16E5  
                                    u1821 0F81                                      u1741 17D2  
                                    u3325 02B7                                      u3261 00EF  
                                    u3245 00D4                                      u2550 02E3  
                                    u2470 0B8B                                      u2390 1792  
                                    u1830 0FAC                                      u1910 0E77  
                                    u1750 1732                                      u3270 013D  
                                    u2551 02E2                                      u3095 0D41  
                                    u2471 0B8A                                      u2391 1791  
                                    u1831 0FAB                                      u1911 0E76  
                                    u1735 090C                                      u1751 1731  
                                    u3271 013C                                      u3407 008C  
                                    u2800 0459                                      u2720 03E3  
                                    u2640 0391                                      u2560 0303  
                                    u1840 0FCB                                      u1760 0F0A  
                                    u1920 0E8A                                      u3280 015F  
                                    u2801 0458                                      u2721 03E2  
                                    u2641 0390                                      u2625 0380  
                                    u2561 0302                                      u2465 0B7F  
                                    u1841 0FCA                                      u1761 0F09  
                                    u1921 0E89                                      u3281 015E  
                                    u3417 0119                                      u2810 046E  
                                    u2730 03E8                                      u2570 0309  
                                    u2490 0B9A                                      u1850 0FD0  
                                    u1930 0EAC                                      u3290 01AF  
                                    _T4PR 0414                                      u3507 0CBC  
                                    u3195 0C0F                                      u2811 046D  
                                    u2731 03E7                                      u2715 03D5  
                                    u2635 0387                                      u2571 0308  
                                    u2491 0B99                                      u1851 0FCF  
                                    u1835 0FA8                                      u1931 0EAB  
                                    u3291 01AE                                      u3427 017D  
                                    u3275 0139                                      u2740 03FC  
                                    u2660 03AB                                      u2580 030E  
                                    u2900 0DDA                                      u2820 0D6F  
                                    u1780 0F35                                      u1940 0ECA  
                                    u3517 1746                                      u2805 0455  
                                    u2741 03FB                                      u2661 03AA  
                                    u2581 030D                                      u2901 0DD9  
                                    u2821 0D6E                                      u2485 0B8C  
                                    u1781 0F34                                      u1941 0EC9  
                                    u3437 018B                                      u3285 015B  
                                    u2750 0403                                      u2670 03BE  
                                    u2590 0329                                      u2910 0DE0  
                                    u2830 0D73                                      u1950 0ECF  
                                    u1870 0E20                                      u2751 0402  
                                    u2671 03BD                                      u2655 0393  
                                    u2591 0328                                      u2911 0DDF  
                                    u2831 0D72                                      u2495 0B96  
                                    u1951 0ECE                                      u1935 0EA8  
                                    u1871 0E1F                                      u3447 01EF  
                                    u3295 01AB                                      u2760 0409  
                                    u2680 03C6                                      u2920 0DE4  
                                    u2840 0D93                                      u2761 0408  
                                    u2681 03C5                                      u2665 03A7  
                                    u2921 0DE3                                      u2841 0D92  
                                    u3457 023E                                      u2770 0415  
                                    u2930 0DF8                                      u1890 0E4B  
                                    u1970 09F5                                      u2771 0414  
                                    u1891 0E4A                                      u1971 09F4  
                                    u3467 02C1                                      u3387 006D  
                                    u2780 0423                                      u2940 0E07  
                                    u2860 0DB2                                      u1980 0A03  
                                    u2941 0E06                                      u2861 0DB1  
                                    u3477 0D1F                                      u1981 0A02  
                                    u3397 007D                                      u2790 043E  
                                    u2950 0E0B                                      u1990 0A2C  
                                    u3487 17DE                                      u2791 043D  
                                    u2695 03C9                                      u2951 0E0A  
                                    u2935 0DF4                                      u2855 0DA6  
                                    u1991 0A2B                                      u2960 174F  
                                    u2880 0DCC                                      u2961 174E  
                                    u3497 0C34                                      u2785 041F  
                                    u2881 0DCB                                      u2970 0605  
                                    u2795 043A                                      u2875 0DC0  
                                    u1995 0A28                                      u2971 0604  
                                    u2980 06EF                                      u2981 06EE  
                                    u2990 0702                                      u2895 0DD0  
                                    u2991 0701                                      _TMR2 001A  
                                    _TMR4 0413                                      _WPUA 020C  
                                    _WPUB 020D                                      _WPUC 020E  
                             main@lower16 00BD                                      abs@a 0073  
                                    _dbuf 02A0                                      _main 0067  
                                    _dtoa 047E                                      _prec 00D5  
                                    _nout 00D1                                      pad@i 0027  
                                    pad@p 0025                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      pad@w 0029  
                                    btemp 007E                                      start 0019  
                             main@upper16 00BB                           ___fldiv@new_exp 0032  
                  __end_of_SPI_Initialize 1650                              ?_initDisplay 0070  
              ??_TMR4_SetInterruptHandler 0072               convert14BitToFloat@raw14bit 003A  
                                   ??_abs 0075                                     ??_pad 007C  
          __size_of_OSCILLATOR_Initialize 0005             __end_of_OSCILLATOR_Initialize 1644  
                           ___fltol@sign1 0079                           __end_of___aodiv 1000  
                                   ?_main 0070                                     ?_dtoa 0030  
                         __end_of___aomod 0EFF                           __end_of___fldiv 047E  
                         __end_of___awdiv 0BB9                           __end_of___fltol 0C2D  
                         ___awdiv@divisor 0070                                     _T2CON 001C  
                                   _LATB7 086F                                     _LATC6 0876  
                                   _LATC7 0877                                     _T4CON 0415  
                                   _T2HLT 001D                                     _T4HLT 0416  
                                   _T2PPS 0E18                                     _T2TMR 001A  
                                   _T2RST 001F                                     _T4PPS 0E1B  
                                   i1l503 1693                                     i1l524 0017  
                                   _T4TMR 0413                                     i1l509 0003  
                                   _T4RST 0418                                     i1l499 1649  
                         ___awdiv@counter 0075                           __end_of_dataCMD 0AFD  
                            vfpfcnvrt@fmt 004E                        _PWM4_LoadDutyValue 16D6  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                           _TMR4_Initialize 16EC  
                         __end_of_command 0AA2                          __end_of_TMR4_ISR 164A  
                                   _flags 00D7                               ?_TMR2_Start 0070  
                                   _dummy 00DC                                     _fputc 08DA  
                                   _fputs 17AB                               ?_TMR4_Start 0070  
                     ?_PWM4_LoadDutyValue 0070                                     _text1 01C2  
                                   _text2 0242                                     _text3 0231  
                                   _text5 01B1                                     _text6 0131  
                                   _text7 0142                                     _text8 0220  
                                   _text9 0120                                     pad@fp 002B  
                                   _width 00D3                                     _putch 07FF  
                                   main@i 00C3                                     dtoa@d 0030  
                                   dtoa@i 004C                                     dtoa@n 0044  
                                   dtoa@p 003D                                     dtoa@s 0042  
                                   dtoa@w 0040                   __end_of_PWM3_Initialize 1674  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           ?_SPI_Initialize 0070  
                         __initialization 001B                              __end_of_main 02CA  
                            __end_of_dtoa 05EE                      ??_PWM4_LoadDutyValue 0072  
                 __end_of_PWM4_Initialize 167D                   __end_of_TMR2_Initialize 16A1  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 00B5  
                                  ??_dtoa 0038                          ??_printByteValue 007C  
                   __end_of_setMotorSpeed 178C                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADCON2 009F  
                                  ?_fputc 0070                                    ?_fputs 0078  
                                  _ADRESH 009C                                    _ADRESL 009B  
                        ___awdiv@dividend 0072                                    _ANSELA 018C  
                                  ?_putch 0070                                    _ANSELB 018D  
                                  _ANSELC 018E                                    _RC0PPS 0EA0  
                                  _RC1PPS 0EA1                                    _RB5PPS 0E9D  
                                  _RB6PPS 0E9E                                    _ODCONA 028C  
                                  _ODCONB 028D                                    _ODCONC 028E  
                                  i1l3631 000F                                    i1l3633 0014  
                                  i1l3387 1644                                    i1l3627 0006  
                                  i1l3389 1646                                    i1l3629 000A  
                                  i1l2957 1687                                    i1l2959 168E  
                                  u238_20 168E                                    u238_21 168D  
                                  u335_20 000A                                    u335_21 0009  
                                  u336_20 000F                                    u336_21 000E  
                                  u337_20 0014                                    u337_21 0013  
                                  _OSCCON 0099                           printByteValue@i 0023  
                         printByteValue@s 0022                                    u206lld 04C7  
                                  u190lld 0E6A                                    u177lld 0F29  
                                  u186lld 0FEE                                    u179lld 0F54  
                                  u196lld 0EED                                    u188lld 0E3F  
                                  _SSPBUF 0211                          __end_of___xxtofl 0E15  
                convert14BitToFloat@raw14 0044                              vfprintf@cfmt 0064  
             __size_of_PWM3_LoadDutyValue 0016                                 ??___aodiv 0070  
                               ??___aomod 0070                                    ___wmul 178C  
                               ??___fldiv 0028                                 ??___awdiv 0074  
                        __end_of_initOLED 0CC4                                 ??___fltol 0074  
                     __size_of_TMR2_Start 0003                                 ??_dataCMD 0072  
                            ?_reportfault 0079                       __size_of_TMR4_Start 0003  
                 __end_of_TMR4_Initialize 1705                          ___awdiv@quotient 0077  
                                  _text10 00DD                                    _text11 01A0  
                                  _text12 01D3                __end_of_stuffIntToCharsBuf 0724  
                                  _printf 0802                                    pad@buf 0024  
                                  dtoa@fp 003F                                 ??_command 0072  
                                  _strlen 171F      __end_of_TMR4_DefaultInterruptHandler 0004  
   __size_of_TMR4_DefaultInterruptHandler 0001              _TMR4_DefaultInterruptHandler 0003  
                                  fputc@c 0070                                    fputs@c 0020  
                                  fputs@i 0021                                    fputs@s 0023  
                        setMotorSpeed@num 0074                  ADC_GetConversion@channel 0073  
                                  putch@c 0070                          __end_of_vfprintf 0874  
TMR4_SetInterruptHandler@InterruptHandler 0070                            main@adc_value0 00BF  
                          main@adc_value1 00C1                          ?_PWM3_Initialize 0070  
                            ___xxtofl@arg 007A                              ___xxtofl@exp 0079  
                       _SYSTEM_Initialize 1754                              ___xxtofl@val 0070  
                 __end_of__initialization 0063                     setMotorSpeed@motorNum 0076  
                      ?_SYSTEM_Initialize 0070                                ___fltol@f1 0070  
                          __pcstackCOMMON 0070                     __end_of_TMR4_CallBack 1694  
                            __pidataBANK1 16AF                              __pidataBANK2 0919  
                            __pidataBANK3 08A7                              __pidataBANK4 0874  
                     ??_SYSTEM_Initialize 007E                                 ?_TMR4_ISR 0070  
                    __size_of_initDisplay 002C                             __end_of_fputc 0919  
                           __end_of_fputs 17D4                  __size_of_spi_read_32bits 005D  
                           __end_of_putch 0800                          ?_TMR2_Initialize 0070  
                        ?_PWM4_Initialize 0070               PWM4_LoadDutyValue@dutyValue 0070  
                          _OPTION_REGbits 0095                     stuffIntToCharsBuf@buf 00A5  
                   stuffIntToCharsBuf@neg 00B3                     stuffIntToCharsBuf@num 00A3  
                   stuffIntToCharsBuf@pos 00A6             ?_TMR4_DefaultInterruptHandler 0070  
                                 ??_fputc 0073                 __end_of_SYSTEM_Initialize 1770  
                                 ??_fputs 0079                                   ??_putch 0070  
                              __pbssBANK1 00C5                                __pbssBANK3 01D3  
                              __pbssBANK5 02A0                     _TMR4_InterruptHandler 00D9  
                          main@fault_type 00BA                                __pmaintext 0067  
                            initDisplay@i 007C                                   ?___wmul 0070  
                              ??_TMR4_ISR 0070                                __pintentry 0004  
                        ?_TMR4_Initialize 0070                                   ?_printf 0066  
                 __size_of_ADC_Initialize 0009                                   ?_strlen 0070  
                               ?___xxtofl 0070              __size_of_convert14BitToFloat 0049  
                      __size_of_vfpfcnvrt 00DB                                   _OSCTUNE 0098  
                                 _PWM3DCH 0618                                   _PWM3DCL 0617  
                                 _PWM4DCH 061B                        __size_of_spi_write 000E  
                                 _PWM4DCL 061A                                   _PWM3CON 0619  
                                 _PWM4CON 061C                                   _SSP1ADD 0212  
                                 _PPSLOCK 0E0F                                   _SSP1BUF 0211  
                            ??_TMR2_Start 0070                              ??_TMR4_Start 0070  
                                 _TC_data 00C9                                 ?_initOLED 0070  
                        ??_SPI_Initialize 0070                                   ___aodiv 0EFF  
                                 ___aomod 0E15                                   ___fldiv 02CA  
                                 ___awdiv 0B5A                                   ___fltol 0BB9  
                         __size_of___wmul 001F                                 ?_vfprintf 005E  
                   spi_read_32bits@result 0021                                   _dataCMD 0AA2  
                      __end_of_TMR2_Start 163C                        __end_of_TMR4_Start 163F  
                                 __ptext1 05EE                                   __ptext2 0802  
                                 __ptext3 0843                                   __ptext4 0724  
                                 __ptext5 047E                                   __ptext6 09EE  
                                 __ptext7 171F                                   __ptext8 17AB  
                                 __ptext9 08DA                           __size_of_printf 0013  
                                 _command 0A47                      __size_of_reportfault 002E  
                         __size_of_strlen 001A                                   _byteVal 00DB  
                   _OSCILLATOR_Initialize 163F                                 _T2CONbits 001C  
                            __size_of_abs 001A                              __size_of_pad 0059  
                              ??___xxtofl 0074                                 _T4CONbits 0415  
                       ??_spi_read_32bits 0075                  ??_PIN_MANAGER_Initialize 0070  
       __size_of_TMR4_SetInterruptHandler 0006                                 _T2HLTbits 001D  
               ?_TMR4_SetInterruptHandler 0070                                 _T4HLTbits 0416  
              __size_of_SYSTEM_Initialize 001C                                   clrloop0 1657  
                    end_of_initialization 0063                                 _T2RSTbits 001F  
          ??_TMR4_DefaultInterruptHandler 0070                                ??_initOLED 0079  
                               _T4RSTbits 0418                                   fputc@fp 0072  
                                 init_ram 165C                                   fputs@fp 0078  
                                 initloop 165D                         __end_of_vfpfcnvrt 07FF  
                       __end_of_spi_write 16AF                                _temp_float 00C5  
             __size_of_PWM4_LoadDutyValue 0016                                ??_vfprintf 0061  
                                 strlen@a 0073                                   strlen@s 0074  
                               _SSPDATPPS 0E21                                 _SSPCLKPPS 0E20  
                           ___xxtofl@sign 0078                               ___fldiv@grs 0034  
                             ___fldiv@rem 002D                        _stuffIntToCharsBuf 05EE  
                           ?_spi_transfer 0070                       ?_stuffIntToCharsBuf 00A3  
              __end_of_PWM3_LoadDutyValue 16D6                    __size_of_setMotorSpeed 001C  
                             vfpfcnvrt@ap 004F                               vfpfcnvrt@fp 005D  
                             vfpfcnvrt@ll 0055                            __end_of___wmul 17AB  
                       __size_of_TMR4_ISR 0006                            _ADC_Initialize 1662  
                         command@sendByte 0078                    ?_OSCILLATOR_Initialize 0070  
                    ??_stuffIntToCharsBuf 00A8                            __end_of_printf 0815  
                          __end_of_strlen 1739                       start_initialization 001B  
           convert14BitToFloat@temp_Float 003E           __size_of_PIN_MANAGER_Initialize 0048  
                             __end_of_abs 171F                               __end_of_pad 0A47  
           convert14BitToFloat@signed_int 0042                   __size_of_printByteValue 00A5  
                          ??_spi_transfer 0070                    stuffIntToCharsBuf@dig1 00AD  
                  stuffIntToCharsBuf@dig2 00AF                    stuffIntToCharsBuf@dig3 00B1  
                  stuffIntToCharsBuf@dig4 00AB                           dataCMD@sendByte 0078  
                     _convert14BitToFloat 09A5                             ??_initDisplay 007B  
                __size_of_PWM3_Initialize 0009                               vfprintf@fmt 005E  
                                ??___wmul 0074                               _CCPTMRSbits 029E  
                  __end_of_ADC_Initialize 166B                               __pdataBANK1 00DD  
                             __pdataBANK2 0120                               __pdataBANK3 01A0  
                             __pdataBANK4 0220                                  ??_printf 007D  
                                ??_strlen 0072                                 ___fldiv@a 0020  
                               ___fldiv@b 0024                      ?_convert14BitToFloat 003A  
                           _setMotorSpeed 1770                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                        ___aodiv@dividend 0028                  __size_of_PWM4_Initialize 0009  
                __size_of_TMR2_Initialize 000D                         __size_of___xxtofl 00AC  
                  __size_of_TMR4_CallBack 000D                         __size_of_initOLED 0097  
                  _PIN_MANAGER_Initialize 095D                                 _dtoa$1495 003B  
                                ?___aodiv 0020                                  ?___aomod 0020  
        __end_of_TMR4_SetInterruptHandler 1656                                  ?___fldiv 0020  
                                ?___awdiv 0070                          ___aodiv@quotient 0073  
                         _spi_read_32bits 0AFD                                  ?___fltol 0070  
                         ?_ADC_Initialize 0070                                  ?_dataCMD 0070  
                     __end_of_initDisplay 1800              ??_INTERRUPT_InterruptManager 0070  
                       __size_of_vfprintf 0031                                  ?_command 0070  
                   ??_convert14BitToFloat 007E                            ?_setMotorSpeed 0074  
                __size_of_TMR4_Initialize 0019                            __size_of_fputc 003F  
                                _T2CLKCON 001E                          reportfault@fault 0079  
                          __size_of_fputs 0029                                  _T4CLKCON 0417  
                          __size_of_putch 0001                                 _milliTime 00CD  
                          ___wmul@product 0074                               dataCMD@bit0 0074  
                               clear_ram0 1656                                  _PIE2bits 0091  
     __size_of_INTERRUPT_InterruptManager 0015                                  _PIR1bits 0010  
                                _PIR2bits 0011                         printByteValue@pos 007A  
                   printByteValue@byteVal 0079                                  _SSP1CON1 0215  
                                _TMR4_ISR 1644                             _TMR4_CallBack 1687  
                                _SSP1STAT 0214                             ??_reportfault 007A  
                               _vfpfcnvrt 0724                                 _spi_write 16A1  
                       ??_PWM3_Initialize 0070                      __end_of_spi_transfer 1687  
                              _ADCON0bits 009D                         ___wmul@multiplier 0070  
                        spi_transfer@data 0070                                 main@fault 00B9  
                          _printByteValue 0CC4                         ??_TMR2_Initialize 0070  
                       ??_PWM4_Initialize 0070                   __end_of_spi_read_32bits 0B5A  
              __end_of_PWM4_LoadDutyValue 16EC                                vfprintf@ap 0060  
                              vfprintf@fp 0063                               _initDisplay 17D4  
                       _ADC_GetConversion 1739                            ?_TMR4_CallBack 0070  
                 __size_of_SPI_Initialize 0006                   ??_OSCILLATOR_Initialize 0070  
                      ?_ADC_GetConversion 0070                          __size_of___aodiv 0101  
                        __size_of___aomod 00EA                          __size_of___fldiv 01B4  
                        __size_of___awdiv 005F                          __size_of___fltol 0074  
                              ?_vfpfcnvrt 004E                          __size_of_dataCMD 005B  
                              ?_spi_write 0070                           ___aodiv@divisor 0020  
                         ??_setMotorSpeed 0078                           ___aodiv@counter 0071  
                _TMR4_SetInterruptHandler 1650                        _PWM3_LoadDutyValue 16C0  
                     ??_ADC_GetConversion 0072                          __size_of_command 005B  
                                ___xxtofl 0D69                       __end_of_reportfault 0843  
                  __end_of_printByteValue 0D69                                  __ptext10 07FF  
                                __ptext11 1705                                  __ptext20 16C0  
                                __ptext12 0E15                                  __ptext21 0815  
                                __ptext13 0EFF                                  __ptext30 0AA2  
                                __ptext22 0CC4                                  __ptext14 178C  
                                __ptext31 0A47                                  __ptext23 09A5  
                                __ptext15 0B5A                                  __ptext40 166B  
                                __ptext32 16A1                                  __ptext24 0D69  
                                __ptext16 0AFD                                  __ptext41 095D  
                                __ptext33 16EC                                  __ptext25 02CA  
                                __ptext17 167D                                  __ptext42 163F  
                                __ptext34 163C                                  __ptext26 0BB9  
                                __ptext18 1770                                  __ptext43 1662  
                                __ptext35 1650                                  __ptext27 1754  
                                __ptext19 16D6                                  __ptext44 1739  
                                __ptext36 1694                                  __ptext28 17D4  
                                __ptext37 1639                                  __ptext29 0C2D  
                                __ptext46 1644                                  __ptext38 164A  
                                __ptext47 1687                                  __ptext39 1674  
                                __ptext48 0003                       ?_PWM3_LoadDutyValue 0070  
                                _faultStr 0153                                  dataCMD@i 0076  
                                dataCMD@s 0075                                  _initOLED 0C2D  
                     spi_read_32bits@byte 0020                         ??_TMR4_Initialize 0072  
                           __size_of_main 0263                             __size_of_dtoa 0170  
                        spi_read_32bits@i 0025                 __end_of_ADC_GetConversion 1754  
                    ??_PWM3_LoadDutyValue 0072                                  int$flags 007E  
                                _vfprintf 0843        __end_of_INTERRUPT_InterruptManager 0019  
              _INTERRUPT_InterruptManager 0004                                  command@i 0076  
                                command@s 0075                                 printf@fmt 0066  
                            _SSP1STATbits 0214               PIN_MANAGER_Initialize@state 0070  
                        ___aomod@dividend 0028               __size_of_stuffIntToCharsBuf 0136  
                              _INTCONbits 000B                           ?_printByteValue 0079  
                                intlevel1 0000                              reportfault@i 007C  
                            reportfault@s 007B                   ?_PIN_MANAGER_Initialize 0070  
                             _PPSLOCKbits 0E0F                          ?_spi_read_32bits 0071  
                        ??_ADC_Initialize 0070                           ??_TMR4_CallBack 0070  
                   __size_of_spi_transfer 000A                                  printf@ap 00A2  
             PWM3_LoadDutyValue@dutyValue 0070                           ___aomod@divisor 0020  
                             _reportfault 0815                               ??_vfpfcnvrt 0050  
                         ___aomod@counter 0071                               ??_spi_write 0070  
                           __pstringtext1 1800                             __pstringtext2 1818  
                           __pstringtext3 182D                             __pstringtext4 0000  
                              _TMR2_Start 1639                                _TMR4_Start 163C  
                            ___aodiv@sign 0072            __end_of_PIN_MANAGER_Initialize 09A5  
                 printByteValue@lowerBits 0020                              _spi_transfer 167D  
              __size_of_ADC_GetConversion 001B                              ___aomod@sign 0072  
                         _PWM3_Initialize 166B  
